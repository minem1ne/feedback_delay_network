ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Reverb_test.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZSt3absd,"axG",%progbits,_ZSt3absd,comdat
  17              		.align	1
  18              		.weak	_ZSt3absd
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	_ZSt3absd:
  26              	.LFB140:
  27              		.file 1 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Copyright (C) 2016-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** /** @file include/bits/std_abs.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 2


  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #pragma GCC system_header
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #include <bits/c++config.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #include_next <stdlib.h>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** # include_next <math.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #undef abs
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** extern "C++"
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** {
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** {
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   using ::abs;
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline long
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline long long
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(double __x)
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabs(__x); }
  28              		.loc 1 72 3
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 87ED000B 		vstr.64	d0, [r7]
  41              		.loc 1 72 30
  42 000a 97ED007B 		vldr.64	d7, [r7]
  43 000e B0EEC77B 		vabs.f64	d7, d7
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 3


  44              		.loc 1 72 33
  45 0012 B0EE470B 		vmov.f64	d0, d7
  46 0016 0C37     		adds	r7, r7, #12
  47              		.cfi_def_cfa_offset 4
  48 0018 BD46     		mov	sp, r7
  49              		.cfi_def_cfa_register 13
  50              		@ sp needed
  51 001a 5DF8047B 		ldr	r7, [sp], #4
  52              		.cfi_restore 7
  53              		.cfi_def_cfa_offset 0
  54 001e 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE140:
  58              		.section	.text._ZSt9nextafterff,"axG",%progbits,_ZSt9nextafterff,comdat
  59              		.align	1
  60              		.weak	_ZSt9nextafterff
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv5-d16
  66              	_ZSt9nextafterff:
  67              	.LFB328:
  68              		.file 2 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** /** @file include/cmath
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  as macros in C).
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  */
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 4


  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #pragma GCC system_header
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/c++config.h>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include_next <math.h>
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/std_abs.h>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef div
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acos
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asin
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan2
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ceil
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cos
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cosh
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fabs
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef floor
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmod
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef frexp
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ldexp
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log10
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef modf
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef pow
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sin
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sinh
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sqrt
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tan
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tanh
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** extern "C++"
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** {
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** {
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acos;
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(float __x)
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(long double __x)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 5


  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     acos(_Tp __x)
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_acos(__x); }
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asin;
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(float __x)
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(long double __x)
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     asin(_Tp __x)
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_asin(__x); }
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(float __x)
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(long double __x)
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     atan(_Tp __x)
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_atan(__x); }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan2;
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(float __y, float __x)
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(long double __y, long double __x)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 6


 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ceil;
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(float __x)
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(long double __x)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     ceil(_Tp __x)
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cos;
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(float __x)
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(long double __x)
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosl(__x); }
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     cos(_Tp __x)
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cos(__x); }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cosh;
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(float __x)
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshf(__x); }
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 7


 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(long double __x)
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshl(__x); }
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     cosh(_Tp __x)
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cosh(__x); }
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp;
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(float __x)
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expf(__x); }
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(long double __x)
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expl(__x); }
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     exp(_Tp __x)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_exp(__x); }
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fabs;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(float __x)
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsf(__x); }
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(long double __x)
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsl(__x); }
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fabs(_Tp __x)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_fabs(__x); }
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::floor;
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(float __x)
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorf(__x); }
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 8


 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(long double __x)
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorl(__x); }
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     floor(_Tp __x)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_floor(__x); }
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmod;
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(float __x, float __y)
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodf(__x, __y); }
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(long double __x, long double __y)
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodl(__x, __y); }
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fmod(_Tp __x, _Up __y)
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fmod(__type(__x), __type(__y));
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::frexp;
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(float __x, int* __exp)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(long double __x, int* __exp)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     frexp(_Tp __x, int* __exp)
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_frexp(__x, __exp); }
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ldexp;
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(float __x, int __exp)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 9


 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(long double __x, int __exp)
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     ldexp(_Tp __x, int __exp)
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log;
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log(float __x)
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logf(__x); }
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log(long double __x)
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logl(__x); }
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     log(_Tp __x)
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log(__x); }
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log10;
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(float __x)
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10f(__x); }
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(long double __x)
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10l(__x); }
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     log10(_Tp __x)
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log10(__x); }
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::modf;
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(float __x, float* __iptr)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 10


 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modff(__x, __iptr); }
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(long double __x, long double* __iptr)
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::pow;
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, float __y)
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powf(__x, __y); }
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, long double __y)
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powl(__x, __y); }
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if __cplusplus < 201103L
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline double
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(double __x, int __i)
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powi(__x, __i); }
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, int __n)
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powif(__x, __n); }
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, int __n)
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powil(__x, __n); }
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     pow(_Tp __x, _Up __y)
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return pow(__type(__x), __type(__y));
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::sin;
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sin(float __x)
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinf(__x); }
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sin(long double __x)
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinl(__x); }
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 11


 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     sin(_Tp __x)
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_sin(__x); }
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::sinh;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sinh(float __x)
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinhf(__x); }
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sinh(long double __x)
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinhl(__x); }
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     sinh(_Tp __x)
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_sinh(__x); }
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::sqrt;
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sqrt(float __x)
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sqrtf(__x); }
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sqrt(long double __x)
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sqrtl(__x); }
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     sqrt(_Tp __x)
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_sqrt(__x); }
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::tan;
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   tan(float __x)
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_tanf(__x); }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   tan(long double __x)
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_tanl(__x); }
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 12


 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     tan(_Tp __x)
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_tan(__x); }
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::tanh;
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   tanh(float __x)
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_tanhf(__x); }
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   tanh(long double __x)
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_tanhl(__x); }
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     tanh(_Tp __x)
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_tanh(__x); }
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if _GLIBCXX_USE_C99_MATH
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // These are possible macros imported from C99-land.
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fpclassify
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isfinite
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isinf
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isnan
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isnormal
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef signbit
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isgreater
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isgreaterequal
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isless
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef islessequal
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef islessgreater
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isunordered
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if __cplusplus >= 201103L
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr int
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fpclassify(float __x)
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr int
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fpclassify(double __x)
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr int
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fpclassify(long double __x)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 13


 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               int>::__type
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fpclassify(_Tp __x)
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isfinite(float __x)
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isfinite(__x); }
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isfinite(double __x)
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isfinite(__x); }
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isfinite(long double __x)
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isfinite(__x); }
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               bool>::__type
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isfinite(_Tp __x)
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return true; }
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isinf(float __x)
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isinf(__x); }
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::isinf;
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #else
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isinf(double __x)
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isinf(__x); }
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isinf(long double __x)
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isinf(__x); }
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               bool>::__type
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 14


 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isinf(_Tp __x)
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return false; }
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnan(float __x)
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnan(__x); }
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::isnan;
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #else
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnan(double __x)
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnan(__x); }
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnan(long double __x)
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnan(__x); }
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               bool>::__type
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isnan(_Tp __x)
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return false; }
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnormal(float __x)
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnormal(__x); }
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnormal(double __x)
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnormal(__x); }
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnormal(long double __x)
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnormal(__x); }
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               bool>::__type
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isnormal(_Tp __x)
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __x != 0 ? true : false; }
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   signbit(float __x)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 15


 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_signbit(__x); }
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   signbit(double __x)
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_signbit(__x); }
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   signbit(long double __x)
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_signbit(__x); }
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               bool>::__type
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     signbit(_Tp __x)
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __x < 0 ? true : false; }
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreater(float __x, float __y)
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreater(__x, __y); }
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreater(double __x, double __y)
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreater(__x, __y); }
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreater(long double __x, long double __y)
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreater(__x, __y); }
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isgreater(_Tp __x, _Up __y)
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreaterequal(float __x, float __y)
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreaterequal(double __x, double __y)
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreaterequal(long double __x, long double __y)
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 16


 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isless(float __x, float __y)
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isless(__x, __y); }
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isless(double __x, double __y)
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isless(__x, __y); }
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isless(long double __x, long double __y)
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isless(__x, __y); }
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isless(_Tp __x, _Up __y)
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessequal(float __x, float __y)
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessequal(__x, __y); }
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessequal(double __x, double __y)
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessequal(__x, __y); }
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessequal(long double __x, long double __y)
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessequal(__x, __y); }
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 17


 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     islessequal(_Tp __x, _Up __y)
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessgreater(float __x, float __y)
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessgreater(double __x, double __y)
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessgreater(long double __x, long double __y)
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     islessgreater(_Tp __x, _Up __y)
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isunordered(float __x, float __y)
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isunordered(__x, __y); }
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isunordered(double __x, double __y)
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isunordered(__x, __y); }
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isunordered(long double __x, long double __y)
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isunordered(__x, __y); }
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isunordered(_Tp __x, _Up __y)
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 18


 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #else
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fpclassify(_Tp __f)
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isfinite(_Tp __f)
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isfinite(__type(__f));
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isinf(_Tp __f)
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isinf(__type(__f));
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isnan(_Tp __f)
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isnan(__type(__f));
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isnormal(_Tp __f)
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isnormal(__type(__f));
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     signbit(_Tp __f)
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 19


 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_signbit(__type(__f));
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isless(_Tp __f1, _Tp __f2)
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 20


 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif // C++11
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if __cplusplus >= 201103L
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acosh
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acoshf
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acoshl
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asinh
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asinhf
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asinhl
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atanh
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atanhf
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atanhl
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cbrt
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cbrtf
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cbrtl
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef copysign
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef copysignf
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef copysignl
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erf
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erff
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erfl
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erfc
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erfcf
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erfcl
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp2
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp2f
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp2l
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef expm1
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef expm1f
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef expm1l
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fdim
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fdimf
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fdiml
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fma
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmaf
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmal
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmax
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmaxf
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmaxl
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmin
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fminf
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fminl
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef hypot
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef hypotf
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef hypotl
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ilogb
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ilogbf
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ilogbl
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lgamma
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lgammaf
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lgammal
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 21


1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llrint
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llrintf
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llrintl
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llround
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llroundf
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llroundl
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log1p
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log1pf
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log1pl
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log2
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log2f
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log2l
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef logb
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef logbf
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef logbl
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lrint
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lrintf
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lrintl
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lround
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lroundf
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lroundl
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nan
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nanf
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nanl
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nearbyint
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nearbyintf
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nearbyintl
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nextafter
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nextafterf
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nextafterl
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nexttoward
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nexttowardf
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nexttowardl
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remainder
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remainderf
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remainderl
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remquo
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remquof
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remquol
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef rint
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef rintf
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef rintl
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef round
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef roundf
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef roundl
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalbln
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalblnf
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalblnl
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalbn
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalbnf
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalbnl
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tgamma
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tgammaf
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tgammal
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef trunc
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 22


1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef truncf
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef truncl
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // types
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::double_t;
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::float_t;
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // functions
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acosh;
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acoshf;
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acoshl;
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asinh;
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asinhf;
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asinhl;
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atanh;
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atanhf;
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atanhl;
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cbrt;
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cbrtf;
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cbrtl;
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::copysign;
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::copysignf;
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::copysignl;
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erf;
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erff;
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erfl;
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erfc;
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erfcf;
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erfcl;
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp2;
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp2f;
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp2l;
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::expm1;
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::expm1f;
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::expm1l;
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fdim;
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fdimf;
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fdiml;
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fma;
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmaf;
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmal;
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmax;
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmaxf;
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmaxl;
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmin;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 23


1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fminf;
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fminl;
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::hypot;
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::hypotf;
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::hypotl;
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ilogb;
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ilogbf;
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ilogbl;
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lgamma;
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lgammaf;
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lgammal;
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llrint;
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llrintf;
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llrintl;
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llround;
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llroundf;
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llroundl;
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log1p;
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log1pf;
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log1pl;
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log2;
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log2f;
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log2l;
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::logb;
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::logbf;
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::logbl;
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lrint;
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lrintf;
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lrintl;
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lround;
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lroundf;
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lroundl;
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nan;
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nanf;
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nanl;
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nearbyint;
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nearbyintf;
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nearbyintl;
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nextafter;
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nextafterf;
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nextafterl;
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 24


1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nexttoward;
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nexttowardf;
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nexttowardl;
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remainder;
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remainderf;
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remainderl;
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remquo;
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remquof;
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remquol;
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::rint;
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::rintf;
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::rintl;
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::round;
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::roundf;
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::roundl;
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalbln;
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalblnf;
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalblnl;
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalbn;
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalbnf;
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalbnl;
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::tgamma;
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::tgammaf;
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::tgammal;
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::trunc;
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::truncf;
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::truncl;
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   /// Additional overloads.
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acosh(float __x)
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acoshf(__x); }
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acosh(long double __x)
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acoshl(__x); }
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     acosh(_Tp __x)
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_acosh(__x); }
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 25


1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asinh(float __x)
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinhf(__x); }
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asinh(long double __x)
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinhl(__x); }
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     asinh(_Tp __x)
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_asinh(__x); }
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atanh(float __x)
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanhf(__x); }
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atanh(long double __x)
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanhl(__x); }
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     atanh(_Tp __x)
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_atanh(__x); }
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cbrt(float __x)
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cbrtf(__x); }
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cbrt(long double __x)
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cbrtl(__x); }
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     cbrt(_Tp __x)
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cbrt(__x); }
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   copysign(float __x, float __y)
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_copysignf(__x, __y); }
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 26


1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   copysign(long double __x, long double __y)
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_copysignl(__x, __y); }
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     copysign(_Tp __x, _Up __y)
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return copysign(__type(__x), __type(__y));
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   erf(float __x)
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_erff(__x); }
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   erf(long double __x)
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_erfl(__x); }
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     erf(_Tp __x)
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_erf(__x); }
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   erfc(float __x)
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_erfcf(__x); }
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   erfc(long double __x)
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_erfcl(__x); }
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     erfc(_Tp __x)
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_erfc(__x); }
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp2(float __x)
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_exp2f(__x); }
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 27


1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp2(long double __x)
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_exp2l(__x); }
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     exp2(_Tp __x)
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_exp2(__x); }
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   expm1(float __x)
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expm1f(__x); }
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   expm1(long double __x)
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expm1l(__x); }
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     expm1(_Tp __x)
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_expm1(__x); }
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fdim(float __x, float __y)
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fdimf(__x, __y); }
1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fdim(long double __x, long double __y)
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fdiml(__x, __y); }
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fdim(_Tp __x, _Up __y)
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fdim(__type(__x), __type(__y));
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fma(float __x, float __y, float __z)
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fma(long double __x, long double __y, long double __z)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 28


1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmax(float __x, float __y)
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmax(long double __x, long double __y)
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fmax(_Tp __x, _Up __y)
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fmax(__type(__x), __type(__y));
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmin(float __x, float __y)
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fminf(__x, __y); }
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmin(long double __x, long double __y)
1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fminl(__x, __y); }
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fmin(_Tp __x, _Up __y)
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fmin(__type(__x), __type(__y));
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   hypot(float __x, float __y)
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_hypotf(__x, __y); }
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 29


1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   hypot(long double __x, long double __y)
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_hypotl(__x, __y); }
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     hypot(_Tp __x, _Up __y)
1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return hypot(__type(__x), __type(__y));
1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr int
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ilogb(float __x)
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ilogbf(__x); }
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr int
1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ilogb(long double __x)
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ilogbl(__x); }
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     int>::__type
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     ilogb(_Tp __x)
1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ilogb(__x); }
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   lgamma(float __x)
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_lgammaf(__x); }
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   lgamma(long double __x)
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_lgammal(__x); }
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     lgamma(_Tp __x)
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_lgamma(__x); }
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long long
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   llrint(float __x)
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_llrintf(__x); }
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 30


1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long long
1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   llrint(long double __x)
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_llrintl(__x); }
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               long long>::__type
1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     llrint(_Tp __x)
1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_llrint(__x); }
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long long
1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   llround(float __x)
1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_llroundf(__x); }
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long long
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   llround(long double __x)
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_llroundl(__x); }
1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               long long>::__type
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     llround(_Tp __x)
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_llround(__x); }
1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log1p(float __x)
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log1pf(__x); }
1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log1p(long double __x)
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log1pl(__x); }
1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     log1p(_Tp __x)
1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log1p(__x); }
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // DR 568.
1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log2(float __x)
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log2f(__x); }
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 31


1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log2(long double __x)
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log2l(__x); }
1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     log2(_Tp __x)
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log2(__x); }
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   logb(float __x)
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logbf(__x); }
1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   logb(long double __x)
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logbl(__x); }
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     logb(_Tp __x)
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_logb(__x); }
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long
1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   lrint(float __x)
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_lrintf(__x); }
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long
1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   lrint(long double __x)
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_lrintl(__x); }
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               long>::__type
1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     lrint(_Tp __x)
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_lrint(__x); }
1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   lround(float __x)
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_lroundf(__x); }
1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   lround(long double __x)
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_lroundl(__x); }
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 32


1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               long>::__type
1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     lround(_Tp __x)
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_lround(__x); }
1638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   nearbyint(float __x)
1643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_nearbyintf(__x); }
1644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   nearbyint(long double __x)
1647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_nearbyintl(__x); }
1648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     nearbyint(_Tp __x)
1655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_nearbyint(__x); }
1656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   nextafter(float __x, float __y)
1661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_nextafterf(__x, __y); }
  69              		.loc 2 1661 3
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 8
  72              		@ frame_needed = 1, uses_anonymous_args = 0
  73 0000 80B5     		push	{r7, lr}
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 7, -8
  76              		.cfi_offset 14, -4
  77 0002 82B0     		sub	sp, sp, #8
  78              		.cfi_def_cfa_offset 16
  79 0004 00AF     		add	r7, sp, #0
  80              		.cfi_def_cfa_register 7
  81 0006 87ED010A 		vstr.32	s0, [r7, #4]
  82 000a C7ED000A 		vstr.32	s1, [r7]
  83              		.loc 2 1661 32
  84 000e D7ED000A 		vldr.32	s1, [r7]
  85 0012 97ED010A 		vldr.32	s0, [r7, #4]
  86 0016 FFF7FEFF 		bl	nextafterf
  87 001a F0EE407A 		vmov.f32	s15, s0
  88              		.loc 2 1661 44
  89 001e B0EE670A 		vmov.f32	s0, s15
  90 0022 0837     		adds	r7, r7, #8
  91              		.cfi_def_cfa_offset 8
  92 0024 BD46     		mov	sp, r7
  93              		.cfi_def_cfa_register 13
  94              		@ sp needed
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 33


  95 0026 80BD     		pop	{r7, pc}
  96              		.cfi_endproc
  97              	.LFE328:
  99              		.section	.text._ZL20__gthread_key_deletei,"ax",%progbits
 100              		.align	1
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 104              		.fpu fpv5-d16
 106              	_ZL20__gthread_key_deletei:
 107              	.LFB738:
 108              		.file 3 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\th
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Threads compatibility routines for libgcc2 and libobjc.  */
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Compile this one with gcc.  */
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** This file is part of GCC.
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** GCC is free software; you can redistribute it and/or modify it under
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** the terms of the GNU General Public License as published by the Free
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** Software Foundation; either version 3, or (at your option) any later
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** version.
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** GCC is distributed in the hope that it will be useful, but WITHOUT ANY
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** WARRANTY; without even the implied warranty of MERCHANTABILITY or
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** for more details.
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** Under Section 7 of GPL version 3, you are granted additional
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** permissions described in the GCC Runtime Library Exception, version
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 3.1, as published by the Free Software Foundation.
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** You should have received a copy of the GNU General Public License and
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** a copy of the GCC Runtime Library Exception along with this program;
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** <http://www.gnu.org/licenses/>.  */
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** #ifndef _GLIBCXX_GCC_GTHR_SINGLE_H
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** #define _GLIBCXX_GCC_GTHR_SINGLE_H
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Just provide compatibility for mutex handling.  */
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** typedef int __gthread_key_t;
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** typedef int __gthread_once_t;
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** typedef int __gthread_mutex_t;
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** typedef int __gthread_recursive_mutex_t;
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** #define __GTHREAD_ONCE_INIT 0
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** #define __GTHREAD_MUTEX_INIT 0
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** #define __GTHREAD_MUTEX_INIT_FUNCTION(mx) do {} while (0)
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** #define __GTHREAD_RECURSIVE_MUTEX_INIT 0
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** #define _GLIBCXX_UNUSED __attribute__((__unused__))
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** #ifdef _LIBOBJC
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Thread local storage for a single thread */
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 34


  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static void *thread_local_storage = NULL;
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Backend initialization functions */
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Initialize the threads subsystem.  */
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_init_thread_system (void)
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   /* No thread support available */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return -1;
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Close the threads subsystem.  */
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_close_thread_system (void)
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   /* No thread support available */
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return -1;
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Backend thread functions */
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Create a new thread of execution.  */
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline objc_thread_t
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_thread_detach (void (* func)(void *), void * arg _GLIBCXX_UNUSED)
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   /* No thread support available */
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return NULL;
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Set the current thread's priority.  */
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_thread_set_priority (int priority _GLIBCXX_UNUSED)
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   /* No thread support available */
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return -1;
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Return the current thread's priority.  */
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_thread_get_priority (void)
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return OBJC_THREAD_INTERACTIVE_PRIORITY;
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Yield our process time to another thread.  */
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline void
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_thread_yield (void)
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Terminate the current thread.  */
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_thread_exit (void)
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   /* No thread support available */
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 35


 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   /* Should we really exit the program */
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   /* exit (&__objc_thread_exit_status); */
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return -1;
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Returns an integer value which uniquely describes a thread.  */
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline objc_thread_t
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_thread_id (void)
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   /* No thread support, use 1.  */
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return (objc_thread_t) 1;
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Sets the thread's local storage pointer.  */
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_thread_set_data (void *value)
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   thread_local_storage = value;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Returns the thread's local storage pointer.  */
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline void *
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_thread_get_data (void)
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return thread_local_storage;
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Backend mutex functions */
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Allocate a mutex.  */
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_mutex_allocate (objc_mutex_t mutex _GLIBCXX_UNUSED)
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Deallocate a mutex.  */
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_mutex_deallocate (objc_mutex_t mutex _GLIBCXX_UNUSED)
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Grab a lock on a mutex.  */
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_mutex_lock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   /* There can only be one thread, so we always get the lock */
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Try to grab a lock on a mutex.  */
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_mutex_trylock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   /* There can only be one thread, so we always get the lock */
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 36


 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Unlock the mutex */
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_mutex_unlock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Backend condition mutex functions */
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Allocate a condition.  */
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_condition_allocate (objc_condition_t condition _GLIBCXX_UNUSED)
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Deallocate a condition.  */
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_condition_deallocate (objc_condition_t condition _GLIBCXX_UNUSED)
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Wait on the condition */
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_condition_wait (objc_condition_t condition _GLIBCXX_UNUSED,
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 			       objc_mutex_t mutex _GLIBCXX_UNUSED)
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Wake up all threads waiting on this condition.  */
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_condition_broadcast (objc_condition_t condition _GLIBCXX_UNUSED)
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Wake up one thread waiting on this condition.  */
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_condition_signal (objc_condition_t condition _GLIBCXX_UNUSED)
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** #else /* _LIBOBJC */
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_active_p (void)
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 37


 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_once (__gthread_once_t *__once _GLIBCXX_UNUSED, void (*__func) (void) _GLIBCXX_UNUSED)
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int _GLIBCXX_UNUSED
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_key_create (__gthread_key_t *__key _GLIBCXX_UNUSED, void (*__func) (void *) _GLIBCXX_UNUS
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static int _GLIBCXX_UNUSED
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_key_delete (__gthread_key_t __key _GLIBCXX_UNUSED)
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 109              		.loc 3 230 1
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 8
 112              		@ frame_needed = 1, uses_anonymous_args = 0
 113              		@ link register save eliminated.
 114 0000 80B4     		push	{r7}
 115              		.cfi_def_cfa_offset 4
 116              		.cfi_offset 7, -4
 117 0002 83B0     		sub	sp, sp, #12
 118              		.cfi_def_cfa_offset 16
 119 0004 00AF     		add	r7, sp, #0
 120              		.cfi_def_cfa_register 7
 121 0006 7860     		str	r0, [r7, #4]
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 122              		.loc 3 231 10
 123 0008 0023     		movs	r3, #0
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 124              		.loc 3 232 1
 125 000a 1846     		mov	r0, r3
 126 000c 0C37     		adds	r7, r7, #12
 127              		.cfi_def_cfa_offset 4
 128 000e BD46     		mov	sp, r7
 129              		.cfi_def_cfa_register 13
 130              		@ sp needed
 131 0010 5DF8047B 		ldr	r7, [sp], #4
 132              		.cfi_restore 7
 133              		.cfi_def_cfa_offset 0
 134 0014 7047     		bx	lr
 135              		.cfi_endproc
 136              	.LFE738:
 138              		.section	.rodata._ZStL19piecewise_construct,"a"
 139              		.align	2
 142              	_ZStL19piecewise_construct:
 143 0000 00       		.space	1
 144              		.section	.text._ZSt17__size_to_integerj,"axG",%progbits,_ZSt17__size_to_integerj,comdat
 145              		.align	1
 146              		.weak	_ZSt17__size_to_integerj
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.fpu fpv5-d16
 152              	_ZSt17__size_to_integerj:
 153              	.LFB881:
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 38


 154              		.file 4 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_algobas
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1996-1998
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /** @file bits/stl_algobase.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifndef _STL_ALGOBASE_H
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 39


  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/c++config.h>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/functexcept.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/type_traits.h>
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/numeric_traits.h>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_pair.h>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator.h>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/concept_check.h>
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <debug/debug.h>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/predefined_ops.h>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <type_traits>
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus > 201703L
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <compare>
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** {
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /*
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    */
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline int
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return 0;
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       else
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _BoolType>
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 40


 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    _ValueType1;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__a = *__b;
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__b = __tmp;
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap<true>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  swap(*__a, *__b);
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif // C++03
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  An iterator.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another iterator.
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   Nothing.
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  iterators themselves.
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline void
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType1;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType2;
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType2>)
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType1>)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 41


 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType1;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType2;
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(__a, __b);
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #else
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // 187. iter_swap underspecified
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       swap(*__a, *__b);
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  The ranges must not overlap.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _ForwardIterator2
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __first2;
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 42


 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__b < __a)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return  __a < __b ? __b : __a;
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__a < __b)
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__b, __a))
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 43


 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__a, __b))
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_base(_Iterator __it)
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __it; }
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _From, typename _To>
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _From
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // No need to wrap, iterator already has the right type.
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __res; }
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // a for loop with an explicit count.
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 44


 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = *__first;
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Category>
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, _Category>
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = std::move(*__first);
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = *__first;
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 45


 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = std::move(*__first);
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove>
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _Tp>
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _Tp*
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_move_assignable<_Tp>,
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  // trivial types can have deleted assignment
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT>
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct char_traits;
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class istreambuf_iterator;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class ostreambuf_iterator;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 46


 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				    _CharT*>::__type
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return std::__copy_move<_IsMove, false, _Category>::
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  __copy_m(__first, __last, __result);
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct _Deque_iterator;
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _OI);
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II, _II, _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II __first, _II __last, _OI __result)
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 47


 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__niter_wrap(__result,
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__last),
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__result)));
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  _OI);
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II, _II,
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  An input iterator.
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   An input iterator.
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result An output iterator.
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result + (last - first)
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  within [first,last).
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _II, typename _OI>
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move_a<__is_move_iterator<_II>::__value>
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 48


 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  An input iterator.
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   An input iterator.
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result An output iterator.
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result + (last - first)
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  within [first,last).
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _II, typename _OI>
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move_a<true>(std::__miter_base(__first),
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				      std::__miter_base(__last), __result);
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #else
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _BI2
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  while (__first != __last)
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = *--__last;
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Category>
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 49


 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _BI2
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  while (__first != __last)
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = std::move(*--__last);
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _BI2
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __n = __last - __first;
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __n > 0; --__n)
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = *--__last;
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _BI2
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __n = __last - __first;
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __n > 0; --__n)
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = std::move(*--__last);
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove>
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _Tp>
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _Tp*
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 50


 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_move_assignable<_Tp>,
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  // trivial types can have deleted assignment
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result - _Num;
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _BI2
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return std::__copy_move_backward<_IsMove, false, _Category>::
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  __copy_move_b(__first, __last, __result);
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move_backward<_IsMove,
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				       __memcpyable<_BI2, _BI1>::__value,
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				       _Category>::__copy_move_b(__first,
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 								 __last,
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 								 __result);
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _BI2
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a1(_BI1 __first, _BI1 __last, _BI2 __result)
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			    _OI);
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a1(
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a1(_II, _II,
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 51


 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a(_II __first, _II __last, _OI __result)
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__niter_wrap(__result,
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		std::__copy_move_backward_a1<_IsMove>
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   std::__niter_base(__result)));
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a(
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		_OI);
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a(_II, _II,
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a(
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result - (last - first)
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _BI1, typename _BI2>
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _BI2
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 52


 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move_backward_a<__is_move_iterator<_BI1>::__value>
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result - (last - first)
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  The function has the same effect as move, but starts at the end of the
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Result may not be in the range (first,last].  Use move instead.  Note
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _BI1, typename _BI2>
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _BI2
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move_backward_a<true>(std::__miter_base(__first),
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					       std::__miter_base(__last),
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					       __result);
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::move_backward(_Tp, _Up, _Vp)
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #else
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::copy_backward(_Tp, _Up, _Vp)
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 53


 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline typename
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      const _Tp& __value)
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __first != __last; ++__first)
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	*__first = __value;
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline typename
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      const _Tp& __value)
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       const _Tp __tmp = __value;
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __first != __last; ++__first)
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	*__first = __tmp;
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Specialization: for char types we can use memset.
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline typename
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       const _Tp __tmp = __c;
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cpp_lib_is_constant_evaluated
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__first)
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__first = __tmp;
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return;
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (const size_t __len = __last - __first)
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Ite, typename _Cont, typename _Tp>
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline void
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_a1(::__gnu_cxx::__normal_iterator<_Ite, _Cont> __first,
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ::__gnu_cxx::__normal_iterator<_Ite, _Cont> __last,
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      const _Tp& __value)
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { std::__fill_a1(__first.base(), __last.base(), __value); }
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _VTp>
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     void
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_a1(const _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>&,
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      const _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>&,
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      const _VTp&);
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _FIte, typename _Tp>
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 54


 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline void
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Ite, typename _Seq, typename _Cat, typename _Tp>
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     void
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     const _Tp&);
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Fills the range [first,last) with copies of value.
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  A forward iterator.
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   A forward iterator.
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   Nothing.
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  to @c memset or @c wmemset.
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline void
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator>)
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       std::__fill_a(__first, __last, __value);
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Used by fill_n, generate_n, etc. to convert _Size to an integral type:
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR int
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(int __n) { return __n; }
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR unsigned
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(unsigned __n) { return __n; }
 155              		.loc 4 951 35
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 8
 158              		@ frame_needed = 1, uses_anonymous_args = 0
 159              		@ link register save eliminated.
 160 0000 80B4     		push	{r7}
 161              		.cfi_def_cfa_offset 4
 162              		.cfi_offset 7, -4
 163 0002 83B0     		sub	sp, sp, #12
 164              		.cfi_def_cfa_offset 16
 165 0004 00AF     		add	r7, sp, #0
 166              		.cfi_def_cfa_register 7
 167 0006 7860     		str	r0, [r7, #4]
 168              		.loc 4 951 44
 169 0008 7B68     		ldr	r3, [r7, #4]
 170              		.loc 4 951 49
 171 000a 1846     		mov	r0, r3
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 55


 172 000c 0C37     		adds	r7, r7, #12
 173              		.cfi_def_cfa_offset 4
 174 000e BD46     		mov	sp, r7
 175              		.cfi_def_cfa_register 13
 176              		@ sp needed
 177 0010 5DF8047B 		ldr	r7, [sp], #4
 178              		.cfi_restore 7
 179              		.cfi_def_cfa_offset 0
 180 0014 7047     		bx	lr
 181              		.cfi_endproc
 182              	.LFE881:
 184              		.section	.text._ZnwjPv,"axG",%progbits,_ZnwjPv,comdat
 185              		.align	1
 186              		.weak	_ZnwjPv
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 190              		.fpu fpv5-d16
 192              	_ZnwjPv:
 193              	.LFB1053:
 194              		.file 5 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\new"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // The -*- C++ -*- dynamic memory management header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // Copyright (C) 1994-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // This file is part of GCC.
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** //
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // GCC is free software; you can redistribute it and/or modify
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // it under the terms of the GNU General Public License as published by
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // the Free Software Foundation; either version 3, or (at your option)
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // any later version.
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // 
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // GCC is distributed in the hope that it will be useful,
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // GNU General Public License for more details.
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // 
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // Under Section 7 of GPL version 3, you are granted additional
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // permissions described in the GCC Runtime Library Exception, version
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // 3.1, as published by the Free Software Foundation.
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // You should have received a copy of the GNU General Public License and
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // a copy of the GCC Runtime Library Exception along with this program;
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // <http://www.gnu.org/licenses/>.
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** /** @file new
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  This is a Standard C++ Library header.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  The header @c new defines several functions to manage dynamic memory and
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  handling memory allocation errors; see
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/dynamic_memory.html
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  for more.
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  */
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #ifndef _NEW
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #define _NEW
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 56


  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC system_header
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #include <bits/c++config.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #include <exception>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC visibility push(default)
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** extern "C++" {
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** namespace std 
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** {
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /**
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  @brief  Exception possibly thrown by @c new.
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  @ingroup exceptions
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  @c bad_alloc (or classes derived from it) is used to report allocation
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  errors from the throwing forms of @c new.  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   class bad_alloc : public exception 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   {
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   public:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc() throw() { }
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc(const bad_alloc&) = default;
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc& operator=(const bad_alloc&) = default;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_alloc() throw();
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   };
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   class bad_array_new_length : public bad_alloc
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   {
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   public:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_array_new_length() throw() { }
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_array_new_length() throw();
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   };
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   enum class align_val_t: size_t {};
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   struct nothrow_t
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   {
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 57


  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     explicit nothrow_t() = default;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   };
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   extern const nothrow_t nothrow;
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /** If you write your own error handler to be called by @c new, it must
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  be of this type.  */
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   typedef void (*new_handler)();
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /// Takes a replacement handler as the argument, returns the
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /// previous handler.
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   new_handler set_new_handler(new_handler) throw();
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /// Return the current new handler.
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   new_handler get_new_handler() noexcept;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** } // namespace std
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** //@{
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** /** These are replaceable signatures:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal array new and delete (same)
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow single new and delete (take a @c nothrow argument, return
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *    @c NULL on error)
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow array new and delete (same)
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  Placement new and delete signatures (take a memory address argument,
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  does nothing) may not be replaced by a user's program.
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** */
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*) _GLIBCXX_USE_NOEXCEPT
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t)
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 58


 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t, const std::nothrow_t&)
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t)
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t, const std::nothrow_t&)
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t)
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t, const std::nothrow_t&)
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t)
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t, const std::nothrow_t&)
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t, std::align_val_t)
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t, std::align_val_t)
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_sized_deallocation
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_aligned_new
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // Default placement versions of operator new.
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** { return __p; }
 195              		.loc 5 175 1
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 8
 198              		@ frame_needed = 1, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 200 0000 80B4     		push	{r7}
 201              		.cfi_def_cfa_offset 4
 202              		.cfi_offset 7, -4
 203 0002 83B0     		sub	sp, sp, #12
 204              		.cfi_def_cfa_offset 16
 205 0004 00AF     		add	r7, sp, #0
 206              		.cfi_def_cfa_register 7
 207 0006 7860     		str	r0, [r7, #4]
 208 0008 3960     		str	r1, [r7]
 209              		.loc 5 175 10
 210 000a 3B68     		ldr	r3, [r7]
 211              		.loc 5 175 15
 212 000c 1846     		mov	r0, r3
 213 000e 0C37     		adds	r7, r7, #12
 214              		.cfi_def_cfa_offset 4
 215 0010 BD46     		mov	sp, r7
 216              		.cfi_def_cfa_register 13
 217              		@ sp needed
 218 0012 5DF8047B 		ldr	r7, [sp], #4
 219              		.cfi_restore 7
 220              		.cfi_def_cfa_offset 0
 221 0016 7047     		bx	lr
 222              		.cfi_endproc
 223              	.LFE1053:
 225              		.section	.text._ZNSt14_Bit_referenceC2EPmm,"axG",%progbits,_ZNSt14_Bit_referenceC5EPmm,comdat
 226              		.align	1
 227              		.weak	_ZNSt14_Bit_referenceC2EPmm
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 59


 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 231              		.fpu fpv5-d16
 233              	_ZNSt14_Bit_referenceC2EPmm:
 234              	.LFB1981:
 235              		.file 6 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_bvector
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // vector<bool> specialization -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * Copyright (c) 1996-1999
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 60


  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** /** @file bits/stl_bvector.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #ifndef _STL_BVECTOR_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #define _STL_BVECTOR_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #include <initializer_list>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #include <bits/functional_hash.h>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** {
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   typedef unsigned long _Bit_type;
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   enum { _S_word_bit = int(__CHAR_BIT__ * sizeof(_Bit_type)) };
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   struct _Bit_reference
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_type * _M_p;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_type _M_mask;
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_reference(_Bit_type * __x, _Bit_type __y)
 236              		.loc 6 77 5
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 16
 239              		@ frame_needed = 1, uses_anonymous_args = 0
 240              		@ link register save eliminated.
 241 0000 80B4     		push	{r7}
 242              		.cfi_def_cfa_offset 4
 243              		.cfi_offset 7, -4
 244 0002 85B0     		sub	sp, sp, #20
 245              		.cfi_def_cfa_offset 24
 246 0004 00AF     		add	r7, sp, #0
 247              		.cfi_def_cfa_register 7
 248 0006 F860     		str	r0, [r7, #12]
 249 0008 B960     		str	r1, [r7, #8]
 250 000a 7A60     		str	r2, [r7, #4]
 251              	.LBB4:
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 252              		.loc 6 78 29
 253 000c FB68     		ldr	r3, [r7, #12]
 254 000e BA68     		ldr	r2, [r7, #8]
 255 0010 1A60     		str	r2, [r3]
 256 0012 FB68     		ldr	r3, [r7, #12]
 257 0014 7A68     		ldr	r2, [r7, #4]
 258 0016 5A60     		str	r2, [r3, #4]
 259              	.LBE4:
 260              		.loc 6 78 33
 261 0018 FB68     		ldr	r3, [r7, #12]
 262 001a 1846     		mov	r0, r3
 263 001c 1437     		adds	r7, r7, #20
 264              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 61


 265 001e BD46     		mov	sp, r7
 266              		.cfi_def_cfa_register 13
 267              		@ sp needed
 268 0020 5DF8047B 		ldr	r7, [sp], #4
 269              		.cfi_restore 7
 270              		.cfi_def_cfa_offset 0
 271 0024 7047     		bx	lr
 272              		.cfi_endproc
 273              	.LFE1981:
 275              		.weak	_ZNSt14_Bit_referenceC1EPmm
 276              		.thumb_set _ZNSt14_Bit_referenceC1EPmm,_ZNSt14_Bit_referenceC2EPmm
 277              		.section	.text._ZNKSt14_Bit_referencecvbEv,"axG",%progbits,_ZNKSt14_Bit_referencecvbEv,comdat
 278              		.align	1
 279              		.weak	_ZNKSt14_Bit_referencecvbEv
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu fpv5-d16
 285              	_ZNKSt14_Bit_referencecvbEv:
 286              	.LFB1986:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_reference() _GLIBCXX_NOEXCEPT : _M_p(0), _M_mask(0) { }
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_reference(const _Bit_reference&) = default;
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator bool() const _GLIBCXX_NOEXCEPT
 287              		.loc 6 86 5
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 8
 290              		@ frame_needed = 1, uses_anonymous_args = 0
 291              		@ link register save eliminated.
 292 0000 80B4     		push	{r7}
 293              		.cfi_def_cfa_offset 4
 294              		.cfi_offset 7, -4
 295 0002 83B0     		sub	sp, sp, #12
 296              		.cfi_def_cfa_offset 16
 297 0004 00AF     		add	r7, sp, #0
 298              		.cfi_def_cfa_register 7
 299 0006 7860     		str	r0, [r7, #4]
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !!(*_M_p & _M_mask); }
 300              		.loc 6 87 18
 301 0008 7B68     		ldr	r3, [r7, #4]
 302 000a 1B68     		ldr	r3, [r3]
 303              		.loc 6 87 17
 304 000c 1A68     		ldr	r2, [r3]
 305              		.loc 6 87 25
 306 000e 7B68     		ldr	r3, [r7, #4]
 307 0010 5B68     		ldr	r3, [r3, #4]
 308              		.loc 6 87 23
 309 0012 1340     		ands	r3, r3, r2
 310              		.loc 6 87 32
 311 0014 002B     		cmp	r3, #0
 312 0016 14BF     		ite	ne
 313 0018 0123     		movne	r3, #1
 314 001a 0023     		moveq	r3, #0
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 62


 315 001c DBB2     		uxtb	r3, r3
 316              		.loc 6 87 35
 317 001e 1846     		mov	r0, r3
 318 0020 0C37     		adds	r7, r7, #12
 319              		.cfi_def_cfa_offset 4
 320 0022 BD46     		mov	sp, r7
 321              		.cfi_def_cfa_register 13
 322              		@ sp needed
 323 0024 5DF8047B 		ldr	r7, [sp], #4
 324              		.cfi_restore 7
 325              		.cfi_def_cfa_offset 0
 326 0028 7047     		bx	lr
 327              		.cfi_endproc
 328              	.LFE1986:
 330              		.section	.text._ZNSt14_Bit_referenceaSEb,"axG",%progbits,_ZNSt14_Bit_referenceaSEb,comdat
 331              		.align	1
 332              		.weak	_ZNSt14_Bit_referenceaSEb
 333              		.syntax unified
 334              		.thumb
 335              		.thumb_func
 336              		.fpu fpv5-d16
 338              	_ZNSt14_Bit_referenceaSEb:
 339              	.LFB1987:
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_reference&
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator=(bool __x) _GLIBCXX_NOEXCEPT
 340              		.loc 6 90 5
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 8
 343              		@ frame_needed = 1, uses_anonymous_args = 0
 344              		@ link register save eliminated.
 345 0000 80B4     		push	{r7}
 346              		.cfi_def_cfa_offset 4
 347              		.cfi_offset 7, -4
 348 0002 83B0     		sub	sp, sp, #12
 349              		.cfi_def_cfa_offset 16
 350 0004 00AF     		add	r7, sp, #0
 351              		.cfi_def_cfa_register 7
 352 0006 7860     		str	r0, [r7, #4]
 353 0008 0B46     		mov	r3, r1
 354 000a FB70     		strb	r3, [r7, #3]
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__x)
 355              		.loc 6 92 7
 356 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 357 000e 002B     		cmp	r3, #0
 358 0010 09D0     		beq	.L16
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 359              		.loc 6 93 3
 360 0012 7B68     		ldr	r3, [r7, #4]
 361 0014 1B68     		ldr	r3, [r3]
 362              		.loc 6 93 8
 363 0016 1968     		ldr	r1, [r3]
 364              		.loc 6 93 11
 365 0018 7B68     		ldr	r3, [r7, #4]
 366 001a 5A68     		ldr	r2, [r3, #4]
 367              		.loc 6 93 3
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 63


 368 001c 7B68     		ldr	r3, [r7, #4]
 369 001e 1B68     		ldr	r3, [r3]
 370              		.loc 6 93 8
 371 0020 0A43     		orrs	r2, r2, r1
 372 0022 1A60     		str	r2, [r3]
 373 0024 09E0     		b	.L17
 374              	.L16:
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p &= ~_M_mask;
 375              		.loc 6 95 3
 376 0026 7B68     		ldr	r3, [r7, #4]
 377 0028 1B68     		ldr	r3, [r3]
 378              		.loc 6 95 8
 379 002a 1968     		ldr	r1, [r3]
 380              		.loc 6 95 12
 381 002c 7B68     		ldr	r3, [r7, #4]
 382 002e 5B68     		ldr	r3, [r3, #4]
 383              		.loc 6 95 11
 384 0030 DA43     		mvns	r2, r3
 385              		.loc 6 95 3
 386 0032 7B68     		ldr	r3, [r7, #4]
 387 0034 1B68     		ldr	r3, [r3]
 388              		.loc 6 95 8
 389 0036 0A40     		ands	r2, r2, r1
 390 0038 1A60     		str	r2, [r3]
 391              	.L17:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 392              		.loc 6 96 15
 393 003a 7B68     		ldr	r3, [r7, #4]
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 394              		.loc 6 97 5
 395 003c 1846     		mov	r0, r3
 396 003e 0C37     		adds	r7, r7, #12
 397              		.cfi_def_cfa_offset 4
 398 0040 BD46     		mov	sp, r7
 399              		.cfi_def_cfa_register 13
 400              		@ sp needed
 401 0042 5DF8047B 		ldr	r7, [sp], #4
 402              		.cfi_restore 7
 403              		.cfi_def_cfa_offset 0
 404 0046 7047     		bx	lr
 405              		.cfi_endproc
 406              	.LFE1987:
 408              		.section	.text._ZNSt14_Bit_referenceaSERKS_,"axG",%progbits,_ZNSt14_Bit_referenceaSERKS_,comdat
 409              		.align	1
 410              		.weak	_ZNSt14_Bit_referenceaSERKS_
 411              		.syntax unified
 412              		.thumb
 413              		.thumb_func
 414              		.fpu fpv5-d16
 416              	_ZNSt14_Bit_referenceaSERKS_:
 417              	.LFB1988:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_reference&
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator=(const _Bit_reference& __x) _GLIBCXX_NOEXCEPT
 418              		.loc 6 100 5
 419              		.cfi_startproc
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 64


 420              		@ args = 0, pretend = 0, frame = 8
 421              		@ frame_needed = 1, uses_anonymous_args = 0
 422 0000 80B5     		push	{r7, lr}
 423              		.cfi_def_cfa_offset 8
 424              		.cfi_offset 7, -8
 425              		.cfi_offset 14, -4
 426 0002 82B0     		sub	sp, sp, #8
 427              		.cfi_def_cfa_offset 16
 428 0004 00AF     		add	r7, sp, #0
 429              		.cfi_def_cfa_register 7
 430 0006 7860     		str	r0, [r7, #4]
 431 0008 3960     		str	r1, [r7]
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return *this = bool(__x); }
 432              		.loc 6 101 30
 433 000a 3868     		ldr	r0, [r7]
 434 000c FFF7FEFF 		bl	_ZNKSt14_Bit_referencecvbEv
 435 0010 0346     		mov	r3, r0
 436 0012 1946     		mov	r1, r3
 437 0014 7868     		ldr	r0, [r7, #4]
 438 0016 FFF7FEFF 		bl	_ZNSt14_Bit_referenceaSEb
 439 001a 0346     		mov	r3, r0
 440              		.loc 6 101 33
 441 001c 1846     		mov	r0, r3
 442 001e 0837     		adds	r7, r7, #8
 443              		.cfi_def_cfa_offset 8
 444 0020 BD46     		mov	sp, r7
 445              		.cfi_def_cfa_register 13
 446              		@ sp needed
 447 0022 80BD     		pop	{r7, pc}
 448              		.cfi_endproc
 449              	.LFE1988:
 451              		.section	.text._ZNSt18_Bit_iterator_baseC2EPmj,"axG",%progbits,_ZNSt18_Bit_iterator_baseC5EPmj,com
 452              		.align	1
 453              		.weak	_ZNSt18_Bit_iterator_baseC2EPmj
 454              		.syntax unified
 455              		.thumb
 456              		.thumb_func
 457              		.fpu fpv5-d16
 459              	_ZNSt18_Bit_iterator_baseC2EPmj:
 460              	.LFB1996:
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     bool
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator==(const _Bit_reference& __x) const
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return bool(*this) == bool(__x); }
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     bool
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator<(const _Bit_reference& __x) const
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !bool(*this) && bool(__x); }
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     void
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     flip() _GLIBCXX_NOEXCEPT
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { *_M_p ^= _M_mask; }
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   };
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   inline void
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   swap(_Bit_reference __x, _Bit_reference __y) noexcept
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 65


 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     bool __tmp = __x;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     __x = __y;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     __y = __tmp;
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   }
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   inline void
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   swap(_Bit_reference __x, bool& __y) noexcept
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     bool __tmp = __x;
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     __x = __y;
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     __y = __tmp;
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   }
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   inline void
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   swap(bool& __x, _Bit_reference __y) noexcept
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     bool __tmp = __x;
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     __x = __y;
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     __y = __tmp;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   }
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   struct _Bit_iterator_base
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   : public std::iterator<std::random_access_iterator_tag, bool>
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_type * _M_p;
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     unsigned int _M_offset;
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_iterator_base(_Bit_type * __x, unsigned int __y)
 461              		.loc 6 148 5
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 16
 464              		@ frame_needed = 1, uses_anonymous_args = 0
 465              		@ link register save eliminated.
 466 0000 80B4     		push	{r7}
 467              		.cfi_def_cfa_offset 4
 468              		.cfi_offset 7, -4
 469 0002 85B0     		sub	sp, sp, #20
 470              		.cfi_def_cfa_offset 24
 471 0004 00AF     		add	r7, sp, #0
 472              		.cfi_def_cfa_register 7
 473 0006 F860     		str	r0, [r7, #12]
 474 0008 B960     		str	r1, [r7, #8]
 475 000a 7A60     		str	r2, [r7, #4]
 476              	.LBB5:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 477              		.loc 6 149 31
 478 000c FB68     		ldr	r3, [r7, #12]
 479 000e BA68     		ldr	r2, [r7, #8]
 480 0010 1A60     		str	r2, [r3]
 481 0012 FB68     		ldr	r3, [r7, #12]
 482 0014 7A68     		ldr	r2, [r7, #4]
 483 0016 5A60     		str	r2, [r3, #4]
 484              	.LBE5:
 485              		.loc 6 149 35
 486 0018 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 66


 487 001a 1846     		mov	r0, r3
 488 001c 1437     		adds	r7, r7, #20
 489              		.cfi_def_cfa_offset 4
 490 001e BD46     		mov	sp, r7
 491              		.cfi_def_cfa_register 13
 492              		@ sp needed
 493 0020 5DF8047B 		ldr	r7, [sp], #4
 494              		.cfi_restore 7
 495              		.cfi_def_cfa_offset 0
 496 0024 7047     		bx	lr
 497              		.cfi_endproc
 498              	.LFE1996:
 500              		.weak	_ZNSt18_Bit_iterator_baseC1EPmj
 501              		.thumb_set _ZNSt18_Bit_iterator_baseC1EPmj,_ZNSt18_Bit_iterator_baseC2EPmj
 502              		.section	.text._ZNSt18_Bit_iterator_base10_M_bump_upEv,"axG",%progbits,_ZNSt18_Bit_iterator_base10
 503              		.align	1
 504              		.weak	_ZNSt18_Bit_iterator_base10_M_bump_upEv
 505              		.syntax unified
 506              		.thumb
 507              		.thumb_func
 508              		.fpu fpv5-d16
 510              	_ZNSt18_Bit_iterator_base10_M_bump_upEv:
 511              	.LFB1998:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     void
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _M_bump_up()
 512              		.loc 6 152 5
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 8
 515              		@ frame_needed = 1, uses_anonymous_args = 0
 516              		@ link register save eliminated.
 517 0000 80B4     		push	{r7}
 518              		.cfi_def_cfa_offset 4
 519              		.cfi_offset 7, -4
 520 0002 83B0     		sub	sp, sp, #12
 521              		.cfi_def_cfa_offset 16
 522 0004 00AF     		add	r7, sp, #0
 523              		.cfi_def_cfa_register 7
 524 0006 7860     		str	r0, [r7, #4]
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (_M_offset++ == int(_S_word_bit) - 1)
 525              		.loc 6 154 11
 526 0008 7B68     		ldr	r3, [r7, #4]
 527 000a 5B68     		ldr	r3, [r3, #4]
 528              		.loc 6 154 20
 529 000c 591C     		adds	r1, r3, #1
 530 000e 7A68     		ldr	r2, [r7, #4]
 531 0010 5160     		str	r1, [r2, #4]
 532              		.loc 6 154 23
 533 0012 1F2B     		cmp	r3, #31
 534 0014 0CBF     		ite	eq
 535 0016 0123     		moveq	r3, #1
 536 0018 0023     		movne	r3, #0
 537 001a DBB2     		uxtb	r3, r3
 538              		.loc 6 154 7
 539 001c 002B     		cmp	r3, #0
 540 001e 07D0     		beq	.L25
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 67


 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_offset = 0;
 541              		.loc 6 156 14
 542 0020 7B68     		ldr	r3, [r7, #4]
 543 0022 0022     		movs	r2, #0
 544 0024 5A60     		str	r2, [r3, #4]
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 545              		.loc 6 157 6
 546 0026 7B68     		ldr	r3, [r7, #4]
 547 0028 1B68     		ldr	r3, [r3]
 548              		.loc 6 157 4
 549 002a 1A1D     		adds	r2, r3, #4
 550 002c 7B68     		ldr	r3, [r7, #4]
 551 002e 1A60     		str	r2, [r3]
 552              	.L25:
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 553              		.loc 6 159 5
 554 0030 00BF     		nop
 555 0032 0C37     		adds	r7, r7, #12
 556              		.cfi_def_cfa_offset 4
 557 0034 BD46     		mov	sp, r7
 558              		.cfi_def_cfa_register 13
 559              		@ sp needed
 560 0036 5DF8047B 		ldr	r7, [sp], #4
 561              		.cfi_restore 7
 562              		.cfi_def_cfa_offset 0
 563 003a 7047     		bx	lr
 564              		.cfi_endproc
 565              	.LFE1998:
 567              		.section	.text._ZNSt18_Bit_iterator_base12_M_bump_downEv,"axG",%progbits,_ZNSt18_Bit_iterator_base
 568              		.align	1
 569              		.weak	_ZNSt18_Bit_iterator_base12_M_bump_downEv
 570              		.syntax unified
 571              		.thumb
 572              		.thumb_func
 573              		.fpu fpv5-d16
 575              	_ZNSt18_Bit_iterator_base12_M_bump_downEv:
 576              	.LFB1999:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     void
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _M_bump_down()
 577              		.loc 6 162 5
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 8
 580              		@ frame_needed = 1, uses_anonymous_args = 0
 581              		@ link register save eliminated.
 582 0000 80B4     		push	{r7}
 583              		.cfi_def_cfa_offset 4
 584              		.cfi_offset 7, -4
 585 0002 83B0     		sub	sp, sp, #12
 586              		.cfi_def_cfa_offset 16
 587 0004 00AF     		add	r7, sp, #0
 588              		.cfi_def_cfa_register 7
 589 0006 7860     		str	r0, [r7, #4]
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (_M_offset-- == 0)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 68


 590              		.loc 6 164 11
 591 0008 7B68     		ldr	r3, [r7, #4]
 592 000a 5B68     		ldr	r3, [r3, #4]
 593              		.loc 6 164 20
 594 000c 591E     		subs	r1, r3, #1
 595 000e 7A68     		ldr	r2, [r7, #4]
 596 0010 5160     		str	r1, [r2, #4]
 597              		.loc 6 164 23
 598 0012 002B     		cmp	r3, #0
 599 0014 0CBF     		ite	eq
 600 0016 0123     		moveq	r3, #1
 601 0018 0023     		movne	r3, #0
 602 001a DBB2     		uxtb	r3, r3
 603              		.loc 6 164 7
 604 001c 002B     		cmp	r3, #0
 605 001e 07D0     		beq	.L28
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_offset = int(_S_word_bit) - 1;
 606              		.loc 6 166 14
 607 0020 7B68     		ldr	r3, [r7, #4]
 608 0022 1F22     		movs	r2, #31
 609 0024 5A60     		str	r2, [r3, #4]
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 610              		.loc 6 167 6
 611 0026 7B68     		ldr	r3, [r7, #4]
 612 0028 1B68     		ldr	r3, [r3]
 613              		.loc 6 167 4
 614 002a 1A1F     		subs	r2, r3, #4
 615 002c 7B68     		ldr	r3, [r7, #4]
 616 002e 1A60     		str	r2, [r3]
 617              	.L28:
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 618              		.loc 6 169 5
 619 0030 00BF     		nop
 620 0032 0C37     		adds	r7, r7, #12
 621              		.cfi_def_cfa_offset 4
 622 0034 BD46     		mov	sp, r7
 623              		.cfi_def_cfa_register 13
 624              		@ sp needed
 625 0036 5DF8047B 		ldr	r7, [sp], #4
 626              		.cfi_restore 7
 627              		.cfi_def_cfa_offset 0
 628 003a 7047     		bx	lr
 629              		.cfi_endproc
 630              	.LFE1999:
 632              		.section	.text._ZNSt18_Bit_iterator_base7_M_incrEi,"axG",%progbits,_ZNSt18_Bit_iterator_base7_M_in
 633              		.align	1
 634              		.weak	_ZNSt18_Bit_iterator_base7_M_incrEi
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 638              		.fpu fpv5-d16
 640              	_ZNSt18_Bit_iterator_base7_M_incrEi:
 641              	.LFB2000:
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     void
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 69


 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _M_incr(ptrdiff_t __i)
 642              		.loc 6 172 5
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 16
 645              		@ frame_needed = 1, uses_anonymous_args = 0
 646              		@ link register save eliminated.
 647 0000 80B4     		push	{r7}
 648              		.cfi_def_cfa_offset 4
 649              		.cfi_offset 7, -4
 650 0002 85B0     		sub	sp, sp, #20
 651              		.cfi_def_cfa_offset 24
 652 0004 00AF     		add	r7, sp, #0
 653              		.cfi_def_cfa_register 7
 654 0006 7860     		str	r0, [r7, #4]
 655 0008 3960     		str	r1, [r7]
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       difference_type __n = __i + _M_offset;
 656              		.loc 6 174 35
 657 000a 7B68     		ldr	r3, [r7, #4]
 658 000c 5A68     		ldr	r2, [r3, #4]
 659              		.loc 6 174 29
 660 000e 3B68     		ldr	r3, [r7]
 661              		.loc 6 174 33
 662 0010 1344     		add	r3, r3, r2
 663              		.loc 6 174 23
 664 0012 FB60     		str	r3, [r7, #12]
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 665              		.loc 6 175 12
 666 0014 7B68     		ldr	r3, [r7, #4]
 667 0016 1A68     		ldr	r2, [r3]
 668              		.loc 6 175 19
 669 0018 FB68     		ldr	r3, [r7, #12]
 670 001a 002B     		cmp	r3, #0
 671 001c 00DA     		bge	.L30
 672 001e 1F33     		adds	r3, r3, #31
 673              	.L30:
 674 0020 5B11     		asrs	r3, r3, #5
 675              		.loc 6 175 12
 676 0022 9B00     		lsls	r3, r3, #2
 677 0024 1A44     		add	r2, r2, r3
 678 0026 7B68     		ldr	r3, [r7, #4]
 679 0028 1A60     		str	r2, [r3]
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 680              		.loc 6 176 11
 681 002a FB68     		ldr	r3, [r7, #12]
 682 002c 5A42     		rsbs	r2, r3, #0
 683 002e 03F01F03 		and	r3, r3, #31
 684 0032 02F01F02 		and	r2, r2, #31
 685 0036 58BF     		it	pl
 686 0038 5342     		rsbpl	r3, r2, #0
 687 003a FB60     		str	r3, [r7, #12]
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 688              		.loc 6 177 7
 689 003c FB68     		ldr	r3, [r7, #12]
 690 003e 002B     		cmp	r3, #0
 691 0040 07DA     		bge	.L31
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 70


 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __n += int(_S_word_bit);
 692              		.loc 6 179 8
 693 0042 FB68     		ldr	r3, [r7, #12]
 694 0044 2033     		adds	r3, r3, #32
 695 0046 FB60     		str	r3, [r7, #12]
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 696              		.loc 6 180 6
 697 0048 7B68     		ldr	r3, [r7, #4]
 698 004a 1B68     		ldr	r3, [r3]
 699              		.loc 6 180 4
 700 004c 1A1F     		subs	r2, r3, #4
 701 004e 7B68     		ldr	r3, [r7, #4]
 702 0050 1A60     		str	r2, [r3]
 703              	.L31:
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_offset = static_cast<unsigned int>(__n);
 704              		.loc 6 182 19
 705 0052 FA68     		ldr	r2, [r7, #12]
 706              		.loc 6 182 17
 707 0054 7B68     		ldr	r3, [r7, #4]
 708 0056 5A60     		str	r2, [r3, #4]
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 709              		.loc 6 183 5
 710 0058 00BF     		nop
 711 005a 1437     		adds	r7, r7, #20
 712              		.cfi_def_cfa_offset 4
 713 005c BD46     		mov	sp, r7
 714              		.cfi_def_cfa_register 13
 715              		@ sp needed
 716 005e 5DF8047B 		ldr	r7, [sp], #4
 717              		.cfi_restore 7
 718              		.cfi_def_cfa_offset 0
 719 0062 7047     		bx	lr
 720              		.cfi_endproc
 721              	.LFE2000:
 723              		.section	.text._ZStmiRKSt18_Bit_iterator_baseS1_,"axG",%progbits,_ZStmiRKSt18_Bit_iterator_baseS1_
 724              		.align	1
 725              		.weak	_ZStmiRKSt18_Bit_iterator_baseS1_
 726              		.syntax unified
 727              		.thumb
 728              		.thumb_func
 729              		.fpu fpv5-d16
 731              	_ZStmiRKSt18_Bit_iterator_baseS1_:
 732              	.LFB2007:
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend _GLIBCXX20_CONSTEXPR bool
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator==(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return __x._M_p == __y._M_p && __x._M_offset == __y._M_offset; }
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cpp_lib_three_way_comparison
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend constexpr strong_ordering
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator<=>(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     noexcept
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (const auto __cmp = __x._M_p <=> __y._M_p; __cmp != 0)
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return __cmp;
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __x._M_offset <=> __y._M_offset;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 71


 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend bool
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator<(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __x._M_p < __y._M_p
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    || (__x._M_p == __y._M_p && __x._M_offset < __y._M_offset);
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend bool
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator!=(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !(__x == __y); }
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend bool
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator>(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return __y < __x; }
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend bool
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator<=(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !(__y < __x); }
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend bool
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator>=(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !(__x < __y); }
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif // three-way comparison
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend ptrdiff_t
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator-(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 733              		.loc 6 224 5
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 8
 736              		@ frame_needed = 1, uses_anonymous_args = 0
 737              		@ link register save eliminated.
 738 0000 80B4     		push	{r7}
 739              		.cfi_def_cfa_offset 4
 740              		.cfi_offset 7, -4
 741 0002 83B0     		sub	sp, sp, #12
 742              		.cfi_def_cfa_offset 16
 743 0004 00AF     		add	r7, sp, #0
 744              		.cfi_def_cfa_register 7
 745 0006 7860     		str	r0, [r7, #4]
 746 0008 3960     		str	r1, [r7]
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return (int(_S_word_bit) * (__x._M_p - __y._M_p)
 747              		.loc 6 226 39
 748 000a 7B68     		ldr	r3, [r7, #4]
 749 000c 1A68     		ldr	r2, [r3]
 750              		.loc 6 226 50
 751 000e 3B68     		ldr	r3, [r7]
 752 0010 1B68     		ldr	r3, [r3]
 753              		.loc 6 226 44
 754 0012 D31A     		subs	r3, r2, r3
 755              		.loc 6 226 32
 756 0014 DB00     		lsls	r3, r3, #3
 757 0016 1A46     		mov	r2, r3
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 758              		.loc 6 227 14
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 72


 759 0018 7B68     		ldr	r3, [r7, #4]
 760 001a 5B68     		ldr	r3, [r3, #4]
 761              		.loc 6 227 8
 762 001c 1A44     		add	r2, r2, r3
 763              		.loc 6 227 30
 764 001e 3B68     		ldr	r3, [r7]
 765 0020 5B68     		ldr	r3, [r3, #4]
 766              		.loc 6 227 24
 767 0022 D31A     		subs	r3, r2, r3
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 768              		.loc 6 228 5
 769 0024 1846     		mov	r0, r3
 770 0026 0C37     		adds	r7, r7, #12
 771              		.cfi_def_cfa_offset 4
 772 0028 BD46     		mov	sp, r7
 773              		.cfi_def_cfa_register 13
 774              		@ sp needed
 775 002a 5DF8047B 		ldr	r7, [sp], #4
 776              		.cfi_restore 7
 777              		.cfi_def_cfa_offset 0
 778 002e 7047     		bx	lr
 779              		.cfi_endproc
 780              	.LFE2007:
 782              		.section	.text._ZNSt13_Bit_iteratorC2Ev,"axG",%progbits,_ZNSt13_Bit_iteratorC5Ev,comdat
 783              		.align	1
 784              		.weak	_ZNSt13_Bit_iteratorC2Ev
 785              		.syntax unified
 786              		.thumb
 787              		.thumb_func
 788              		.fpu fpv5-d16
 790              	_ZNSt13_Bit_iteratorC2Ev:
 791              	.LFB2009:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   };
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   struct _Bit_iterator : public _Bit_iterator_base
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef _Bit_reference  reference;
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus > 201703L
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef void	    pointer;
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef _Bit_reference* pointer;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef _Bit_iterator   iterator;
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_iterator() : _Bit_iterator_base(0, 0) { }
 792              		.loc 6 241 5
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 8
 795              		@ frame_needed = 1, uses_anonymous_args = 0
 796 0000 80B5     		push	{r7, lr}
 797              		.cfi_def_cfa_offset 8
 798              		.cfi_offset 7, -8
 799              		.cfi_offset 14, -4
 800 0002 82B0     		sub	sp, sp, #8
 801              		.cfi_def_cfa_offset 16
 802 0004 00AF     		add	r7, sp, #0
 803              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 73


 804 0006 7860     		str	r0, [r7, #4]
 805              	.LBB6:
 806              		.loc 6 241 46
 807 0008 7B68     		ldr	r3, [r7, #4]
 808 000a 0022     		movs	r2, #0
 809 000c 0021     		movs	r1, #0
 810 000e 1846     		mov	r0, r3
 811 0010 FFF7FEFF 		bl	_ZNSt18_Bit_iterator_baseC2EPmj
 812              	.LBE6:
 813              		.loc 6 241 50
 814 0014 7B68     		ldr	r3, [r7, #4]
 815 0016 1846     		mov	r0, r3
 816 0018 0837     		adds	r7, r7, #8
 817              		.cfi_def_cfa_offset 8
 818 001a BD46     		mov	sp, r7
 819              		.cfi_def_cfa_register 13
 820              		@ sp needed
 821 001c 80BD     		pop	{r7, pc}
 822              		.cfi_endproc
 823              	.LFE2009:
 825              		.weak	_ZNSt13_Bit_iteratorC1Ev
 826              		.thumb_set _ZNSt13_Bit_iteratorC1Ev,_ZNSt13_Bit_iteratorC2Ev
 827              		.section	.text._ZNSt13_Bit_iteratorC2EPmj,"axG",%progbits,_ZNSt13_Bit_iteratorC5EPmj,comdat
 828              		.align	1
 829              		.weak	_ZNSt13_Bit_iteratorC2EPmj
 830              		.syntax unified
 831              		.thumb
 832              		.thumb_func
 833              		.fpu fpv5-d16
 835              	_ZNSt13_Bit_iteratorC2EPmj:
 836              	.LFB2012:
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_iterator(_Bit_type * __x, unsigned int __y)
 837              		.loc 6 243 5
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 16
 840              		@ frame_needed = 1, uses_anonymous_args = 0
 841 0000 80B5     		push	{r7, lr}
 842              		.cfi_def_cfa_offset 8
 843              		.cfi_offset 7, -8
 844              		.cfi_offset 14, -4
 845 0002 84B0     		sub	sp, sp, #16
 846              		.cfi_def_cfa_offset 24
 847 0004 00AF     		add	r7, sp, #0
 848              		.cfi_def_cfa_register 7
 849 0006 F860     		str	r0, [r7, #12]
 850 0008 B960     		str	r1, [r7, #8]
 851 000a 7A60     		str	r2, [r7, #4]
 852              	.LBB7:
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 853              		.loc 6 244 34
 854 000c FB68     		ldr	r3, [r7, #12]
 855 000e 7A68     		ldr	r2, [r7, #4]
 856 0010 B968     		ldr	r1, [r7, #8]
 857 0012 1846     		mov	r0, r3
 858 0014 FFF7FEFF 		bl	_ZNSt18_Bit_iterator_baseC2EPmj
 859              	.LBE7:
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 74


 860              		.loc 6 244 38
 861 0018 FB68     		ldr	r3, [r7, #12]
 862 001a 1846     		mov	r0, r3
 863 001c 1037     		adds	r7, r7, #16
 864              		.cfi_def_cfa_offset 8
 865 001e BD46     		mov	sp, r7
 866              		.cfi_def_cfa_register 13
 867              		@ sp needed
 868 0020 80BD     		pop	{r7, pc}
 869              		.cfi_endproc
 870              	.LFE2012:
 872              		.weak	_ZNSt13_Bit_iteratorC1EPmj
 873              		.thumb_set _ZNSt13_Bit_iteratorC1EPmj,_ZNSt13_Bit_iteratorC2EPmj
 874              		.section	.text._ZNKSt13_Bit_iteratordeEv,"axG",%progbits,_ZNKSt13_Bit_iteratordeEv,comdat
 875              		.align	1
 876              		.weak	_ZNKSt13_Bit_iteratordeEv
 877              		.syntax unified
 878              		.thumb
 879              		.thumb_func
 880              		.fpu fpv5-d16
 882              	_ZNKSt13_Bit_iteratordeEv:
 883              	.LFB2015:
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     iterator
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _M_const_cast() const
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return *this; }
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     reference
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator*() const
 884              		.loc 6 251 5
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 8
 887              		@ frame_needed = 1, uses_anonymous_args = 0
 888 0000 80B5     		push	{r7, lr}
 889              		.cfi_def_cfa_offset 8
 890              		.cfi_offset 7, -8
 891              		.cfi_offset 14, -4
 892 0002 82B0     		sub	sp, sp, #8
 893              		.cfi_def_cfa_offset 16
 894 0004 00AF     		add	r7, sp, #0
 895              		.cfi_def_cfa_register 7
 896 0006 7860     		str	r0, [r7, #4]
 897 0008 3960     		str	r1, [r7]
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
 898              		.loc 6 252 24
 899 000a 3B68     		ldr	r3, [r7]
 900 000c 1968     		ldr	r1, [r3]
 901              		.loc 6 252 37
 902 000e 3B68     		ldr	r3, [r7]
 903 0010 5B68     		ldr	r3, [r3, #4]
 904              		.loc 6 252 46
 905 0012 0122     		movs	r2, #1
 906 0014 02FA03F3 		lsl	r3, r2, r3
 907 0018 1A46     		mov	r2, r3
 908 001a 7868     		ldr	r0, [r7, #4]
 909 001c FFF7FEFF 		bl	_ZNSt14_Bit_referenceC1EPmm
 910              		.loc 6 252 49
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 75


 911 0020 7868     		ldr	r0, [r7, #4]
 912 0022 0837     		adds	r7, r7, #8
 913              		.cfi_def_cfa_offset 8
 914 0024 BD46     		mov	sp, r7
 915              		.cfi_def_cfa_register 13
 916              		@ sp needed
 917 0026 80BD     		pop	{r7, pc}
 918              		.cfi_endproc
 919              	.LFE2015:
 921              		.section	.text._ZNSt13_Bit_iteratorppEv,"axG",%progbits,_ZNSt13_Bit_iteratorppEv,comdat
 922              		.align	1
 923              		.weak	_ZNSt13_Bit_iteratorppEv
 924              		.syntax unified
 925              		.thumb
 926              		.thumb_func
 927              		.fpu fpv5-d16
 929              	_ZNSt13_Bit_iteratorppEv:
 930              	.LFB2016:
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     iterator&
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator++()
 931              		.loc 6 255 5
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 8
 934              		@ frame_needed = 1, uses_anonymous_args = 0
 935 0000 80B5     		push	{r7, lr}
 936              		.cfi_def_cfa_offset 8
 937              		.cfi_offset 7, -8
 938              		.cfi_offset 14, -4
 939 0002 82B0     		sub	sp, sp, #8
 940              		.cfi_def_cfa_offset 16
 941 0004 00AF     		add	r7, sp, #0
 942              		.cfi_def_cfa_register 7
 943 0006 7860     		str	r0, [r7, #4]
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_up();
 944              		.loc 6 257 17
 945 0008 7B68     		ldr	r3, [r7, #4]
 946 000a 1846     		mov	r0, r3
 947 000c FFF7FEFF 		bl	_ZNSt18_Bit_iterator_base10_M_bump_upEv
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 948              		.loc 6 258 15
 949 0010 7B68     		ldr	r3, [r7, #4]
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 950              		.loc 6 259 5
 951 0012 1846     		mov	r0, r3
 952 0014 0837     		adds	r7, r7, #8
 953              		.cfi_def_cfa_offset 8
 954 0016 BD46     		mov	sp, r7
 955              		.cfi_def_cfa_register 13
 956              		@ sp needed
 957 0018 80BD     		pop	{r7, pc}
 958              		.cfi_endproc
 959              	.LFE2016:
 961              		.section	.text._ZNSt13_Bit_iteratormmEv,"axG",%progbits,_ZNSt13_Bit_iteratormmEv,comdat
 962              		.align	1
 963              		.weak	_ZNSt13_Bit_iteratormmEv
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 76


 964              		.syntax unified
 965              		.thumb
 966              		.thumb_func
 967              		.fpu fpv5-d16
 969              	_ZNSt13_Bit_iteratormmEv:
 970              	.LFB2018:
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     iterator
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator++(int)
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator __tmp = *this;
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_up();
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     iterator&
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator--()
 971              		.loc 6 270 5
 972              		.cfi_startproc
 973              		@ args = 0, pretend = 0, frame = 8
 974              		@ frame_needed = 1, uses_anonymous_args = 0
 975 0000 80B5     		push	{r7, lr}
 976              		.cfi_def_cfa_offset 8
 977              		.cfi_offset 7, -8
 978              		.cfi_offset 14, -4
 979 0002 82B0     		sub	sp, sp, #8
 980              		.cfi_def_cfa_offset 16
 981 0004 00AF     		add	r7, sp, #0
 982              		.cfi_def_cfa_register 7
 983 0006 7860     		str	r0, [r7, #4]
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_down();
 984              		.loc 6 272 19
 985 0008 7B68     		ldr	r3, [r7, #4]
 986 000a 1846     		mov	r0, r3
 987 000c FFF7FEFF 		bl	_ZNSt18_Bit_iterator_base12_M_bump_downEv
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 988              		.loc 6 273 15
 989 0010 7B68     		ldr	r3, [r7, #4]
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 990              		.loc 6 274 5
 991 0012 1846     		mov	r0, r3
 992 0014 0837     		adds	r7, r7, #8
 993              		.cfi_def_cfa_offset 8
 994 0016 BD46     		mov	sp, r7
 995              		.cfi_def_cfa_register 13
 996              		@ sp needed
 997 0018 80BD     		pop	{r7, pc}
 998              		.cfi_endproc
 999              	.LFE2018:
 1001              		.section	.text._ZNSt13_Bit_iteratorpLEi,"axG",%progbits,_ZNSt13_Bit_iteratorpLEi,comdat
 1002              		.align	1
 1003              		.weak	_ZNSt13_Bit_iteratorpLEi
 1004              		.syntax unified
 1005              		.thumb
 1006              		.thumb_func
 1007              		.fpu fpv5-d16
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 77


 1009              	_ZNSt13_Bit_iteratorpLEi:
 1010              	.LFB2020:
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     iterator
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator--(int)
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator __tmp = *this;
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_down();
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     iterator&
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator+=(difference_type __i)
 1011              		.loc 6 285 5
 1012              		.cfi_startproc
 1013              		@ args = 0, pretend = 0, frame = 8
 1014              		@ frame_needed = 1, uses_anonymous_args = 0
 1015 0000 80B5     		push	{r7, lr}
 1016              		.cfi_def_cfa_offset 8
 1017              		.cfi_offset 7, -8
 1018              		.cfi_offset 14, -4
 1019 0002 82B0     		sub	sp, sp, #8
 1020              		.cfi_def_cfa_offset 16
 1021 0004 00AF     		add	r7, sp, #0
 1022              		.cfi_def_cfa_register 7
 1023 0006 7860     		str	r0, [r7, #4]
 1024 0008 3960     		str	r1, [r7]
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_incr(__i);
 1025              		.loc 6 287 14
 1026 000a 7B68     		ldr	r3, [r7, #4]
 1027 000c 3968     		ldr	r1, [r7]
 1028 000e 1846     		mov	r0, r3
 1029 0010 FFF7FEFF 		bl	_ZNSt18_Bit_iterator_base7_M_incrEi
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 1030              		.loc 6 288 15
 1031 0014 7B68     		ldr	r3, [r7, #4]
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 1032              		.loc 6 289 5
 1033 0016 1846     		mov	r0, r3
 1034 0018 0837     		adds	r7, r7, #8
 1035              		.cfi_def_cfa_offset 8
 1036 001a BD46     		mov	sp, r7
 1037              		.cfi_def_cfa_register 13
 1038              		@ sp needed
 1039 001c 80BD     		pop	{r7, pc}
 1040              		.cfi_endproc
 1041              	.LFE2020:
 1043              		.section	.text._ZStplRKSt13_Bit_iteratori,"axG",%progbits,_ZStplRKSt13_Bit_iteratori,comdat
 1044              		.align	1
 1045              		.weak	_ZStplRKSt13_Bit_iteratori
 1046              		.syntax unified
 1047              		.thumb
 1048              		.thumb_func
 1049              		.fpu fpv5-d16
 1051              	_ZStplRKSt13_Bit_iteratori:
 1052              	.LFB2023:
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 78


 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     iterator&
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator-=(difference_type __i)
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       *this += -__i;
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     reference
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator[](difference_type __i) const
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return *(*this + __i); }
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend iterator
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator+(const iterator& __x, difference_type __n)
 1053              		.loc 6 303 5
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 16
 1056              		@ frame_needed = 1, uses_anonymous_args = 0
 1057 0000 80B5     		push	{r7, lr}
 1058              		.cfi_def_cfa_offset 8
 1059              		.cfi_offset 7, -8
 1060              		.cfi_offset 14, -4
 1061 0002 84B0     		sub	sp, sp, #16
 1062              		.cfi_def_cfa_offset 24
 1063 0004 00AF     		add	r7, sp, #0
 1064              		.cfi_def_cfa_register 7
 1065 0006 F860     		str	r0, [r7, #12]
 1066 0008 B960     		str	r1, [r7, #8]
 1067 000a 7A60     		str	r2, [r7, #4]
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator __tmp = __x;
 1068              		.loc 6 305 16
 1069 000c FB68     		ldr	r3, [r7, #12]
 1070 000e BA68     		ldr	r2, [r7, #8]
 1071 0010 92E80300 		ldm	r2, {r0, r1}
 1072 0014 83E80300 		stm	r3, {r0, r1}
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 1073              		.loc 6 306 16
 1074 0018 7968     		ldr	r1, [r7, #4]
 1075 001a F868     		ldr	r0, [r7, #12]
 1076 001c FFF7FEFF 		bl	_ZNSt13_Bit_iteratorpLEi
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 1077              		.loc 6 307 14
 1078 0020 00BF     		nop
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 1079              		.loc 6 308 5
 1080 0022 F868     		ldr	r0, [r7, #12]
 1081 0024 1037     		adds	r7, r7, #16
 1082              		.cfi_def_cfa_offset 8
 1083 0026 BD46     		mov	sp, r7
 1084              		.cfi_def_cfa_register 13
 1085              		@ sp needed
 1086 0028 80BD     		pop	{r7, pc}
 1087              		.cfi_endproc
 1088              	.LFE2023:
 1090              		.section	.text._ZNSt19_Bit_const_iteratorC2EPmj,"axG",%progbits,_ZNSt19_Bit_const_iteratorC5EPmj,c
 1091              		.align	1
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 79


 1092              		.weak	_ZNSt19_Bit_const_iteratorC2EPmj
 1093              		.syntax unified
 1094              		.thumb
 1095              		.thumb_func
 1096              		.fpu fpv5-d16
 1098              	_ZNSt19_Bit_const_iteratorC2EPmj:
 1099              	.LFB2030:
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend iterator
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator+(difference_type __n, const iterator& __x)
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return __x + __n; }
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend iterator
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator-(const iterator& __x, difference_type __n)
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator __tmp = __x;
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp -= __n;
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   };
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   struct _Bit_const_iterator : public _Bit_iterator_base
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef bool                 reference;
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef bool                 const_reference;
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus > 201703L
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef void	    pointer;
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef const bool*          pointer;
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef _Bit_const_iterator  const_iterator;
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_const_iterator() : _Bit_iterator_base(0, 0) { }
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_const_iterator(_Bit_type * __x, unsigned int __y)
 1100              		.loc 6 336 5
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 16
 1103              		@ frame_needed = 1, uses_anonymous_args = 0
 1104 0000 80B5     		push	{r7, lr}
 1105              		.cfi_def_cfa_offset 8
 1106              		.cfi_offset 7, -8
 1107              		.cfi_offset 14, -4
 1108 0002 84B0     		sub	sp, sp, #16
 1109              		.cfi_def_cfa_offset 24
 1110 0004 00AF     		add	r7, sp, #0
 1111              		.cfi_def_cfa_register 7
 1112 0006 F860     		str	r0, [r7, #12]
 1113 0008 B960     		str	r1, [r7, #8]
 1114 000a 7A60     		str	r2, [r7, #4]
 1115              	.LBB8:
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 1116              		.loc 6 337 34
 1117 000c FB68     		ldr	r3, [r7, #12]
 1118 000e 7A68     		ldr	r2, [r7, #4]
 1119 0010 B968     		ldr	r1, [r7, #8]
 1120 0012 1846     		mov	r0, r3
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 80


 1121 0014 FFF7FEFF 		bl	_ZNSt18_Bit_iterator_baseC2EPmj
 1122              	.LBE8:
 1123              		.loc 6 337 38
 1124 0018 FB68     		ldr	r3, [r7, #12]
 1125 001a 1846     		mov	r0, r3
 1126 001c 1037     		adds	r7, r7, #16
 1127              		.cfi_def_cfa_offset 8
 1128 001e BD46     		mov	sp, r7
 1129              		.cfi_def_cfa_register 13
 1130              		@ sp needed
 1131 0020 80BD     		pop	{r7, pc}
 1132              		.cfi_endproc
 1133              	.LFE2030:
 1135              		.weak	_ZNSt19_Bit_const_iteratorC1EPmj
 1136              		.thumb_set _ZNSt19_Bit_const_iteratorC1EPmj,_ZNSt19_Bit_const_iteratorC2EPmj
 1137              		.section	.text._ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator,"axG",%progbits,_ZNSt19_Bit_const_
 1138              		.align	1
 1139              		.weak	_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator
 1140              		.syntax unified
 1141              		.thumb
 1142              		.thumb_func
 1143              		.fpu fpv5-d16
 1145              	_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator:
 1146              	.LFB2033:
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_const_iterator(const _Bit_iterator& __x)
 1147              		.loc 6 339 5
 1148              		.cfi_startproc
 1149              		@ args = 0, pretend = 0, frame = 8
 1150              		@ frame_needed = 1, uses_anonymous_args = 0
 1151 0000 80B5     		push	{r7, lr}
 1152              		.cfi_def_cfa_offset 8
 1153              		.cfi_offset 7, -8
 1154              		.cfi_offset 14, -4
 1155 0002 82B0     		sub	sp, sp, #8
 1156              		.cfi_def_cfa_offset 16
 1157 0004 00AF     		add	r7, sp, #0
 1158              		.cfi_def_cfa_register 7
 1159 0006 7860     		str	r0, [r7, #4]
 1160 0008 3960     		str	r1, [r7]
 1161              	.LBB9:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 1162              		.loc 6 340 49
 1163 000a 7868     		ldr	r0, [r7, #4]
 1164              		.loc 6 340 30
 1165 000c 3B68     		ldr	r3, [r7]
 1166 000e 1968     		ldr	r1, [r3]
 1167              		.loc 6 340 40
 1168 0010 3B68     		ldr	r3, [r7]
 1169 0012 5B68     		ldr	r3, [r3, #4]
 1170              		.loc 6 340 49
 1171 0014 1A46     		mov	r2, r3
 1172 0016 FFF7FEFF 		bl	_ZNSt18_Bit_iterator_baseC2EPmj
 1173              	.LBE9:
 1174              		.loc 6 340 53
 1175 001a 7B68     		ldr	r3, [r7, #4]
 1176 001c 1846     		mov	r0, r3
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 81


 1177 001e 0837     		adds	r7, r7, #8
 1178              		.cfi_def_cfa_offset 8
 1179 0020 BD46     		mov	sp, r7
 1180              		.cfi_def_cfa_register 13
 1181              		@ sp needed
 1182 0022 80BD     		pop	{r7, pc}
 1183              		.cfi_endproc
 1184              	.LFE2033:
 1186              		.weak	_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator
 1187              		.thumb_set _ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator,_ZNSt19_Bit_const_iteratorC2ERKSt13_Bi
 1188              		.section	.text._ZNKSt19_Bit_const_iterator13_M_const_castEv,"axG",%progbits,_ZNKSt19_Bit_const_ite
 1189              		.align	1
 1190              		.weak	_ZNKSt19_Bit_const_iterator13_M_const_castEv
 1191              		.syntax unified
 1192              		.thumb
 1193              		.thumb_func
 1194              		.fpu fpv5-d16
 1196              	_ZNKSt19_Bit_const_iterator13_M_const_castEv:
 1197              	.LFB2035:
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_iterator
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _M_const_cast() const
 1198              		.loc 6 343 5
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 8
 1201              		@ frame_needed = 1, uses_anonymous_args = 0
 1202 0000 80B5     		push	{r7, lr}
 1203              		.cfi_def_cfa_offset 8
 1204              		.cfi_offset 7, -8
 1205              		.cfi_offset 14, -4
 1206 0002 82B0     		sub	sp, sp, #8
 1207              		.cfi_def_cfa_offset 16
 1208 0004 00AF     		add	r7, sp, #0
 1209              		.cfi_def_cfa_register 7
 1210 0006 7860     		str	r0, [r7, #4]
 1211 0008 3960     		str	r1, [r7]
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return _Bit_iterator(_M_p, _M_offset); }
 1212              		.loc 6 344 28
 1213 000a 3B68     		ldr	r3, [r7]
 1214 000c 1968     		ldr	r1, [r3]
 1215              		.loc 6 344 34
 1216 000e 3B68     		ldr	r3, [r7]
 1217 0010 5B68     		ldr	r3, [r3, #4]
 1218              		.loc 6 344 43
 1219 0012 1A46     		mov	r2, r3
 1220 0014 7868     		ldr	r0, [r7, #4]
 1221 0016 FFF7FEFF 		bl	_ZNSt13_Bit_iteratorC1EPmj
 1222              		.loc 6 344 46
 1223 001a 7868     		ldr	r0, [r7, #4]
 1224 001c 0837     		adds	r7, r7, #8
 1225              		.cfi_def_cfa_offset 8
 1226 001e BD46     		mov	sp, r7
 1227              		.cfi_def_cfa_register 13
 1228              		@ sp needed
 1229 0020 80BD     		pop	{r7, pc}
 1230              		.cfi_endproc
 1231              	.LFE2035:
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 82


 1233              		.section	.text._ZNKSt19_Bit_const_iteratordeEv,"axG",%progbits,_ZNKSt19_Bit_const_iteratordeEv,com
 1234              		.align	1
 1235              		.weak	_ZNKSt19_Bit_const_iteratordeEv
 1236              		.syntax unified
 1237              		.thumb
 1238              		.thumb_func
 1239              		.fpu fpv5-d16
 1241              	_ZNKSt19_Bit_const_iteratordeEv:
 1242              	.LFB2036:
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_reference
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator*() const
 1243              		.loc 6 347 5
 1244              		.cfi_startproc
 1245              		@ args = 0, pretend = 0, frame = 16
 1246              		@ frame_needed = 1, uses_anonymous_args = 0
 1247 0000 80B5     		push	{r7, lr}
 1248              		.cfi_def_cfa_offset 8
 1249              		.cfi_offset 7, -8
 1250              		.cfi_offset 14, -4
 1251 0002 84B0     		sub	sp, sp, #16
 1252              		.cfi_def_cfa_offset 24
 1253 0004 00AF     		add	r7, sp, #0
 1254              		.cfi_def_cfa_register 7
 1255 0006 7860     		str	r0, [r7, #4]
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return _Bit_reference(_M_p, 1UL << _M_offset); }
 1256              		.loc 6 348 29
 1257 0008 7B68     		ldr	r3, [r7, #4]
 1258 000a 1968     		ldr	r1, [r3]
 1259              		.loc 6 348 42
 1260 000c 7B68     		ldr	r3, [r7, #4]
 1261 000e 5B68     		ldr	r3, [r3, #4]
 1262              		.loc 6 348 51
 1263 0010 0122     		movs	r2, #1
 1264 0012 9A40     		lsls	r2, r2, r3
 1265 0014 07F10803 		add	r3, r7, #8
 1266 0018 1846     		mov	r0, r3
 1267 001a FFF7FEFF 		bl	_ZNSt14_Bit_referenceC1EPmm
 1268 001e 07F10803 		add	r3, r7, #8
 1269 0022 1846     		mov	r0, r3
 1270 0024 FFF7FEFF 		bl	_ZNKSt14_Bit_referencecvbEv
 1271 0028 0346     		mov	r3, r0
 1272              		.loc 6 348 54
 1273 002a 1846     		mov	r0, r3
 1274 002c 1037     		adds	r7, r7, #16
 1275              		.cfi_def_cfa_offset 8
 1276 002e BD46     		mov	sp, r7
 1277              		.cfi_def_cfa_register 13
 1278              		@ sp needed
 1279 0030 80BD     		pop	{r7, pc}
 1280              		.cfi_endproc
 1281              	.LFE2036:
 1283              		.section	.text._ZNSt19_Bit_const_iteratorppEv,"axG",%progbits,_ZNSt19_Bit_const_iteratorppEv,comda
 1284              		.align	1
 1285              		.weak	_ZNSt19_Bit_const_iteratorppEv
 1286              		.syntax unified
 1287              		.thumb
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 83


 1288              		.thumb_func
 1289              		.fpu fpv5-d16
 1291              	_ZNSt19_Bit_const_iteratorppEv:
 1292              	.LFB2037:
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_iterator&
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator++()
 1293              		.loc 6 351 5
 1294              		.cfi_startproc
 1295              		@ args = 0, pretend = 0, frame = 8
 1296              		@ frame_needed = 1, uses_anonymous_args = 0
 1297 0000 80B5     		push	{r7, lr}
 1298              		.cfi_def_cfa_offset 8
 1299              		.cfi_offset 7, -8
 1300              		.cfi_offset 14, -4
 1301 0002 82B0     		sub	sp, sp, #8
 1302              		.cfi_def_cfa_offset 16
 1303 0004 00AF     		add	r7, sp, #0
 1304              		.cfi_def_cfa_register 7
 1305 0006 7860     		str	r0, [r7, #4]
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_up();
 1306              		.loc 6 353 17
 1307 0008 7B68     		ldr	r3, [r7, #4]
 1308 000a 1846     		mov	r0, r3
 1309 000c FFF7FEFF 		bl	_ZNSt18_Bit_iterator_base10_M_bump_upEv
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 1310              		.loc 6 354 15
 1311 0010 7B68     		ldr	r3, [r7, #4]
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 1312              		.loc 6 355 5
 1313 0012 1846     		mov	r0, r3
 1314 0014 0837     		adds	r7, r7, #8
 1315              		.cfi_def_cfa_offset 8
 1316 0016 BD46     		mov	sp, r7
 1317              		.cfi_def_cfa_register 13
 1318              		@ sp needed
 1319 0018 80BD     		pop	{r7, pc}
 1320              		.cfi_endproc
 1321              	.LFE2037:
 1323              		.section	.text._ZSt14__fill_bvectorPmjjb,"axG",%progbits,_ZSt14__fill_bvectorPmjjb,comdat
 1324              		.align	1
 1325              		.weak	_ZSt14__fill_bvectorPmjjb
 1326              		.syntax unified
 1327              		.thumb
 1328              		.thumb_func
 1329              		.fpu fpv5-d16
 1331              	_ZSt14__fill_bvectorPmjjb:
 1332              	.LFB2047:
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_iterator
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator++(int)
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator __tmp = *this;
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_up();
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 84


 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_iterator&
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator--()
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_down();
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_iterator
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator--(int)
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator __tmp = *this;
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_down();
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_iterator&
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator+=(difference_type __i)
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_incr(__i);
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_iterator&
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator-=(difference_type __i)
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       *this += -__i;
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_reference
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator[](difference_type __i) const
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return *(*this + __i); }
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend const_iterator
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator+(const const_iterator& __x, difference_type __n)
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator __tmp = __x;
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend const_iterator
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator-(const const_iterator& __x, difference_type __n)
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator __tmp = __x;
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp -= __n;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend const_iterator
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator+(difference_type __n, const const_iterator& __x)
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return __x + __n; }
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   };
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   inline void
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   __fill_bvector(_Bit_type * __v,
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 85


 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		 unsigned int __first, unsigned int __last, bool __x)
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
 1333              		.loc 6 422 3
 1334              		.cfi_startproc
 1335              		@ args = 0, pretend = 0, frame = 32
 1336              		@ frame_needed = 1, uses_anonymous_args = 0
 1337              		@ link register save eliminated.
 1338 0000 80B4     		push	{r7}
 1339              		.cfi_def_cfa_offset 4
 1340              		.cfi_offset 7, -4
 1341 0002 89B0     		sub	sp, sp, #36
 1342              		.cfi_def_cfa_offset 40
 1343 0004 00AF     		add	r7, sp, #0
 1344              		.cfi_def_cfa_register 7
 1345 0006 F860     		str	r0, [r7, #12]
 1346 0008 B960     		str	r1, [r7, #8]
 1347 000a 7A60     		str	r2, [r7, #4]
 1348 000c FB70     		strb	r3, [r7, #3]
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const _Bit_type __fmask = ~0ul << __first;
 1349              		.loc 6 423 21
 1350 000e 4FF0FF32 		mov	r2, #-1
 1351 0012 BB68     		ldr	r3, [r7, #8]
 1352 0014 02FA03F3 		lsl	r3, r2, r3
 1353 0018 FB61     		str	r3, [r7, #28]
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const _Bit_type __lmask = ~0ul >> (_S_word_bit - __last);
 1354              		.loc 6 424 52
 1355 001a 7B68     		ldr	r3, [r7, #4]
 1356 001c C3F12003 		rsb	r3, r3, #32
 1357              		.loc 6 424 21
 1358 0020 4FF0FF32 		mov	r2, #-1
 1359 0024 22FA03F3 		lsr	r3, r2, r3
 1360 0028 BB61     		str	r3, [r7, #24]
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const _Bit_type __mask = __fmask & __lmask;
 1361              		.loc 6 425 21
 1362 002a FA69     		ldr	r2, [r7, #28]
 1363 002c BB69     		ldr	r3, [r7, #24]
 1364 002e 1340     		ands	r3, r3, r2
 1365 0030 7B61     		str	r3, [r7, #20]
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     if (__x)
 1366              		.loc 6 427 5
 1367 0032 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1368 0034 002B     		cmp	r3, #0
 1369 0036 06D0     		beq	.L59
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       *__v |= __mask;
 1370              		.loc 6 428 12
 1371 0038 FB68     		ldr	r3, [r7, #12]
 1372 003a 1A68     		ldr	r2, [r3]
 1373 003c 7B69     		ldr	r3, [r7, #20]
 1374 003e 1A43     		orrs	r2, r2, r3
 1375 0040 FB68     		ldr	r3, [r7, #12]
 1376 0042 1A60     		str	r2, [r3]
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     else
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       *__v &= ~__mask;
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   }
 1377              		.loc 6 431 3
 1378 0044 06E0     		b	.L61
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 86


 1379              	.L59:
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   }
 1380              		.loc 6 430 12
 1381 0046 FB68     		ldr	r3, [r7, #12]
 1382 0048 1A68     		ldr	r2, [r3]
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   }
 1383              		.loc 6 430 15
 1384 004a 7B69     		ldr	r3, [r7, #20]
 1385 004c DB43     		mvns	r3, r3
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   }
 1386              		.loc 6 430 12
 1387 004e 1A40     		ands	r2, r2, r3
 1388 0050 FB68     		ldr	r3, [r7, #12]
 1389 0052 1A60     		str	r2, [r3]
 1390              	.L61:
 1391              		.loc 6 431 3
 1392 0054 00BF     		nop
 1393 0056 2437     		adds	r7, r7, #36
 1394              		.cfi_def_cfa_offset 4
 1395 0058 BD46     		mov	sp, r7
 1396              		.cfi_def_cfa_register 13
 1397              		@ sp needed
 1398 005a 5DF8047B 		ldr	r7, [sp], #4
 1399              		.cfi_restore 7
 1400              		.cfi_def_cfa_offset 0
 1401 005e 7047     		bx	lr
 1402              		.cfi_endproc
 1403              	.LFE2047:
 1405              		.section	.text._ZSt4fillSt13_Bit_iteratorS_RKb,"axG",%progbits,_ZSt4fillSt13_Bit_iteratorS_RKb,com
 1406              		.align	1
 1407              		.weak	_ZSt4fillSt13_Bit_iteratorS_RKb
 1408              		.syntax unified
 1409              		.thumb
 1410              		.thumb_func
 1411              		.fpu fpv5-d16
 1413              	_ZSt4fillSt13_Bit_iteratorS_RKb:
 1414              	.LFB2048:
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   inline void
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   fill(_Bit_iterator __first, _Bit_iterator __last, const bool& __x)
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
 1415              		.loc 6 435 3
 1416              		.cfi_startproc
 1417              		@ args = 4, pretend = 0, frame = 24
 1418              		@ frame_needed = 1, uses_anonymous_args = 0
 1419 0000 90B5     		push	{r4, r7, lr}
 1420              		.cfi_def_cfa_offset 12
 1421              		.cfi_offset 4, -12
 1422              		.cfi_offset 7, -8
 1423              		.cfi_offset 14, -4
 1424 0002 87B0     		sub	sp, sp, #28
 1425              		.cfi_def_cfa_offset 40
 1426 0004 00AF     		add	r7, sp, #0
 1427              		.cfi_def_cfa_register 7
 1428 0006 07F10804 		add	r4, r7, #8
 1429 000a 84E80300 		stm	r4, {r0, r1}
 1430 000e 3946     		mov	r1, r7
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 87


 1431 0010 81E80C00 		stm	r1, {r2, r3}
 1432              	.LBB10:
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     if (__first._M_p != __last._M_p)
 1433              		.loc 6 436 17
 1434 0014 BA68     		ldr	r2, [r7, #8]
 1435              		.loc 6 436 32
 1436 0016 3B68     		ldr	r3, [r7]
 1437              		.loc 6 436 5
 1438 0018 9A42     		cmp	r2, r3
 1439 001a 27D0     		beq	.L63
 1440              	.LBB11:
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_type* __first_p = __first._M_p;
 1441              		.loc 6 438 13
 1442 001c BB68     		ldr	r3, [r7, #8]
 1443 001e 7B61     		str	r3, [r7, #20]
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__first._M_offset != 0)
 1444              		.loc 6 439 14
 1445 0020 FB68     		ldr	r3, [r7, #12]
 1446              		.loc 6 439 2
 1447 0022 002B     		cmp	r3, #0
 1448 0024 08D0     		beq	.L64
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __fill_bvector(__first_p++, __first._M_offset, _S_word_bit, __x);
 1449              		.loc 6 440 18
 1450 0026 7869     		ldr	r0, [r7, #20]
 1451 0028 031D     		adds	r3, r0, #4
 1452 002a 7B61     		str	r3, [r7, #20]
 1453 002c F968     		ldr	r1, [r7, #12]
 1454 002e BB6A     		ldr	r3, [r7, #40]
 1455 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1456 0032 2022     		movs	r2, #32
 1457 0034 FFF7FEFF 		bl	_ZSt14__fill_bvectorPmjjb
 1458              	.L64:
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	__builtin_memset(__first_p, __x ? ~0 : 0,
 1459              		.loc 6 442 30
 1460 0038 BB6A     		ldr	r3, [r7, #40]
 1461 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1462              		.loc 6 442 18
 1463 003c 002B     		cmp	r3, #0
 1464 003e 02D0     		beq	.L65
 1465              		.loc 6 442 18 is_stmt 0 discriminator 1
 1466 0040 4FF0FF31 		mov	r1, #-1
 1467 0044 00E0     		b	.L66
 1468              	.L65:
 1469              		.loc 6 442 18 discriminator 2
 1470 0046 0021     		movs	r1, #0
 1471              	.L66:
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			 (__last._M_p - __first_p) * sizeof(_Bit_type));
 1472              		.loc 6 443 13 is_stmt 1
 1473 0048 3A68     		ldr	r2, [r7]
 1474              		.loc 6 443 18
 1475 004a 7B69     		ldr	r3, [r7, #20]
 1476 004c D31A     		subs	r3, r2, r3
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			 (__last._M_p - __first_p) * sizeof(_Bit_type));
 1477              		.loc 6 442 18
 1478 004e 1A46     		mov	r2, r3
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 88


 1479 0050 7869     		ldr	r0, [r7, #20]
 1480 0052 FFF7FEFF 		bl	memset
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__last._M_offset != 0)
 1481              		.loc 6 445 13
 1482 0056 7B68     		ldr	r3, [r7, #4]
 1483              		.loc 6 445 2
 1484 0058 002B     		cmp	r3, #0
 1485 005a 12D0     		beq	.L68
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __fill_bvector(__last._M_p, 0, __last._M_offset, __x);
 1486              		.loc 6 446 18
 1487 005c 3868     		ldr	r0, [r7]
 1488 005e 7A68     		ldr	r2, [r7, #4]
 1489 0060 BB6A     		ldr	r3, [r7, #40]
 1490 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1491 0064 0021     		movs	r1, #0
 1492 0066 FFF7FEFF 		bl	_ZSt14__fill_bvectorPmjjb
 1493              	.LBE11:
 1494              	.LBE10:
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     else if (__first._M_offset != __last._M_offset)
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __fill_bvector(__first._M_p, __first._M_offset, __last._M_offset, __x);
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   }
 1495              		.loc 6 450 3
 1496 006a 0AE0     		b	.L68
 1497              	.L63:
 1498              	.LBB12:
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __fill_bvector(__first._M_p, __first._M_offset, __last._M_offset, __x);
 1499              		.loc 6 448 22
 1500 006c FA68     		ldr	r2, [r7, #12]
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __fill_bvector(__first._M_p, __first._M_offset, __last._M_offset, __x);
 1501              		.loc 6 448 42
 1502 006e 7B68     		ldr	r3, [r7, #4]
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __fill_bvector(__first._M_p, __first._M_offset, __last._M_offset, __x);
 1503              		.loc 6 448 10
 1504 0070 9A42     		cmp	r2, r3
 1505 0072 06D0     		beq	.L68
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   }
 1506              		.loc 6 449 21
 1507 0074 B868     		ldr	r0, [r7, #8]
 1508 0076 F968     		ldr	r1, [r7, #12]
 1509 0078 7A68     		ldr	r2, [r7, #4]
 1510 007a BB6A     		ldr	r3, [r7, #40]
 1511 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1512 007e FFF7FEFF 		bl	_ZSt14__fill_bvectorPmjjb
 1513              	.L68:
 1514              	.LBE12:
 1515              		.loc 6 450 3
 1516 0082 00BF     		nop
 1517 0084 1C37     		adds	r7, r7, #28
 1518              		.cfi_def_cfa_offset 12
 1519 0086 BD46     		mov	sp, r7
 1520              		.cfi_def_cfa_register 13
 1521              		@ sp needed
 1522 0088 90BD     		pop	{r4, r7, pc}
 1523              		.cfi_endproc
 1524              	.LFE2048:
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 89


 1526              		.section	.text._ZN5daisy3PinC2Ev,"axG",%progbits,_ZN5daisy3PinC5Ev,comdat
 1527              		.align	1
 1528              		.weak	_ZN5daisy3PinC2Ev
 1529              		.syntax unified
 1530              		.thumb
 1531              		.thumb_func
 1532              		.fpu fpv5-d16
 1534              	_ZN5daisy3PinC2Ev:
 1535              	.LFB2182:
 1536              		.file 7 "../../libDaisy/src/daisy_core.h"
   1:../../libDaisy/src/daisy_core.h **** #pragma once
   2:../../libDaisy/src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libDaisy/src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libDaisy/src/daisy_core.h **** #include <stdint.h>
   5:../../libDaisy/src/daisy_core.h **** #include <stdlib.h>
   6:../../libDaisy/src/daisy_core.h **** 
   7:../../libDaisy/src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../libDaisy/src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libDaisy/src/daisy_core.h **** #elif defined(__clang__)
  10:../../libDaisy/src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libDaisy/src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libDaisy/src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../libDaisy/src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../libDaisy/src/daisy_core.h **** #else
  15:../../libDaisy/src/daisy_core.h **** #error unknown compiler
  16:../../libDaisy/src/daisy_core.h **** #endif
  17:../../libDaisy/src/daisy_core.h **** 
  18:../../libDaisy/src/daisy_core.h **** /** @addtogroup utility
  19:../../libDaisy/src/daisy_core.h ****     @{
  20:../../libDaisy/src/daisy_core.h **** */
  21:../../libDaisy/src/daisy_core.h **** 
  22:../../libDaisy/src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libDaisy/src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../libDaisy/src/daisy_core.h **** */
  25:../../libDaisy/src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libDaisy/src/daisy_core.h **** /** 
  27:../../libDaisy/src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libDaisy/src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libDaisy/src/daisy_core.h **** cache enabled.
  30:../../libDaisy/src/daisy_core.h **** */
  31:../../libDaisy/src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libDaisy/src/daisy_core.h **** 
  33:../../libDaisy/src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libDaisy/src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libDaisy/src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libDaisy/src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../libDaisy/src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libDaisy/src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libDaisy/src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../libDaisy/src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../libDaisy/src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libDaisy/src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../libDaisy/src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../libDaisy/src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../libDaisy/src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libDaisy/src/daisy_core.h **** 
  47:../../libDaisy/src/daisy_core.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 90


  48:../../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../libDaisy/src/daisy_core.h **** #define OUT_L out[0]
  51:../../libDaisy/src/daisy_core.h **** 
  52:../../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libDaisy/src/daisy_core.h **** #define OUT_R out[1]
  55:../../libDaisy/src/daisy_core.h **** 
  56:../../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../libDaisy/src/daisy_core.h **** #define IN_L in[0]
  59:../../libDaisy/src/daisy_core.h **** 
  60:../../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libDaisy/src/daisy_core.h **** #define IN_R in[1]
  63:../../libDaisy/src/daisy_core.h **** 
  64:../../libDaisy/src/daisy_core.h **** /** 
  65:../../libDaisy/src/daisy_core.h ****     Computes cube.
  66:../../libDaisy/src/daisy_core.h ****     \param x Number to be cubed
  67:../../libDaisy/src/daisy_core.h ****     \return x ^ 3
  68:../../libDaisy/src/daisy_core.h **** */
  69:../../libDaisy/src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../libDaisy/src/daisy_core.h **** {
  71:../../libDaisy/src/daisy_core.h ****     return (x * x) * x;
  72:../../libDaisy/src/daisy_core.h **** }
  73:../../libDaisy/src/daisy_core.h **** 
  74:../../libDaisy/src/daisy_core.h **** /** 
  75:../../libDaisy/src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libDaisy/src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libDaisy/src/daisy_core.h ****     \return Scaled number.
  78:../../libDaisy/src/daisy_core.h **** */
  79:../../libDaisy/src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libDaisy/src/daisy_core.h **** {
  81:../../libDaisy/src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../libDaisy/src/daisy_core.h **** }
  83:../../libDaisy/src/daisy_core.h **** 
  84:../../libDaisy/src/daisy_core.h **** /**
  85:../../libDaisy/src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libDaisy/src/daisy_core.h **** */
  87:../../libDaisy/src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libDaisy/src/daisy_core.h **** {
  89:../../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libDaisy/src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libDaisy/src/daisy_core.h **** }
  93:../../libDaisy/src/daisy_core.h **** 
  94:../../libDaisy/src/daisy_core.h **** 
  95:../../libDaisy/src/daisy_core.h **** /** 
  96:../../libDaisy/src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../libDaisy/src/daisy_core.h ****     \param x Number to be scaled.
  98:../../libDaisy/src/daisy_core.h ****     \return Scaled number.
  99:../../libDaisy/src/daisy_core.h **** */
 100:../../libDaisy/src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../libDaisy/src/daisy_core.h **** {
 102:../../libDaisy/src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libDaisy/src/daisy_core.h **** }
 104:../../libDaisy/src/daisy_core.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 91


 105:../../libDaisy/src/daisy_core.h **** /**
 106:../../libDaisy/src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../libDaisy/src/daisy_core.h **** */
 108:../../libDaisy/src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../libDaisy/src/daisy_core.h **** {
 110:../../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../libDaisy/src/daisy_core.h **** }
 114:../../libDaisy/src/daisy_core.h **** 
 115:../../libDaisy/src/daisy_core.h **** /** 
 116:../../libDaisy/src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libDaisy/src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libDaisy/src/daisy_core.h ****     \return Scaled number.
 119:../../libDaisy/src/daisy_core.h **** */
 120:../../libDaisy/src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libDaisy/src/daisy_core.h **** {
 122:../../libDaisy/src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libDaisy/src/daisy_core.h **** }
 124:../../libDaisy/src/daisy_core.h **** 
 125:../../libDaisy/src/daisy_core.h **** /**
 126:../../libDaisy/src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../libDaisy/src/daisy_core.h **** */
 128:../../libDaisy/src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libDaisy/src/daisy_core.h **** {
 130:../../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libDaisy/src/daisy_core.h **** }
 134:../../libDaisy/src/daisy_core.h **** 
 135:../../libDaisy/src/daisy_core.h **** /**
 136:../../libDaisy/src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libDaisy/src/daisy_core.h ****  */
 138:../../libDaisy/src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../libDaisy/src/daisy_core.h **** {
 140:../../libDaisy/src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libDaisy/src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libDaisy/src/daisy_core.h **** }
 143:../../libDaisy/src/daisy_core.h **** /**
 144:../../libDaisy/src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libDaisy/src/daisy_core.h ****  */
 146:../../libDaisy/src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libDaisy/src/daisy_core.h **** {
 148:../../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../libDaisy/src/daisy_core.h **** }
 152:../../libDaisy/src/daisy_core.h **** 
 153:../../libDaisy/src/daisy_core.h **** /**
 154:../../libDaisy/src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../libDaisy/src/daisy_core.h ****  */
 156:../../libDaisy/src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../libDaisy/src/daisy_core.h **** {
 158:../../libDaisy/src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../libDaisy/src/daisy_core.h **** }
 160:../../libDaisy/src/daisy_core.h **** /**
 161:../../libDaisy/src/daisy_core.h ****     Converts float to Signed 24-bit
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 92


 162:../../libDaisy/src/daisy_core.h ****  */
 163:../../libDaisy/src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../libDaisy/src/daisy_core.h **** {
 165:../../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libDaisy/src/daisy_core.h **** }
 169:../../libDaisy/src/daisy_core.h **** 
 170:../../libDaisy/src/daisy_core.h **** 
 171:../../libDaisy/src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../../libDaisy/src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../libDaisy/src/daisy_core.h ****  *  the hardware.
 174:../../libDaisy/src/daisy_core.h ****  * 
 175:../../libDaisy/src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../libDaisy/src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../libDaisy/src/daisy_core.h ****  * 
 178:../../libDaisy/src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../../libDaisy/src/daisy_core.h ****  */
 180:../../libDaisy/src/daisy_core.h **** typedef enum
 181:../../libDaisy/src/daisy_core.h **** {
 182:../../libDaisy/src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../libDaisy/src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../libDaisy/src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../../libDaisy/src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../libDaisy/src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../libDaisy/src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../libDaisy/src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../libDaisy/src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../libDaisy/src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../libDaisy/src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../libDaisy/src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../libDaisy/src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../libDaisy/src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../libDaisy/src/daisy_core.h **** } dsy_gpio_port;
 196:../../libDaisy/src/daisy_core.h **** 
 197:../../libDaisy/src/daisy_core.h **** /** Hardware define pins 
 198:../../libDaisy/src/daisy_core.h ****  *  
 199:../../libDaisy/src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../libDaisy/src/daisy_core.h ****  *  backwards compatability.
 201:../../libDaisy/src/daisy_core.h ****  * 
 202:../../libDaisy/src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../libDaisy/src/daisy_core.h ****  */
 204:../../libDaisy/src/daisy_core.h **** typedef struct
 205:../../libDaisy/src/daisy_core.h **** {
 206:../../libDaisy/src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../libDaisy/src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../libDaisy/src/daisy_core.h **** } dsy_gpio_pin;
 209:../../libDaisy/src/daisy_core.h **** 
 210:../../libDaisy/src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../libDaisy/src/daisy_core.h ****  * 
 212:../../libDaisy/src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../libDaisy/src/daisy_core.h ****  *  backwards compatability.
 214:../../libDaisy/src/daisy_core.h ****  * 
 215:../../libDaisy/src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../libDaisy/src/daisy_core.h **** */
 217:../../libDaisy/src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../libDaisy/src/daisy_core.h **** {
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 93


 219:../../libDaisy/src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../libDaisy/src/daisy_core.h ****     p.port = port;
 221:../../libDaisy/src/daisy_core.h ****     p.pin  = pin;
 222:../../libDaisy/src/daisy_core.h ****     return p;
 223:../../libDaisy/src/daisy_core.h **** }
 224:../../libDaisy/src/daisy_core.h **** 
 225:../../libDaisy/src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../../libDaisy/src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../libDaisy/src/daisy_core.h ****  * 
 228:../../libDaisy/src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 229:../../libDaisy/src/daisy_core.h ****  *  backwards compatability.
 230:../../libDaisy/src/daisy_core.h ****  * 
 231:../../libDaisy/src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../libDaisy/src/daisy_core.h ****  */
 233:../../libDaisy/src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../libDaisy/src/daisy_core.h **** {
 235:../../libDaisy/src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
 236:../../libDaisy/src/daisy_core.h **** }
 237:../../libDaisy/src/daisy_core.h **** 
 238:../../libDaisy/src/daisy_core.h **** #ifdef __cplusplus
 239:../../libDaisy/src/daisy_core.h **** 
 240:../../libDaisy/src/daisy_core.h **** namespace daisy
 241:../../libDaisy/src/daisy_core.h **** {
 242:../../libDaisy/src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../libDaisy/src/daisy_core.h **** enum GPIOPort
 244:../../libDaisy/src/daisy_core.h **** {
 245:../../libDaisy/src/daisy_core.h ****     PORTA, /**< Port A */
 246:../../libDaisy/src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../libDaisy/src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../libDaisy/src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../libDaisy/src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../libDaisy/src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../libDaisy/src/daisy_core.h ****     PORTG, /**< Port G */
 252:../../libDaisy/src/daisy_core.h ****     PORTH, /**< Port H */
 253:../../libDaisy/src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../libDaisy/src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../libDaisy/src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../libDaisy/src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../libDaisy/src/daisy_core.h **** };
 258:../../libDaisy/src/daisy_core.h **** 
 259:../../libDaisy/src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../../libDaisy/src/daisy_core.h **** struct Pin
 261:../../libDaisy/src/daisy_core.h **** {
 262:../../libDaisy/src/daisy_core.h ****     GPIOPort port;
 263:../../libDaisy/src/daisy_core.h ****     uint8_t  pin;
 264:../../libDaisy/src/daisy_core.h **** 
 265:../../libDaisy/src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../libDaisy/src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../libDaisy/src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../../libDaisy/src/daisy_core.h ****     */
 269:../../libDaisy/src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 270:../../libDaisy/src/daisy_core.h **** 
 271:../../libDaisy/src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../../libDaisy/src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 1537              		.loc 7 272 15
 1538              		.cfi_startproc
 1539              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 94


 1540              		@ frame_needed = 1, uses_anonymous_args = 0
 1541              		@ link register save eliminated.
 1542 0000 80B4     		push	{r7}
 1543              		.cfi_def_cfa_offset 4
 1544              		.cfi_offset 7, -4
 1545 0002 83B0     		sub	sp, sp, #12
 1546              		.cfi_def_cfa_offset 16
 1547 0004 00AF     		add	r7, sp, #0
 1548              		.cfi_def_cfa_register 7
 1549 0006 7860     		str	r0, [r7, #4]
 1550              	.LBB13:
 1551              		.loc 7 272 43
 1552 0008 7B68     		ldr	r3, [r7, #4]
 1553 000a 0B22     		movs	r2, #11
 1554 000c 1A70     		strb	r2, [r3]
 1555 000e 7B68     		ldr	r3, [r7, #4]
 1556 0010 FF22     		movs	r2, #255
 1557 0012 5A70     		strb	r2, [r3, #1]
 1558              	.LBE13:
 1559              		.loc 7 272 46
 1560 0014 7B68     		ldr	r3, [r7, #4]
 1561 0016 1846     		mov	r0, r3
 1562 0018 0C37     		adds	r7, r7, #12
 1563              		.cfi_def_cfa_offset 4
 1564 001a BD46     		mov	sp, r7
 1565              		.cfi_def_cfa_register 13
 1566              		@ sp needed
 1567 001c 5DF8047B 		ldr	r7, [sp], #4
 1568              		.cfi_restore 7
 1569              		.cfi_def_cfa_offset 0
 1570 0020 7047     		bx	lr
 1571              		.cfi_endproc
 1572              	.LFE2182:
 1574              		.weak	_ZN5daisy3PinC1Ev
 1575              		.thumb_set _ZN5daisy3PinC1Ev,_ZN5daisy3PinC2Ev
 1576              		.section	.text._ZNK5daisy3Pincv12dsy_gpio_pinEv,"axG",%progbits,_ZNK5daisy3Pincv12dsy_gpio_pinEv,c
 1577              		.align	1
 1578              		.weak	_ZNK5daisy3Pincv12dsy_gpio_pinEv
 1579              		.syntax unified
 1580              		.thumb
 1581              		.thumb_func
 1582              		.fpu fpv5-d16
 1584              	_ZNK5daisy3Pincv12dsy_gpio_pinEv:
 1585              	.LFB2187:
 273:../../libDaisy/src/daisy_core.h **** 
 274:../../libDaisy/src/daisy_core.h ****     /** @brief checks validity of a Pin 
 275:../../libDaisy/src/daisy_core.h ****      *  @retval returns true if the port is a valid hardware pin, otherwise false.
 276:../../libDaisy/src/daisy_core.h ****     */
 277:../../libDaisy/src/daisy_core.h ****     constexpr bool IsValid() const { return port != PORTX && pin < 16; }
 278:../../libDaisy/src/daisy_core.h **** 
 279:../../libDaisy/src/daisy_core.h ****     /** @brief comparison operator for checking equality between Pin objects */
 280:../../libDaisy/src/daisy_core.h ****     constexpr bool operator==(const Pin &rhs) const
 281:../../libDaisy/src/daisy_core.h ****     {
 282:../../libDaisy/src/daisy_core.h ****         return (rhs.port == port) && (rhs.pin == pin);
 283:../../libDaisy/src/daisy_core.h ****     }
 284:../../libDaisy/src/daisy_core.h **** 
 285:../../libDaisy/src/daisy_core.h ****     /** @brief comparison operator for checking inequality between Pin objects */
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 95


 286:../../libDaisy/src/daisy_core.h ****     constexpr bool operator!=(const Pin &rhs) const { return !operator==(rhs); }
 287:../../libDaisy/src/daisy_core.h **** 
 288:../../libDaisy/src/daisy_core.h ****     /** @brief conversion operation for converting to the old-style representation
 289:../../libDaisy/src/daisy_core.h ****      *         of a pin.
 290:../../libDaisy/src/daisy_core.h ****      * 
 291:../../libDaisy/src/daisy_core.h ****      *  This allows the new Pin type to be used in place of the older, dsy_gpio_pin
 292:../../libDaisy/src/daisy_core.h ****      *  type.
 293:../../libDaisy/src/daisy_core.h ****      */
 294:../../libDaisy/src/daisy_core.h ****     operator dsy_gpio_pin() const
 1586              		.loc 7 294 5
 1587              		.cfi_startproc
 1588              		@ args = 0, pretend = 0, frame = 24
 1589              		@ frame_needed = 1, uses_anonymous_args = 0
 1590              		@ link register save eliminated.
 1591 0000 80B4     		push	{r7}
 1592              		.cfi_def_cfa_offset 4
 1593              		.cfi_offset 7, -4
 1594 0002 87B0     		sub	sp, sp, #28
 1595              		.cfi_def_cfa_offset 32
 1596 0004 00AF     		add	r7, sp, #0
 1597              		.cfi_def_cfa_register 7
 1598 0006 7860     		str	r0, [r7, #4]
 295:../../libDaisy/src/daisy_core.h ****     {
 296:../../libDaisy/src/daisy_core.h ****         return dsy_pin(static_cast<dsy_gpio_port>(port), pin);
 1599              		.loc 7 296 51
 1600 0008 7B68     		ldr	r3, [r7, #4]
 1601 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1602              		.loc 7 296 58
 1603 000c 7B68     		ldr	r3, [r7, #4]
 1604 000e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1605 0010 FA75     		strb	r2, [r7, #23]
 1606 0012 BB75     		strb	r3, [r7, #22]
 1607              	.LBB14:
 1608              	.LBB15:
 220:../../libDaisy/src/daisy_core.h ****     p.pin  = pin;
 1609              		.loc 7 220 12
 1610 0014 FB7D     		ldrb	r3, [r7, #23]
 1611 0016 3B73     		strb	r3, [r7, #12]
 221:../../libDaisy/src/daisy_core.h ****     return p;
 1612              		.loc 7 221 12
 1613 0018 BB7D     		ldrb	r3, [r7, #22]
 1614 001a 7B73     		strb	r3, [r7, #13]
 222:../../libDaisy/src/daisy_core.h **** }
 1615              		.loc 7 222 12
 1616 001c BB89     		ldrh	r3, [r7, #12]	@ movhi
 1617 001e BB82     		strh	r3, [r7, #20]	@ movhi
 1618 0020 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 1619 0022 3B82     		strh	r3, [r7, #16]	@ movhi
 1620              	.LBE15:
 1621              	.LBE14:
 1622              		.loc 7 296 61
 1623 0024 0023     		movs	r3, #0
 1624 0026 3A7C     		ldrb	r2, [r7, #16]	@ zero_extendqisi2
 1625 0028 62F30703 		bfi	r3, r2, #0, #8
 1626 002c 7A7C     		ldrb	r2, [r7, #17]	@ zero_extendqisi2
 1627 002e 62F30F23 		bfi	r3, r2, #8, #8
 297:../../libDaisy/src/daisy_core.h ****     }
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 96


 1628              		.loc 7 297 5
 1629 0032 1846     		mov	r0, r3	@ movhi
 1630 0034 1C37     		adds	r7, r7, #28
 1631              		.cfi_def_cfa_offset 4
 1632 0036 BD46     		mov	sp, r7
 1633              		.cfi_def_cfa_register 13
 1634              		@ sp needed
 1635 0038 5DF8047B 		ldr	r7, [sp], #4
 1636              		.cfi_restore 7
 1637              		.cfi_def_cfa_offset 0
 1638 003c 7047     		bx	lr
 1639              		.cfi_endproc
 1640              	.LFE2187:
 1642              		.section	.text._ZN5daisy11TimerHandle6ConfigC2Ev,"axG",%progbits,_ZN5daisy11TimerHandle6ConfigC5Ev
 1643              		.align	1
 1644              		.weak	_ZN5daisy11TimerHandle6ConfigC2Ev
 1645              		.syntax unified
 1646              		.thumb
 1647              		.thumb_func
 1648              		.fpu fpv5-d16
 1650              	_ZN5daisy11TimerHandle6ConfigC2Ev:
 1651              	.LFB2189:
 1652              		.file 8 "../../libDaisy/src/per/tim.h"
   1:../../libDaisy/src/per/tim.h **** #pragma once
   2:../../libDaisy/src/per/tim.h **** #ifndef DSY_TIM_H
   3:../../libDaisy/src/per/tim.h **** #define DSY_TIM_H
   4:../../libDaisy/src/per/tim.h **** 
   5:../../libDaisy/src/per/tim.h **** #include <cstdint>
   6:../../libDaisy/src/per/tim.h **** 
   7:../../libDaisy/src/per/tim.h **** namespace daisy
   8:../../libDaisy/src/per/tim.h **** {
   9:../../libDaisy/src/per/tim.h **** /** @brief Hardare timer peripheral support.
  10:../../libDaisy/src/per/tim.h ****  ** 
  11:../../libDaisy/src/per/tim.h ****  ** Supports general-function TIM peripherals:
  12:../../libDaisy/src/per/tim.h ****  ** - TIM2, TIM3, TIM4, TIM5
  13:../../libDaisy/src/per/tim.h ****  **
  14:../../libDaisy/src/per/tim.h ****  ** DaisySeed, and many internal peripherals utilize TIM2 for timing/delay purposes.
  15:../../libDaisy/src/per/tim.h ****  ** It is configured to be at the maximum frequency: typically 200MHz or 240MHz (boost) 
  16:../../libDaisy/src/per/tim.h ****  ** for measuring/delaying for very short periods. 
  17:../../libDaisy/src/per/tim.h ****  **
  18:../../libDaisy/src/per/tim.h ****  ** The GetUs/GetMs functions are available for convenience (and backwards compatibility),
  19:../../libDaisy/src/per/tim.h ****  ** but to avoid wrapping errors on math when doing time-delta calculations, using ticks is 
  20:../../libDaisy/src/per/tim.h ****  ** recommended. The data can be converted to the final time-base after getting the difference in t
  21:../../libDaisy/src/per/tim.h ****  ** (Using GetFreq() can be used for these time-base calculations).
  22:../../libDaisy/src/per/tim.h ****  **
  23:../../libDaisy/src/per/tim.h ****  ** User callbacks can be set, and changed at any point during operation. However,
  24:../../libDaisy/src/per/tim.h ****  ** the Config::enable_irq must be set to true when initializing for the interrupts
  25:../../libDaisy/src/per/tim.h ****  ** to turn on and function.
  26:../../libDaisy/src/per/tim.h ****  **
  27:../../libDaisy/src/per/tim.h ****  ** @todo Fix issues with realtime getters, and wrapping of the timer(s).
  28:../../libDaisy/src/per/tim.h ****  **     - This very noticeable with default settings for the 16-bit counters.
  29:../../libDaisy/src/per/tim.h ****  ** @todo Other General purpose timers
  30:../../libDaisy/src/per/tim.h ****  ** @todo Non-internal clock sources
  31:../../libDaisy/src/per/tim.h ****  ** @todo Use of the four-tim channels per tim
  32:../../libDaisy/src/per/tim.h ****  **     - PWM, etc.
  33:../../libDaisy/src/per/tim.h ****  **     - InputCapture/OutputCompare, etc.
  34:../../libDaisy/src/per/tim.h ****  ** @todo HRTIM
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 97


  35:../../libDaisy/src/per/tim.h ****  ** @todo Advanced timers (TIM1/TIM8)
  36:../../libDaisy/src/per/tim.h ****  ** */
  37:../../libDaisy/src/per/tim.h **** class TimerHandle
  38:../../libDaisy/src/per/tim.h **** {
  39:../../libDaisy/src/per/tim.h ****   public:
  40:../../libDaisy/src/per/tim.h ****     /** @brief Configuration struct for the Peripheral
  41:../../libDaisy/src/per/tim.h ****      *  @note These settings are used during initialization
  42:../../libDaisy/src/per/tim.h ****      *   and changing them afterwards may not have the desired effect.
  43:../../libDaisy/src/per/tim.h ****      */
  44:../../libDaisy/src/per/tim.h ****     struct Config
  45:../../libDaisy/src/per/tim.h ****     {
  46:../../libDaisy/src/per/tim.h ****         /** @brief Hardware Timer to configure, and use. */
  47:../../libDaisy/src/per/tim.h ****         enum class Peripheral
  48:../../libDaisy/src/per/tim.h ****         {
  49:../../libDaisy/src/per/tim.h ****             TIM_2 = 0, /**< 32-bit counter */
  50:../../libDaisy/src/per/tim.h ****             TIM_3,     /**< 16-bit counter */
  51:../../libDaisy/src/per/tim.h ****             TIM_4,     /**< 16-bit counter */
  52:../../libDaisy/src/per/tim.h ****             TIM_5,     /**< 32-bit counter*/
  53:../../libDaisy/src/per/tim.h ****         };
  54:../../libDaisy/src/per/tim.h **** 
  55:../../libDaisy/src/per/tim.h ****         /** @brief Direction of the auto-reload counter. 
  56:../../libDaisy/src/per/tim.h ****          ** @todo Add support for the various  
  57:../../libDaisy/src/per/tim.h ****          ** versions of Up/Down counters.
  58:../../libDaisy/src/per/tim.h ****          ** */
  59:../../libDaisy/src/per/tim.h ****         enum class CounterDir
  60:../../libDaisy/src/per/tim.h ****         {
  61:../../libDaisy/src/per/tim.h ****             UP = 0,
  62:../../libDaisy/src/per/tim.h ****             DOWN,
  63:../../libDaisy/src/per/tim.h ****         };
  64:../../libDaisy/src/per/tim.h **** 
  65:../../libDaisy/src/per/tim.h ****         Peripheral periph; /**< Hardware Peripheral */
  66:../../libDaisy/src/per/tim.h ****         CounterDir dir;    /**< Counter direction */
  67:../../libDaisy/src/per/tim.h **** 
  68:../../libDaisy/src/per/tim.h ****         /** @brief period in ticks at TIM frequency that counter will reset based on dir
  69:../../libDaisy/src/per/tim.h ****          *  @note TIM3 and TIM4 are both 16-bit timers. So the period maximum is 0xffff.
  70:../../libDaisy/src/per/tim.h ****         */
  71:../../libDaisy/src/per/tim.h ****         uint32_t period;
  72:../../libDaisy/src/per/tim.h ****         bool     enable_irq; /**< Enable interrupt for user based callback */
  73:../../libDaisy/src/per/tim.h **** 
  74:../../libDaisy/src/per/tim.h ****         /* @brief Constructor for default states */
  75:../../libDaisy/src/per/tim.h ****         Config()
 1653              		.loc 8 75 9
 1654              		.cfi_startproc
 1655              		@ args = 0, pretend = 0, frame = 8
 1656              		@ frame_needed = 1, uses_anonymous_args = 0
 1657              		@ link register save eliminated.
 1658 0000 80B4     		push	{r7}
 1659              		.cfi_def_cfa_offset 4
 1660              		.cfi_offset 7, -4
 1661 0002 83B0     		sub	sp, sp, #12
 1662              		.cfi_def_cfa_offset 16
 1663 0004 00AF     		add	r7, sp, #0
 1664              		.cfi_def_cfa_register 7
 1665 0006 7860     		str	r0, [r7, #4]
 1666              	.LBB16:
  76:../../libDaisy/src/per/tim.h ****         : periph(Peripheral::TIM_2),
  77:../../libDaisy/src/per/tim.h ****           dir(CounterDir::UP),
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 98


  78:../../libDaisy/src/per/tim.h ****           period(0xffffffff),
  79:../../libDaisy/src/per/tim.h ****           enable_irq(false)
 1667              		.loc 8 79 27
 1668 0008 7B68     		ldr	r3, [r7, #4]
 1669 000a 0022     		movs	r2, #0
 1670 000c 1A60     		str	r2, [r3]
 1671 000e 7B68     		ldr	r3, [r7, #4]
 1672 0010 0022     		movs	r2, #0
 1673 0012 5A60     		str	r2, [r3, #4]
 1674 0014 7B68     		ldr	r3, [r7, #4]
 1675 0016 4FF0FF32 		mov	r2, #-1
 1676 001a 9A60     		str	r2, [r3, #8]
 1677 001c 7B68     		ldr	r3, [r7, #4]
 1678 001e 0022     		movs	r2, #0
 1679 0020 1A73     		strb	r2, [r3, #12]
 1680              	.LBE16:
  80:../../libDaisy/src/per/tim.h ****         {
  81:../../libDaisy/src/per/tim.h ****         }
 1681              		.loc 8 81 9
 1682 0022 7B68     		ldr	r3, [r7, #4]
 1683 0024 1846     		mov	r0, r3
 1684 0026 0C37     		adds	r7, r7, #12
 1685              		.cfi_def_cfa_offset 4
 1686 0028 BD46     		mov	sp, r7
 1687              		.cfi_def_cfa_register 13
 1688              		@ sp needed
 1689 002a 5DF8047B 		ldr	r7, [sp], #4
 1690              		.cfi_restore 7
 1691              		.cfi_def_cfa_offset 0
 1692 002e 7047     		bx	lr
 1693              		.cfi_endproc
 1694              	.LFE2189:
 1696              		.weak	_ZN5daisy11TimerHandle6ConfigC1Ev
 1697              		.thumb_set _ZN5daisy11TimerHandle6ConfigC1Ev,_ZN5daisy11TimerHandle6ConfigC2Ev
 1698              		.section	.text._ZN5daisy11TimerHandleC2Ev,"axG",%progbits,_ZN5daisy11TimerHandleC5Ev,comdat
 1699              		.align	1
 1700              		.weak	_ZN5daisy11TimerHandleC2Ev
 1701              		.syntax unified
 1702              		.thumb
 1703              		.thumb_func
 1704              		.fpu fpv5-d16
 1706              	_ZN5daisy11TimerHandleC2Ev:
 1707              	.LFB2192:
  82:../../libDaisy/src/per/tim.h ****     };
  83:../../libDaisy/src/per/tim.h **** 
  84:../../libDaisy/src/per/tim.h ****     /** @brief Return values for TIM funcitons. */
  85:../../libDaisy/src/per/tim.h ****     enum class Result
  86:../../libDaisy/src/per/tim.h ****     {
  87:../../libDaisy/src/per/tim.h ****         OK,
  88:../../libDaisy/src/per/tim.h ****         ERR,
  89:../../libDaisy/src/per/tim.h ****     };
  90:../../libDaisy/src/per/tim.h **** 
  91:../../libDaisy/src/per/tim.h ****     /** @brief User Callback type that will fire at the end of each timer 
  92:../../libDaisy/src/per/tim.h ****      *   period. This requires that Config::enable_irq is true before Init
  93:../../libDaisy/src/per/tim.h ****      *  @param data pointer to arbitrary user-provided data
  94:../../libDaisy/src/per/tim.h ****     */
  95:../../libDaisy/src/per/tim.h ****     typedef void (*PeriodElapsedCallback)(void* data);
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 99


  96:../../libDaisy/src/per/tim.h **** 
  97:../../libDaisy/src/per/tim.h ****     TimerHandle() : pimpl_(nullptr) {}
 1708              		.loc 8 97 5
 1709              		.cfi_startproc
 1710              		@ args = 0, pretend = 0, frame = 8
 1711              		@ frame_needed = 1, uses_anonymous_args = 0
 1712              		@ link register save eliminated.
 1713 0000 80B4     		push	{r7}
 1714              		.cfi_def_cfa_offset 4
 1715              		.cfi_offset 7, -4
 1716 0002 83B0     		sub	sp, sp, #12
 1717              		.cfi_def_cfa_offset 16
 1718 0004 00AF     		add	r7, sp, #0
 1719              		.cfi_def_cfa_register 7
 1720 0006 7860     		str	r0, [r7, #4]
 1721              	.LBB17:
 1722              		.loc 8 97 35
 1723 0008 7B68     		ldr	r3, [r7, #4]
 1724 000a 0022     		movs	r2, #0
 1725 000c 1A60     		str	r2, [r3]
 1726              	.LBE17:
 1727              		.loc 8 97 38
 1728 000e 7B68     		ldr	r3, [r7, #4]
 1729 0010 1846     		mov	r0, r3
 1730 0012 0C37     		adds	r7, r7, #12
 1731              		.cfi_def_cfa_offset 4
 1732 0014 BD46     		mov	sp, r7
 1733              		.cfi_def_cfa_register 13
 1734              		@ sp needed
 1735 0016 5DF8047B 		ldr	r7, [sp], #4
 1736              		.cfi_restore 7
 1737              		.cfi_def_cfa_offset 0
 1738 001a 7047     		bx	lr
 1739              		.cfi_endproc
 1740              	.LFE2192:
 1742              		.weak	_ZN5daisy11TimerHandleC1Ev
 1743              		.thumb_set _ZN5daisy11TimerHandleC1Ev,_ZN5daisy11TimerHandleC2Ev
 1744              		.section	.text._ZN5daisy11TimerHandleD2Ev,"axG",%progbits,_ZN5daisy11TimerHandleD5Ev,comdat
 1745              		.align	1
 1746              		.weak	_ZN5daisy11TimerHandleD2Ev
 1747              		.syntax unified
 1748              		.thumb
 1749              		.thumb_func
 1750              		.fpu fpv5-d16
 1752              	_ZN5daisy11TimerHandleD2Ev:
 1753              	.LFB2195:
  98:../../libDaisy/src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
  99:../../libDaisy/src/per/tim.h ****     TimerHandle& operator=(const TimerHandle& other) = default;
 100:../../libDaisy/src/per/tim.h ****     ~TimerHandle() {}
 1754              		.loc 8 100 5
 1755              		.cfi_startproc
 1756              		@ args = 0, pretend = 0, frame = 8
 1757              		@ frame_needed = 1, uses_anonymous_args = 0
 1758              		@ link register save eliminated.
 1759 0000 80B4     		push	{r7}
 1760              		.cfi_def_cfa_offset 4
 1761              		.cfi_offset 7, -4
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 100


 1762 0002 83B0     		sub	sp, sp, #12
 1763              		.cfi_def_cfa_offset 16
 1764 0004 00AF     		add	r7, sp, #0
 1765              		.cfi_def_cfa_register 7
 1766 0006 7860     		str	r0, [r7, #4]
 1767              		.loc 8 100 21
 1768 0008 7B68     		ldr	r3, [r7, #4]
 1769 000a 1846     		mov	r0, r3
 1770 000c 0C37     		adds	r7, r7, #12
 1771              		.cfi_def_cfa_offset 4
 1772 000e BD46     		mov	sp, r7
 1773              		.cfi_def_cfa_register 13
 1774              		@ sp needed
 1775 0010 5DF8047B 		ldr	r7, [sp], #4
 1776              		.cfi_restore 7
 1777              		.cfi_def_cfa_offset 0
 1778 0014 7047     		bx	lr
 1779              		.cfi_endproc
 1780              	.LFE2195:
 1782              		.weak	_ZN5daisy11TimerHandleD1Ev
 1783              		.thumb_set _ZN5daisy11TimerHandleD1Ev,_ZN5daisy11TimerHandleD2Ev
 1784              		.section	.text._ZN5daisy6SystemC2Ev,"axG",%progbits,_ZN5daisy6SystemC5Ev,comdat
 1785              		.align	1
 1786              		.weak	_ZN5daisy6SystemC2Ev
 1787              		.syntax unified
 1788              		.thumb
 1789              		.thumb_func
 1790              		.fpu fpv5-d16
 1792              	_ZN5daisy6SystemC2Ev:
 1793              	.LFB2200:
 1794              		.file 9 "../../libDaisy/src/sys/system.h"
   1:../../libDaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy/src/sys/system.h **** 
   4:../../libDaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy/src/sys/system.h **** 
   6:../../libDaisy/src/sys/system.h **** #include <cstdint>
   7:../../libDaisy/src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy/src/sys/system.h **** 
   9:../../libDaisy/src/sys/system.h **** namespace daisy
  10:../../libDaisy/src/sys/system.h **** {
  11:../../libDaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libDaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy/src/sys/system.h ****  **
  15:../../libDaisy/src/sys/system.h ****  ** @author shensley
  16:../../libDaisy/src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy/src/sys/system.h ****  */
  18:../../libDaisy/src/sys/system.h **** class System
  19:../../libDaisy/src/sys/system.h **** {
  20:../../libDaisy/src/sys/system.h ****   public:
  21:../../libDaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy/src/sys/system.h ****     struct Config
  23:../../libDaisy/src/sys/system.h ****     {
  24:../../libDaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy/src/sys/system.h ****         {
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 101


  27:../../libDaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy/src/sys/system.h ****         };
  30:../../libDaisy/src/sys/system.h **** 
  31:../../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy/src/sys/system.h ****          ** Cache Enabled 
  34:../../libDaisy/src/sys/system.h ****          ** */
  35:../../libDaisy/src/sys/system.h ****         void Defaults()
  36:../../libDaisy/src/sys/system.h ****         {
  37:../../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy/src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy/src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy/src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy/src/sys/system.h ****         }
  42:../../libDaisy/src/sys/system.h **** 
  43:../../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy/src/sys/system.h ****          ** Cache Enabled 
  46:../../libDaisy/src/sys/system.h ****          ** */
  47:../../libDaisy/src/sys/system.h ****         void Boost()
  48:../../libDaisy/src/sys/system.h ****         {
  49:../../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy/src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy/src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy/src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy/src/sys/system.h ****         }
  54:../../libDaisy/src/sys/system.h **** 
  55:../../libDaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy/src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy/src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy/src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy/src/sys/system.h ****     };
  60:../../libDaisy/src/sys/system.h **** 
  61:../../libDaisy/src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libDaisy/src/sys/system.h ****      * 
  63:../../libDaisy/src/sys/system.h ****      */
  64:../../libDaisy/src/sys/system.h ****     enum MemoryRegion
  65:../../libDaisy/src/sys/system.h ****     {
  66:../../libDaisy/src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libDaisy/src/sys/system.h ****         ITCMRAM,
  68:../../libDaisy/src/sys/system.h ****         DTCMRAM,
  69:../../libDaisy/src/sys/system.h ****         SRAM_D1,
  70:../../libDaisy/src/sys/system.h ****         SRAM_D2,
  71:../../libDaisy/src/sys/system.h ****         SRAM_D3,
  72:../../libDaisy/src/sys/system.h ****         SDRAM,
  73:../../libDaisy/src/sys/system.h ****         QSPI,
  74:../../libDaisy/src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libDaisy/src/sys/system.h ****     };
  76:../../libDaisy/src/sys/system.h **** 
  77:../../libDaisy/src/sys/system.h ****     System() {}
 1795              		.loc 9 77 5
 1796              		.cfi_startproc
 1797              		@ args = 0, pretend = 0, frame = 8
 1798              		@ frame_needed = 1, uses_anonymous_args = 0
 1799              		@ link register save eliminated.
 1800 0000 80B4     		push	{r7}
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 102


 1801              		.cfi_def_cfa_offset 4
 1802              		.cfi_offset 7, -4
 1803 0002 83B0     		sub	sp, sp, #12
 1804              		.cfi_def_cfa_offset 16
 1805 0004 00AF     		add	r7, sp, #0
 1806              		.cfi_def_cfa_register 7
 1807 0006 7860     		str	r0, [r7, #4]
 1808              		.loc 9 77 15
 1809 0008 7B68     		ldr	r3, [r7, #4]
 1810 000a 1846     		mov	r0, r3
 1811 000c 0C37     		adds	r7, r7, #12
 1812              		.cfi_def_cfa_offset 4
 1813 000e BD46     		mov	sp, r7
 1814              		.cfi_def_cfa_register 13
 1815              		@ sp needed
 1816 0010 5DF8047B 		ldr	r7, [sp], #4
 1817              		.cfi_restore 7
 1818              		.cfi_def_cfa_offset 0
 1819 0014 7047     		bx	lr
 1820              		.cfi_endproc
 1821              	.LFE2200:
 1823              		.weak	_ZN5daisy6SystemC1Ev
 1824              		.thumb_set _ZN5daisy6SystemC1Ev,_ZN5daisy6SystemC2Ev
 1825              		.section	.text._ZN5daisy6SystemD2Ev,"axG",%progbits,_ZN5daisy6SystemD5Ev,comdat
 1826              		.align	1
 1827              		.weak	_ZN5daisy6SystemD2Ev
 1828              		.syntax unified
 1829              		.thumb
 1830              		.thumb_func
 1831              		.fpu fpv5-d16
 1833              	_ZN5daisy6SystemD2Ev:
 1834              	.LFB2203:
  78:../../libDaisy/src/sys/system.h ****     ~System() {}
 1835              		.loc 9 78 5
 1836              		.cfi_startproc
 1837              		@ args = 0, pretend = 0, frame = 8
 1838              		@ frame_needed = 1, uses_anonymous_args = 0
 1839              		@ link register save eliminated.
 1840 0000 80B4     		push	{r7}
 1841              		.cfi_def_cfa_offset 4
 1842              		.cfi_offset 7, -4
 1843 0002 83B0     		sub	sp, sp, #12
 1844              		.cfi_def_cfa_offset 16
 1845 0004 00AF     		add	r7, sp, #0
 1846              		.cfi_def_cfa_register 7
 1847 0006 7860     		str	r0, [r7, #4]
 1848              		.loc 9 78 16
 1849 0008 7B68     		ldr	r3, [r7, #4]
 1850 000a 1846     		mov	r0, r3
 1851 000c 0C37     		adds	r7, r7, #12
 1852              		.cfi_def_cfa_offset 4
 1853 000e BD46     		mov	sp, r7
 1854              		.cfi_def_cfa_register 13
 1855              		@ sp needed
 1856 0010 5DF8047B 		ldr	r7, [sp], #4
 1857              		.cfi_restore 7
 1858              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 103


 1859 0014 7047     		bx	lr
 1860              		.cfi_endproc
 1861              	.LFE2203:
 1863              		.weak	_ZN5daisy6SystemD1Ev
 1864              		.thumb_set _ZN5daisy6SystemD1Ev,_ZN5daisy6SystemD2Ev
 1865              		.section	.text._ZN5daisy10QSPIHandleC2Ev,"axG",%progbits,_ZN5daisy10QSPIHandleC5Ev,comdat
 1866              		.align	1
 1867              		.weak	_ZN5daisy10QSPIHandleC2Ev
 1868              		.syntax unified
 1869              		.thumb
 1870              		.thumb_func
 1871              		.fpu fpv5-d16
 1873              	_ZN5daisy10QSPIHandleC2Ev:
 1874              	.LFB2207:
 1875              		.file 10 "../../libDaisy/src/per/qspi.h"
   1:../../libDaisy/src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy/src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy/src/per/qspi.h **** 
   4:../../libDaisy/src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy/src/per/qspi.h **** 
   6:../../libDaisy/src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy/src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy/src/per/qspi.h **** 
   9:../../libDaisy/src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy/src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy/src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy/src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy/src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy/src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy/src/per/qspi.h **** 
  19:../../libDaisy/src/per/qspi.h **** namespace daisy
  20:../../libDaisy/src/per/qspi.h **** {
  21:../../libDaisy/src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy/src/per/qspi.h **** @{
  23:../../libDaisy/src/per/qspi.h **** */
  24:../../libDaisy/src/per/qspi.h **** 
  25:../../libDaisy/src/per/qspi.h **** /** 
  26:../../libDaisy/src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy/src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy/src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy/src/per/qspi.h **** */
  30:../../libDaisy/src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy/src/per/qspi.h **** {
  32:../../libDaisy/src/per/qspi.h ****   public:
  33:../../libDaisy/src/per/qspi.h ****     enum Result
  34:../../libDaisy/src/per/qspi.h ****     {
  35:../../libDaisy/src/per/qspi.h ****         OK = 0,
  36:../../libDaisy/src/per/qspi.h ****         ERR
  37:../../libDaisy/src/per/qspi.h ****     };
  38:../../libDaisy/src/per/qspi.h **** 
  39:../../libDaisy/src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy/src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy/src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy/src/per/qspi.h ****          * 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 104


  43:../../libDaisy/src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy/src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy/src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy/src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy/src/per/qspi.h ****          */
  48:../../libDaisy/src/per/qspi.h ****     enum Status
  49:../../libDaisy/src/per/qspi.h ****     {
  50:../../libDaisy/src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy/src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy/src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy/src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy/src/per/qspi.h ****     };
  55:../../libDaisy/src/per/qspi.h **** 
  56:../../libDaisy/src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy/src/per/qspi.h ****     struct Config
  58:../../libDaisy/src/per/qspi.h ****     {
  59:../../libDaisy/src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy/src/per/qspi.h ****         enum Device
  61:../../libDaisy/src/per/qspi.h ****         {
  62:../../libDaisy/src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy/src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy/src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy/src/per/qspi.h ****         };
  66:../../libDaisy/src/per/qspi.h **** 
  67:../../libDaisy/src/per/qspi.h ****         /** 
  68:../../libDaisy/src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy/src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy/src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy/src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy/src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy/src/per/qspi.h ****         */
  74:../../libDaisy/src/per/qspi.h ****         enum Mode
  75:../../libDaisy/src/per/qspi.h ****         {
  76:../../libDaisy/src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy/src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy/src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy/src/per/qspi.h ****         };
  80:../../libDaisy/src/per/qspi.h **** 
  81:../../libDaisy/src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy/src/per/qspi.h ****         struct
  83:../../libDaisy/src/per/qspi.h ****         {
  84:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy/src/per/qspi.h ****         } pin_config;
  91:../../libDaisy/src/per/qspi.h **** 
  92:../../libDaisy/src/per/qspi.h ****         Device device;
  93:../../libDaisy/src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy/src/per/qspi.h ****     };
  95:../../libDaisy/src/per/qspi.h **** 
  96:../../libDaisy/src/per/qspi.h ****     /** 
  97:../../libDaisy/src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy/src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 105


 100:../../libDaisy/src/per/qspi.h ****         */
 101:../../libDaisy/src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy/src/per/qspi.h **** 
 103:../../libDaisy/src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy/src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy/src/per/qspi.h **** 
 106:../../libDaisy/src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy/src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy/src/per/qspi.h ****     /** 
 109:../../libDaisy/src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy/src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy/src/per/qspi.h ****         */
 113:../../libDaisy/src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy/src/per/qspi.h **** 
 115:../../libDaisy/src/per/qspi.h ****     /** 
 116:../../libDaisy/src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy/src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy/src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy/src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy/src/per/qspi.h ****         */
 123:../../libDaisy/src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy/src/per/qspi.h **** 
 125:../../libDaisy/src/per/qspi.h ****     /** 
 126:../../libDaisy/src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy/src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy/src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy/src/per/qspi.h ****         */
 132:../../libDaisy/src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy/src/per/qspi.h **** 
 134:../../libDaisy/src/per/qspi.h ****     /** 
 135:../../libDaisy/src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy/src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy/src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy/src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy/src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy/src/per/qspi.h ****         */
 142:../../libDaisy/src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy/src/per/qspi.h **** 
 144:../../libDaisy/src/per/qspi.h ****     /**  
 145:../../libDaisy/src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy/src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy/src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy/src/per/qspi.h ****         */
 150:../../libDaisy/src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy/src/per/qspi.h **** 
 152:../../libDaisy/src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy/src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy/src/per/qspi.h ****      */
 155:../../libDaisy/src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy/src/per/qspi.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 106


 157:../../libDaisy/src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy/src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy/src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy/src/per/qspi.h ****      * 
 161:../../libDaisy/src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy/src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy/src/per/qspi.h ****     */
 164:../../libDaisy/src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy/src/per/qspi.h **** 
 166:../../libDaisy/src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 1876              		.loc 10 166 5
 1877              		.cfi_startproc
 1878              		@ args = 0, pretend = 0, frame = 8
 1879              		@ frame_needed = 1, uses_anonymous_args = 0
 1880              		@ link register save eliminated.
 1881 0000 80B4     		push	{r7}
 1882              		.cfi_def_cfa_offset 4
 1883              		.cfi_offset 7, -4
 1884 0002 83B0     		sub	sp, sp, #12
 1885              		.cfi_def_cfa_offset 16
 1886 0004 00AF     		add	r7, sp, #0
 1887              		.cfi_def_cfa_register 7
 1888 0006 7860     		str	r0, [r7, #4]
 1889              	.LBB18:
 1890              		.loc 10 166 34
 1891 0008 7B68     		ldr	r3, [r7, #4]
 1892 000a 0022     		movs	r2, #0
 1893 000c 1A60     		str	r2, [r3]
 1894              	.LBE18:
 1895              		.loc 10 166 37
 1896 000e 7B68     		ldr	r3, [r7, #4]
 1897 0010 1846     		mov	r0, r3
 1898 0012 0C37     		adds	r7, r7, #12
 1899              		.cfi_def_cfa_offset 4
 1900 0014 BD46     		mov	sp, r7
 1901              		.cfi_def_cfa_register 13
 1902              		@ sp needed
 1903 0016 5DF8047B 		ldr	r7, [sp], #4
 1904              		.cfi_restore 7
 1905              		.cfi_def_cfa_offset 0
 1906 001a 7047     		bx	lr
 1907              		.cfi_endproc
 1908              	.LFE2207:
 1910              		.weak	_ZN5daisy10QSPIHandleC1Ev
 1911              		.thumb_set _ZN5daisy10QSPIHandleC1Ev,_ZN5daisy10QSPIHandleC2Ev
 1912              		.section	.text._ZN5daisy9DacHandleC2Ev,"axG",%progbits,_ZN5daisy9DacHandleC5Ev,comdat
 1913              		.align	1
 1914              		.weak	_ZN5daisy9DacHandleC2Ev
 1915              		.syntax unified
 1916              		.thumb
 1917              		.thumb_func
 1918              		.fpu fpv5-d16
 1920              	_ZN5daisy9DacHandleC2Ev:
 1921              	.LFB2210:
 1922              		.file 11 "../../libDaisy/src/per/dac.h"
   1:../../libDaisy/src/per/dac.h **** #pragma once
   2:../../libDaisy/src/per/dac.h **** #ifndef DSY_DAC_H
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 107


   3:../../libDaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy/src/per/dac.h **** 
   5:../../libDaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy/src/per/dac.h **** 
   7:../../libDaisy/src/per/dac.h **** namespace daisy
   8:../../libDaisy/src/per/dac.h **** {
   9:../../libDaisy/src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy/src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy/src/per/dac.h ****  ** 
  12:../../libDaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy/src/per/dac.h ****  **
  15:../../libDaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy/src/per/dac.h ****  **
  17:../../libDaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy/src/per/dac.h ****  ***/
  21:../../libDaisy/src/per/dac.h **** class DacHandle
  22:../../libDaisy/src/per/dac.h **** {
  23:../../libDaisy/src/per/dac.h ****   public:
  24:../../libDaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy/src/per/dac.h ****     enum class Result
  26:../../libDaisy/src/per/dac.h ****     {
  27:../../libDaisy/src/per/dac.h ****         OK,
  28:../../libDaisy/src/per/dac.h ****         ERR,
  29:../../libDaisy/src/per/dac.h ****     };
  30:../../libDaisy/src/per/dac.h **** 
  31:../../libDaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy/src/per/dac.h ****     enum class Channel
  33:../../libDaisy/src/per/dac.h ****     {
  34:../../libDaisy/src/per/dac.h ****         ONE,
  35:../../libDaisy/src/per/dac.h ****         TWO,
  36:../../libDaisy/src/per/dac.h ****         BOTH,
  37:../../libDaisy/src/per/dac.h ****     };
  38:../../libDaisy/src/per/dac.h **** 
  39:../../libDaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy/src/per/dac.h ****      **
  41:../../libDaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy/src/per/dac.h ****      **
  43:../../libDaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy/src/per/dac.h ****      ***/
  46:../../libDaisy/src/per/dac.h ****     enum class Mode
  47:../../libDaisy/src/per/dac.h ****     {
  48:../../libDaisy/src/per/dac.h ****         POLLING,
  49:../../libDaisy/src/per/dac.h ****         DMA,
  50:../../libDaisy/src/per/dac.h ****     };
  51:../../libDaisy/src/per/dac.h **** 
  52:../../libDaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy/src/per/dac.h ****      ***/
  56:../../libDaisy/src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy/src/per/dac.h ****     {
  58:../../libDaisy/src/per/dac.h ****         BITS_8,
  59:../../libDaisy/src/per/dac.h ****         BITS_12
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 108


  60:../../libDaisy/src/per/dac.h ****     };
  61:../../libDaisy/src/per/dac.h **** 
  62:../../libDaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy/src/per/dac.h ****     enum class BufferState
  64:../../libDaisy/src/per/dac.h ****     {
  65:../../libDaisy/src/per/dac.h ****         ENABLED,
  66:../../libDaisy/src/per/dac.h ****         DISABLED,
  67:../../libDaisy/src/per/dac.h ****     };
  68:../../libDaisy/src/per/dac.h **** 
  69:../../libDaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy/src/per/dac.h ****     struct Config
  71:../../libDaisy/src/per/dac.h ****     {
  72:../../libDaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy/src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy/src/per/dac.h **** 
  78:../../libDaisy/src/per/dac.h ****         Channel     chn;
  79:../../libDaisy/src/per/dac.h ****         Mode        mode;
  80:../../libDaisy/src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy/src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy/src/per/dac.h ****     };
  83:../../libDaisy/src/per/dac.h **** 
  84:../../libDaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 1923              		.loc 11 84 5
 1924              		.cfi_startproc
 1925              		@ args = 0, pretend = 0, frame = 8
 1926              		@ frame_needed = 1, uses_anonymous_args = 0
 1927              		@ link register save eliminated.
 1928 0000 80B4     		push	{r7}
 1929              		.cfi_def_cfa_offset 4
 1930              		.cfi_offset 7, -4
 1931 0002 83B0     		sub	sp, sp, #12
 1932              		.cfi_def_cfa_offset 16
 1933 0004 00AF     		add	r7, sp, #0
 1934              		.cfi_def_cfa_register 7
 1935 0006 7860     		str	r0, [r7, #4]
 1936              	.LBB19:
 1937              		.loc 11 84 33
 1938 0008 7B68     		ldr	r3, [r7, #4]
 1939 000a 0022     		movs	r2, #0
 1940 000c 1A60     		str	r2, [r3]
 1941              	.LBE19:
 1942              		.loc 11 84 36
 1943 000e 7B68     		ldr	r3, [r7, #4]
 1944 0010 1846     		mov	r0, r3
 1945 0012 0C37     		adds	r7, r7, #12
 1946              		.cfi_def_cfa_offset 4
 1947 0014 BD46     		mov	sp, r7
 1948              		.cfi_def_cfa_register 13
 1949              		@ sp needed
 1950 0016 5DF8047B 		ldr	r7, [sp], #4
 1951              		.cfi_restore 7
 1952              		.cfi_def_cfa_offset 0
 1953 001a 7047     		bx	lr
 1954              		.cfi_endproc
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 109


 1955              	.LFE2210:
 1957              		.weak	_ZN5daisy9DacHandleC1Ev
 1958              		.thumb_set _ZN5daisy9DacHandleC1Ev,_ZN5daisy9DacHandleC2Ev
 1959              		.section	.text._ZN5daisy4GPIO6ConfigC2Ev,"axG",%progbits,_ZN5daisy4GPIO6ConfigC5Ev,comdat
 1960              		.align	1
 1961              		.weak	_ZN5daisy4GPIO6ConfigC2Ev
 1962              		.syntax unified
 1963              		.thumb
 1964              		.thumb_func
 1965              		.fpu fpv5-d16
 1967              	_ZN5daisy4GPIO6ConfigC2Ev:
 1968              	.LFB2213:
 1969              		.file 12 "../../libDaisy/src/per/gpio.h"
   1:../../libDaisy/src/per/gpio.h **** #pragma once
   2:../../libDaisy/src/per/gpio.h **** #ifndef DSY_GPIO_H
   3:../../libDaisy/src/per/gpio.h **** #define DSY_GPIO_H
   4:../../libDaisy/src/per/gpio.h **** #include "daisy_core.h"
   5:../../libDaisy/src/per/gpio.h **** 
   6:../../libDaisy/src/per/gpio.h **** #ifdef __cplusplus
   7:../../libDaisy/src/per/gpio.h **** 
   8:../../libDaisy/src/per/gpio.h **** namespace daisy
   9:../../libDaisy/src/per/gpio.h **** {
  10:../../libDaisy/src/per/gpio.h **** /** @brief General Purpose I/O control 
  11:../../libDaisy/src/per/gpio.h ****  *  @details peripheral control over a single GPIO
  12:../../libDaisy/src/per/gpio.h ****  *  @ingroup peripheral
  13:../../libDaisy/src/per/gpio.h ****  *   
  14:../../libDaisy/src/per/gpio.h ****  *  Button Input (with internal Pullup resistor)
  15:../../libDaisy/src/per/gpio.h ****  *  @include GPIO_Input.cpp 
  16:../../libDaisy/src/per/gpio.h ****  * 
  17:../../libDaisy/src/per/gpio.h ****  *  Output Example (perfect for blinking an LED)
  18:../../libDaisy/src/per/gpio.h ****  *  @include GPIO_Output.cpp
  19:../../libDaisy/src/per/gpio.h ****  * 
  20:../../libDaisy/src/per/gpio.h **** */
  21:../../libDaisy/src/per/gpio.h **** class GPIO
  22:../../libDaisy/src/per/gpio.h **** {
  23:../../libDaisy/src/per/gpio.h ****   public:
  24:../../libDaisy/src/per/gpio.h ****     /** @brief Mode of operation for the specified GPIO */
  25:../../libDaisy/src/per/gpio.h ****     enum class Mode
  26:../../libDaisy/src/per/gpio.h ****     {
  27:../../libDaisy/src/per/gpio.h ****         INPUT,     /**< Input for reading state of pin */
  28:../../libDaisy/src/per/gpio.h ****         OUTPUT,    /**< Output w/ push-pull configuration */
  29:../../libDaisy/src/per/gpio.h ****         OUTPUT_OD, /**< Output w/ open-drain configuration */
  30:../../libDaisy/src/per/gpio.h ****         ANALOG,    /**< Analog for connection to ADC or DAC peripheral */
  31:../../libDaisy/src/per/gpio.h ****     };
  32:../../libDaisy/src/per/gpio.h **** 
  33:../../libDaisy/src/per/gpio.h ****     /** @brief Configures whether an internal Pull up or Pull down resistor is used. 
  34:../../libDaisy/src/per/gpio.h ****      *  
  35:../../libDaisy/src/per/gpio.h ****      * Internal Pull up/down resistors are typically 40k ohms, and will be between
  36:../../libDaisy/src/per/gpio.h ****      * 30k and 50k
  37:../../libDaisy/src/per/gpio.h ****      * 
  38:../../libDaisy/src/per/gpio.h ****      * When the Pin is configured in Analog mode, the pull up/down resistors are
  39:../../libDaisy/src/per/gpio.h ****      * disabled by hardware. 
  40:../../libDaisy/src/per/gpio.h ****      */
  41:../../libDaisy/src/per/gpio.h ****     enum class Pull
  42:../../libDaisy/src/per/gpio.h ****     {
  43:../../libDaisy/src/per/gpio.h ****         NOPULL,   /**< No pull up resistor */
  44:../../libDaisy/src/per/gpio.h ****         PULLUP,   /**< Internal pull up enabled */
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 110


  45:../../libDaisy/src/per/gpio.h ****         PULLDOWN, /**< Internal pull down enabled*/
  46:../../libDaisy/src/per/gpio.h ****     };
  47:../../libDaisy/src/per/gpio.h **** 
  48:../../libDaisy/src/per/gpio.h ****     /** @brief Output speed controls the drive strength, and slew rate of the pin */
  49:../../libDaisy/src/per/gpio.h ****     enum class Speed
  50:../../libDaisy/src/per/gpio.h ****     {
  51:../../libDaisy/src/per/gpio.h ****         LOW,
  52:../../libDaisy/src/per/gpio.h ****         MEDIUM,
  53:../../libDaisy/src/per/gpio.h ****         HIGH,
  54:../../libDaisy/src/per/gpio.h ****         VERY_HIGH,
  55:../../libDaisy/src/per/gpio.h ****     };
  56:../../libDaisy/src/per/gpio.h **** 
  57:../../libDaisy/src/per/gpio.h ****     /** @brief Configuration for a given GPIO */
  58:../../libDaisy/src/per/gpio.h ****     struct Config
  59:../../libDaisy/src/per/gpio.h ****     {
  60:../../libDaisy/src/per/gpio.h ****         Pin   pin;
  61:../../libDaisy/src/per/gpio.h ****         Mode  mode;
  62:../../libDaisy/src/per/gpio.h ****         Pull  pull;
  63:../../libDaisy/src/per/gpio.h ****         Speed speed;
  64:../../libDaisy/src/per/gpio.h **** 
  65:../../libDaisy/src/per/gpio.h ****         /** Constructor with no arguments will prepare an invalid GPIO set as
  66:../../libDaisy/src/per/gpio.h ****          *  an input, with no pullup. 
  67:../../libDaisy/src/per/gpio.h ****          */
  68:../../libDaisy/src/per/gpio.h ****         Config()
 1970              		.loc 12 68 9
 1971              		.cfi_startproc
 1972              		@ args = 0, pretend = 0, frame = 8
 1973              		@ frame_needed = 1, uses_anonymous_args = 0
 1974 0000 80B5     		push	{r7, lr}
 1975              		.cfi_def_cfa_offset 8
 1976              		.cfi_offset 7, -8
 1977              		.cfi_offset 14, -4
 1978 0002 82B0     		sub	sp, sp, #8
 1979              		.cfi_def_cfa_offset 16
 1980 0004 00AF     		add	r7, sp, #0
 1981              		.cfi_def_cfa_register 7
 1982 0006 7860     		str	r0, [r7, #4]
 1983              	.LBB20:
  69:../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1984              		.loc 12 69 73
 1985 0008 7B68     		ldr	r3, [r7, #4]
 1986 000a 1846     		mov	r0, r3
 1987 000c FFF7FEFF 		bl	_ZN5daisy3PinC1Ev
 1988 0010 7B68     		ldr	r3, [r7, #4]
 1989 0012 0022     		movs	r2, #0
 1990 0014 5A60     		str	r2, [r3, #4]
 1991 0016 7B68     		ldr	r3, [r7, #4]
 1992 0018 0022     		movs	r2, #0
 1993 001a 9A60     		str	r2, [r3, #8]
 1994 001c 7B68     		ldr	r3, [r7, #4]
 1995 001e 0022     		movs	r2, #0
 1996 0020 DA60     		str	r2, [r3, #12]
 1997              	.LBE20:
  70:../../libDaisy/src/per/gpio.h ****         {
  71:../../libDaisy/src/per/gpio.h ****         }
 1998              		.loc 12 71 9
 1999 0022 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 111


 2000 0024 1846     		mov	r0, r3
 2001 0026 0837     		adds	r7, r7, #8
 2002              		.cfi_def_cfa_offset 8
 2003 0028 BD46     		mov	sp, r7
 2004              		.cfi_def_cfa_register 13
 2005              		@ sp needed
 2006 002a 80BD     		pop	{r7, pc}
 2007              		.cfi_endproc
 2008              	.LFE2213:
 2010              		.weak	_ZN5daisy4GPIO6ConfigC1Ev
 2011              		.thumb_set _ZN5daisy4GPIO6ConfigC1Ev,_ZN5daisy4GPIO6ConfigC2Ev
 2012              		.section	.text._ZN5daisy4GPIOC2Ev,"axG",%progbits,_ZN5daisy4GPIOC5Ev,comdat
 2013              		.align	1
 2014              		.weak	_ZN5daisy4GPIOC2Ev
 2015              		.syntax unified
 2016              		.thumb
 2017              		.thumb_func
 2018              		.fpu fpv5-d16
 2020              	_ZN5daisy4GPIOC2Ev:
 2021              	.LFB2216:
  72:../../libDaisy/src/per/gpio.h ****     };
  73:../../libDaisy/src/per/gpio.h **** 
  74:../../libDaisy/src/per/gpio.h ****     GPIO() {}
 2022              		.loc 12 74 5
 2023              		.cfi_startproc
 2024              		@ args = 0, pretend = 0, frame = 8
 2025              		@ frame_needed = 1, uses_anonymous_args = 0
 2026 0000 80B5     		push	{r7, lr}
 2027              		.cfi_def_cfa_offset 8
 2028              		.cfi_offset 7, -8
 2029              		.cfi_offset 14, -4
 2030 0002 82B0     		sub	sp, sp, #8
 2031              		.cfi_def_cfa_offset 16
 2032 0004 00AF     		add	r7, sp, #0
 2033              		.cfi_def_cfa_register 7
 2034 0006 7860     		str	r0, [r7, #4]
 2035              	.LBB21:
 2036              		.loc 12 74 12
 2037 0008 7B68     		ldr	r3, [r7, #4]
 2038 000a 1846     		mov	r0, r3
 2039 000c FFF7FEFF 		bl	_ZN5daisy4GPIO6ConfigC1Ev
 2040              	.LBE21:
 2041              		.loc 12 74 13
 2042 0010 7B68     		ldr	r3, [r7, #4]
 2043 0012 1846     		mov	r0, r3
 2044 0014 0837     		adds	r7, r7, #8
 2045              		.cfi_def_cfa_offset 8
 2046 0016 BD46     		mov	sp, r7
 2047              		.cfi_def_cfa_register 13
 2048              		@ sp needed
 2049 0018 80BD     		pop	{r7, pc}
 2050              		.cfi_endproc
 2051              	.LFE2216:
 2053              		.weak	_ZN5daisy4GPIOC1Ev
 2054              		.thumb_set _ZN5daisy4GPIOC1Ev,_ZN5daisy4GPIOC2Ev
 2055              		.section	.text._ZN5daisy11AudioHandleC2Ev,"axG",%progbits,_ZN5daisy11AudioHandleC5Ev,comdat
 2056              		.align	1
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 112


 2057              		.weak	_ZN5daisy11AudioHandleC2Ev
 2058              		.syntax unified
 2059              		.thumb
 2060              		.thumb_func
 2061              		.fpu fpv5-d16
 2063              	_ZN5daisy11AudioHandleC2Ev:
 2064              	.LFB2281:
 2065              		.file 13 "../../libDaisy/src/hid/audio.h"
   1:../../libDaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy/src/hid/audio.h **** 
   4:../../libDaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy/src/hid/audio.h **** 
   6:../../libDaisy/src/hid/audio.h **** namespace daisy
   7:../../libDaisy/src/hid/audio.h **** {
   8:../../libDaisy/src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy/src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy/src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy/src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy/src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy/src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy/src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy/src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy/src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy/src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy/src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy/src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy/src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy/src/hid/audio.h ****  */
  22:../../libDaisy/src/hid/audio.h **** class AudioHandle
  23:../../libDaisy/src/hid/audio.h **** {
  24:../../libDaisy/src/hid/audio.h ****   public:
  25:../../libDaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy/src/hid/audio.h ****     struct Config
  28:../../libDaisy/src/hid/audio.h ****     {
  29:../../libDaisy/src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy/src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy/src/hid/audio.h **** 
  32:../../libDaisy/src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy/src/hid/audio.h **** 
  35:../../libDaisy/src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy/src/hid/audio.h ****         float postgain;
  37:../../libDaisy/src/hid/audio.h **** 
  38:../../libDaisy/src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy/src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy/src/hid/audio.h ****          */
  41:../../libDaisy/src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy/src/hid/audio.h **** 
  43:../../libDaisy/src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy/src/hid/audio.h ****         Config()
  45:../../libDaisy/src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy/src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy/src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy/src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy/src/hid/audio.h ****         {
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 113


  50:../../libDaisy/src/hid/audio.h ****         }
  51:../../libDaisy/src/hid/audio.h ****     };
  52:../../libDaisy/src/hid/audio.h **** 
  53:../../libDaisy/src/hid/audio.h ****     enum class Result
  54:../../libDaisy/src/hid/audio.h ****     {
  55:../../libDaisy/src/hid/audio.h ****         OK,
  56:../../libDaisy/src/hid/audio.h ****         ERR,
  57:../../libDaisy/src/hid/audio.h ****     };
  58:../../libDaisy/src/hid/audio.h **** 
  59:../../libDaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy/src/hid/audio.h ****      */
  63:../../libDaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy/src/hid/audio.h **** 
  65:../../libDaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy/src/hid/audio.h ****      */
  68:../../libDaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy/src/hid/audio.h **** 
  70:../../libDaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy/src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy/src/hid/audio.h ****      */
  73:../../libDaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy/src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy/src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy/src/hid/audio.h **** 
  77:../../libDaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy/src/hid/audio.h ****     */
  81:../../libDaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy/src/hid/audio.h **** 
  83:../../libDaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy/src/hid/audio.h ****     */
  86:../../libDaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy/src/hid/audio.h **** 
  88:../../libDaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy/src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy/src/hid/audio.h ****      */
  91:../../libDaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy/src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy/src/hid/audio.h **** 
  95:../../libDaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
 2066              		.loc 13 95 5
 2067              		.cfi_startproc
 2068              		@ args = 0, pretend = 0, frame = 8
 2069              		@ frame_needed = 1, uses_anonymous_args = 0
 2070              		@ link register save eliminated.
 2071 0000 80B4     		push	{r7}
 2072              		.cfi_def_cfa_offset 4
 2073              		.cfi_offset 7, -4
 2074 0002 83B0     		sub	sp, sp, #12
 2075              		.cfi_def_cfa_offset 16
 2076 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 114


 2077              		.cfi_def_cfa_register 7
 2078 0006 7860     		str	r0, [r7, #4]
 2079              	.LBB22:
 2080              		.loc 13 95 35
 2081 0008 7B68     		ldr	r3, [r7, #4]
 2082 000a 0022     		movs	r2, #0
 2083 000c 1A60     		str	r2, [r3]
 2084              	.LBE22:
 2085              		.loc 13 95 38
 2086 000e 7B68     		ldr	r3, [r7, #4]
 2087 0010 1846     		mov	r0, r3
 2088 0012 0C37     		adds	r7, r7, #12
 2089              		.cfi_def_cfa_offset 4
 2090 0014 BD46     		mov	sp, r7
 2091              		.cfi_def_cfa_register 13
 2092              		@ sp needed
 2093 0016 5DF8047B 		ldr	r7, [sp], #4
 2094              		.cfi_restore 7
 2095              		.cfi_def_cfa_offset 0
 2096 001a 7047     		bx	lr
 2097              		.cfi_endproc
 2098              	.LFE2281:
 2100              		.weak	_ZN5daisy11AudioHandleC1Ev
 2101              		.thumb_set _ZN5daisy11AudioHandleC1Ev,_ZN5daisy11AudioHandleC2Ev
 2102              		.section	.text._ZN5daisy11AudioHandleD2Ev,"axG",%progbits,_ZN5daisy11AudioHandleD5Ev,comdat
 2103              		.align	1
 2104              		.weak	_ZN5daisy11AudioHandleD2Ev
 2105              		.syntax unified
 2106              		.thumb
 2107              		.thumb_func
 2108              		.fpu fpv5-d16
 2110              	_ZN5daisy11AudioHandleD2Ev:
 2111              	.LFB2284:
  96:../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 2112              		.loc 13 96 5
 2113              		.cfi_startproc
 2114              		@ args = 0, pretend = 0, frame = 8
 2115              		@ frame_needed = 1, uses_anonymous_args = 0
 2116              		@ link register save eliminated.
 2117 0000 80B4     		push	{r7}
 2118              		.cfi_def_cfa_offset 4
 2119              		.cfi_offset 7, -4
 2120 0002 83B0     		sub	sp, sp, #12
 2121              		.cfi_def_cfa_offset 16
 2122 0004 00AF     		add	r7, sp, #0
 2123              		.cfi_def_cfa_register 7
 2124 0006 7860     		str	r0, [r7, #4]
 2125              		.loc 13 96 21
 2126 0008 7B68     		ldr	r3, [r7, #4]
 2127 000a 1846     		mov	r0, r3
 2128 000c 0C37     		adds	r7, r7, #12
 2129              		.cfi_def_cfa_offset 4
 2130 000e BD46     		mov	sp, r7
 2131              		.cfi_def_cfa_register 13
 2132              		@ sp needed
 2133 0010 5DF8047B 		ldr	r7, [sp], #4
 2134              		.cfi_restore 7
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 115


 2135              		.cfi_def_cfa_offset 0
 2136 0014 7047     		bx	lr
 2137              		.cfi_endproc
 2138              	.LFE2284:
 2140              		.weak	_ZN5daisy11AudioHandleD1Ev
 2141              		.thumb_set _ZN5daisy11AudioHandleD1Ev,_ZN5daisy11AudioHandleD2Ev
 2142              		.section	.text._ZN5daisy9AdcHandleC2Ev,"axG",%progbits,_ZN5daisy9AdcHandleC5Ev,comdat
 2143              		.align	1
 2144              		.weak	_ZN5daisy9AdcHandleC2Ev
 2145              		.syntax unified
 2146              		.thumb
 2147              		.thumb_func
 2148              		.fpu fpv5-d16
 2150              	_ZN5daisy9AdcHandleC2Ev:
 2151              	.LFB2287:
 2152              		.file 14 "../../libDaisy/src/per/adc.h"
   1:../../libDaisy/src/per/adc.h **** #pragma once
   2:../../libDaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy/src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy/src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy/src/per/adc.h **** 
   9:../../libDaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy/src/per/adc.h **** 
  11:../../libDaisy/src/per/adc.h **** namespace daisy
  12:../../libDaisy/src/per/adc.h **** {
  13:../../libDaisy/src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy/src/per/adc.h ****     @{
  15:../../libDaisy/src/per/adc.h **** */
  16:../../libDaisy/src/per/adc.h **** 
  17:../../libDaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy/src/per/adc.h **** */
  21:../../libDaisy/src/per/adc.h **** 
  22:../../libDaisy/src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy/src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy/src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy/src/per/adc.h ****  *           one channel.
  26:../../libDaisy/src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy/src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy/src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy/src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy/src/per/adc.h **** */
  31:../../libDaisy/src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy/src/per/adc.h **** {
  33:../../libDaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy/src/per/adc.h ****     enum MuxPin
  35:../../libDaisy/src/per/adc.h ****     {
  36:../../libDaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy/src/per/adc.h ****     };
  41:../../libDaisy/src/per/adc.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 116


  42:../../libDaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  43:../../libDaisy/src/per/adc.h ****     \param pin Pin to init.
  44:../../libDaisy/src/per/adc.h ****      */
  45:../../libDaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../../libDaisy/src/per/adc.h **** 
  47:../../libDaisy/src/per/adc.h ****     /** 
  48:../../libDaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../../libDaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../../libDaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../../libDaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../../libDaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../../libDaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  54:../../libDaisy/src/per/adc.h ****     \param mux_0 First mux pin
  55:../../libDaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  56:../../libDaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  57:../../libDaisy/src/per/adc.h ****     \param adc_pin &
  58:../../libDaisy/src/per/adc.h ****     */
  59:../../libDaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../../libDaisy/src/per/adc.h ****                  size_t       mux_channels,
  61:../../libDaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../../libDaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../../libDaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../../libDaisy/src/per/adc.h **** 
  65:../../libDaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../../libDaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../../libDaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../../libDaisy/src/per/adc.h **** };
  69:../../libDaisy/src/per/adc.h **** 
  70:../../libDaisy/src/per/adc.h **** /**
  71:../../libDaisy/src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../../libDaisy/src/per/adc.h **** */
  73:../../libDaisy/src/per/adc.h **** class AdcHandle
  74:../../libDaisy/src/per/adc.h **** {
  75:../../libDaisy/src/per/adc.h ****   public:
  76:../../libDaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  77:../../libDaisy/src/per/adc.h ****     enum OverSampling
  78:../../libDaisy/src/per/adc.h ****     {
  79:../../libDaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  80:../../libDaisy/src/per/adc.h ****         OVS_4,    /**< & */
  81:../../libDaisy/src/per/adc.h ****         OVS_8,    /**< & */
  82:../../libDaisy/src/per/adc.h ****         OVS_16,   /**< & */
  83:../../libDaisy/src/per/adc.h ****         OVS_32,   /**< & */
  84:../../libDaisy/src/per/adc.h ****         OVS_64,   /**< & */
  85:../../libDaisy/src/per/adc.h ****         OVS_128,  /**< & */
  86:../../libDaisy/src/per/adc.h ****         OVS_256,  /**< & */
  87:../../libDaisy/src/per/adc.h ****         OVS_512,  /**< & */
  88:../../libDaisy/src/per/adc.h ****         OVS_1024, /**< & */
  89:../../libDaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  90:../../libDaisy/src/per/adc.h ****     };
  91:../../libDaisy/src/per/adc.h **** 
  92:../../libDaisy/src/per/adc.h ****     AdcHandle() {}
 2153              		.loc 14 92 5
 2154              		.cfi_startproc
 2155              		@ args = 0, pretend = 0, frame = 8
 2156              		@ frame_needed = 1, uses_anonymous_args = 0
 2157              		@ link register save eliminated.
 2158 0000 80B4     		push	{r7}
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 117


 2159              		.cfi_def_cfa_offset 4
 2160              		.cfi_offset 7, -4
 2161 0002 83B0     		sub	sp, sp, #12
 2162              		.cfi_def_cfa_offset 16
 2163 0004 00AF     		add	r7, sp, #0
 2164              		.cfi_def_cfa_register 7
 2165 0006 7860     		str	r0, [r7, #4]
 2166              		.loc 14 92 18
 2167 0008 7B68     		ldr	r3, [r7, #4]
 2168 000a 1846     		mov	r0, r3
 2169 000c 0C37     		adds	r7, r7, #12
 2170              		.cfi_def_cfa_offset 4
 2171 000e BD46     		mov	sp, r7
 2172              		.cfi_def_cfa_register 13
 2173              		@ sp needed
 2174 0010 5DF8047B 		ldr	r7, [sp], #4
 2175              		.cfi_restore 7
 2176              		.cfi_def_cfa_offset 0
 2177 0014 7047     		bx	lr
 2178              		.cfi_endproc
 2179              	.LFE2287:
 2181              		.weak	_ZN5daisy9AdcHandleC1Ev
 2182              		.thumb_set _ZN5daisy9AdcHandleC1Ev,_ZN5daisy9AdcHandleC2Ev
 2183              		.section	.text._ZN5daisy9AdcHandleD2Ev,"axG",%progbits,_ZN5daisy9AdcHandleD5Ev,comdat
 2184              		.align	1
 2185              		.weak	_ZN5daisy9AdcHandleD2Ev
 2186              		.syntax unified
 2187              		.thumb
 2188              		.thumb_func
 2189              		.fpu fpv5-d16
 2191              	_ZN5daisy9AdcHandleD2Ev:
 2192              	.LFB2290:
  93:../../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 2193              		.loc 14 93 5
 2194              		.cfi_startproc
 2195              		@ args = 0, pretend = 0, frame = 8
 2196              		@ frame_needed = 1, uses_anonymous_args = 0
 2197              		@ link register save eliminated.
 2198 0000 80B4     		push	{r7}
 2199              		.cfi_def_cfa_offset 4
 2200              		.cfi_offset 7, -4
 2201 0002 83B0     		sub	sp, sp, #12
 2202              		.cfi_def_cfa_offset 16
 2203 0004 00AF     		add	r7, sp, #0
 2204              		.cfi_def_cfa_register 7
 2205 0006 7860     		str	r0, [r7, #4]
 2206              		.loc 14 93 19
 2207 0008 7B68     		ldr	r3, [r7, #4]
 2208 000a 1846     		mov	r0, r3
 2209 000c 0C37     		adds	r7, r7, #12
 2210              		.cfi_def_cfa_offset 4
 2211 000e BD46     		mov	sp, r7
 2212              		.cfi_def_cfa_register 13
 2213              		@ sp needed
 2214 0010 5DF8047B 		ldr	r7, [sp], #4
 2215              		.cfi_restore 7
 2216              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 118


 2217 0014 7047     		bx	lr
 2218              		.cfi_endproc
 2219              	.LFE2290:
 2221              		.weak	_ZN5daisy9AdcHandleD1Ev
 2222              		.thumb_set _ZN5daisy9AdcHandleD1Ev,_ZN5daisy9AdcHandleD2Ev
 2223              		.section	.text._ZN5daisy9UsbHandleC2Ev,"axG",%progbits,_ZN5daisy9UsbHandleC5Ev,comdat
 2224              		.align	1
 2225              		.weak	_ZN5daisy9UsbHandleC2Ev
 2226              		.syntax unified
 2227              		.thumb
 2228              		.thumb_func
 2229              		.fpu fpv5-d16
 2231              	_ZN5daisy9UsbHandleC2Ev:
 2232              	.LFB2781:
 2233              		.file 15 "../../libDaisy/src/hid/usb.h"
   1:../../libDaisy/src/hid/usb.h **** #pragma once
   2:../../libDaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy/src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy/src/hid/usb.h **** 
   7:../../libDaisy/src/hid/usb.h **** namespace daisy
   8:../../libDaisy/src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy/src/hid/usb.h ****     @{
  10:../../libDaisy/src/hid/usb.h **** */
  11:../../libDaisy/src/hid/usb.h **** 
  12:../../libDaisy/src/hid/usb.h **** {
  13:../../libDaisy/src/hid/usb.h **** /** 
  14:../../libDaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy/src/hid/usb.h ****     @date December 2019
  17:../../libDaisy/src/hid/usb.h **** */
  18:../../libDaisy/src/hid/usb.h **** class UsbHandle
  19:../../libDaisy/src/hid/usb.h **** {
  20:../../libDaisy/src/hid/usb.h ****   public:
  21:../../libDaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy/src/hid/usb.h ****     enum class Result
  23:../../libDaisy/src/hid/usb.h ****     {
  24:../../libDaisy/src/hid/usb.h ****         OK,
  25:../../libDaisy/src/hid/usb.h ****         ERR,
  26:../../libDaisy/src/hid/usb.h ****     };
  27:../../libDaisy/src/hid/usb.h **** 
  28:../../libDaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy/src/hid/usb.h ****     {
  31:../../libDaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy/src/hid/usb.h ****     };
  35:../../libDaisy/src/hid/usb.h **** 
  36:../../libDaisy/src/hid/usb.h **** 
  37:../../libDaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy/src/hid/usb.h **** 
  40:../../libDaisy/src/hid/usb.h ****     UsbHandle() {}
 2234              		.loc 15 40 5
 2235              		.cfi_startproc
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 119


 2236              		@ args = 0, pretend = 0, frame = 8
 2237              		@ frame_needed = 1, uses_anonymous_args = 0
 2238              		@ link register save eliminated.
 2239 0000 80B4     		push	{r7}
 2240              		.cfi_def_cfa_offset 4
 2241              		.cfi_offset 7, -4
 2242 0002 83B0     		sub	sp, sp, #12
 2243              		.cfi_def_cfa_offset 16
 2244 0004 00AF     		add	r7, sp, #0
 2245              		.cfi_def_cfa_register 7
 2246 0006 7860     		str	r0, [r7, #4]
 2247              		.loc 15 40 18
 2248 0008 7B68     		ldr	r3, [r7, #4]
 2249 000a 1846     		mov	r0, r3
 2250 000c 0C37     		adds	r7, r7, #12
 2251              		.cfi_def_cfa_offset 4
 2252 000e BD46     		mov	sp, r7
 2253              		.cfi_def_cfa_register 13
 2254              		@ sp needed
 2255 0010 5DF8047B 		ldr	r7, [sp], #4
 2256              		.cfi_restore 7
 2257              		.cfi_def_cfa_offset 0
 2258 0014 7047     		bx	lr
 2259              		.cfi_endproc
 2260              	.LFE2781:
 2262              		.weak	_ZN5daisy9UsbHandleC1Ev
 2263              		.thumb_set _ZN5daisy9UsbHandleC1Ev,_ZN5daisy9UsbHandleC2Ev
 2264              		.section	.text._ZN5daisy9UsbHandleD2Ev,"axG",%progbits,_ZN5daisy9UsbHandleD5Ev,comdat
 2265              		.align	1
 2266              		.weak	_ZN5daisy9UsbHandleD2Ev
 2267              		.syntax unified
 2268              		.thumb
 2269              		.thumb_func
 2270              		.fpu fpv5-d16
 2272              	_ZN5daisy9UsbHandleD2Ev:
 2273              	.LFB2784:
  41:../../libDaisy/src/hid/usb.h **** 
  42:../../libDaisy/src/hid/usb.h ****     ~UsbHandle() {}
 2274              		.loc 15 42 5
 2275              		.cfi_startproc
 2276              		@ args = 0, pretend = 0, frame = 8
 2277              		@ frame_needed = 1, uses_anonymous_args = 0
 2278              		@ link register save eliminated.
 2279 0000 80B4     		push	{r7}
 2280              		.cfi_def_cfa_offset 4
 2281              		.cfi_offset 7, -4
 2282 0002 83B0     		sub	sp, sp, #12
 2283              		.cfi_def_cfa_offset 16
 2284 0004 00AF     		add	r7, sp, #0
 2285              		.cfi_def_cfa_register 7
 2286 0006 7860     		str	r0, [r7, #4]
 2287              		.loc 15 42 19
 2288 0008 7B68     		ldr	r3, [r7, #4]
 2289 000a 1846     		mov	r0, r3
 2290 000c 0C37     		adds	r7, r7, #12
 2291              		.cfi_def_cfa_offset 4
 2292 000e BD46     		mov	sp, r7
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 120


 2293              		.cfi_def_cfa_register 13
 2294              		@ sp needed
 2295 0010 5DF8047B 		ldr	r7, [sp], #4
 2296              		.cfi_restore 7
 2297              		.cfi_def_cfa_offset 0
 2298 0014 7047     		bx	lr
 2299              		.cfi_endproc
 2300              	.LFE2784:
 2302              		.weak	_ZN5daisy9UsbHandleD1Ev
 2303              		.thumb_set _ZN5daisy9UsbHandleD1Ev,_ZN5daisy9UsbHandleD2Ev
 2304              		.section	.rodata._ZN5daisyL15kWavFileChunkIdE,"a"
 2305              		.align	2
 2308              	_ZN5daisyL15kWavFileChunkIdE:
 2309 0000 52494646 		.word	1179011410
 2310              		.section	.rodata._ZN5daisyL14kWavFileWaveIdE,"a"
 2311              		.align	2
 2314              	_ZN5daisyL14kWavFileWaveIdE:
 2315 0000 57415645 		.word	1163280727
 2316              		.section	.rodata._ZN5daisyL19kWavFileSubChunk1IdE,"a"
 2317              		.align	2
 2320              	_ZN5daisyL19kWavFileSubChunk1IdE:
 2321 0000 666D7420 		.word	544501094
 2322              		.section	.rodata._ZN5daisyL19kWavFileSubChunk2IdE,"a"
 2323              		.align	2
 2326              	_ZN5daisyL19kWavFileSubChunk2IdE:
 2327 0000 64617461 		.word	1635017060
 2328              		.section	.rodata._ZL19kMaxSr595DaisyChain,"a"
 2329              		.align	2
 2332              	_ZL19kMaxSr595DaisyChain:
 2333 0000 10000000 		.word	16
 2334              		.section	.text._ZN5daisy9DaisySeedC2Ev,"axG",%progbits,_ZN5daisy9DaisySeedC5Ev,comdat
 2335              		.align	1
 2336              		.weak	_ZN5daisy9DaisySeedC2Ev
 2337              		.syntax unified
 2338              		.thumb
 2339              		.thumb_func
 2340              		.fpu fpv5-d16
 2342              	_ZN5daisy9DaisySeedC2Ev:
 2343              	.LFB3740:
 2344              		.file 16 "../../libDaisy/src/daisy_seed.h"
   1:../../libDaisy/src/daisy_seed.h **** #pragma once
   2:../../libDaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy/src/daisy_seed.h **** 
   5:../../libDaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy/src/daisy_seed.h **** 
   7:../../libDaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy/src/daisy_seed.h **** 
  10:../../libDaisy/src/daisy_seed.h **** namespace daisy
  11:../../libDaisy/src/daisy_seed.h **** {
  12:../../libDaisy/src/daisy_seed.h **** /**
  13:../../libDaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy/src/daisy_seed.h **** 
  16:../../libDaisy/src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy/src/daisy_seed.h **** */
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 121


  18:../../libDaisy/src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy/src/daisy_seed.h **** {
  20:../../libDaisy/src/daisy_seed.h ****   public:
  21:../../libDaisy/src/daisy_seed.h ****     DaisySeed() {}
 2345              		.loc 16 21 5
 2346              		.cfi_startproc
 2347              		@ args = 0, pretend = 0, frame = 8
 2348              		@ frame_needed = 1, uses_anonymous_args = 0
 2349 0000 80B5     		push	{r7, lr}
 2350              		.cfi_def_cfa_offset 8
 2351              		.cfi_offset 7, -8
 2352              		.cfi_offset 14, -4
 2353 0002 82B0     		sub	sp, sp, #8
 2354              		.cfi_def_cfa_offset 16
 2355 0004 00AF     		add	r7, sp, #0
 2356              		.cfi_def_cfa_register 7
 2357 0006 7860     		str	r0, [r7, #4]
 2358              	.LBB23:
 2359              		.loc 16 21 17
 2360 0008 7B68     		ldr	r3, [r7, #4]
 2361 000a 1846     		mov	r0, r3
 2362 000c FFF7FEFF 		bl	_ZN5daisy10QSPIHandleC1Ev
 2363 0010 7B68     		ldr	r3, [r7, #4]
 2364 0012 1433     		adds	r3, r3, #20
 2365 0014 1846     		mov	r0, r3
 2366 0016 FFF7FEFF 		bl	_ZN5daisy11AudioHandleC1Ev
 2367 001a 7B68     		ldr	r3, [r7, #4]
 2368 001c 1833     		adds	r3, r3, #24
 2369 001e 1846     		mov	r0, r3
 2370 0020 FFF7FEFF 		bl	_ZN5daisy9AdcHandleC1Ev
 2371 0024 7B68     		ldr	r3, [r7, #4]
 2372 0026 2033     		adds	r3, r3, #32
 2373 0028 1846     		mov	r0, r3
 2374 002a FFF7FEFF 		bl	_ZN5daisy9DacHandleC1Ev
 2375 002e 7B68     		ldr	r3, [r7, #4]
 2376 0030 2433     		adds	r3, r3, #36
 2377 0032 1846     		mov	r0, r3
 2378 0034 FFF7FEFF 		bl	_ZN5daisy9UsbHandleC1Ev
 2379 0038 7B68     		ldr	r3, [r7, #4]
 2380 003a 3033     		adds	r3, r3, #48
 2381 003c 1846     		mov	r0, r3
 2382 003e FFF7FEFF 		bl	_ZN5daisy6SystemC1Ev
 2383              	.LBE23:
 2384              		.loc 16 21 18
 2385 0042 7B68     		ldr	r3, [r7, #4]
 2386 0044 1846     		mov	r0, r3
 2387 0046 0837     		adds	r7, r7, #8
 2388              		.cfi_def_cfa_offset 8
 2389 0048 BD46     		mov	sp, r7
 2390              		.cfi_def_cfa_register 13
 2391              		@ sp needed
 2392 004a 80BD     		pop	{r7, pc}
 2393              		.cfi_endproc
 2394              	.LFE3740:
 2396              		.weak	_ZN5daisy9DaisySeedC1Ev
 2397              		.thumb_set _ZN5daisy9DaisySeedC1Ev,_ZN5daisy9DaisySeedC2Ev
 2398              		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 122


 2399              		.align	1
 2400              		.weak	_ZN5daisy9DaisySeedD2Ev
 2401              		.syntax unified
 2402              		.thumb
 2403              		.thumb_func
 2404              		.fpu fpv5-d16
 2406              	_ZN5daisy9DaisySeedD2Ev:
 2407              	.LFB3743:
  22:../../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 2408              		.loc 16 22 5
 2409              		.cfi_startproc
 2410              		@ args = 0, pretend = 0, frame = 8
 2411              		@ frame_needed = 1, uses_anonymous_args = 0
 2412 0000 80B5     		push	{r7, lr}
 2413              		.cfi_def_cfa_offset 8
 2414              		.cfi_offset 7, -8
 2415              		.cfi_offset 14, -4
 2416 0002 82B0     		sub	sp, sp, #8
 2417              		.cfi_def_cfa_offset 16
 2418 0004 00AF     		add	r7, sp, #0
 2419              		.cfi_def_cfa_register 7
 2420 0006 7860     		str	r0, [r7, #4]
 2421              	.LBB24:
 2422              		.loc 16 22 18
 2423 0008 7B68     		ldr	r3, [r7, #4]
 2424 000a 3033     		adds	r3, r3, #48
 2425 000c 1846     		mov	r0, r3
 2426 000e FFF7FEFF 		bl	_ZN5daisy6SystemD1Ev
 2427 0012 7B68     		ldr	r3, [r7, #4]
 2428 0014 2433     		adds	r3, r3, #36
 2429 0016 1846     		mov	r0, r3
 2430 0018 FFF7FEFF 		bl	_ZN5daisy9UsbHandleD1Ev
 2431 001c 7B68     		ldr	r3, [r7, #4]
 2432 001e 1833     		adds	r3, r3, #24
 2433 0020 1846     		mov	r0, r3
 2434 0022 FFF7FEFF 		bl	_ZN5daisy9AdcHandleD1Ev
 2435 0026 7B68     		ldr	r3, [r7, #4]
 2436 0028 1433     		adds	r3, r3, #20
 2437 002a 1846     		mov	r0, r3
 2438 002c FFF7FEFF 		bl	_ZN5daisy11AudioHandleD1Ev
 2439              	.LBE24:
 2440              		.loc 16 22 19
 2441 0030 7B68     		ldr	r3, [r7, #4]
 2442 0032 1846     		mov	r0, r3
 2443 0034 0837     		adds	r7, r7, #8
 2444              		.cfi_def_cfa_offset 8
 2445 0036 BD46     		mov	sp, r7
 2446              		.cfi_def_cfa_register 13
 2447              		@ sp needed
 2448 0038 80BD     		pop	{r7, pc}
 2449              		.cfi_endproc
 2450              	.LFE3743:
 2452              		.weak	_ZN5daisy9DaisySeedD1Ev
 2453              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
 2454              		.section	.text._ZN5daisy9DaisySeed8StartLogEb,"axG",%progbits,_ZN5daisy9DaisySeed8StartLogEb,comda
 2455              		.align	1
 2456              		.weak	_ZN5daisy9DaisySeed8StartLogEb
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 123


 2457              		.syntax unified
 2458              		.thumb
 2459              		.thumb_func
 2460              		.fpu fpv5-d16
 2462              	_ZN5daisy9DaisySeed8StartLogEb:
 2463              	.LFB3747:
  23:../../libDaisy/src/daisy_seed.h **** 
  24:../../libDaisy/src/daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:../../libDaisy/src/daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:../../libDaisy/src/daisy_seed.h ****      */
  27:../../libDaisy/src/daisy_seed.h ****     void Configure();
  28:../../libDaisy/src/daisy_seed.h **** 
  29:../../libDaisy/src/daisy_seed.h ****     /** 
  30:../../libDaisy/src/daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
  31:../../libDaisy/src/daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:../../libDaisy/src/daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:../../libDaisy/src/daisy_seed.h **** 
  34:../../libDaisy/src/daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:../../libDaisy/src/daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:../../libDaisy/src/daisy_seed.h ****     for a specific application.
  37:../../libDaisy/src/daisy_seed.h ****     */
  38:../../libDaisy/src/daisy_seed.h ****     void Init(bool boost = false);
  39:../../libDaisy/src/daisy_seed.h **** 
  40:../../libDaisy/src/daisy_seed.h ****     /** 
  41:../../libDaisy/src/daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:../../libDaisy/src/daisy_seed.h ****     */
  43:../../libDaisy/src/daisy_seed.h ****     void DeInit();
  44:../../libDaisy/src/daisy_seed.h **** 
  45:../../libDaisy/src/daisy_seed.h ****     /** 
  46:../../libDaisy/src/daisy_seed.h ****     Wait some ms before going on.
  47:../../libDaisy/src/daisy_seed.h ****     \param del Delay time in ms.
  48:../../libDaisy/src/daisy_seed.h ****     */
  49:../../libDaisy/src/daisy_seed.h ****     void DelayMs(size_t del);
  50:../../libDaisy/src/daisy_seed.h **** 
  51:../../libDaisy/src/daisy_seed.h ****     /** 
  52:../../libDaisy/src/daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:../../libDaisy/src/daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:../../libDaisy/src/daisy_seed.h ****     */
  55:../../libDaisy/src/daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:../../libDaisy/src/daisy_seed.h **** 
  57:../../libDaisy/src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  58:../../libDaisy/src/daisy_seed.h ****     the specified callback will get called whenever
  59:../../libDaisy/src/daisy_seed.h ****     new data is ready to be prepared.
  60:../../libDaisy/src/daisy_seed.h ****     */
  61:../../libDaisy/src/daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:../../libDaisy/src/daisy_seed.h **** 
  63:../../libDaisy/src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  64:../../libDaisy/src/daisy_seed.h ****     the specified callback will get called whenever
  65:../../libDaisy/src/daisy_seed.h ****     new data is ready to be prepared.
  66:../../libDaisy/src/daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:../../libDaisy/src/daisy_seed.h ****     */
  68:../../libDaisy/src/daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:../../libDaisy/src/daisy_seed.h **** 
  70:../../libDaisy/src/daisy_seed.h ****     /** Changes to a new interleaved callback
  71:../../libDaisy/src/daisy_seed.h ****      */
  72:../../libDaisy/src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  73:../../libDaisy/src/daisy_seed.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 124


  74:../../libDaisy/src/daisy_seed.h ****     /** Changes to a new multichannel callback
  75:../../libDaisy/src/daisy_seed.h ****      */
  76:../../libDaisy/src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:../../libDaisy/src/daisy_seed.h **** 
  78:../../libDaisy/src/daisy_seed.h ****     /** Stops the audio if it is running. */
  79:../../libDaisy/src/daisy_seed.h ****     void StopAudio();
  80:../../libDaisy/src/daisy_seed.h **** 
  81:../../libDaisy/src/daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:../../libDaisy/src/daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:../../libDaisy/src/daisy_seed.h ****      */
  84:../../libDaisy/src/daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:../../libDaisy/src/daisy_seed.h **** 
  86:../../libDaisy/src/daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:../../libDaisy/src/daisy_seed.h ****      */
  88:../../libDaisy/src/daisy_seed.h ****     float AudioSampleRate();
  89:../../libDaisy/src/daisy_seed.h **** 
  90:../../libDaisy/src/daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
  91:../../libDaisy/src/daisy_seed.h ****      */
  92:../../libDaisy/src/daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:../../libDaisy/src/daisy_seed.h **** 
  94:../../libDaisy/src/daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:../../libDaisy/src/daisy_seed.h ****     size_t AudioBlockSize();
  96:../../libDaisy/src/daisy_seed.h **** 
  97:../../libDaisy/src/daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:../../libDaisy/src/daisy_seed.h ****     float AudioCallbackRate() const;
  99:../../libDaisy/src/daisy_seed.h **** 
 100:../../libDaisy/src/daisy_seed.h ****     /** Sets the state of the built in LED
 101:../../libDaisy/src/daisy_seed.h ****      */
 102:../../libDaisy/src/daisy_seed.h ****     void SetLed(bool state);
 103:../../libDaisy/src/daisy_seed.h **** 
 104:../../libDaisy/src/daisy_seed.h ****     /** Sets the state of the test point near pin 10
 105:../../libDaisy/src/daisy_seed.h ****      */
 106:../../libDaisy/src/daisy_seed.h ****     void SetTestPoint(bool state);
 107:../../libDaisy/src/daisy_seed.h **** 
 108:../../libDaisy/src/daisy_seed.h ****     /** Print formatted debug log message
 109:../../libDaisy/src/daisy_seed.h ****      */
 110:../../libDaisy/src/daisy_seed.h ****     template <typename... VA>
 111:../../libDaisy/src/daisy_seed.h ****     static void Print(const char* format, VA... va)
 112:../../libDaisy/src/daisy_seed.h ****     {
 113:../../libDaisy/src/daisy_seed.h ****         Log::Print(format, va...);
 114:../../libDaisy/src/daisy_seed.h ****     }
 115:../../libDaisy/src/daisy_seed.h **** 
 116:../../libDaisy/src/daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 117:../../libDaisy/src/daisy_seed.h ****     */
 118:../../libDaisy/src/daisy_seed.h ****     template <typename... VA>
 119:../../libDaisy/src/daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 120:../../libDaisy/src/daisy_seed.h ****     {
 121:../../libDaisy/src/daisy_seed.h ****         Log::PrintLine(format, va...);
 122:../../libDaisy/src/daisy_seed.h ****     }
 123:../../libDaisy/src/daisy_seed.h **** 
 124:../../libDaisy/src/daisy_seed.h ****     /** Start the logging session. Optionally wait for terminal connection before proceeding.
 125:../../libDaisy/src/daisy_seed.h ****     */
 126:../../libDaisy/src/daisy_seed.h ****     static void StartLog(bool wait_for_pc = false)
 2464              		.loc 16 126 17
 2465              		.cfi_startproc
 2466              		@ args = 0, pretend = 0, frame = 8
 2467              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 125


 2468 0000 80B5     		push	{r7, lr}
 2469              		.cfi_def_cfa_offset 8
 2470              		.cfi_offset 7, -8
 2471              		.cfi_offset 14, -4
 2472 0002 82B0     		sub	sp, sp, #8
 2473              		.cfi_def_cfa_offset 16
 2474 0004 00AF     		add	r7, sp, #0
 2475              		.cfi_def_cfa_register 7
 2476 0006 0346     		mov	r3, r0
 2477 0008 FB71     		strb	r3, [r7, #7]
 127:../../libDaisy/src/daisy_seed.h ****     {
 128:../../libDaisy/src/daisy_seed.h ****         Log::StartLog(wait_for_pc);
 2478              		.loc 16 128 22
 2479 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2480 000c 1846     		mov	r0, r3
 2481 000e FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
 129:../../libDaisy/src/daisy_seed.h ****     }
 2482              		.loc 16 129 5
 2483 0012 00BF     		nop
 2484 0014 0837     		adds	r7, r7, #8
 2485              		.cfi_def_cfa_offset 8
 2486 0016 BD46     		mov	sp, r7
 2487              		.cfi_def_cfa_register 13
 2488              		@ sp needed
 2489 0018 80BD     		pop	{r7, pc}
 2490              		.cfi_endproc
 2491              	.LFE3747:
 2493              		.section	.rodata._ZN5daisy4seedL2D0E,"a"
 2494              		.align	2
 2497              	_ZN5daisy4seedL2D0E:
 2498 0000 01       		.byte	1
 2499 0001 0C       		.byte	12
 2500              		.section	.rodata._ZN5daisy4seedL2D1E,"a"
 2501              		.align	2
 2504              	_ZN5daisy4seedL2D1E:
 2505 0000 02       		.byte	2
 2506 0001 0B       		.byte	11
 2507              		.section	.rodata._ZN5daisy4seedL2D2E,"a"
 2508              		.align	2
 2511              	_ZN5daisy4seedL2D2E:
 2512 0000 02       		.byte	2
 2513 0001 0A       		.byte	10
 2514              		.section	.rodata._ZN5daisy4seedL2D3E,"a"
 2515              		.align	2
 2518              	_ZN5daisy4seedL2D3E:
 2519 0000 02       		.byte	2
 2520 0001 09       		.byte	9
 2521              		.section	.rodata._ZN5daisy4seedL2D4E,"a"
 2522              		.align	2
 2525              	_ZN5daisy4seedL2D4E:
 2526 0000 02       		.byte	2
 2527 0001 08       		.byte	8
 2528              		.section	.rodata._ZN5daisy4seedL2D5E,"a"
 2529              		.align	2
 2532              	_ZN5daisy4seedL2D5E:
 2533 0000 03       		.byte	3
 2534 0001 02       		.byte	2
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 126


 2535              		.section	.rodata._ZN5daisy4seedL2D6E,"a"
 2536              		.align	2
 2539              	_ZN5daisy4seedL2D6E:
 2540 0000 02       		.byte	2
 2541 0001 0C       		.byte	12
 2542              		.section	.rodata._ZN5daisy4seedL2D7E,"a"
 2543              		.align	2
 2546              	_ZN5daisy4seedL2D7E:
 2547 0000 06       		.byte	6
 2548 0001 0A       		.byte	10
 2549              		.section	.rodata._ZN5daisy4seedL2D8E,"a"
 2550              		.align	2
 2553              	_ZN5daisy4seedL2D8E:
 2554 0000 06       		.byte	6
 2555 0001 0B       		.byte	11
 2556              		.section	.rodata._ZN5daisy4seedL2D9E,"a"
 2557              		.align	2
 2560              	_ZN5daisy4seedL2D9E:
 2561 0000 01       		.byte	1
 2562 0001 04       		.byte	4
 2563              		.section	.rodata._ZN5daisy4seedL3D10E,"a"
 2564              		.align	2
 2567              	_ZN5daisy4seedL3D10E:
 2568 0000 01       		.byte	1
 2569 0001 05       		.byte	5
 2570              		.section	.rodata._ZN5daisy4seedL3D11E,"a"
 2571              		.align	2
 2574              	_ZN5daisy4seedL3D11E:
 2575 0000 01       		.byte	1
 2576 0001 08       		.byte	8
 2577              		.section	.rodata._ZN5daisy4seedL3D12E,"a"
 2578              		.align	2
 2581              	_ZN5daisy4seedL3D12E:
 2582 0000 01       		.byte	1
 2583 0001 09       		.byte	9
 2584              		.section	.rodata._ZN5daisy4seedL3D13E,"a"
 2585              		.align	2
 2588              	_ZN5daisy4seedL3D13E:
 2589 0000 01       		.byte	1
 2590 0001 06       		.byte	6
 2591              		.section	.rodata._ZN5daisy4seedL3D14E,"a"
 2592              		.align	2
 2595              	_ZN5daisy4seedL3D14E:
 2596 0000 01       		.byte	1
 2597 0001 07       		.byte	7
 2598              		.section	.rodata._ZN5daisy4seedL3D15E,"a"
 2599              		.align	2
 2602              	_ZN5daisy4seedL3D15E:
 2603 0000 02       		.byte	2
 2604 0001 00       		.byte	0
 2605              		.section	.rodata._ZN5daisy4seedL3D16E,"a"
 2606              		.align	2
 2609              	_ZN5daisy4seedL3D16E:
 2610 0000 00       		.byte	0
 2611 0001 03       		.byte	3
 2612              		.section	.rodata._ZN5daisy4seedL3D17E,"a"
 2613              		.align	2
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 127


 2616              	_ZN5daisy4seedL3D17E:
 2617 0000 01       		.byte	1
 2618 0001 01       		.byte	1
 2619              		.section	.rodata._ZN5daisy4seedL3D18E,"a"
 2620              		.align	2
 2623              	_ZN5daisy4seedL3D18E:
 2624 0000 00       		.byte	0
 2625 0001 07       		.byte	7
 2626              		.section	.rodata._ZN5daisy4seedL3D19E,"a"
 2627              		.align	2
 2630              	_ZN5daisy4seedL3D19E:
 2631 0000 00       		.byte	0
 2632 0001 06       		.byte	6
 2633              		.section	.rodata._ZN5daisy4seedL3D20E,"a"
 2634              		.align	2
 2637              	_ZN5daisy4seedL3D20E:
 2638 0000 02       		.byte	2
 2639 0001 01       		.byte	1
 2640              		.section	.rodata._ZN5daisy4seedL3D21E,"a"
 2641              		.align	2
 2644              	_ZN5daisy4seedL3D21E:
 2645 0000 02       		.byte	2
 2646 0001 04       		.byte	4
 2647              		.section	.rodata._ZN5daisy4seedL3D22E,"a"
 2648              		.align	2
 2651              	_ZN5daisy4seedL3D22E:
 2652 0000 00       		.byte	0
 2653 0001 05       		.byte	5
 2654              		.section	.rodata._ZN5daisy4seedL3D23E,"a"
 2655              		.align	2
 2658              	_ZN5daisy4seedL3D23E:
 2659 0000 00       		.byte	0
 2660 0001 04       		.byte	4
 2661              		.section	.rodata._ZN5daisy4seedL3D24E,"a"
 2662              		.align	2
 2665              	_ZN5daisy4seedL3D24E:
 2666 0000 00       		.byte	0
 2667 0001 01       		.byte	1
 2668              		.section	.rodata._ZN5daisy4seedL3D25E,"a"
 2669              		.align	2
 2672              	_ZN5daisy4seedL3D25E:
 2673 0000 0000     		.space	2
 2674              		.section	.rodata._ZN5daisy4seedL3D26E,"a"
 2675              		.align	2
 2678              	_ZN5daisy4seedL3D26E:
 2679 0000 03       		.byte	3
 2680 0001 0B       		.byte	11
 2681              		.section	.rodata._ZN5daisy4seedL3D27E,"a"
 2682              		.align	2
 2685              	_ZN5daisy4seedL3D27E:
 2686 0000 06       		.byte	6
 2687 0001 09       		.byte	9
 2688              		.section	.rodata._ZN5daisy4seedL3D28E,"a"
 2689              		.align	2
 2692              	_ZN5daisy4seedL3D28E:
 2693 0000 00       		.byte	0
 2694 0001 02       		.byte	2
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 128


 2695              		.section	.rodata._ZN5daisy4seedL3D29E,"a"
 2696              		.align	2
 2699              	_ZN5daisy4seedL3D29E:
 2700 0000 01       		.byte	1
 2701 0001 0E       		.byte	14
 2702              		.section	.rodata._ZN5daisy4seedL3D30E,"a"
 2703              		.align	2
 2706              	_ZN5daisy4seedL3D30E:
 2707 0000 01       		.byte	1
 2708 0001 0F       		.byte	15
 2709              		.section	.rodata._ZN5daisy4seedL2A0E,"a"
 2710              		.align	2
 2713              	_ZN5daisy4seedL2A0E:
 2714 0000 02       		.byte	2
 2715 0001 00       		.byte	0
 2716              		.section	.rodata._ZN5daisy4seedL2A1E,"a"
 2717              		.align	2
 2720              	_ZN5daisy4seedL2A1E:
 2721 0000 00       		.byte	0
 2722 0001 03       		.byte	3
 2723              		.section	.rodata._ZN5daisy4seedL2A2E,"a"
 2724              		.align	2
 2727              	_ZN5daisy4seedL2A2E:
 2728 0000 01       		.byte	1
 2729 0001 01       		.byte	1
 2730              		.section	.rodata._ZN5daisy4seedL2A3E,"a"
 2731              		.align	2
 2734              	_ZN5daisy4seedL2A3E:
 2735 0000 00       		.byte	0
 2736 0001 07       		.byte	7
 2737              		.section	.rodata._ZN5daisy4seedL2A4E,"a"
 2738              		.align	2
 2741              	_ZN5daisy4seedL2A4E:
 2742 0000 00       		.byte	0
 2743 0001 06       		.byte	6
 2744              		.section	.rodata._ZN5daisy4seedL2A5E,"a"
 2745              		.align	2
 2748              	_ZN5daisy4seedL2A5E:
 2749 0000 02       		.byte	2
 2750 0001 01       		.byte	1
 2751              		.section	.rodata._ZN5daisy4seedL2A6E,"a"
 2752              		.align	2
 2755              	_ZN5daisy4seedL2A6E:
 2756 0000 02       		.byte	2
 2757 0001 04       		.byte	4
 2758              		.section	.rodata._ZN5daisy4seedL2A7E,"a"
 2759              		.align	2
 2762              	_ZN5daisy4seedL2A7E:
 2763 0000 00       		.byte	0
 2764 0001 05       		.byte	5
 2765              		.section	.rodata._ZN5daisy4seedL2A8E,"a"
 2766              		.align	2
 2769              	_ZN5daisy4seedL2A8E:
 2770 0000 00       		.byte	0
 2771 0001 04       		.byte	4
 2772              		.section	.rodata._ZN5daisy4seedL2A9E,"a"
 2773              		.align	2
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 129


 2776              	_ZN5daisy4seedL2A9E:
 2777 0000 00       		.byte	0
 2778 0001 01       		.byte	1
 2779              		.section	.rodata._ZN5daisy4seedL3A10E,"a"
 2780              		.align	2
 2783              	_ZN5daisy4seedL3A10E:
 2784 0000 0000     		.space	2
 2785              		.section	.rodata._ZN5daisy4seedL3A11E,"a"
 2786              		.align	2
 2789              	_ZN5daisy4seedL3A11E:
 2790 0000 00       		.byte	0
 2791 0001 02       		.byte	2
 2792              		.section	.rodata._ZN5daisy4seedL3D31E,"a"
 2793              		.align	2
 2796              	_ZN5daisy4seedL3D31E:
 2797 0000 02       		.byte	2
 2798 0001 02       		.byte	2
 2799              		.section	.rodata._ZN5daisy4seedL3D32E,"a"
 2800              		.align	2
 2803              	_ZN5daisy4seedL3D32E:
 2804 0000 02       		.byte	2
 2805 0001 03       		.byte	3
 2806              		.section	.rodata._ZN5daisy4seedL3A12E,"a"
 2807              		.align	2
 2810              	_ZN5daisy4seedL3A12E:
 2811 0000 02       		.byte	2
 2812 0001 02       		.byte	2
 2813              		.section	.rodata._ZN5daisy4seedL3A13E,"a"
 2814              		.align	2
 2817              	_ZN5daisy4seedL3A13E:
 2818 0000 02       		.byte	2
 2819 0001 03       		.byte	3
 2820              		.section	.text._ZN7daisysp4AdsrC2Ev,"axG",%progbits,_ZN7daisysp4AdsrC5Ev,comdat
 2821              		.align	1
 2822              		.weak	_ZN7daisysp4AdsrC2Ev
 2823              		.syntax unified
 2824              		.thumb
 2825              		.thumb_func
 2826              		.fpu fpv5-d16
 2828              	_ZN7daisysp4AdsrC2Ev:
 2829              	.LFB3763:
 2830              		.file 17 "../../DaisySP/Source/Control/adsr.h"
   1:../../DaisySP/Source/Control/adsr.h **** #pragma once
   2:../../DaisySP/Source/Control/adsr.h **** #ifndef DSY_ADSR_H
   3:../../DaisySP/Source/Control/adsr.h **** #define DSY_ADSR_H
   4:../../DaisySP/Source/Control/adsr.h **** 
   5:../../DaisySP/Source/Control/adsr.h **** #include <stdint.h>
   6:../../DaisySP/Source/Control/adsr.h **** #ifdef __cplusplus
   7:../../DaisySP/Source/Control/adsr.h **** 
   8:../../DaisySP/Source/Control/adsr.h **** namespace daisysp
   9:../../DaisySP/Source/Control/adsr.h **** {
  10:../../DaisySP/Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  11:../../DaisySP/Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  12:../../DaisySP/Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  13:../../DaisySP/Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  14:../../DaisySP/Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
  15:../../DaisySP/Source/Control/adsr.h **** */
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 130


  16:../../DaisySP/Source/Control/adsr.h **** enum
  17:../../DaisySP/Source/Control/adsr.h **** {
  18:../../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_IDLE    = 0,
  19:../../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_ATTACK  = 1,
  20:../../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_DECAY   = 2,
  21:../../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_RELEASE = 4
  22:../../DaisySP/Source/Control/adsr.h **** };
  23:../../DaisySP/Source/Control/adsr.h **** 
  24:../../DaisySP/Source/Control/adsr.h **** 
  25:../../DaisySP/Source/Control/adsr.h **** /** adsr envelope module
  26:../../DaisySP/Source/Control/adsr.h **** 
  27:../../DaisySP/Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  28:../../DaisySP/Source/Control/adsr.h **** 
  29:../../DaisySP/Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  30:../../DaisySP/Source/Control/adsr.h ****  
  31:../../DaisySP/Source/Control/adsr.h **** Remake by Steffan DIedrichsen, May 2021
  32:../../DaisySP/Source/Control/adsr.h **** */
  33:../../DaisySP/Source/Control/adsr.h **** class Adsr
  34:../../DaisySP/Source/Control/adsr.h **** {
  35:../../DaisySP/Source/Control/adsr.h ****   public:
  36:../../DaisySP/Source/Control/adsr.h ****     Adsr() {}
 2831              		.loc 17 36 5
 2832              		.cfi_startproc
 2833              		@ args = 0, pretend = 0, frame = 8
 2834              		@ frame_needed = 1, uses_anonymous_args = 0
 2835              		@ link register save eliminated.
 2836 0000 80B4     		push	{r7}
 2837              		.cfi_def_cfa_offset 4
 2838              		.cfi_offset 7, -4
 2839 0002 83B0     		sub	sp, sp, #12
 2840              		.cfi_def_cfa_offset 16
 2841 0004 00AF     		add	r7, sp, #0
 2842              		.cfi_def_cfa_register 7
 2843 0006 7860     		str	r0, [r7, #4]
 2844              	.LBB25:
 2845              		.loc 17 36 12
 2846 0008 7B68     		ldr	r3, [r7, #4]
 2847 000a 4FF00002 		mov	r2, #0
 2848 000e 1A60     		str	r2, [r3]	@ float
 2849 0010 7B68     		ldr	r3, [r7, #4]
 2850 0012 4FF00002 		mov	r2, #0
 2851 0016 5A60     		str	r2, [r3, #4]	@ float
 2852 0018 7B68     		ldr	r3, [r7, #4]
 2853 001a 154A     		ldr	r2, .L111
 2854 001c 9A60     		str	r2, [r3, #8]	@ float
 2855 001e 7B68     		ldr	r3, [r7, #4]
 2856 0020 4FF00002 		mov	r2, #0
 2857 0024 DA60     		str	r2, [r3, #12]	@ float
 2858 0026 7B68     		ldr	r3, [r7, #4]
 2859 0028 114A     		ldr	r2, .L111
 2860 002a 1A61     		str	r2, [r3, #16]	@ float
 2861 002c 7B68     		ldr	r3, [r7, #4]
 2862 002e 104A     		ldr	r2, .L111
 2863 0030 5A61     		str	r2, [r3, #20]	@ float
 2864 0032 7B68     		ldr	r3, [r7, #4]
 2865 0034 0E4A     		ldr	r2, .L111
 2866 0036 9A61     		str	r2, [r3, #24]	@ float
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 131


 2867 0038 7B68     		ldr	r3, [r7, #4]
 2868 003a 4FF00002 		mov	r2, #0
 2869 003e DA61     		str	r2, [r3, #28]	@ float
 2870 0040 7B68     		ldr	r3, [r7, #4]
 2871 0042 4FF00002 		mov	r2, #0
 2872 0046 1A62     		str	r2, [r3, #32]	@ float
 2873 0048 7B68     		ldr	r3, [r7, #4]
 2874 004a 4FF00002 		mov	r2, #0
 2875 004e 5A62     		str	r2, [r3, #36]	@ float
 2876 0050 7B68     		ldr	r3, [r7, #4]
 2877 0052 0022     		movs	r2, #0
 2878 0054 83F82C20 		strb	r2, [r3, #44]
 2879 0058 7B68     		ldr	r3, [r7, #4]
 2880 005a 0022     		movs	r2, #0
 2881 005c 83F82D20 		strb	r2, [r3, #45]
 2882              	.LBE25:
 2883              		.loc 17 36 13
 2884 0060 7B68     		ldr	r3, [r7, #4]
 2885 0062 1846     		mov	r0, r3
 2886 0064 0C37     		adds	r7, r7, #12
 2887              		.cfi_def_cfa_offset 4
 2888 0066 BD46     		mov	sp, r7
 2889              		.cfi_def_cfa_register 13
 2890              		@ sp needed
 2891 0068 5DF8047B 		ldr	r7, [sp], #4
 2892              		.cfi_restore 7
 2893              		.cfi_def_cfa_offset 0
 2894 006c 7047     		bx	lr
 2895              	.L112:
 2896 006e 00BF     		.align	2
 2897              	.L111:
 2898 0070 000080BF 		.word	-1082130432
 2899              		.cfi_endproc
 2900              	.LFE3763:
 2902              		.weak	_ZN7daisysp4AdsrC1Ev
 2903              		.thumb_set _ZN7daisysp4AdsrC1Ev,_ZN7daisysp4AdsrC2Ev
 2904              		.section	.text._ZN7daisysp4AdsrD2Ev,"axG",%progbits,_ZN7daisysp4AdsrD5Ev,comdat
 2905              		.align	1
 2906              		.weak	_ZN7daisysp4AdsrD2Ev
 2907              		.syntax unified
 2908              		.thumb
 2909              		.thumb_func
 2910              		.fpu fpv5-d16
 2912              	_ZN7daisysp4AdsrD2Ev:
 2913              	.LFB3766:
  37:../../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 2914              		.loc 17 37 5
 2915              		.cfi_startproc
 2916              		@ args = 0, pretend = 0, frame = 8
 2917              		@ frame_needed = 1, uses_anonymous_args = 0
 2918              		@ link register save eliminated.
 2919 0000 80B4     		push	{r7}
 2920              		.cfi_def_cfa_offset 4
 2921              		.cfi_offset 7, -4
 2922 0002 83B0     		sub	sp, sp, #12
 2923              		.cfi_def_cfa_offset 16
 2924 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 132


 2925              		.cfi_def_cfa_register 7
 2926 0006 7860     		str	r0, [r7, #4]
 2927              		.loc 17 37 14
 2928 0008 7B68     		ldr	r3, [r7, #4]
 2929 000a 1846     		mov	r0, r3
 2930 000c 0C37     		adds	r7, r7, #12
 2931              		.cfi_def_cfa_offset 4
 2932 000e BD46     		mov	sp, r7
 2933              		.cfi_def_cfa_register 13
 2934              		@ sp needed
 2935 0010 5DF8047B 		ldr	r7, [sp], #4
 2936              		.cfi_restore 7
 2937              		.cfi_def_cfa_offset 0
 2938 0014 7047     		bx	lr
 2939              		.cfi_endproc
 2940              	.LFE3766:
 2942              		.weak	_ZN7daisysp4AdsrD1Ev
 2943              		.thumb_set _ZN7daisysp4AdsrD1Ev,_ZN7daisysp4AdsrD2Ev
 2944              		.section	.rodata
 2945              		.align	2
 2946              	.LC0:
 2947 0000 64656661 		.ascii	"default\000"
 2947      756C7400 
 2948              		.section	.text._ZNSt13random_deviceC2Ev,"axG",%progbits,_ZNSt13random_deviceC5Ev,comdat
 2949              		.align	1
 2950              		.weak	_ZNSt13random_deviceC2Ev
 2951              		.syntax unified
 2952              		.thumb
 2953              		.thumb_func
 2954              		.fpu fpv5-d16
 2956              	_ZNSt13random_deviceC2Ev:
 2957              	.LFB3864:
 2958              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\random.h"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // random number generation -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // Copyright (C) 2009-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 133


  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** /**
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****  * @file bits/random.h
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****  *  This is an internal header file, included by other library headers.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****  *  Do not attempt to use it directly. @headername{random}
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****  */
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #ifndef _RANDOM_H
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #define _RANDOM_H 1
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #include <vector>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #include <bits/uniform_int_dist.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** namespace std _GLIBCXX_VISIBILITY(default)
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** {
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   // [26.4] Random number generation
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @defgroup random Random Number Generation
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @ingroup numerics
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * A facility for generating random numbers on selected distributions.
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @{
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   // std::uniform_random_bit_generator is defined in <bits/uniform_int_dist.h>
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief A function template for converting the output of a (integral)
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * uniform random number generator to a floatng point result in the range
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * [0-1).
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RealType, size_t __bits,
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   typename _UniformRandomNumberGenerator>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     _RealType
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     generate_canonical(_UniformRandomNumberGenerator& __g);
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /*
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * Implementation-space details.
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   namespace __detail
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   {
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _UIntType, size_t __w,
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	     bool = __w < static_cast<size_t>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 			  (std::numeric_limits<_UIntType>::digits)>
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Shift
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { static const _UIntType __value = 0; };
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _UIntType, size_t __w>
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Shift<_UIntType, __w, true>
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { static const _UIntType __value = _UIntType(1) << __w; };
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<int __s,
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	     int __which = ((__s <= __CHAR_BIT__ * sizeof (int))
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 			    + (__s <= __CHAR_BIT__ * sizeof (long))
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 			    + (__s <= __CHAR_BIT__ * sizeof (long long))
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 134


  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 			    /* assume long long no bigger than __int128 */
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 			    + (__s <= 128))>
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Select_uint_least_t
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	static_assert(__which < 0, /* needs to be dependent */
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		      "sorry, would be too much trouble for a slow result");
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       };
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<int __s>
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Select_uint_least_t<__s, 4>
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { typedef unsigned int type; };
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<int __s>
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Select_uint_least_t<__s, 3>
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { typedef unsigned long type; };
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<int __s>
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Select_uint_least_t<__s, 2>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { typedef unsigned long long type; };
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #ifdef _GLIBCXX_USE_INT128
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<int __s>
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Select_uint_least_t<__s, 1>
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { typedef unsigned __int128 type; };
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #endif
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // Assume a != 0, a < m, c < m, x < m.
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c,
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	     bool __big_enough = (!(__m & (__m - 1))
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 				  || (_Tp(-1) - __c) / __a >= __m - 1),
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****              bool __schrage_ok = __m % __a < __m / __a>
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Mod
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	typedef typename _Select_uint_least_t<std::__lg(__a)
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 					      + std::__lg(__m) + 2>::type _Tp2;
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	static _Tp
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	__calc(_Tp __x)
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ return static_cast<_Tp>((_Tp2(__a) * __x + __c) % __m); }
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       };
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // Schrage.
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c>
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Mod<_Tp, __m, __a, __c, false, true>
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	static _Tp
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	__calc(_Tp __x);
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       };
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // Special cases:
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // - for m == 2^n or m == 0, unsigned integer overflow is safe.
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // - a * (m - 1) + c fits in _Tp, there is no overflow.
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c, bool __s>
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Mod<_Tp, __m, __a, __c, true, __s>
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	static _Tp
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	__calc(_Tp __x)
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 135


 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _Tp __res = __a * __x + __c;
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  if (__m)
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	    __res %= __m;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __res;
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	}
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       };
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _Tp, _Tp __m, _Tp __a = 1, _Tp __c = 0>
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       inline _Tp
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       __mod(_Tp __x)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _Mod<_Tp, __m, __a, __c>::__calc(__x); }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     /*
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****      * An adaptor class for converting the output of any Generator into
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****      * the input for a specific Distribution.
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****      */
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _Engine, typename _DInputType>
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct _Adaptor
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	static_assert(std::is_floating_point<_DInputType>::value,
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		      "template argument must be a floating point type");
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       public:
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_Adaptor(_Engine& __g)
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_g(__g) { }
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_DInputType
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	min() const
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ return _DInputType(0); }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_DInputType
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	max() const
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ return _DInputType(1); }
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	/*
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	 * Converts a value generated by the adapted random number generator
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	 * into a value in the input domain for the dependent random number
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	 * distribution.
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	 */
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_DInputType
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator()()
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return std::generate_canonical<_DInputType,
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	                            std::numeric_limits<_DInputType>::digits,
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	                            _Engine>(_M_g);
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	}
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       private:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_Engine& _M_g;
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       };
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _Sseq>
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       using __seed_seq_generate_t = decltype(
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  std::declval<_Sseq&>().generate(std::declval<uint_least32_t*>(),
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 					  std::declval<uint_least32_t*>()));
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // Detect whether _Sseq is a valid seed sequence for
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 136


 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // a random number engine _Engine with result type _Res.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     template<typename _Sseq, typename _Engine, typename _Res,
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	     typename _GenerateCheck = __seed_seq_generate_t<_Sseq>>
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       using __is_seed_seq = __and_<
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         __not_<is_same<__remove_cvref_t<_Sseq>, _Engine>>,
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	is_unsigned<typename _Sseq::result_type>,
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	__not_<is_convertible<_Sseq, _Res>>
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       >;
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   } // namespace __detail
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @addtogroup random_generators Random Number Generators
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @ingroup random
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * These classes define objects which provide random or pseudorandom
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * numbers, either from a discrete or a continuous interval.  The
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * random number generator supplied as a part of this library are
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * all uniform random number generators which provide a sequence of
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * random number uniformly distributed over their range.
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * A number generator is a function object with an operator() that
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * takes zero arguments and returns a number.
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * A compliant random number generator must satisfy the following
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * requirements.  <table border=1 cellpadding=10 cellspacing=0>
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * <caption align=top>Random Number Generator Requirements</caption>
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * <tr><td>To be documented.</td></tr> </table>
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @{
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief A model of a linear congruential random number generator.
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * A random number generator that produces pseudorandom numbers via
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * linear function:
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @f[
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *     x_{i+1}\leftarrow(ax_{i} + c) \bmod m 
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @f]
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * The template parameter @p _UIntType must be an unsigned integral type
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * large enough to store values up to (__m-1). If the template parameter
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @p __m is 0, the modulus @p __m used is
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * std::numeric_limits<_UIntType>::max() plus 1. Otherwise, the template
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * parameters @p __a and @p __c must be less than @p __m.
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * The size of the state is @f$1@f$.
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     class linear_congruential_engine
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(std::is_unsigned<_UIntType>::value,
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "result_type must be an unsigned integral type");
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__m == 0u || (__a < __m && __c < __m),
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __m out of bounds");
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 137


 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	using _If_seed_seq = typename enable_if<__detail::__is_seed_seq<
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _Sseq, linear_congruential_engine, _UIntType>::value>::type;
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The type of the generated random value. */
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       typedef _UIntType result_type;
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The multiplier. */
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type multiplier   = __a;
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** An increment. */
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type increment    = __c;
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The modulus. */
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type modulus      = __m;
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type default_seed = 1u;
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a %linear_congruential_engine random number
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        generator engine with seed 1.
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       linear_congruential_engine() : linear_congruential_engine(default_seed)
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { }
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a %linear_congruential_engine random number
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        generator engine with seed @p __s.  The default seed value
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        is 1.
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __s The initial seed value.
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       linear_congruential_engine(result_type __s)
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { seed(__s); }
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a %linear_congruential_engine random number
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        generator engine seeded from the seed sequence @p __q.
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q the seed sequence.
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq, typename = _If_seed_seq<_Sseq>>
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         explicit
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         linear_congruential_engine(_Sseq& __q)
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         { seed(__q); }
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %linear_congruential_engine random number generator
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        engine sequence to the seed @p __s.
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __s The new seed.
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed(result_type __s = default_seed);
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %linear_congruential_engine random number generator
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        engine
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 138


 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * sequence using values from the seed sequence @p __q.
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q the seed sequence.
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         _If_seed_seq<_Sseq>
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         seed(_Sseq& __q);
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the smallest possible value in the output range.
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * The minimum depends on the @p __c parameter: if it is zero, the
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * minimum generated must be > 0, otherwise 0 is allowed.
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       min()
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __c == 0u ? 1u : 0u; }
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the largest possible value in the output range.
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       max()
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __m - 1u; }
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Discard a sequence of random numbers.
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard(unsigned long long __z)
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	for (; __z != 0ULL; --__z)
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  (*this)();
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the next random number in the sequence.
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator()()
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_x = __detail::__mod<_UIntType, __m, __a, __c>(_M_x);
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	return _M_x;
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Compares two linear congruential random number generator
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * objects of the same type for equality.
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lhs A linear congruential random number generator object.
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rhs Another linear congruential random number generator
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              object.
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns true if the infinite sequences of generated values
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *          would be equal, false otherwise.
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       friend bool
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 139


 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator==(const linear_congruential_engine& __lhs,
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		 const linear_congruential_engine& __rhs)
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __lhs._M_x == __rhs._M_x; }
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Writes the textual representation of the state x(i) of x to
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __os.
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __os  The output stream.
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lcr A % linear_congruential_engine random number generator.
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns __os.
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _UIntType1, _UIntType1 __a1, _UIntType1 __c1,
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __m1, typename _CharT, typename _Traits>
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   const std::linear_congruential_engine<_UIntType1,
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __a1, __c1, __m1>& __lcr);
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Sets the state of the engine by reading its textual
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        representation from @p __is.
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * The textual representation must have been previously written using
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an output stream whose imbued locale and whose type's template
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * specialization arguments _CharT and _Traits were the same as those
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * of @p __is.
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __is  The input stream.
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lcr A % linear_congruential_engine random number generator.
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns __is.
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _UIntType1, _UIntType1 __a1, _UIntType1 __c1,
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __m1, typename _CharT, typename _Traits>
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_istream<_CharT, _Traits>&
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   std::linear_congruential_engine<_UIntType1, __a1,
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __c1, __m1>& __lcr);
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     private:
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       _UIntType _M_x;
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     };
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Compares two linear congruential random number generator
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * objects of the same type for inequality.
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __lhs A linear congruential random number generator object.
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __rhs Another linear congruential random number generator
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              object.
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns true if the infinite sequences of generated values
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *          would be different, false otherwise.
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     inline bool
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator!=(const std::linear_congruential_engine<_UIntType, __a,
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 140


 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __c, __m>& __lhs,
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::linear_congruential_engine<_UIntType, __a,
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __c, __m>& __rhs)
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return !(__lhs == __rhs); }
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * A generalized feedback shift register discrete random number generator.
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * This algorithm avoids multiplication and division and is designed to be
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * friendly to a pipelined architecture.  If the parameters are chosen
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * correctly, this generator will produce numbers with a very long period and
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * fairly good apparent entropy, although still not cryptographically strong.
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * The best way to use this generator is with the predefined mt19937 class.
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * This algorithm was originally invented by Makoto Matsumoto and
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * Takuji Nishimura.
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __w  Word size, the number of bits in each element of 
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              the state vector.
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __n  The degree of recursion.
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __m  The period parameter.
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __r  The separation point bit index.
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __a  The last row of the twist matrix.
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __u  The first right-shift tempering matrix parameter.
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __d  The first right-shift tempering matrix mask.
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __s  The first left-shift tempering matrix parameter.
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __b  The first left-shift tempering matrix mask.
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __t  The second left-shift tempering matrix parameter.
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __c  The second left-shift tempering matrix mask.
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __l  The second right-shift tempering matrix parameter.
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @tparam __f  Initialization multiplier.
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _UIntType, size_t __w,
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   size_t __n, size_t __m, size_t __r,
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   _UIntType __b, size_t __t,
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   _UIntType __c, size_t __l, _UIntType __f>
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     class mersenne_twister_engine
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(std::is_unsigned<_UIntType>::value,
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "result_type must be an unsigned integral type");
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(1u <= __m && __m <= __n,
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __m out of bounds");
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__r <= __w, "template argument substituting "
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "__r out of bound");
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__u <= __w, "template argument substituting "
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "__u out of bound");
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__s <= __w, "template argument substituting "
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "__s out of bound");
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__t <= __w, "template argument substituting "
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "__t out of bound");
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__l <= __w, "template argument substituting "
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "__l out of bound");
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__w <= std::numeric_limits<_UIntType>::digits,
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __w out of bound");
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 141


 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__a <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __a out of bound");
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__b <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __b out of bound");
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__c <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __c out of bound");
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__d <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __d out of bound");
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(__f <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __f out of bound");
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	using _If_seed_seq = typename enable_if<__detail::__is_seed_seq<
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _Sseq, mersenne_twister_engine, _UIntType>::value>::type;
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The type of the generated random value. */
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       typedef _UIntType result_type;
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       // parameter values
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      word_size                 = __w;
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      state_size                = __n;
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      shift_size                = __m;
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      mask_bits                 = __r;
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type xor_mask                  = __a;
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      tempering_u               = __u;
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type tempering_d               = __d;
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      tempering_s               = __s;
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type tempering_b               = __b;
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      tempering_t               = __t;
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type tempering_c               = __c;
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      tempering_l               = __l;
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type initialization_multiplier = __f;
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type default_seed = 5489u;
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       // constructors and member functions
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       mersenne_twister_engine() : mersenne_twister_engine(default_seed) { }
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       mersenne_twister_engine(result_type __sd)
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { seed(__sd); }
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a %mersenne_twister_engine random number generator
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        engine seeded from the seed sequence @p __q.
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q the seed sequence.
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq, typename = _If_seed_seq<_Sseq>>
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         explicit
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         mersenne_twister_engine(_Sseq& __q)
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         { seed(__q); }
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed(result_type __sd = default_seed);
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 142


 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         _If_seed_seq<_Sseq>
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         seed(_Sseq& __q);
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the smallest possible value in the output range.
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       min()
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return 0; }
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the largest possible value in the output range.
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       max()
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __detail::_Shift<_UIntType, __w>::__value - 1; }
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Discard a sequence of random numbers.
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard(unsigned long long __z);
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator()();
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Compares two % mersenne_twister_engine random number generator
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        objects of the same type for equality.
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lhs A % mersenne_twister_engine random number generator
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              object.
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rhs Another % mersenne_twister_engine random number
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              generator object.
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns true if the infinite sequences of generated values
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *          would be equal, false otherwise.
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       friend bool
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator==(const mersenne_twister_engine& __lhs,
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		 const mersenne_twister_engine& __rhs)
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return (std::equal(__lhs._M_x, __lhs._M_x + state_size, __rhs._M_x)
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		&& __lhs._M_p == __rhs._M_p); }
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Inserts the current state of a % mersenne_twister_engine
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator engine @p __x into the output stream
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __os.
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __os An output stream.
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A % mersenne_twister_engine random number generator
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *             engine.
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The output stream with the state of @p __x inserted or in
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 143


 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _UIntType1,
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       size_t __w1, size_t __n1,
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       size_t __m1, size_t __r1,
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __a1, size_t __u1,
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __d1, size_t __s1,
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __b1, size_t __t1,
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __c1, size_t __l1, _UIntType1 __f1,
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   const std::mersenne_twister_engine<_UIntType1, __w1, __n1,
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __m1, __r1, __a1, __u1, __d1, __s1, __b1, __t1, __c1,
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __l1, __f1>& __x);
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Extracts the current state of a % mersenne_twister_engine
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator engine @p __x from the input stream
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __is.
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __is An input stream.
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A % mersenne_twister_engine random number generator
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *             engine.
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The input stream with the state of @p __x extracted or in
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _UIntType1,
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       size_t __w1, size_t __n1,
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       size_t __m1, size_t __r1,
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __a1, size_t __u1,
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __d1, size_t __s1,
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __b1, size_t __t1,
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType1 __c1, size_t __l1, _UIntType1 __f1,
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_istream<_CharT, _Traits>&
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   std::mersenne_twister_engine<_UIntType1, __w1, __n1, __m1,
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __r1, __a1, __u1, __d1, __s1, __b1, __t1, __c1,
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __l1, __f1>& __x);
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     private:
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void _M_gen_rand();
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       _UIntType _M_x[state_size];
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       size_t    _M_p;
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     };
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Compares two % mersenne_twister_engine random number generator
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *        objects of the same type for inequality.
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __lhs A % mersenne_twister_engine random number generator
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              object.
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __rhs Another % mersenne_twister_engine random number
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              generator object.
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns true if the infinite sequences of generated values
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 144


 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *          would be different, false otherwise.
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _UIntType, size_t __w,
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   size_t __n, size_t __m, size_t __r,
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   _UIntType __b, size_t __t,
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   _UIntType __c, size_t __l, _UIntType __f>
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     inline bool
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator!=(const std::mersenne_twister_engine<_UIntType, __w, __n, __m,
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>& __lhs,
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::mersenne_twister_engine<_UIntType, __w, __n, __m,
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>& __rhs)
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return !(__lhs == __rhs); }
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief The Marsaglia-Zaman generator.
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * This is a model of a Generalized Fibonacci discrete random number
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * generator, sometimes referred to as the SWC generator.
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * A discrete random number generator that produces pseudorandom
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * numbers using:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @f[
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *     x_{i}\leftarrow(x_{i - s} - x_{i - r} - carry_{i-1}) \bmod m 
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @f]
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * The size of the state is @f$r@f$
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * and the maximum period of the generator is @f$(m^r - m^s - 1)@f$.
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     class subtract_with_carry_engine
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(std::is_unsigned<_UIntType>::value,
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "result_type must be an unsigned integral type");
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(0u < __s && __s < __r,
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "0 < s < r");
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(0u < __w && __w <= std::numeric_limits<_UIntType>::digits,
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __w out of bounds");
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	using _If_seed_seq = typename enable_if<__detail::__is_seed_seq<
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _Sseq, subtract_with_carry_engine, _UIntType>::value>::type;
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The type of the generated random value. */
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       typedef _UIntType result_type;
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       // parameter values
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      word_size    = __w;
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      short_lag    = __s;
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t      long_lag     = __r;
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type default_seed = 19780503u;
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       subtract_with_carry_engine() : subtract_with_carry_engine(default_seed)
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { }
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 145


 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs an explicitly seeded %subtract_with_carry_engine
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator.
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       subtract_with_carry_engine(result_type __sd)
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { seed(__sd); }
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a %subtract_with_carry_engine random number engine
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        seeded from the seed sequence @p __q.
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q the seed sequence.
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq, typename = _If_seed_seq<_Sseq>>
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         explicit
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         subtract_with_carry_engine(_Sseq& __q)
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         { seed(__q); }
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Seeds the initial state @f$x_0@f$ of the random number
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        generator.
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * N1688[4.19] modifies this as follows.  If @p __value == 0,
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * sets value to 19780503.  In any case, with a linear
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * congruential generator lcg(i) having parameters @f$ m_{lcg} =
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * 2147483563, a_{lcg} = 40014, c_{lcg} = 0, and lcg(0) = value
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @f$, sets @f$ x_{-r} \dots x_{-1} @f$ to @f$ lcg(1) \bmod m
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * \dots lcg(r) \bmod m @f$ respectively.  If @f$ x_{-1} = 0 @f$
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * set carry to 1, otherwise sets carry to 0.
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed(result_type __sd = default_seed);
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Seeds the initial state @f$x_0@f$ of the
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * % subtract_with_carry_engine random number generator.
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_If_seed_seq<_Sseq>
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         seed(_Sseq& __q);
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the inclusive minimum value of the range of random
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * integers returned by this generator.
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       min()
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return 0; }
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the inclusive maximum value of the range of random
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * integers returned by this generator.
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       max()
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __detail::_Shift<_UIntType, __w>::__value - 1; }
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 146


 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Discard a sequence of random numbers.
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard(unsigned long long __z)
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	for (; __z != 0ULL; --__z)
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  (*this)();
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the next random number in the sequence.
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator()();
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Compares two % subtract_with_carry_engine random number
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        generator objects of the same type for equality.
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lhs A % subtract_with_carry_engine random number generator
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              object.
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rhs Another % subtract_with_carry_engine random number
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              generator object.
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns true if the infinite sequences of generated values
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *          would be equal, false otherwise.
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       */
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       friend bool
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator==(const subtract_with_carry_engine& __lhs,
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		 const subtract_with_carry_engine& __rhs)
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return (std::equal(__lhs._M_x, __lhs._M_x + long_lag, __rhs._M_x)
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		&& __lhs._M_carry == __rhs._M_carry
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		&& __lhs._M_p == __rhs._M_p); }
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Inserts the current state of a % subtract_with_carry_engine
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator engine @p __x into the output stream
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __os.
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __os An output stream.
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A % subtract_with_carry_engine random number generator
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *             engine.
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The output stream with the state of @p __x inserted or in
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _UIntType1, size_t __w1, size_t __s1, size_t __r1,
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   const std::subtract_with_carry_engine<_UIntType1, __w1,
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __s1, __r1>& __x);
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 147


 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator engine @p __x from the input stream
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __is.
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __is An input stream.
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A % subtract_with_carry_engine random number generator
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *             engine.
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The input stream with the state of @p __x extracted or in
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _UIntType1, size_t __w1, size_t __s1, size_t __r1,
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_istream<_CharT, _Traits>&
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   std::subtract_with_carry_engine<_UIntType1, __w1,
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __s1, __r1>& __x);
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     private:
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /// The state of the generator.  This is a ring buffer.
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       _UIntType  _M_x[long_lag];
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       _UIntType  _M_carry;		///< The carry
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       size_t     _M_p;			///< Current index of x(i - r).
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     };
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Compares two % subtract_with_carry_engine random number
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *        generator objects of the same type for inequality.
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __lhs A % subtract_with_carry_engine random number generator
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              object.
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __rhs Another % subtract_with_carry_engine random number
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              generator object.
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns true if the infinite sequences of generated values
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *          would be different, false otherwise.
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     inline bool
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator!=(const std::subtract_with_carry_engine<_UIntType, __w,
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __s, __r>& __lhs,
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::subtract_with_carry_engine<_UIntType, __w,
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __s, __r>& __rhs)
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return !(__lhs == __rhs); }
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * Produces random numbers from some base engine by discarding blocks of
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * data.
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * 0 <= @p __r <= @p __p
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     class discard_block_engine
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(1 <= __r && __r <= __p,
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __r out of bounds");
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 148


 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The type of the generated random value. */
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       typedef typename _RandomNumberEngine::result_type result_type;
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	using _If_seed_seq = typename enable_if<__detail::__is_seed_seq<
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _Sseq, discard_block_engine, result_type>::value>::type;
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       // parameter values
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t block_size = __p;
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t used_block = __r;
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a default %discard_block_engine engine.
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * The underlying engine is default constructed as well.
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard_block_engine()
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(), _M_n(0) { }
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Copy constructs a %discard_block_engine engine.
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Copies an existing base class random number generator.
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rng An existing (base class) engine object.
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard_block_engine(const _RandomNumberEngine& __rng)
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(__rng), _M_n(0) { }
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Move constructs a %discard_block_engine engine.
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Copies an existing base class random number generator.
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rng An existing (base class) engine object.
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard_block_engine(_RandomNumberEngine&& __rng)
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(std::move(__rng)), _M_n(0) { }
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Seed constructs a %discard_block_engine engine.
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Constructs the underlying generator engine seeded with @p __s.
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __s A seed value for the base class engine.
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard_block_engine(result_type __s)
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(__s), _M_n(0) { }
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Generator construct a %discard_block_engine engine.
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q A seed sequence.
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq, typename = _If_seed_seq<_Sseq>>
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         explicit
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 149


 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         discard_block_engine(_Sseq& __q)
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_b(__q), _M_n(0)
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         { }
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %discard_block_engine object with the default
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        seed for the underlying base class generator engine.
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed()
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_b.seed();
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_n = 0;
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %discard_block_engine object with the default
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        seed for the underlying base class generator engine.
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed(result_type __s)
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_b.seed(__s);
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_n = 0;
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %discard_block_engine object with the given seed
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        sequence.
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q A seed generator function.
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         _If_seed_seq<_Sseq>
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         seed(_Sseq& __q)
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         {
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _M_b.seed(__q);
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _M_n = 0;
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	}
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets a const reference to the underlying generator engine
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        object.
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       const _RandomNumberEngine&
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       base() const noexcept
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _M_b; }
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the minimum value in the generated random number range.
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       min()
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _RandomNumberEngine::min(); }
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the maximum value in the generated random number range.
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 150


 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       max()
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _RandomNumberEngine::max(); }
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Discard a sequence of random numbers.
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard(unsigned long long __z)
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	for (; __z != 0ULL; --__z)
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  (*this)();
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the next value in the generated random number sequence.
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator()();
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Compares two %discard_block_engine random number generator
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        objects of the same type for equality.
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lhs A %discard_block_engine random number generator object.
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rhs Another %discard_block_engine random number generator
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              object.
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns true if the infinite sequences of generated values
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *          would be equal, false otherwise.
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       friend bool
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator==(const discard_block_engine& __lhs,
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		 const discard_block_engine& __rhs)
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __lhs._M_b == __rhs._M_b && __lhs._M_n == __rhs._M_n; }
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Inserts the current state of a %discard_block_engine random
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        number generator engine @p __x into the output stream
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __os.
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __os An output stream.
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A %discard_block_engine random number generator engine.
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The output stream with the state of @p __x inserted or in
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _RandomNumberEngine1, size_t __p1, size_t __r1,
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   const std::discard_block_engine<_RandomNumberEngine1,
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __p1, __r1>& __x);
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator engine @p __x from the input stream
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 151


1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __is.
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __is An input stream.
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A %discard_block_engine random number generator engine.
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The input stream with the state of @p __x extracted or in
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _RandomNumberEngine1, size_t __p1, size_t __r1,
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_istream<_CharT, _Traits>&
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   std::discard_block_engine<_RandomNumberEngine1,
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __p1, __r1>& __x);
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     private:
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       _RandomNumberEngine _M_b;
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       size_t _M_n;
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     };
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Compares two %discard_block_engine random number generator
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *        objects of the same type for inequality.
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __lhs A %discard_block_engine random number generator object.
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __rhs Another %discard_block_engine random number generator
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              object.
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns true if the infinite sequences of generated values
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *          would be different, false otherwise.
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     inline bool
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator!=(const std::discard_block_engine<_RandomNumberEngine, __p,
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __r>& __lhs,
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::discard_block_engine<_RandomNumberEngine, __p,
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __r>& __rhs)
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return !(__lhs == __rhs); }
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * Produces random numbers by combining random numbers from some base
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * engine to produce random numbers with a specifies number of bits @p __w.
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RandomNumberEngine, size_t __w, typename _UIntType>
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     class independent_bits_engine
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(std::is_unsigned<_UIntType>::value,
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "result_type must be an unsigned integral type");
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(0u < __w && __w <= std::numeric_limits<_UIntType>::digits,
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "template argument substituting __w out of bounds");
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	using _If_seed_seq = typename enable_if<__detail::__is_seed_seq<
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _Sseq, independent_bits_engine, _UIntType>::value>::type;
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 152


1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The type of the generated random value. */
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       typedef _UIntType result_type;
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a default %independent_bits_engine engine.
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * The underlying engine is default constructed as well.
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       independent_bits_engine()
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b() { }
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Copy constructs a %independent_bits_engine engine.
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Copies an existing base class random number generator.
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rng An existing (base class) engine object.
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       independent_bits_engine(const _RandomNumberEngine& __rng)
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(__rng) { }
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Move constructs a %independent_bits_engine engine.
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Copies an existing base class random number generator.
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rng An existing (base class) engine object.
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       independent_bits_engine(_RandomNumberEngine&& __rng)
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(std::move(__rng)) { }
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Seed constructs a %independent_bits_engine engine.
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Constructs the underlying generator engine seeded with @p __s.
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __s A seed value for the base class engine.
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       independent_bits_engine(result_type __s)
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(__s) { }
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Generator construct a %independent_bits_engine engine.
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q A seed sequence.
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq, typename = _If_seed_seq<_Sseq>>
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         explicit
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         independent_bits_engine(_Sseq& __q)
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         : _M_b(__q)
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         { }
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %independent_bits_engine object with the default
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        seed for the underlying base class generator engine.
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 153


1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed()
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { _M_b.seed(); }
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %independent_bits_engine object with the default
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        seed for the underlying base class generator engine.
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed(result_type __s)
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { _M_b.seed(__s); }
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %independent_bits_engine object with the given
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        seed sequence.
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q A seed generator function.
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         _If_seed_seq<_Sseq>
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         seed(_Sseq& __q)
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         { _M_b.seed(__q); }
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets a const reference to the underlying generator engine
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        object.
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       const _RandomNumberEngine&
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       base() const noexcept
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _M_b; }
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the minimum value in the generated random number range.
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       min()
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return 0U; }
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the maximum value in the generated random number range.
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       max()
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __detail::_Shift<_UIntType, __w>::__value - 1; }
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Discard a sequence of random numbers.
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard(unsigned long long __z)
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	for (; __z != 0ULL; --__z)
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  (*this)();
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Gets the next value in the generated random number sequence.
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 154


1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator()();
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Compares two %independent_bits_engine random number generator
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * objects of the same type for equality.
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lhs A %independent_bits_engine random number generator
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              object.
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rhs Another %independent_bits_engine random number generator
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              object.
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns true if the infinite sequences of generated values
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *          would be equal, false otherwise.
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       friend bool
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator==(const independent_bits_engine& __lhs,
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		 const independent_bits_engine& __rhs)
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return __lhs._M_b == __rhs._M_b; }
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator engine @p __x from the input stream
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __is.
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __is An input stream.
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A %independent_bits_engine random number generator
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *             engine.
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The input stream with the state of @p __x extracted or in
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *          an error state.
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _CharT, typename _Traits>
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_istream<_CharT, _Traits>&
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   std::independent_bits_engine<_RandomNumberEngine,
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __w, _UIntType>& __x)
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  __is >> __x._M_b;
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __is;
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	}
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     private:
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       _RandomNumberEngine _M_b;
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     };
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Compares two %independent_bits_engine random number generator
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * objects of the same type for inequality.
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __lhs A %independent_bits_engine random number generator
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              object.
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __rhs Another %independent_bits_engine random number generator
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              object.
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns true if the infinite sequences of generated values
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *          would be different, false otherwise.
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 155


1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RandomNumberEngine, size_t __w, typename _UIntType>
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     inline bool
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator!=(const std::independent_bits_engine<_RandomNumberEngine, __w,
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType>& __lhs,
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::independent_bits_engine<_RandomNumberEngine, __w,
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       _UIntType>& __rhs)
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return !(__lhs == __rhs); }
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Inserts the current state of a %independent_bits_engine random
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *        number generator engine @p __x into the output stream @p __os.
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __os An output stream.
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __x  A %independent_bits_engine random number generator engine.
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns The output stream with the state of @p __x inserted or in
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *          an error state.
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RandomNumberEngine, size_t __w, typename _UIntType,
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	   typename _CharT, typename _Traits>
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     std::basic_ostream<_CharT, _Traits>&
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::independent_bits_engine<_RandomNumberEngine,
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __w, _UIntType>& __x)
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       __os << __x.base();
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       return __os;
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     }
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Produces random numbers by combining random numbers from some
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * base engine to produce random numbers with a specifies number of bits
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @p __k.
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RandomNumberEngine, size_t __k>
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     class shuffle_order_engine
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(1u <= __k, "template argument substituting "
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "__k out of bound");
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The type of the generated random value. */
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       typedef typename _RandomNumberEngine::result_type result_type;
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	using _If_seed_seq = typename enable_if<__detail::__is_seed_seq<
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _Sseq, shuffle_order_engine, result_type>::value>::type;
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr size_t table_size = __k;
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a default %shuffle_order_engine engine.
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * The underlying engine is default constructed as well.
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       shuffle_order_engine()
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 156


1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b()
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { _M_initialize(); }
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Copy constructs a %shuffle_order_engine engine.
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Copies an existing base class random number generator.
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rng An existing (base class) engine object.
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       shuffle_order_engine(const _RandomNumberEngine& __rng)
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(__rng)
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { _M_initialize(); }
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Move constructs a %shuffle_order_engine engine.
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Copies an existing base class random number generator.
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rng An existing (base class) engine object.
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       shuffle_order_engine(_RandomNumberEngine&& __rng)
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(std::move(__rng))
1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { _M_initialize(); }
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Seed constructs a %shuffle_order_engine engine.
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Constructs the underlying generator engine seeded with @p __s.
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __s A seed value for the base class engine.
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       shuffle_order_engine(result_type __s)
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_b(__s)
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { _M_initialize(); }
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Generator construct a %shuffle_order_engine engine.
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q A seed sequence.
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq, typename = _If_seed_seq<_Sseq>>
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         explicit
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         shuffle_order_engine(_Sseq& __q)
1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         : _M_b(__q)
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         { _M_initialize(); }
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %shuffle_order_engine object with the default seed
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****                 for the underlying base class generator engine.
1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed()
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_b.seed();
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_initialize();
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 157


1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %shuffle_order_engine object with the default seed
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        for the underlying base class generator engine.
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       seed(result_type __s)
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_b.seed(__s);
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_initialize();
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Reseeds the %shuffle_order_engine object with the given seed
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        sequence.
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __q A seed generator function.
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _Sseq>
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         _If_seed_seq<_Sseq>
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         seed(_Sseq& __q)
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         {
1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _M_b.seed(__q);
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _M_initialize();
1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	}
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Gets a const reference to the underlying generator engine object.
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       const _RandomNumberEngine&
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       base() const noexcept
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _M_b; }
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Gets the minimum value in the generated random number range.
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       min()
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _RandomNumberEngine::min(); }
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Gets the maximum value in the generated random number range.
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static constexpr result_type
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       max()
1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _RandomNumberEngine::max(); }
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Discard a sequence of random numbers.
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       discard(unsigned long long __z)
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	for (; __z != 0ULL; --__z)
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  (*this)();
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 158


1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Gets the next value in the generated random number sequence.
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator()();
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Compares two %shuffle_order_engine random number generator objects
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * of the same type for equality.
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __lhs A %shuffle_order_engine random number generator object.
1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __rhs Another %shuffle_order_engine random number generator
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *              object.
1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns true if the infinite sequences of generated values
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *          would be equal, false otherwise.
1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       */
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       friend bool
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       operator==(const shuffle_order_engine& __lhs,
1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		 const shuffle_order_engine& __rhs)
1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return (__lhs._M_b == __rhs._M_b
1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		&& std::equal(__lhs._M_v, __lhs._M_v + __k, __rhs._M_v)
1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		&& __lhs._M_y == __rhs._M_y); }
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Inserts the current state of a %shuffle_order_engine random
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        number generator engine @p __x into the output stream
1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	@p __os.
1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __os An output stream.
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A %shuffle_order_engine random number generator engine.
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The output stream with the state of @p __x inserted or in
1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _RandomNumberEngine1, size_t __k1,
1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   const std::shuffle_order_engine<_RandomNumberEngine1,
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   __k1>& __x);
1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        random number generator engine @p __x from the input stream
1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *        @p __is.
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __is An input stream.
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __x  A %shuffle_order_engine random number generator engine.
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @returns The input stream with the state of @p __x extracted or in
1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * an error state.
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _RandomNumberEngine1, size_t __k1,
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       typename _CharT, typename _Traits>
1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend std::basic_istream<_CharT, _Traits>&
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   std::shuffle_order_engine<_RandomNumberEngine1, __k1>& __x);
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 159


1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     private:
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void _M_initialize()
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	for (size_t __i = 0; __i < __k; ++__i)
1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  _M_v[__i] = _M_b();
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_M_y = _M_b();
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       }
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       _RandomNumberEngine _M_b;
1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type _M_v[__k];
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type _M_y;
1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     };
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * Compares two %shuffle_order_engine random number generator objects
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * of the same type for inequality.
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __lhs A %shuffle_order_engine random number generator object.
1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __rhs Another %shuffle_order_engine random number generator
1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *              object.
1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns true if the infinite sequences of generated values
1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *          would be different, false otherwise.
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RandomNumberEngine, size_t __k>
1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     inline bool
1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator!=(const std::shuffle_order_engine<_RandomNumberEngine,
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __k>& __lhs,
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::shuffle_order_engine<_RandomNumberEngine,
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       __k>& __rhs)
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return !(__lhs == __rhs); }
1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * The classic Minimum Standard rand0 of Lewis, Goodman, and Miller.
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef linear_congruential_engine<uint_fast32_t, 16807UL, 0UL, 2147483647UL>
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   minstd_rand0;
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * An alternative LCR (Lehmer Generator function).
1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef linear_congruential_engine<uint_fast32_t, 48271UL, 0UL, 2147483647UL>
1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   minstd_rand;
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * The classic Mersenne Twister.
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * Reference:
1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * M. Matsumoto and T. Nishimura, Mersenne Twister: A 623-Dimensionally
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * Equidistributed Uniform Pseudo-Random Number Generator, ACM Transactions
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * on Modeling and Computer Simulation, Vol. 8, No. 1, January 1998, pp 3-30.
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef mersenne_twister_engine<
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     uint_fast32_t,
1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     32, 624, 397, 31,
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 160


1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0x9908b0dfUL, 11,
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0xffffffffUL, 7,
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0x9d2c5680UL, 15,
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0xefc60000UL, 18, 1812433253UL> mt19937;
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * An alternative Mersenne Twister.
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef mersenne_twister_engine<
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     uint_fast64_t,
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     64, 312, 156, 31,
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0xb5026f5aa96619e9ULL, 29,
1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0x5555555555555555ULL, 17,
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0x71d67fffeda60000ULL, 37,
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     0xfff7eee000000000ULL, 43,
1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     6364136223846793005ULL> mt19937_64;
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef subtract_with_carry_engine<uint_fast32_t, 24, 10, 24>
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     ranlux24_base;
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef subtract_with_carry_engine<uint_fast64_t, 48, 5, 12>
1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     ranlux48_base;
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef discard_block_engine<ranlux24_base, 223, 23> ranlux24;
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef discard_block_engine<ranlux48_base, 389, 11> ranlux48;
1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef shuffle_order_engine<minstd_rand0, 256> knuth_b;
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   typedef minstd_rand0 default_random_engine;
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * A standard interface to a platform-specific non-deterministic
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * random number generator (if any are available).
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   class random_device
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   {
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   public:
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     /** The type of the generated random value. */
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     typedef unsigned int result_type;
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // constructors, destructors and member functions
1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     random_device() { _M_init("default"); }
 2959              		.loc 18 1607 5
 2960              		.cfi_startproc
 2961              		@ args = 0, pretend = 0, frame = 40
 2962              		@ frame_needed = 1, uses_anonymous_args = 0
 2963 0000 80B5     		push	{r7, lr}
 2964              		.cfi_def_cfa_offset 8
 2965              		.cfi_offset 7, -8
 2966              		.cfi_offset 14, -4
 2967 0002 8AB0     		sub	sp, sp, #40
 2968              		.cfi_def_cfa_offset 48
 2969 0004 00AF     		add	r7, sp, #0
 2970              		.cfi_def_cfa_register 7
 2971 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 161


 2972              	.LBB26:
 2973              		.loc 18 1607 40
 2974 0008 07F12403 		add	r3, r7, #36
 2975 000c 1846     		mov	r0, r3
 2976 000e FFF7FEFF 		bl	_ZNSaIcEC1Ev
 2977 0012 07F12402 		add	r2, r7, #36
 2978 0016 07F10C03 		add	r3, r7, #12
 2979 001a 0C49     		ldr	r1, .L117
 2980 001c 1846     		mov	r0, r3
 2981 001e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
 2982              		.loc 18 1607 30
 2983 0022 07F10C03 		add	r3, r7, #12
 2984 0026 1946     		mov	r1, r3
 2985 0028 7868     		ldr	r0, [r7, #4]
 2986 002a FFF7FEFF 		bl	_ZNSt13random_device7_M_initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 2987              		.loc 18 1607 40
 2988 002e 07F10C03 		add	r3, r7, #12
 2989 0032 1846     		mov	r0, r3
 2990 0034 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 2991              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** /** @file bits/basic_string.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifndef _BASIC_STRING_H
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #define _BASIC_STRING_H 1
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #pragma GCC system_header
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 162


  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/atomicity.h>
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/alloc_traits.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <debug/debug.h>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <initializer_list>
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # include <string_view>
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** {
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @class basic_string basic_string.h <string>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup strings
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup sequences
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _CharT  Type of character
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                   char_traits<_CharT>.
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     class basic_string
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Types:
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Traits					traits_type;
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Traits::char_type		value_type;
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 163


  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 							const_iterator;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Value returned by various member functions when they fail.
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     protected:
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // type used for positions in insert, erase etc.
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef iterator __const_iterator;
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef const_iterator __const_iterator;
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // A helper type for avoiding boiler-plate.
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename _Res>
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	using _If_sv = enable_if_t<
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _Res>;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allows an implicit conversion to __sv_type.
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static __sv_type
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __svt; }
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // allows to add an internal constructor that does not
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // participate in overload resolution when a string_view
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // is provided.
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct __sv_wrapper
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__sv_type _M_sv;
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          wrapper.
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svw  string view wrapper.
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 164


 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	pointer _M_p; // The actual data.
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _Alloc_hider	_M_dataplus;
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type		_M_string_length;
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       union
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type        _M_allocated_capacity;
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data(pointer __p)
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_length(size_type __length)
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data() const
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_local_data()
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return pointer(_M_local_buf);
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_pointer
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_local_data() const
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return const_pointer(_M_local_buf);
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 165


 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_capacity(size_type __capacity)
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_set_length(size_type __n)
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_length(__n);
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_is_local() const
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Create & Destroy
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_create(size_type&, size_type);
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_dispose()
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_is_local())
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_destroy(size_type __size) throw()
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           _M_construct(__beg, __end, _Tag());
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Integer>
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__req, __c); }
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 166


 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     std::input_iterator_tag);
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // string::iterator, _CharT*, etc.
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _FwdIterator>
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     std::forward_iterator_tag);
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type&
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_get_allocator()
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const allocator_type&
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_get_allocator() const
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, bool _Requires =
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ typedef basic_string& __type; };
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__pos > this->size())
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "this->size() (which is %zu)"),
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __s, __pos, this->size());
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __pos;
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 167


 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_length_error(__N(__s));
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // True if _Rep and source do not overlap.
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // When __n = 1 way faster than the general multichar
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // traits_type::copy/move/assign.
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::move(__d, __s, __n);
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, __c);
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // to optimize for the common case of pointers as iterators.
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Iterator>
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static void
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 168


 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static int
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return int(__d);
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_assign(const basic_string&);
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __len2);
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Construct/copy/destroy:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Default constructor creates an empty string.
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string()
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 169


 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str)
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc())
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start = __str._M_data()
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n)
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start = __str._M_data()
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n, const _Alloc& __a)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 170


 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source character %array.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  has no special meaning.
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc())
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__s, __s + __n); }
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a C string.
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source C string.
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 2992              		.loc 19 525 59
 2993 0038 07F12403 		add	r3, r7, #36
 2994 003c 1846     		mov	r0, r3
 2995 003e FFF7FEFF 		bl	_ZNSaIcED1Ev
 2996              	.LBE26:
 2997              		.loc 18 1607 43
 2998 0042 7B68     		ldr	r3, [r7, #4]
 2999 0044 1846     		mov	r0, r3
 3000 0046 2837     		adds	r7, r7, #40
 3001              		.cfi_def_cfa_offset 8
 3002 0048 BD46     		mov	sp, r7
 3003              		.cfi_def_cfa_register 13
 3004              		@ sp needed
 3005 004a 80BD     		pop	{r7, pc}
 3006              	.L118:
 3007              		.align	2
 3008              	.L117:
 3009 004c 00000000 		.word	.LC0
 3010              		.cfi_endproc
 3011              	.LFE3864:
 3013              		.weak	_ZNSt13random_deviceC1Ev
 3014              		.thumb_set _ZNSt13random_deviceC1Ev,_ZNSt13random_deviceC2Ev
 3015              		.section	.text._ZNSt13random_deviceclEv,"axG",%progbits,_ZNSt13random_deviceclEv,comdat
 3016              		.align	1
 3017              		.weak	_ZNSt13random_deviceclEv
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 171


 3018              		.syntax unified
 3019              		.thumb
 3020              		.thumb_func
 3021              		.fpu fpv5-d16
 3023              	_ZNSt13random_deviceclEv:
 3024              	.LFB3872:
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     explicit
1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     random_device(const std::string& __token) { _M_init(__token); }
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #if defined _GLIBCXX_USE_DEV_RANDOM
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     ~random_device()
1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { _M_fini(); }
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #endif
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     static constexpr result_type
1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     min()
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return std::numeric_limits<result_type>::min(); }
1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     static constexpr result_type
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     max()
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return std::numeric_limits<result_type>::max(); }
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     double
1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     entropy() const noexcept
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #ifdef _GLIBCXX_USE_DEV_RANDOM
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       return this->_M_getentropy();
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #else
1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       return 0.0;
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** #endif
1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     }
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     result_type
1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator()()
 3025              		.loc 18 1636 5
 3026              		.cfi_startproc
 3027              		@ args = 0, pretend = 0, frame = 8
 3028              		@ frame_needed = 1, uses_anonymous_args = 0
 3029 0000 80B5     		push	{r7, lr}
 3030              		.cfi_def_cfa_offset 8
 3031              		.cfi_offset 7, -8
 3032              		.cfi_offset 14, -4
 3033 0002 82B0     		sub	sp, sp, #8
 3034              		.cfi_def_cfa_offset 16
 3035 0004 00AF     		add	r7, sp, #0
 3036              		.cfi_def_cfa_register 7
 3037 0006 7860     		str	r0, [r7, #4]
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return this->_M_getval(); }
 3038              		.loc 18 1637 29
 3039 0008 7868     		ldr	r0, [r7, #4]
 3040 000a FFF7FEFF 		bl	_ZNSt13random_device9_M_getvalEv
 3041 000e 0346     		mov	r3, r0
 3042              		.loc 18 1637 33
 3043 0010 1846     		mov	r0, r3
 3044 0012 0837     		adds	r7, r7, #8
 3045              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 172


 3046 0014 BD46     		mov	sp, r7
 3047              		.cfi_def_cfa_register 13
 3048              		@ sp needed
 3049 0016 80BD     		pop	{r7, pc}
 3050              		.cfi_endproc
 3051              	.LFE3872:
 3053              		.section	.rodata._ZN7daisyspL9kRandFracE,"a"
 3054              		.align	2
 3057              	_ZN7daisyspL9kRandFracE:
 3058 0000 00000030 		.word	805306368
 3059              		.section	.rodata._ZN7daisyspL11kOneTwelfthE,"a"
 3060              		.align	2
 3063              	_ZN7daisyspL11kOneTwelfthE:
 3064 0000 ABAAAA3D 		.word	1034594987
 3065              		.section	.text._ZN7daisysp3SvfC2Ev,"axG",%progbits,_ZN7daisysp3SvfC5Ev,comdat
 3066              		.align	1
 3067              		.weak	_ZN7daisysp3SvfC2Ev
 3068              		.syntax unified
 3069              		.thumb
 3070              		.thumb_func
 3071              		.fpu fpv5-d16
 3073              	_ZN7daisysp3SvfC2Ev:
 3074              	.LFB4491:
 3075              		.file 20 "../../DaisySP/Source/Filters/svf.h"
   1:../../DaisySP/Source/Filters/svf.h **** #pragma once
   2:../../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
   4:../../DaisySP/Source/Filters/svf.h **** 
   5:../../DaisySP/Source/Filters/svf.h **** namespace daisysp
   6:../../DaisySP/Source/Filters/svf.h **** {
   7:../../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../../DaisySP/Source/Filters/svf.h **** 
   9:../../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../../DaisySP/Source/Filters/svf.h **** 
  11:../../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../../DaisySP/Source/Filters/svf.h **** 
  13:../../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../../DaisySP/Source/Filters/svf.h **** 
  16:../../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../../DaisySP/Source/Filters/svf.h **** */
  18:../../DaisySP/Source/Filters/svf.h **** class Svf
  19:../../DaisySP/Source/Filters/svf.h **** {
  20:../../DaisySP/Source/Filters/svf.h ****   public:
  21:../../DaisySP/Source/Filters/svf.h ****     Svf() {}
 3076              		.loc 20 21 5
 3077              		.cfi_startproc
 3078              		@ args = 0, pretend = 0, frame = 8
 3079              		@ frame_needed = 1, uses_anonymous_args = 0
 3080              		@ link register save eliminated.
 3081 0000 80B4     		push	{r7}
 3082              		.cfi_def_cfa_offset 4
 3083              		.cfi_offset 7, -4
 3084 0002 83B0     		sub	sp, sp, #12
 3085              		.cfi_def_cfa_offset 16
 3086 0004 00AF     		add	r7, sp, #0
 3087              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 173


 3088 0006 7860     		str	r0, [r7, #4]
 3089              		.loc 20 21 12
 3090 0008 7B68     		ldr	r3, [r7, #4]
 3091 000a 1846     		mov	r0, r3
 3092 000c 0C37     		adds	r7, r7, #12
 3093              		.cfi_def_cfa_offset 4
 3094 000e BD46     		mov	sp, r7
 3095              		.cfi_def_cfa_register 13
 3096              		@ sp needed
 3097 0010 5DF8047B 		ldr	r7, [sp], #4
 3098              		.cfi_restore 7
 3099              		.cfi_def_cfa_offset 0
 3100 0014 7047     		bx	lr
 3101              		.cfi_endproc
 3102              	.LFE4491:
 3104              		.weak	_ZN7daisysp3SvfC1Ev
 3105              		.thumb_set _ZN7daisysp3SvfC1Ev,_ZN7daisysp3SvfC2Ev
 3106              		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 3107              		.align	1
 3108              		.weak	_ZN7daisysp3SvfD2Ev
 3109              		.syntax unified
 3110              		.thumb
 3111              		.thumb_func
 3112              		.fpu fpv5-d16
 3114              	_ZN7daisysp3SvfD2Ev:
 3115              	.LFB4494:
  22:../../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 3116              		.loc 20 22 5
 3117              		.cfi_startproc
 3118              		@ args = 0, pretend = 0, frame = 8
 3119              		@ frame_needed = 1, uses_anonymous_args = 0
 3120              		@ link register save eliminated.
 3121 0000 80B4     		push	{r7}
 3122              		.cfi_def_cfa_offset 4
 3123              		.cfi_offset 7, -4
 3124 0002 83B0     		sub	sp, sp, #12
 3125              		.cfi_def_cfa_offset 16
 3126 0004 00AF     		add	r7, sp, #0
 3127              		.cfi_def_cfa_register 7
 3128 0006 7860     		str	r0, [r7, #4]
 3129              		.loc 20 22 13
 3130 0008 7B68     		ldr	r3, [r7, #4]
 3131 000a 1846     		mov	r0, r3
 3132 000c 0C37     		adds	r7, r7, #12
 3133              		.cfi_def_cfa_offset 4
 3134 000e BD46     		mov	sp, r7
 3135              		.cfi_def_cfa_register 13
 3136              		@ sp needed
 3137 0010 5DF8047B 		ldr	r7, [sp], #4
 3138              		.cfi_restore 7
 3139              		.cfi_def_cfa_offset 0
 3140 0014 7047     		bx	lr
 3141              		.cfi_endproc
 3142              	.LFE4494:
 3144              		.weak	_ZN7daisysp3SvfD1Ev
 3145              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 3146              		.section	.text._ZN7daisysp18SyntheticSnareDrumC2Ev,"axG",%progbits,_ZN7daisysp18SyntheticSnareDrum
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 174


 3147              		.align	1
 3148              		.weak	_ZN7daisysp18SyntheticSnareDrumC2Ev
 3149              		.syntax unified
 3150              		.thumb
 3151              		.thumb_func
 3152              		.fpu fpv5-d16
 3154              	_ZN7daisysp18SyntheticSnareDrumC2Ev:
 3155              	.LFB4558:
 3156              		.file 21 "../../DaisySP/Source/Drums/synthsnaredrum.h"
   1:../../DaisySP/Source/Drums/synthsnaredrum.h **** #pragma once
   2:../../DaisySP/Source/Drums/synthsnaredrum.h **** #ifndef DSY_SYNTHSD_H
   3:../../DaisySP/Source/Drums/synthsnaredrum.h **** #define DSY_SYNTHSD_H
   4:../../DaisySP/Source/Drums/synthsnaredrum.h **** 
   5:../../DaisySP/Source/Drums/synthsnaredrum.h **** #include "Filters/svf.h"
   6:../../DaisySP/Source/Drums/synthsnaredrum.h **** 
   7:../../DaisySP/Source/Drums/synthsnaredrum.h **** #include <stdint.h>
   8:../../DaisySP/Source/Drums/synthsnaredrum.h **** #ifdef __cplusplus
   9:../../DaisySP/Source/Drums/synthsnaredrum.h **** 
  10:../../DaisySP/Source/Drums/synthsnaredrum.h **** /** @file synthsnaredrum.h */
  11:../../DaisySP/Source/Drums/synthsnaredrum.h **** 
  12:../../DaisySP/Source/Drums/synthsnaredrum.h **** namespace daisysp
  13:../../DaisySP/Source/Drums/synthsnaredrum.h **** {
  14:../../DaisySP/Source/Drums/synthsnaredrum.h **** /**  
  15:../../DaisySP/Source/Drums/synthsnaredrum.h ****        @brief Naive snare drum model (two modulated oscillators + filtered noise).
  16:../../DaisySP/Source/Drums/synthsnaredrum.h ****        @author Ben Sergentanis
  17:../../DaisySP/Source/Drums/synthsnaredrum.h ****        @date Jan 2021
  18:../../DaisySP/Source/Drums/synthsnaredrum.h ****        Uses a few magic numbers taken from the 909 schematics: \n 
  19:../../DaisySP/Source/Drums/synthsnaredrum.h ****        - Ratio between the two modes of the drum set to 1.47. \n
  20:../../DaisySP/Source/Drums/synthsnaredrum.h ****        - Funky coupling between the two modes. \n
  21:../../DaisySP/Source/Drums/synthsnaredrum.h ****        - Noise coloration filters and envelope shapes for the snare. \n \n
  22:../../DaisySP/Source/Drums/synthsnaredrum.h ****        Ported from pichenettes/eurorack/plaits/dsp/drums/synthetic_snare_drum.h \n
  23:../../DaisySP/Source/Drums/synthsnaredrum.h ****        to an independent module. \n
  24:../../DaisySP/Source/Drums/synthsnaredrum.h ****        Original code written by Emilie Gillet in 2016. \n
  25:../../DaisySP/Source/Drums/synthsnaredrum.h **** */
  26:../../DaisySP/Source/Drums/synthsnaredrum.h **** class SyntheticSnareDrum
  27:../../DaisySP/Source/Drums/synthsnaredrum.h **** {
  28:../../DaisySP/Source/Drums/synthsnaredrum.h ****   public:
  29:../../DaisySP/Source/Drums/synthsnaredrum.h ****     SyntheticSnareDrum() {}
 3157              		.loc 21 29 5
 3158              		.cfi_startproc
 3159              		@ args = 0, pretend = 0, frame = 8
 3160              		@ frame_needed = 1, uses_anonymous_args = 0
 3161 0000 80B5     		push	{r7, lr}
 3162              		.cfi_def_cfa_offset 8
 3163              		.cfi_offset 7, -8
 3164              		.cfi_offset 14, -4
 3165 0002 82B0     		sub	sp, sp, #8
 3166              		.cfi_def_cfa_offset 16
 3167 0004 00AF     		add	r7, sp, #0
 3168              		.cfi_def_cfa_register 7
 3169 0006 7860     		str	r0, [r7, #4]
 3170              	.LBB27:
 3171              		.loc 21 29 26
 3172 0008 7B68     		ldr	r3, [r7, #4]
 3173 000a 3833     		adds	r3, r3, #56
 3174 000c 1846     		mov	r0, r3
 3175 000e FFF7FEFF 		bl	_ZN7daisysp3SvfC1Ev
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 175


 3176 0012 7B68     		ldr	r3, [r7, #4]
 3177 0014 8433     		adds	r3, r3, #132
 3178 0016 1846     		mov	r0, r3
 3179 0018 FFF7FEFF 		bl	_ZN7daisysp3SvfC1Ev
 3180 001c 7B68     		ldr	r3, [r7, #4]
 3181 001e D033     		adds	r3, r3, #208
 3182 0020 1846     		mov	r0, r3
 3183 0022 FFF7FEFF 		bl	_ZN7daisysp3SvfC1Ev
 3184              	.LBE27:
 3185              		.loc 21 29 27
 3186 0026 7B68     		ldr	r3, [r7, #4]
 3187 0028 1846     		mov	r0, r3
 3188 002a 0837     		adds	r7, r7, #8
 3189              		.cfi_def_cfa_offset 8
 3190 002c BD46     		mov	sp, r7
 3191              		.cfi_def_cfa_register 13
 3192              		@ sp needed
 3193 002e 80BD     		pop	{r7, pc}
 3194              		.cfi_endproc
 3195              	.LFE4558:
 3197              		.weak	_ZN7daisysp18SyntheticSnareDrumC1Ev
 3198              		.thumb_set _ZN7daisysp18SyntheticSnareDrumC1Ev,_ZN7daisysp18SyntheticSnareDrumC2Ev
 3199              		.section	.text._ZN7daisysp18SyntheticSnareDrumD2Ev,"axG",%progbits,_ZN7daisysp18SyntheticSnareDrum
 3200              		.align	1
 3201              		.weak	_ZN7daisysp18SyntheticSnareDrumD2Ev
 3202              		.syntax unified
 3203              		.thumb
 3204              		.thumb_func
 3205              		.fpu fpv5-d16
 3207              	_ZN7daisysp18SyntheticSnareDrumD2Ev:
 3208              	.LFB4561:
  30:../../DaisySP/Source/Drums/synthsnaredrum.h ****     ~SyntheticSnareDrum() {}
 3209              		.loc 21 30 5
 3210              		.cfi_startproc
 3211              		@ args = 0, pretend = 0, frame = 8
 3212              		@ frame_needed = 1, uses_anonymous_args = 0
 3213 0000 80B5     		push	{r7, lr}
 3214              		.cfi_def_cfa_offset 8
 3215              		.cfi_offset 7, -8
 3216              		.cfi_offset 14, -4
 3217 0002 82B0     		sub	sp, sp, #8
 3218              		.cfi_def_cfa_offset 16
 3219 0004 00AF     		add	r7, sp, #0
 3220              		.cfi_def_cfa_register 7
 3221 0006 7860     		str	r0, [r7, #4]
 3222              	.LBB28:
 3223              		.loc 21 30 27
 3224 0008 7B68     		ldr	r3, [r7, #4]
 3225 000a D033     		adds	r3, r3, #208
 3226 000c 1846     		mov	r0, r3
 3227 000e FFF7FEFF 		bl	_ZN7daisysp3SvfD1Ev
 3228 0012 7B68     		ldr	r3, [r7, #4]
 3229 0014 8433     		adds	r3, r3, #132
 3230 0016 1846     		mov	r0, r3
 3231 0018 FFF7FEFF 		bl	_ZN7daisysp3SvfD1Ev
 3232 001c 7B68     		ldr	r3, [r7, #4]
 3233 001e 3833     		adds	r3, r3, #56
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 176


 3234 0020 1846     		mov	r0, r3
 3235 0022 FFF7FEFF 		bl	_ZN7daisysp3SvfD1Ev
 3236              	.LBE28:
 3237              		.loc 21 30 28
 3238 0026 7B68     		ldr	r3, [r7, #4]
 3239 0028 1846     		mov	r0, r3
 3240 002a 0837     		adds	r7, r7, #8
 3241              		.cfi_def_cfa_offset 8
 3242 002c BD46     		mov	sp, r7
 3243              		.cfi_def_cfa_register 13
 3244              		@ sp needed
 3245 002e 80BD     		pop	{r7, pc}
 3246              		.cfi_endproc
 3247              	.LFE4561:
 3249              		.weak	_ZN7daisysp18SyntheticSnareDrumD1Ev
 3250              		.thumb_set _ZN7daisysp18SyntheticSnareDrumD1Ev,_ZN7daisysp18SyntheticSnareDrumD2Ev
 3251              		.section	.text._ZN7daisysp5MetroC2Ev,"axG",%progbits,_ZN7daisysp5MetroC5Ev,comdat
 3252              		.align	1
 3253              		.weak	_ZN7daisysp5MetroC2Ev
 3254              		.syntax unified
 3255              		.thumb
 3256              		.thumb_func
 3257              		.fpu fpv5-d16
 3259              	_ZN7daisysp5MetroC2Ev:
 3260              	.LFB5015:
 3261              		.file 22 "../../DaisySP/Source/Utility/metro.h"
   1:../../DaisySP/Source/Utility/metro.h **** #pragma once
   2:../../DaisySP/Source/Utility/metro.h **** #ifndef DSY_METRO_H
   3:../../DaisySP/Source/Utility/metro.h **** #define DSY_METRO_H
   4:../../DaisySP/Source/Utility/metro.h **** #include <stdint.h>
   5:../../DaisySP/Source/Utility/metro.h **** #ifdef __cplusplus
   6:../../DaisySP/Source/Utility/metro.h **** 
   7:../../DaisySP/Source/Utility/metro.h **** namespace daisysp
   8:../../DaisySP/Source/Utility/metro.h **** {
   9:../../DaisySP/Source/Utility/metro.h **** /** Creates a clock signal at a specific frequency.
  10:../../DaisySP/Source/Utility/metro.h **** */
  11:../../DaisySP/Source/Utility/metro.h **** class Metro
  12:../../DaisySP/Source/Utility/metro.h **** {
  13:../../DaisySP/Source/Utility/metro.h ****   public:
  14:../../DaisySP/Source/Utility/metro.h ****     Metro() {}
 3262              		.loc 22 14 5
 3263              		.cfi_startproc
 3264              		@ args = 0, pretend = 0, frame = 8
 3265              		@ frame_needed = 1, uses_anonymous_args = 0
 3266              		@ link register save eliminated.
 3267 0000 80B4     		push	{r7}
 3268              		.cfi_def_cfa_offset 4
 3269              		.cfi_offset 7, -4
 3270 0002 83B0     		sub	sp, sp, #12
 3271              		.cfi_def_cfa_offset 16
 3272 0004 00AF     		add	r7, sp, #0
 3273              		.cfi_def_cfa_register 7
 3274 0006 7860     		str	r0, [r7, #4]
 3275              		.loc 22 14 14
 3276 0008 7B68     		ldr	r3, [r7, #4]
 3277 000a 1846     		mov	r0, r3
 3278 000c 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 177


 3279              		.cfi_def_cfa_offset 4
 3280 000e BD46     		mov	sp, r7
 3281              		.cfi_def_cfa_register 13
 3282              		@ sp needed
 3283 0010 5DF8047B 		ldr	r7, [sp], #4
 3284              		.cfi_restore 7
 3285              		.cfi_def_cfa_offset 0
 3286 0014 7047     		bx	lr
 3287              		.cfi_endproc
 3288              	.LFE5015:
 3290              		.weak	_ZN7daisysp5MetroC1Ev
 3291              		.thumb_set _ZN7daisysp5MetroC1Ev,_ZN7daisysp5MetroC2Ev
 3292              		.section	.text._ZN7daisysp5MetroD2Ev,"axG",%progbits,_ZN7daisysp5MetroD5Ev,comdat
 3293              		.align	1
 3294              		.weak	_ZN7daisysp5MetroD2Ev
 3295              		.syntax unified
 3296              		.thumb
 3297              		.thumb_func
 3298              		.fpu fpv5-d16
 3300              	_ZN7daisysp5MetroD2Ev:
 3301              	.LFB5018:
  15:../../DaisySP/Source/Utility/metro.h ****     ~Metro() {}
 3302              		.loc 22 15 5
 3303              		.cfi_startproc
 3304              		@ args = 0, pretend = 0, frame = 8
 3305              		@ frame_needed = 1, uses_anonymous_args = 0
 3306              		@ link register save eliminated.
 3307 0000 80B4     		push	{r7}
 3308              		.cfi_def_cfa_offset 4
 3309              		.cfi_offset 7, -4
 3310 0002 83B0     		sub	sp, sp, #12
 3311              		.cfi_def_cfa_offset 16
 3312 0004 00AF     		add	r7, sp, #0
 3313              		.cfi_def_cfa_register 7
 3314 0006 7860     		str	r0, [r7, #4]
 3315              		.loc 22 15 15
 3316 0008 7B68     		ldr	r3, [r7, #4]
 3317 000a 1846     		mov	r0, r3
 3318 000c 0C37     		adds	r7, r7, #12
 3319              		.cfi_def_cfa_offset 4
 3320 000e BD46     		mov	sp, r7
 3321              		.cfi_def_cfa_register 13
 3322              		@ sp needed
 3323 0010 5DF8047B 		ldr	r7, [sp], #4
 3324              		.cfi_restore 7
 3325              		.cfi_def_cfa_offset 0
 3326 0014 7047     		bx	lr
 3327              		.cfi_endproc
 3328              	.LFE5018:
 3330              		.weak	_ZN7daisysp5MetroD1Ev
 3331              		.thumb_set _ZN7daisysp5MetroD1Ev,_ZN7daisysp5MetroD2Ev
 3332              		.section	.rodata._ZN9constantsL10samplerateE,"a"
 3333              		.align	3
 3336              	_ZN9constantsL10samplerateE:
 3337 0000 00000000 		.word	0
 3338 0004 0070E740 		.word	1088909312
 3339              		.section	.text._ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev,"axG",%progbits,_ZNSt12_Vector_baseId
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 178


 3340              		.align	1
 3341              		.weak	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev
 3342              		.syntax unified
 3343              		.thumb
 3344              		.thumb_func
 3345              		.fpu fpv5-d16
 3347              	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev:
 3348              	.LFB5052:
 3349              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_vector
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Vector implementation -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1996
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this  software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 179


  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /** @file bits/stl_vector.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifndef _STL_VECTOR_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _STL_VECTOR_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/functexcept.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/concept_check.h>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <initializer_list>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201703L
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # include <compare>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <debug/assertions.h>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** extern "C" void
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** __sanitizer_annotate_contiguous_container(const void*, const void*,
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  const void*, const void*);
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** {
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc>
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     struct _Vector_base
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        	pointer;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl_data
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_start;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_finish;
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_end_of_storage;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data() _GLIBCXX_NOEXCEPT
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage(__x._M_end_of_storage)
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 180


 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_start = __x._M_start;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // information used by TBAA.
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Vector_impl_data __tmp;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __tmp._M_copy_data(*this);
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_copy_data(__x);
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __x._M_copy_data(__tmp);
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl
 3350              		.loc 23 128 14
 3351              		.cfi_startproc
 3352              		@ args = 0, pretend = 0, frame = 8
 3353              		@ frame_needed = 1, uses_anonymous_args = 0
 3354 0000 80B5     		push	{r7, lr}
 3355              		.cfi_def_cfa_offset 8
 3356              		.cfi_offset 7, -8
 3357              		.cfi_offset 14, -4
 3358 0002 82B0     		sub	sp, sp, #8
 3359              		.cfi_def_cfa_offset 16
 3360 0004 00AF     		add	r7, sp, #0
 3361              		.cfi_def_cfa_register 7
 3362 0006 7860     		str	r0, [r7, #4]
 3363              	.LBB29:
 3364              		.loc 23 128 14
 3365 0008 7868     		ldr	r0, [r7, #4]
 3366 000a FFF7FEFF 		bl	_ZNSaIdED2Ev
 3367              	.LBE29:
 3368 000e 7B68     		ldr	r3, [r7, #4]
 3369 0010 1846     		mov	r0, r3
 3370 0012 0837     		adds	r7, r7, #8
 3371              		.cfi_def_cfa_offset 8
 3372 0014 BD46     		mov	sp, r7
 3373              		.cfi_def_cfa_register 13
 3374              		@ sp needed
 3375 0016 80BD     		pop	{r7, pc}
 3376              		.cfi_endproc
 3377              	.LFE5052:
 3379              		.weak	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD1Ev
 3380              		.thumb_set _ZNSt12_Vector_baseIdSaIdEE12_Vector_implD1Ev,_ZNSt12_Vector_baseIdSaIdEE12_Vector_impl
 3381              		.section	.text._ZNSt12_Vector_baseIdSaIdEEC2Ev,"axG",%progbits,_ZNSt12_Vector_baseIdSaIdEEC5Ev,com
 3382              		.align	1
 3383              		.weak	_ZNSt12_Vector_baseIdSaIdEEC2Ev
 3384              		.syntax unified
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 181


 3385              		.thumb
 3386              		.thumb_func
 3387              		.fpu fpv5-d16
 3389              	_ZNSt12_Vector_baseIdSaIdEEC2Ev:
 3390              	.LFB5054:
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type()
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Not defaulted, to enforce noexcept(true) even when
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// !is_nothrow_move_constructible<_Tp_alloc_type>.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Vector_impl&& __x) noexcept
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a))
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a, _Vector_impl&& __rv) noexcept
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)), _Vector_impl_data(std::move(__rv))
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename = _Tp_alloc_type>
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_shrink(_Vector_impl&, size_type) { }
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_on_dealloc(_Vector_impl&) { }
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef _Vector_impl& _Reinit;
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl&, size_type) { }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type) { }
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Enable ASan annotations for memory obtained from std::allocator.
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename _Up>
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan<allocator<_Up> >
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 182


 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Adjust ASan annotation for [_M_start, _M_end_of_storage) to
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // mark end of valid region as __curr instead of __prev.
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_adjust(_Vector_impl& __impl, pointer __prev, pointer __curr)
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __sanitizer_annotate_contiguous_container(__impl._M_start,
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  __impl._M_end_of_storage, __prev, __curr);
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_grow(_Vector_impl& __impl, size_type __n)
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish, __impl._M_finish + __n); }
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_shrink(_Vector_impl& __impl, size_type __n)
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish + __n, __impl._M_finish); }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_on_dealloc(_Vector_impl& __impl)
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      if (__impl._M_start)
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_adjust(__impl, __impl._M_finish, __impl._M_end_of_storage);
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Used on reallocation to tell ASan unused capacity is invalid.
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Reinit
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      explicit _Reinit(_Vector_impl& __impl) : _M_impl(__impl)
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as valid again before deallocating it.
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_on_dealloc(_M_impl);
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Reinit()
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as invalid after reallocation.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		if (_M_impl._M_start)
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _S_adjust(_M_impl, _M_impl._M_end_of_storage,
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    _M_impl._M_finish);
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit(const _Reinit&) = delete;
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit& operator=(const _Reinit&) = delete;
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Tell ASan when unused capacity is initialized to be valid.
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl& __impl, size_type __n)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      : _M_impl(__impl), _M_n(__n)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      { _S_grow(_M_impl, __n); }
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 183


 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Grow() { if (_M_n) _S_shrink(_M_impl, _M_n); }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type __n) { _M_n -= __n; }
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(const _Grow&) = delete;
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow& operator=(const _Grow&) = delete;
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    private:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      size_type _M_n;
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT \
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Reinit const \
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __reinit_guard(this->_M_impl)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n) \
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Grow \
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __grow_guard(this->_M_impl, (n))
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n) __grow_guard._M_grew(n)
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n) \
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_shrink(this->_M_impl, n)
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC \
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_on_dealloc(this->_M_impl)
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else // ! (_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR)
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n)
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc allocator_type;
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp_alloc_type&
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp_alloc_type&
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       allocator_type
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() = default;
 3391              		.loc 23 288 7
 3392              		.cfi_startproc
 3393              		@ args = 0, pretend = 0, frame = 8
 3394              		@ frame_needed = 1, uses_anonymous_args = 0
 3395 0000 80B5     		push	{r7, lr}
 3396              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 184


 3397              		.cfi_offset 7, -8
 3398              		.cfi_offset 14, -4
 3399 0002 82B0     		sub	sp, sp, #8
 3400              		.cfi_def_cfa_offset 16
 3401 0004 00AF     		add	r7, sp, #0
 3402              		.cfi_def_cfa_register 7
 3403 0006 7860     		str	r0, [r7, #4]
 3404              	.LBB30:
 3405              		.loc 23 288 7
 3406 0008 7B68     		ldr	r3, [r7, #4]
 3407 000a 1846     		mov	r0, r3
 3408 000c FFF7FEFF 		bl	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC1Ev
 3409              	.LBE30:
 3410 0010 7B68     		ldr	r3, [r7, #4]
 3411 0012 1846     		mov	r0, r3
 3412 0014 0837     		adds	r7, r7, #8
 3413              		.cfi_def_cfa_offset 8
 3414 0016 BD46     		mov	sp, r7
 3415              		.cfi_def_cfa_register 13
 3416              		@ sp needed
 3417 0018 80BD     		pop	{r7, pc}
 3418              		.cfi_endproc
 3419              	.LFE5054:
 3421              		.weak	_ZNSt12_Vector_baseIdSaIdEEC1Ev
 3422              		.thumb_set _ZNSt12_Vector_baseIdSaIdEEC1Ev,_ZNSt12_Vector_baseIdSaIdEEC2Ev
 3423              		.section	.text._ZNSt6vectorIdSaIdEEC2Ev,"axG",%progbits,_ZNSt6vectorIdSaIdEEC5Ev,comdat
 3424              		.align	1
 3425              		.weak	_ZNSt6vectorIdSaIdEEC2Ev
 3426              		.syntax unified
 3427              		.thumb
 3428              		.thumb_func
 3429              		.fpu fpv5-d16
 3431              	_ZNSt6vectorIdSaIdEEC2Ev:
 3432              	.LFB5056:
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() { }
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if !_GLIBCXX_INLINE_VERSION
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n)
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl()
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&&) = default;
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if !_GLIBCXX_INLINE_VERSION
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 185


 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(std::move(__a)) { }
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__x.get_allocator() == __a)
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _M_create_storage(__n);
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a, _Vector_base&& __x)
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_deallocate(_M_impl._M_start,
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_impl _M_impl;
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pointer
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_allocate(size_t __n)
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__p)
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_create_storage(size_t __n)
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     };
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /**
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @brief A standard container which offers fixed time access to
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 186


 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  individual elements in any order.
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @ingroup sequences
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Tp  Type of element.
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  elements in any order and saves the user from worrying about
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  also provided as with C-style arrays.
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   */
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Concept requirements.
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus < 201103L
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have a non-const, non-volatile value_type");
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus > 201703L || defined __STRICT_ANSI__
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have the same value_type as its allocator");
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Tp					value_type;
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::pointer			pointer;
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator;
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef size_t					size_type;
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef ptrdiff_t					difference_type;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 187


 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc					allocator_type;
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(true_type)
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return noexcept(std::__relocate_a(std::declval<pointer>(),
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<_Tp_alloc_type&>()));
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(false_type)
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return false; }
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_use_relocate()
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Instantiating std::__relocate_a might cause an error outside the
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// immediate context (in __relocate_object_a's noexcept-specifier),
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// so only do it if we know the type can be move-inserted into *this.
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_nothrow_relocate(__is_move_insertable<_Tp_alloc_type>{});
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer __first, pointer __last, pointer __result,
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return std::__relocate_a(__first, __last, __result, __alloc);
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer, pointer, pointer __result,
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type&, false_type) noexcept
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return __result; }
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_relocate(pointer __first, pointer __last, pointer __result,
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	using __do_it = __bool_constant<_S_use_relocate()>;
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // C++11
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_allocate;
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_deallocate;
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_impl;
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 188


 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() = default;
 3433              		.loc 23 487 7
 3434              		.cfi_startproc
 3435              		@ args = 0, pretend = 0, frame = 8
 3436              		@ frame_needed = 1, uses_anonymous_args = 0
 3437 0000 80B5     		push	{r7, lr}
 3438              		.cfi_def_cfa_offset 8
 3439              		.cfi_offset 7, -8
 3440              		.cfi_offset 14, -4
 3441 0002 82B0     		sub	sp, sp, #8
 3442              		.cfi_def_cfa_offset 16
 3443 0004 00AF     		add	r7, sp, #0
 3444              		.cfi_def_cfa_register 7
 3445 0006 7860     		str	r0, [r7, #4]
 3446              	.LBB31:
 3447              		.loc 23 487 7
 3448 0008 7B68     		ldr	r3, [r7, #4]
 3449 000a 1846     		mov	r0, r3
 3450 000c FFF7FEFF 		bl	_ZNSt12_Vector_baseIdSaIdEEC2Ev
 3451              	.LBE31:
 3452 0010 7B68     		ldr	r3, [r7, #4]
 3453 0012 1846     		mov	r0, r3
 3454 0014 0837     		adds	r7, r7, #8
 3455              		.cfi_def_cfa_offset 8
 3456 0016 BD46     		mov	sp, r7
 3457              		.cfi_def_cfa_register 13
 3458              		@ sp needed
 3459 0018 80BD     		pop	{r7, pc}
 3460              		.cfi_endproc
 3461              	.LFE5056:
 3463              		.weak	_ZNSt6vectorIdSaIdEEC1Ev
 3464              		.thumb_set _ZNSt6vectorIdSaIdEEC1Ev,_ZNSt6vectorIdSaIdEEC2Ev
 3465              		.section	.text._ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev,"axG",%progbits,_ZNSt13_Bvector_base
 3466              		.align	1
 3467              		.weak	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev
 3468              		.syntax unified
 3469              		.thumb
 3470              		.thumb_func
 3471              		.fpu fpv5-d16
 3473              	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev:
 3474              	.LFB5061:
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   template<typename _Alloc>
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     struct _Bvector_base
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****         rebind<_Bit_type>::other _Bit_alloc_type;
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Bit_alloc_type>
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_alloc_traits;
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef typename _Bit_alloc_traits::pointer _Bit_pointer;
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       struct _Bvector_impl_data
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 189


 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_iterator 	_M_start;
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_iterator 	_M_finish;
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_pointer 	_M_end_of_storage;
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bvector_impl_data() _GLIBCXX_NOEXCEPT
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bvector_impl_data(_Bvector_impl_data&& __x) noexcept
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish)
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	, _M_end_of_storage(__x._M_end_of_storage)
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_move_data(_Bvector_impl_data&& __x) noexcept
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  this->_M_start = __x._M_start;
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  this->_M_finish = __x._M_finish;
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  this->_M_end_of_storage = __x._M_end_of_storage;
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __x._M_reset();
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_reset() _GLIBCXX_NOEXCEPT
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_start = _M_finish = _Bit_iterator();
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       };
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       struct _Bvector_impl
 3475              		.loc 6 495 14
 3476              		.cfi_startproc
 3477              		@ args = 0, pretend = 0, frame = 8
 3478              		@ frame_needed = 1, uses_anonymous_args = 0
 3479 0000 80B5     		push	{r7, lr}
 3480              		.cfi_def_cfa_offset 8
 3481              		.cfi_offset 7, -8
 3482              		.cfi_offset 14, -4
 3483 0002 82B0     		sub	sp, sp, #8
 3484              		.cfi_def_cfa_offset 16
 3485 0004 00AF     		add	r7, sp, #0
 3486              		.cfi_def_cfa_register 7
 3487 0006 7860     		str	r0, [r7, #4]
 3488              	.LBB32:
 3489              		.loc 6 495 14
 3490 0008 7868     		ldr	r0, [r7, #4]
 3491 000a FFF7FEFF 		bl	_ZNSaImED2Ev
 3492              	.LBE32:
 3493 000e 7B68     		ldr	r3, [r7, #4]
 3494 0010 1846     		mov	r0, r3
 3495 0012 0837     		adds	r7, r7, #8
 3496              		.cfi_def_cfa_offset 8
 3497 0014 BD46     		mov	sp, r7
 3498              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 190


 3499              		@ sp needed
 3500 0016 80BD     		pop	{r7, pc}
 3501              		.cfi_endproc
 3502              	.LFE5061:
 3504              		.weak	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD1Ev
 3505              		.thumb_set _ZNSt13_Bvector_baseISaIbEE13_Bvector_implD1Ev,_ZNSt13_Bvector_baseISaIbEE13_Bvector_im
 3506              		.section	.text._ZNSt13_Bvector_baseISaIbEEC2Ev,"axG",%progbits,_ZNSt13_Bvector_baseISaIbEEC5Ev,com
 3507              		.align	1
 3508              		.weak	_ZNSt13_Bvector_baseISaIbEEC2Ev
 3509              		.syntax unified
 3510              		.thumb
 3511              		.thumb_func
 3512              		.fpu fpv5-d16
 3514              	_ZNSt13_Bvector_baseISaIbEEC2Ev:
 3515              	.LFB5063:
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	public:
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _Bvector_impl() _GLIBCXX_NOEXCEPT_IF(
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		is_nothrow_default_constructible<_Bit_alloc_type>::value)
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  : _Bit_alloc_type()
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  { }
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _Bvector_impl(const _Bit_alloc_type& __a) _GLIBCXX_NOEXCEPT
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  : _Bit_alloc_type(__a)
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  { }
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bvector_impl(_Bvector_impl&&) = default;
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_type*
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_end_addr() const _GLIBCXX_NOEXCEPT
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  if (this->_M_end_of_storage)
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  return 0;
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       };
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     public:
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef _Alloc allocator_type;
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _Bit_alloc_type&
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_get_Bit_allocator() _GLIBCXX_NOEXCEPT
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl; }
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const _Bit_alloc_type&
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_get_Bit_allocator() const _GLIBCXX_NOEXCEPT
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl; }
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       allocator_type
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return allocator_type(_M_get_Bit_allocator()); }
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _Bvector_base() = default;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 191


 3516              		.loc 6 537 7
 3517              		.cfi_startproc
 3518              		@ args = 0, pretend = 0, frame = 8
 3519              		@ frame_needed = 1, uses_anonymous_args = 0
 3520 0000 80B5     		push	{r7, lr}
 3521              		.cfi_def_cfa_offset 8
 3522              		.cfi_offset 7, -8
 3523              		.cfi_offset 14, -4
 3524 0002 82B0     		sub	sp, sp, #8
 3525              		.cfi_def_cfa_offset 16
 3526 0004 00AF     		add	r7, sp, #0
 3527              		.cfi_def_cfa_register 7
 3528 0006 7860     		str	r0, [r7, #4]
 3529              	.LBB33:
 3530              		.loc 6 537 7
 3531 0008 7B68     		ldr	r3, [r7, #4]
 3532 000a 1846     		mov	r0, r3
 3533 000c FFF7FEFF 		bl	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC1Ev
 3534              	.LBE33:
 3535 0010 7B68     		ldr	r3, [r7, #4]
 3536 0012 1846     		mov	r0, r3
 3537 0014 0837     		adds	r7, r7, #8
 3538              		.cfi_def_cfa_offset 8
 3539 0016 BD46     		mov	sp, r7
 3540              		.cfi_def_cfa_register 13
 3541              		@ sp needed
 3542 0018 80BD     		pop	{r7, pc}
 3543              		.cfi_endproc
 3544              	.LFE5063:
 3546              		.weak	_ZNSt13_Bvector_baseISaIbEEC1Ev
 3547              		.thumb_set _ZNSt13_Bvector_baseISaIbEEC1Ev,_ZNSt13_Bvector_baseISaIbEEC2Ev
 3548              		.section	.text._ZNSt6vectorIbSaIbEEC2Ev,"axG",%progbits,_ZNSt6vectorIbSaIbEEC5Ev,comdat
 3549              		.align	1
 3550              		.weak	_ZNSt6vectorIbSaIbEEC2Ev
 3551              		.syntax unified
 3552              		.thumb
 3553              		.thumb_func
 3554              		.fpu fpv5-d16
 3556              	_ZNSt6vectorIbSaIbEEC2Ev:
 3557              	.LFB5065:
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _Bvector_base() { }
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _Bvector_base(const allocator_type& __a)
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _M_impl(__a) { }
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _Bvector_base(_Bvector_base&&) = default;
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       ~_Bvector_base()
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     protected:
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _Bvector_impl _M_impl;
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 192


 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _Bit_pointer
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_allocate(size_t __n)
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return _Bit_alloc_traits::allocate(_M_impl, _S_nword(__n)); }
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_deallocate()
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (_M_impl._M_start._M_p)
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    const size_t __n = _M_impl._M_end_addr() - _M_impl._M_start._M_p;
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _Bit_alloc_traits::deallocate(_M_impl,
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 					  _M_impl._M_end_of_storage - __n,
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 					  __n);
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_impl._M_reset();
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_move_data(_Bvector_base&& __x) noexcept
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_impl._M_move_data(std::move(__x._M_impl)); }
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       static size_t
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _S_nword(size_t __n)
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** _GLIBCXX_END_NAMESPACE_VERSION
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** } // namespace std
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // Declare a partial specialization of vector<T, Alloc>.
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #include <bits/stl_vector.h>
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** namespace std _GLIBCXX_VISIBILITY(default)
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** {
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   /**
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  @brief  A specialization of vector for booleans which offers fixed time
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  access to individual elements in any order.
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  @ingroup sequences
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  @tparam _Alloc  Allocator type.
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  Note that vector<bool> does not actually meet the requirements for being
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  a container.  This is because the reference and pointer types are not
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  really references and pointers to bool.  See DR96 for details.  @see
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  vector for function documentation.
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  In some terminology a %vector can be described as a dynamic
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  C-style array, it offers fast and efficient access to individual
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  elements in any order and saves the user from worrying about
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 193


 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  also provided as with C-style arrays.
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   */
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   template<typename _Alloc>
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     class vector<bool, _Alloc> : protected _Bvector_base<_Alloc>
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef _Bvector_base<_Alloc>			_Base;
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef typename _Base::_Bit_pointer		_Bit_pointer;
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef typename _Base::_Bit_alloc_traits		_Bit_alloc_traits;
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       friend struct std::hash<vector>;
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     public:
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef bool					value_type;
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef size_t					size_type;
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef ptrdiff_t					difference_type;
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef _Bit_reference				reference;
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef bool					const_reference;
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef _Bit_reference*				pointer;
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef const bool*				const_pointer;
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef _Bit_iterator				iterator;
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef _Bit_const_iterator			const_iterator;
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef _Alloc					allocator_type;
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       allocator_type
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       get_allocator() const
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return _Base::get_allocator(); }
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     protected:
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       using _Base::_M_allocate;
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       using _Base::_M_deallocate;
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       using _Base::_S_nword;
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       using _Base::_M_get_Bit_allocator;
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     public:
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector() = default;
 3558              		.loc 6 651 7
 3559              		.cfi_startproc
 3560              		@ args = 0, pretend = 0, frame = 8
 3561              		@ frame_needed = 1, uses_anonymous_args = 0
 3562 0000 80B5     		push	{r7, lr}
 3563              		.cfi_def_cfa_offset 8
 3564              		.cfi_offset 7, -8
 3565              		.cfi_offset 14, -4
 3566 0002 82B0     		sub	sp, sp, #8
 3567              		.cfi_def_cfa_offset 16
 3568 0004 00AF     		add	r7, sp, #0
 3569              		.cfi_def_cfa_register 7
 3570 0006 7860     		str	r0, [r7, #4]
 3571              	.LBB34:
 3572              		.loc 6 651 7
 3573 0008 7B68     		ldr	r3, [r7, #4]
 3574 000a 1846     		mov	r0, r3
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 194


 3575 000c FFF7FEFF 		bl	_ZNSt13_Bvector_baseISaIbEEC2Ev
 3576              	.LBE34:
 3577 0010 7B68     		ldr	r3, [r7, #4]
 3578 0012 1846     		mov	r0, r3
 3579 0014 0837     		adds	r7, r7, #8
 3580              		.cfi_def_cfa_offset 8
 3581 0016 BD46     		mov	sp, r7
 3582              		.cfi_def_cfa_register 13
 3583              		@ sp needed
 3584 0018 80BD     		pop	{r7, pc}
 3585              		.cfi_endproc
 3586              	.LFE5065:
 3588              		.weak	_ZNSt6vectorIbSaIbEEC1Ev
 3589              		.thumb_set _ZNSt6vectorIbSaIbEEC1Ev,_ZNSt6vectorIbSaIbEEC2Ev
 3590              		.section	.text._ZN1k9KnobMultiC2Ev,"axG",%progbits,_ZN1k9KnobMultiC5Ev,comdat
 3591              		.align	1
 3592              		.weak	_ZN1k9KnobMultiC2Ev
 3593              		.syntax unified
 3594              		.thumb
 3595              		.thumb_func
 3596              		.fpu fpv5-d16
 3598              	_ZN1k9KnobMultiC2Ev:
 3599              	.LFB5067:
 3600              		.file 24 "./include/KnobMulti.hpp"
   1:./include/KnobMulti.hpp **** #ifndef K_KNOBMULTI_23
   2:./include/KnobMulti.hpp **** #define K_KNOBMULTI_23
   3:./include/KnobMulti.hpp **** 
   4:./include/KnobMulti.hpp **** #include <vector>
   5:./include/KnobMulti.hpp **** #include <cmath>
   6:./include/KnobMulti.hpp **** 
   7:./include/KnobMulti.hpp **** namespace k
   8:./include/KnobMulti.hpp **** {
   9:./include/KnobMulti.hpp ****     class KnobMulti
  10:./include/KnobMulti.hpp ****     {
  11:./include/KnobMulti.hpp ****     public:
  12:./include/KnobMulti.hpp **** 
  13:./include/KnobMulti.hpp **** 		KnobMulti()
 3601              		.loc 24 13 3
 3602              		.cfi_startproc
 3603              		@ args = 0, pretend = 0, frame = 8
 3604              		@ frame_needed = 1, uses_anonymous_args = 0
 3605 0000 80B5     		push	{r7, lr}
 3606              		.cfi_def_cfa_offset 8
 3607              		.cfi_offset 7, -8
 3608              		.cfi_offset 14, -4
 3609 0002 82B0     		sub	sp, sp, #8
 3610              		.cfi_def_cfa_offset 16
 3611 0004 00AF     		add	r7, sp, #0
 3612              		.cfi_def_cfa_register 7
 3613 0006 7860     		str	r0, [r7, #4]
 3614              	.LBB35:
  14:./include/KnobMulti.hpp **** 		{
 3615              		.loc 24 14 3
 3616 0008 7B68     		ldr	r3, [r7, #4]
 3617 000a 1E4A     		ldr	r2, .L147
 3618 000c 5A60     		str	r2, [r3, #4]	@ float
 3619 000e 7968     		ldr	r1, [r7, #4]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 195


 3620 0010 4FF00002 		mov	r2, #0
 3621 0014 4FF00003 		mov	r3, #0
 3622 0018 C1E90223 		strd	r2, [r1, #8]
 3623 001c 7968     		ldr	r1, [r7, #4]
 3624 001e 4FF00002 		mov	r2, #0
 3625 0022 4FF00003 		mov	r3, #0
 3626 0026 C1E90423 		strd	r2, [r1, #16]
 3627 002a 7B68     		ldr	r3, [r7, #4]
 3628 002c 1833     		adds	r3, r3, #24
 3629 002e 1846     		mov	r0, r3
 3630 0030 FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEEC1Ev
 3631 0034 7B68     		ldr	r3, [r7, #4]
 3632 0036 2433     		adds	r3, r3, #36
 3633 0038 1846     		mov	r0, r3
 3634 003a FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEEC1Ev
 3635 003e 7B68     		ldr	r3, [r7, #4]
 3636 0040 3033     		adds	r3, r3, #48
 3637 0042 1846     		mov	r0, r3
 3638 0044 FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEEC1Ev
 3639 0048 7B68     		ldr	r3, [r7, #4]
 3640 004a 3C33     		adds	r3, r3, #60
 3641 004c 1846     		mov	r0, r3
 3642 004e FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEEC1Ev
 3643 0052 7B68     		ldr	r3, [r7, #4]
 3644 0054 0022     		movs	r2, #0
 3645 0056 83F85020 		strb	r2, [r3, #80]
 3646 005a 7B68     		ldr	r3, [r7, #4]
 3647 005c 0022     		movs	r2, #0
 3648 005e 83F85120 		strb	r2, [r3, #81]
 3649 0062 7B68     		ldr	r3, [r7, #4]
 3650 0064 0022     		movs	r2, #0
 3651 0066 83F85220 		strb	r2, [r3, #82]
 3652 006a 7B68     		ldr	r3, [r7, #4]
 3653 006c 0022     		movs	r2, #0
 3654 006e 83F85320 		strb	r2, [r3, #83]
 3655 0072 7B68     		ldr	r3, [r7, #4]
 3656 0074 0022     		movs	r2, #0
 3657 0076 83F85420 		strb	r2, [r3, #84]
 3658              	.LBE35:
  15:./include/KnobMulti.hpp **** 
  16:./include/KnobMulti.hpp **** 		}
 3659              		.loc 24 16 3
 3660 007a 7B68     		ldr	r3, [r7, #4]
 3661 007c 1846     		mov	r0, r3
 3662 007e 0837     		adds	r7, r7, #8
 3663              		.cfi_def_cfa_offset 8
 3664 0080 BD46     		mov	sp, r7
 3665              		.cfi_def_cfa_register 13
 3666              		@ sp needed
 3667 0082 80BD     		pop	{r7, pc}
 3668              	.L148:
 3669              		.align	2
 3670              	.L147:
 3671 0084 CDCC4C3D 		.word	1028443341
 3672              		.cfi_endproc
 3673              	.LFE5067:
 3675              		.weak	_ZN1k9KnobMultiC1Ev
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 196


 3676              		.thumb_set _ZN1k9KnobMultiC1Ev,_ZN1k9KnobMultiC2Ev
 3677              		.section	.text._ZN1k9KnobMulti4InitEi,"axG",%progbits,_ZN1k9KnobMulti4InitEi,comdat
 3678              		.align	1
 3679              		.weak	_ZN1k9KnobMulti4InitEi
 3680              		.syntax unified
 3681              		.thumb
 3682              		.thumb_func
 3683              		.fpu fpv5-d16
 3685              	_ZN1k9KnobMulti4InitEi:
 3686              	.LFB5069:
  17:./include/KnobMulti.hpp **** 
  18:./include/KnobMulti.hpp ****         // KnobMulti(int shiftLayers) {
  19:./include/KnobMulti.hpp ****         //     windowSize = 0.05;
  20:./include/KnobMulti.hpp ****         //     layers = shiftLayers;
  21:./include/KnobMulti.hpp ****         //     initShiftValues();
  22:./include/KnobMulti.hpp ****         // }
  23:./include/KnobMulti.hpp **** 
  24:./include/KnobMulti.hpp ****         // KnobMulti(double w)
  25:./include/KnobMulti.hpp ****         // {
  26:./include/KnobMulti.hpp ****         //     windowSize = w;
  27:./include/KnobMulti.hpp ****         // }
  28:./include/KnobMulti.hpp **** 
  29:./include/KnobMulti.hpp ****         // KnobMulti(double w, double init)
  30:./include/KnobMulti.hpp ****         // {
  31:./include/KnobMulti.hpp ****         //     windowSize = w;
  32:./include/KnobMulti.hpp ****         //     value = init;
  33:./include/KnobMulti.hpp ****         //     shiftValues[0] = init;
  34:./include/KnobMulti.hpp ****         //     retValues[0] = init;
  35:./include/KnobMulti.hpp ****         //     retShifts[0] = init;
  36:./include/KnobMulti.hpp ****         //     sFlags[0] = true;
  37:./include/KnobMulti.hpp ****         //     layers = 1;
  38:./include/KnobMulti.hpp ****         // }
  39:./include/KnobMulti.hpp **** 
  40:./include/KnobMulti.hpp **** 		void Init(int shiftLayers) {
 3687              		.loc 24 40 8
 3688              		.cfi_startproc
 3689              		@ args = 0, pretend = 0, frame = 8
 3690              		@ frame_needed = 1, uses_anonymous_args = 0
 3691 0000 80B5     		push	{r7, lr}
 3692              		.cfi_def_cfa_offset 8
 3693              		.cfi_offset 7, -8
 3694              		.cfi_offset 14, -4
 3695 0002 82B0     		sub	sp, sp, #8
 3696              		.cfi_def_cfa_offset 16
 3697 0004 00AF     		add	r7, sp, #0
 3698              		.cfi_def_cfa_register 7
 3699 0006 7860     		str	r0, [r7, #4]
 3700 0008 3960     		str	r1, [r7]
  41:./include/KnobMulti.hpp **** 			windowSize = 0.08;
 3701              		.loc 24 41 15
 3702 000a 7B68     		ldr	r3, [r7, #4]
 3703 000c 054A     		ldr	r2, .L150
 3704 000e 5A60     		str	r2, [r3, #4]	@ float
  42:./include/KnobMulti.hpp ****             layers = shiftLayers;
 3705              		.loc 24 42 20
 3706 0010 7B68     		ldr	r3, [r7, #4]
 3707 0012 3A68     		ldr	r2, [r7]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 197


 3708 0014 1A60     		str	r2, [r3]
  43:./include/KnobMulti.hpp ****             initShiftValues();
 3709              		.loc 24 43 28
 3710 0016 7868     		ldr	r0, [r7, #4]
 3711 0018 FFF7FEFF 		bl	_ZN1k9KnobMulti15initShiftValuesEv
  44:./include/KnobMulti.hpp **** 		}
 3712              		.loc 24 44 3
 3713 001c 00BF     		nop
 3714 001e 0837     		adds	r7, r7, #8
 3715              		.cfi_def_cfa_offset 8
 3716 0020 BD46     		mov	sp, r7
 3717              		.cfi_def_cfa_register 13
 3718              		@ sp needed
 3719 0022 80BD     		pop	{r7, pc}
 3720              	.L151:
 3721              		.align	2
 3722              	.L150:
 3723 0024 0AD7A33D 		.word	1034147594
 3724              		.cfi_endproc
 3725              	.LFE5069:
 3727              		.section	.text._ZN1k9KnobMulti8getValueEv,"axG",%progbits,_ZN1k9KnobMulti8getValueEv,comdat
 3728              		.align	1
 3729              		.weak	_ZN1k9KnobMulti8getValueEv
 3730              		.syntax unified
 3731              		.thumb
 3732              		.thumb_func
 3733              		.fpu fpv5-d16
 3735              	_ZN1k9KnobMulti8getValueEv:
 3736              	.LFB5070:
  45:./include/KnobMulti.hpp **** 
  46:./include/KnobMulti.hpp ****        double getValue()
 3737              		.loc 24 46 15
 3738              		.cfi_startproc
 3739              		@ args = 0, pretend = 0, frame = 8
 3740              		@ frame_needed = 1, uses_anonymous_args = 0
 3741              		@ link register save eliminated.
 3742 0000 80B4     		push	{r7}
 3743              		.cfi_def_cfa_offset 4
 3744              		.cfi_offset 7, -4
 3745 0002 83B0     		sub	sp, sp, #12
 3746              		.cfi_def_cfa_offset 16
 3747 0004 00AF     		add	r7, sp, #0
 3748              		.cfi_def_cfa_register 7
 3749 0006 7860     		str	r0, [r7, #4]
  47:./include/KnobMulti.hpp ****         {
  48:./include/KnobMulti.hpp ****             return value;
 3750              		.loc 24 48 20
 3751 0008 7B68     		ldr	r3, [r7, #4]
 3752 000a D3E90223 		ldrd	r2, [r3, #8]
 3753 000e 43EC172B 		vmov	d7, r2, r3
  49:./include/KnobMulti.hpp ****         }
 3754              		.loc 24 49 9
 3755 0012 B0EE470B 		vmov.f64	d0, d7
 3756 0016 0C37     		adds	r7, r7, #12
 3757              		.cfi_def_cfa_offset 4
 3758 0018 BD46     		mov	sp, r7
 3759              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 198


 3760              		@ sp needed
 3761 001a 5DF8047B 		ldr	r7, [sp], #4
 3762              		.cfi_restore 7
 3763              		.cfi_def_cfa_offset 0
 3764 001e 7047     		bx	lr
 3765              		.cfi_endproc
 3766              	.LFE5070:
 3768              		.section	.text._ZN1k9KnobMulti5shiftEbi,"axG",%progbits,_ZN1k9KnobMulti5shiftEbi,comdat
 3769              		.align	1
 3770              		.weak	_ZN1k9KnobMulti5shiftEbi
 3771              		.syntax unified
 3772              		.thumb
 3773              		.thumb_func
 3774              		.fpu fpv5-d16
 3776              	_ZN1k9KnobMulti5shiftEbi:
 3777              	.LFB5072:
  50:./include/KnobMulti.hpp **** 
  51:./include/KnobMulti.hpp ****         double getShiftValue(int layer = 0)
  52:./include/KnobMulti.hpp ****         {
  53:./include/KnobMulti.hpp ****             if (layer >= 0 && layer < layers) {
  54:./include/KnobMulti.hpp ****                 return shiftValues[layer];
  55:./include/KnobMulti.hpp ****             }
  56:./include/KnobMulti.hpp ****             return shiftValue; // Fehlerfall: ungültige Shift-Layer
  57:./include/KnobMulti.hpp ****         }
  58:./include/KnobMulti.hpp **** 
  59:./include/KnobMulti.hpp ****         void shift(bool b, int layer = 0)
 3778              		.loc 24 59 14
 3779              		.cfi_startproc
 3780              		@ args = 0, pretend = 0, frame = 16
 3781              		@ frame_needed = 1, uses_anonymous_args = 0
 3782 0000 90B5     		push	{r4, r7, lr}
 3783              		.cfi_def_cfa_offset 12
 3784              		.cfi_offset 4, -12
 3785              		.cfi_offset 7, -8
 3786              		.cfi_offset 14, -4
 3787 0002 85B0     		sub	sp, sp, #20
 3788              		.cfi_def_cfa_offset 32
 3789 0004 00AF     		add	r7, sp, #0
 3790              		.cfi_def_cfa_register 7
 3791 0006 F860     		str	r0, [r7, #12]
 3792 0008 0B46     		mov	r3, r1
 3793 000a 7A60     		str	r2, [r7, #4]
 3794 000c FB72     		strb	r3, [r7, #11]
  60:./include/KnobMulti.hpp ****         {
  61:./include/KnobMulti.hpp ****             if (layer >= 0 && layer < layers) {
 3795              		.loc 24 61 13
 3796 000e 7B68     		ldr	r3, [r7, #4]
 3797 0010 002B     		cmp	r3, #0
 3798 0012 78DB     		blt	.L154
 3799              		.loc 24 61 39 discriminator 1
 3800 0014 FB68     		ldr	r3, [r7, #12]
 3801 0016 1B68     		ldr	r3, [r3]
 3802              		.loc 24 61 28 discriminator 1
 3803 0018 7A68     		ldr	r2, [r7, #4]
 3804 001a 9A42     		cmp	r2, r3
 3805 001c 73DA     		bge	.L154
  62:./include/KnobMulti.hpp ****                 if (b == shiftState)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 199


 3806              		.loc 24 62 26
 3807 001e FB68     		ldr	r3, [r7, #12]
 3808 0020 93F85230 		ldrb	r3, [r3, #82]	@ zero_extendqisi2
 3809              		.loc 24 62 17
 3810 0024 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 3811 0026 9A42     		cmp	r2, r3
 3812 0028 6CD0     		beq	.L161
  63:./include/KnobMulti.hpp ****                     return;
  64:./include/KnobMulti.hpp ****                 if (b && !shiftState) // Von regulär zu Shift
 3813              		.loc 24 64 17
 3814 002a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 3815 002c 002B     		cmp	r3, #0
 3816 002e 41D0     		beq	.L157
 3817              		.loc 24 64 27 discriminator 1
 3818 0030 FB68     		ldr	r3, [r7, #12]
 3819 0032 93F85230 		ldrb	r3, [r3, #82]	@ zero_extendqisi2
 3820              		.loc 24 64 26 discriminator 1
 3821 0036 83F00103 		eor	r3, r3, #1
 3822 003a DBB2     		uxtb	r3, r3
 3823              		.loc 24 64 23 discriminator 1
 3824 003c 002B     		cmp	r3, #0
 3825 003e 39D0     		beq	.L157
  65:./include/KnobMulti.hpp ****                 {
  66:./include/KnobMulti.hpp ****                     vFlag = true;
 3826              		.loc 24 66 27
 3827 0040 FB68     		ldr	r3, [r7, #12]
 3828 0042 0122     		movs	r2, #1
 3829 0044 83F85020 		strb	r2, [r3, #80]
  67:./include/KnobMulti.hpp ****                     if (shiftWasAccessed[layer])
 3830              		.loc 24 67 47
 3831 0048 FA68     		ldr	r2, [r7, #12]
 3832 004a 7B68     		ldr	r3, [r7, #4]
 3833 004c 1344     		add	r3, r3, r2
 3834 004e 5333     		adds	r3, r3, #83
 3835 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3836              		.loc 24 67 21
 3837 0052 002B     		cmp	r3, #0
 3838 0054 0DD0     		beq	.L158
  68:./include/KnobMulti.hpp ****                     {
  69:./include/KnobMulti.hpp ****                         retShifts[layer] = value;
 3839              		.loc 24 69 40
 3840 0056 FB68     		ldr	r3, [r7, #12]
 3841 0058 3033     		adds	r3, r3, #48
 3842 005a 7A68     		ldr	r2, [r7, #4]
 3843 005c 1146     		mov	r1, r2
 3844 005e 1846     		mov	r0, r3
 3845 0060 FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEEixEj
 3846 0064 0146     		mov	r1, r0
 3847              		.loc 24 69 44
 3848 0066 FB68     		ldr	r3, [r7, #12]
 3849 0068 D3E90223 		ldrd	r2, [r3, #8]
 3850              		.loc 24 69 42
 3851 006c C1E90023 		strd	r2, [r1]
  67:./include/KnobMulti.hpp ****                     if (shiftWasAccessed[layer])
 3852              		.loc 24 67 21
 3853 0070 43E0     		b	.L160
 3854              	.L158:
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 200


  70:./include/KnobMulti.hpp ****                     }
  71:./include/KnobMulti.hpp ****                     else
  72:./include/KnobMulti.hpp ****                     {
  73:./include/KnobMulti.hpp ****                         shiftValues[layer] = value;
 3855              		.loc 24 73 42
 3856 0072 FB68     		ldr	r3, [r7, #12]
 3857 0074 1833     		adds	r3, r3, #24
 3858 0076 7A68     		ldr	r2, [r7, #4]
 3859 0078 1146     		mov	r1, r2
 3860 007a 1846     		mov	r0, r3
 3861 007c FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEEixEj
 3862 0080 0146     		mov	r1, r0
 3863              		.loc 24 73 46
 3864 0082 FB68     		ldr	r3, [r7, #12]
 3865 0084 D3E90223 		ldrd	r2, [r3, #8]
 3866              		.loc 24 73 44
 3867 0088 C1E90023 		strd	r2, [r1]
  74:./include/KnobMulti.hpp ****                         retShifts[layer] = value;
 3868              		.loc 24 74 40
 3869 008c FB68     		ldr	r3, [r7, #12]
 3870 008e 3033     		adds	r3, r3, #48
 3871 0090 7A68     		ldr	r2, [r7, #4]
 3872 0092 1146     		mov	r1, r2
 3873 0094 1846     		mov	r0, r3
 3874 0096 FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEEixEj
 3875 009a 0146     		mov	r1, r0
 3876              		.loc 24 74 44
 3877 009c FB68     		ldr	r3, [r7, #12]
 3878 009e D3E90223 		ldrd	r2, [r3, #8]
 3879              		.loc 24 74 42
 3880 00a2 C1E90023 		strd	r2, [r1]
  75:./include/KnobMulti.hpp ****                         shiftWasAccessed[layer] = true;
 3881              		.loc 24 75 49
 3882 00a6 FA68     		ldr	r2, [r7, #12]
 3883 00a8 7B68     		ldr	r3, [r7, #4]
 3884 00aa 1344     		add	r3, r3, r2
 3885 00ac 5333     		adds	r3, r3, #83
 3886 00ae 0122     		movs	r2, #1
 3887 00b0 1A70     		strb	r2, [r3]
  67:./include/KnobMulti.hpp ****                     {
 3888              		.loc 24 67 21
 3889 00b2 22E0     		b	.L160
 3890              	.L157:
  76:./include/KnobMulti.hpp ****                     }
  77:./include/KnobMulti.hpp ****                 }
  78:./include/KnobMulti.hpp ****                 else if (!b && shiftState) // Von Shift zu regulär
 3891              		.loc 24 78 26
 3892 00b4 FB7A     		ldrb	r3, [r7, #11]
 3893 00b6 83F00103 		eor	r3, r3, #1
 3894 00ba DBB2     		uxtb	r3, r3
 3895              		.loc 24 78 22
 3896 00bc 002B     		cmp	r3, #0
 3897 00be 1CD0     		beq	.L160
 3898              		.loc 24 78 32 discriminator 1
 3899 00c0 FB68     		ldr	r3, [r7, #12]
 3900 00c2 93F85230 		ldrb	r3, [r3, #82]	@ zero_extendqisi2
 3901              		.loc 24 78 29 discriminator 1
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 201


 3902 00c6 002B     		cmp	r3, #0
 3903 00c8 17D0     		beq	.L160
  79:./include/KnobMulti.hpp ****                 {
  80:./include/KnobMulti.hpp ****                     sFlag = true;
 3904              		.loc 24 80 27
 3905 00ca FB68     		ldr	r3, [r7, #12]
 3906 00cc 0122     		movs	r2, #1
 3907 00ce 83F85120 		strb	r2, [r3, #81]
  81:./include/KnobMulti.hpp ****                     retValues[layer] = shiftValues[layer];
 3908              		.loc 24 81 57
 3909 00d2 FB68     		ldr	r3, [r7, #12]
 3910 00d4 1833     		adds	r3, r3, #24
 3911 00d6 7A68     		ldr	r2, [r7, #4]
 3912 00d8 1146     		mov	r1, r2
 3913 00da 1846     		mov	r0, r3
 3914 00dc FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEEixEj
 3915 00e0 0446     		mov	r4, r0
 3916              		.loc 24 81 36
 3917 00e2 FB68     		ldr	r3, [r7, #12]
 3918 00e4 2433     		adds	r3, r3, #36
 3919 00e6 7A68     		ldr	r2, [r7, #4]
 3920 00e8 1146     		mov	r1, r2
 3921 00ea 1846     		mov	r0, r3
 3922 00ec FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEEixEj
 3923 00f0 0146     		mov	r1, r0
 3924              		.loc 24 81 38
 3925 00f2 D4E90023 		ldrd	r2, [r4]
 3926 00f6 C1E90023 		strd	r2, [r1]
 3927              	.L160:
  82:./include/KnobMulti.hpp ****                 }
  83:./include/KnobMulti.hpp ****                 shiftState = b;
 3928              		.loc 24 83 28
 3929 00fa FB68     		ldr	r3, [r7, #12]
 3930 00fc FA7A     		ldrb	r2, [r7, #11]
 3931 00fe 83F85220 		strb	r2, [r3, #82]
 3932 0102 00E0     		b	.L154
 3933              	.L161:
  63:./include/KnobMulti.hpp ****                 if (b && !shiftState) // Von regulär zu Shift
 3934              		.loc 24 63 21
 3935 0104 00BF     		nop
 3936              	.L154:
  84:./include/KnobMulti.hpp ****             }
  85:./include/KnobMulti.hpp ****             // Fehlerfall: ungültige Shift-Layer
  86:./include/KnobMulti.hpp ****         }
 3937              		.loc 24 86 9
 3938 0106 1437     		adds	r7, r7, #20
 3939              		.cfi_def_cfa_offset 12
 3940 0108 BD46     		mov	sp, r7
 3941              		.cfi_def_cfa_register 13
 3942              		@ sp needed
 3943 010a 90BD     		pop	{r4, r7, pc}
 3944              		.cfi_endproc
 3945              	.LFE5072:
 3947              		.section	.text._ZN1k9KnobMulti10updateKnobEdi,"axG",%progbits,_ZN1k9KnobMulti10updateKnobEdi,comda
 3948              		.align	1
 3949              		.weak	_ZN1k9KnobMulti10updateKnobEdi
 3950              		.syntax unified
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 202


 3951              		.thumb
 3952              		.thumb_func
 3953              		.fpu fpv5-d16
 3955              	_ZN1k9KnobMulti10updateKnobEdi:
 3956              	.LFB5073:
  87:./include/KnobMulti.hpp **** 
  88:./include/KnobMulti.hpp ****         void updateKnob(double v, int layer = 0)
 3957              		.loc 24 88 14
 3958              		.cfi_startproc
 3959              		@ args = 0, pretend = 0, frame = 16
 3960              		@ frame_needed = 1, uses_anonymous_args = 0
 3961 0000 80B5     		push	{r7, lr}
 3962              		.cfi_def_cfa_offset 8
 3963              		.cfi_offset 7, -8
 3964              		.cfi_offset 14, -4
 3965 0002 84B0     		sub	sp, sp, #16
 3966              		.cfi_def_cfa_offset 24
 3967 0004 00AF     		add	r7, sp, #0
 3968              		.cfi_def_cfa_register 7
 3969 0006 F860     		str	r0, [r7, #12]
 3970 0008 87ED000B 		vstr.64	d0, [r7]
 3971 000c B960     		str	r1, [r7, #8]
  89:./include/KnobMulti.hpp ****         {
  90:./include/KnobMulti.hpp ****             if (layer >= 0 && layer < layers) {
 3972              		.loc 24 90 13
 3973 000e BB68     		ldr	r3, [r7, #8]
 3974 0010 002B     		cmp	r3, #0
 3975 0012 C0F2AE80 		blt	.L174
 3976              		.loc 24 90 39 discriminator 1
 3977 0016 FB68     		ldr	r3, [r7, #12]
 3978 0018 1B68     		ldr	r3, [r3]
 3979              		.loc 24 90 28 discriminator 1
 3980 001a BA68     		ldr	r2, [r7, #8]
 3981 001c 9A42     		cmp	r2, r3
 3982 001e 80F2A880 		bge	.L174
  91:./include/KnobMulti.hpp ****                 if (value < windowSize) {
 3983              		.loc 24 91 21
 3984 0022 FB68     		ldr	r3, [r7, #12]
 3985 0024 93ED026B 		vldr.64	d6, [r3, #8]
 3986              		.loc 24 91 29
 3987 0028 FB68     		ldr	r3, [r7, #12]
 3988 002a D3ED017A 		vldr.32	s15, [r3, #4]
 3989 002e B7EEE77A 		vcvt.f64.f32	d7, s15
 3990              		.loc 24 91 17
 3991 0032 B4EEC76B 		vcmpe.f64	d6, d7
 3992 0036 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3993 003a 07D5     		bpl	.L173
  92:./include/KnobMulti.hpp ****                     value = 0.0f;
 3994              		.loc 24 92 27
 3995 003c F968     		ldr	r1, [r7, #12]
 3996 003e 4FF00002 		mov	r2, #0
 3997 0042 4FF00003 		mov	r3, #0
 3998 0046 C1E90223 		strd	r2, [r1, #8]
 3999 004a 14E0     		b	.L166
 4000              	.L173:
  93:./include/KnobMulti.hpp ****                 }
  94:./include/KnobMulti.hpp ****                 else if (v > 1 - windowSize) {
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 203


 4001              		.loc 24 94 34
 4002 004c FB68     		ldr	r3, [r7, #12]
 4003 004e D3ED017A 		vldr.32	s15, [r3, #4]
 4004              		.loc 24 94 32
 4005 0052 B7EE007A 		vmov.f32	s14, #1.0e+0
 4006 0056 77EE677A 		vsub.f32	s15, s14, s15
 4007 005a B7EEE77A 		vcvt.f64.f32	d7, s15
 4008              		.loc 24 94 22
 4009 005e 97ED006B 		vldr.64	d6, [r7]
 4010 0062 B4EEC76B 		vcmpe.f64	d6, d7
 4011 0066 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4012 006a 04DD     		ble	.L166
  95:./include/KnobMulti.hpp ****                     v = 1.0f;
 4013              		.loc 24 95 23
 4014 006c 4FF00002 		mov	r2, #0
 4015 0070 454B     		ldr	r3, .L175+8
 4016 0072 C7E90023 		strd	r2, [r7]
 4017              	.L166:
  96:./include/KnobMulti.hpp ****                 }
  97:./include/KnobMulti.hpp **** 
  98:./include/KnobMulti.hpp ****                 if (!shiftState)
 4018              		.loc 24 98 22
 4019 0076 FB68     		ldr	r3, [r7, #12]
 4020 0078 93F85230 		ldrb	r3, [r3, #82]	@ zero_extendqisi2
 4021              		.loc 24 98 21
 4022 007c 83F00103 		eor	r3, r3, #1
 4023 0080 DBB2     		uxtb	r3, r3
 4024              		.loc 24 98 17
 4025 0082 002B     		cmp	r3, #0
 4026 0084 30D0     		beq	.L168
  99:./include/KnobMulti.hpp ****                 {
 100:./include/KnobMulti.hpp **** 					if(!vFlag)
 4027              		.loc 24 100 10
 4028 0086 FB68     		ldr	r3, [r7, #12]
 4029 0088 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 4030              		.loc 24 100 9
 4031 008c 83F00103 		eor	r3, r3, #1
 4032 0090 DBB2     		uxtb	r3, r3
 4033              		.loc 24 100 6
 4034 0092 002B     		cmp	r3, #0
 4035 0094 05D0     		beq	.L169
 101:./include/KnobMulti.hpp **** 					{
 102:./include/KnobMulti.hpp **** 						value = v;
 4036              		.loc 24 102 13
 4037 0096 F968     		ldr	r1, [r7, #12]
 4038 0098 D7E90023 		ldrd	r2, [r7]
 4039 009c C1E90223 		strd	r2, [r1, #8]
 103:./include/KnobMulti.hpp **** 					}
 104:./include/KnobMulti.hpp **** 					else if(.1 > abs(v - value))//(windowSize < abs(v - retValues[layer]))
 105:./include/KnobMulti.hpp **** 					{
 106:./include/KnobMulti.hpp **** 						value = v;
 107:./include/KnobMulti.hpp **** 						vFlag = false;
 108:./include/KnobMulti.hpp **** 					}
 109:./include/KnobMulti.hpp ****                 }
 110:./include/KnobMulti.hpp ****                 else
 111:./include/KnobMulti.hpp ****                 {
 112:./include/KnobMulti.hpp ****                     if (!sFlag)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 204


 113:./include/KnobMulti.hpp ****                     {
 114:./include/KnobMulti.hpp ****                         shiftValues[layer] = v;
 115:./include/KnobMulti.hpp ****                     }
 116:./include/KnobMulti.hpp ****                     else if (0.1 > abs(v - shiftValues[layer]))
 117:./include/KnobMulti.hpp ****                     {
 118:./include/KnobMulti.hpp ****                         shiftValues[layer] = v;
 119:./include/KnobMulti.hpp ****                         sFlag = false;
 120:./include/KnobMulti.hpp ****                     }
 121:./include/KnobMulti.hpp ****                 }
 122:./include/KnobMulti.hpp ****             }
 123:./include/KnobMulti.hpp ****             // Fehlerfall: ungültige Shift-Layer
 124:./include/KnobMulti.hpp ****         }
 4040              		.loc 24 124 9
 4041 00a0 67E0     		b	.L174
 4042              	.L169:
 104:./include/KnobMulti.hpp **** 					{
 4043              		.loc 24 104 27
 4044 00a2 FB68     		ldr	r3, [r7, #12]
 4045 00a4 93ED027B 		vldr.64	d7, [r3, #8]
 104:./include/KnobMulti.hpp **** 					{
 4046              		.loc 24 104 22
 4047 00a8 97ED006B 		vldr.64	d6, [r7]
 4048 00ac 36EE477B 		vsub.f64	d7, d6, d7
 4049 00b0 B0EE470B 		vmov.f64	d0, d7
 4050 00b4 FFF7FEFF 		bl	_ZSt3absd
 4051 00b8 B0EE407B 		vmov.f64	d7, d0
 104:./include/KnobMulti.hpp **** 					{
 4052              		.loc 24 104 17
 4053 00bc 9FED306B 		vldr.64	d6, .L175
 4054 00c0 B4EEC67B 		vcmpe.f64	d7, d6
 4055 00c4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4056 00c8 4CBF     		ite	mi
 4057 00ca 0123     		movmi	r3, #1
 4058 00cc 0023     		movpl	r3, #0
 4059 00ce DBB2     		uxtb	r3, r3
 104:./include/KnobMulti.hpp **** 					{
 4060              		.loc 24 104 11
 4061 00d0 002B     		cmp	r3, #0
 4062 00d2 4ED0     		beq	.L174
 106:./include/KnobMulti.hpp **** 						vFlag = false;
 4063              		.loc 24 106 13
 4064 00d4 F968     		ldr	r1, [r7, #12]
 4065 00d6 D7E90023 		ldrd	r2, [r7]
 4066 00da C1E90223 		strd	r2, [r1, #8]
 107:./include/KnobMulti.hpp **** 					}
 4067              		.loc 24 107 13
 4068 00de FB68     		ldr	r3, [r7, #12]
 4069 00e0 0022     		movs	r2, #0
 4070 00e2 83F85020 		strb	r2, [r3, #80]
 4071              		.loc 24 124 9
 4072 00e6 44E0     		b	.L174
 4073              	.L168:
 112:./include/KnobMulti.hpp ****                     {
 4074              		.loc 24 112 26
 4075 00e8 FB68     		ldr	r3, [r7, #12]
 4076 00ea 93F85130 		ldrb	r3, [r3, #81]	@ zero_extendqisi2
 112:./include/KnobMulti.hpp ****                     {
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 205


 4077              		.loc 24 112 25
 4078 00ee 83F00103 		eor	r3, r3, #1
 4079 00f2 DBB2     		uxtb	r3, r3
 112:./include/KnobMulti.hpp ****                     {
 4080              		.loc 24 112 21
 4081 00f4 002B     		cmp	r3, #0
 4082 00f6 0CD0     		beq	.L170
 114:./include/KnobMulti.hpp ****                     }
 4083              		.loc 24 114 42
 4084 00f8 FB68     		ldr	r3, [r7, #12]
 4085 00fa 1833     		adds	r3, r3, #24
 4086 00fc BA68     		ldr	r2, [r7, #8]
 4087 00fe 1146     		mov	r1, r2
 4088 0100 1846     		mov	r0, r3
 4089 0102 FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEEixEj
 4090 0106 0146     		mov	r1, r0
 114:./include/KnobMulti.hpp ****                     }
 4091              		.loc 24 114 44
 4092 0108 D7E90023 		ldrd	r2, [r7]
 4093 010c C1E90023 		strd	r2, [r1]
 4094              		.loc 24 124 9
 4095 0110 2FE0     		b	.L174
 4096              	.L170:
 116:./include/KnobMulti.hpp ****                     {
 4097              		.loc 24 116 61
 4098 0112 FB68     		ldr	r3, [r7, #12]
 4099 0114 1833     		adds	r3, r3, #24
 4100 0116 BA68     		ldr	r2, [r7, #8]
 4101 0118 1146     		mov	r1, r2
 4102 011a 1846     		mov	r0, r3
 4103 011c FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEEixEj
 4104 0120 0346     		mov	r3, r0
 116:./include/KnobMulti.hpp ****                     {
 4105              		.loc 24 116 39
 4106 0122 93ED007B 		vldr.64	d7, [r3]
 4107 0126 97ED006B 		vldr.64	d6, [r7]
 4108 012a 36EE477B 		vsub.f64	d7, d6, d7
 4109 012e B0EE470B 		vmov.f64	d0, d7
 4110 0132 FFF7FEFF 		bl	_ZSt3absd
 4111 0136 B0EE407B 		vmov.f64	d7, d0
 116:./include/KnobMulti.hpp ****                     {
 4112              		.loc 24 116 34
 4113 013a 9FED116B 		vldr.64	d6, .L175
 4114 013e B4EEC67B 		vcmpe.f64	d7, d6
 4115 0142 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4116 0146 4CBF     		ite	mi
 4117 0148 0123     		movmi	r3, #1
 4118 014a 0023     		movpl	r3, #0
 4119 014c DBB2     		uxtb	r3, r3
 116:./include/KnobMulti.hpp ****                     {
 4120              		.loc 24 116 26
 4121 014e 002B     		cmp	r3, #0
 4122 0150 0FD0     		beq	.L174
 118:./include/KnobMulti.hpp ****                         sFlag = false;
 4123              		.loc 24 118 42
 4124 0152 FB68     		ldr	r3, [r7, #12]
 4125 0154 1833     		adds	r3, r3, #24
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 206


 4126 0156 BA68     		ldr	r2, [r7, #8]
 4127 0158 1146     		mov	r1, r2
 4128 015a 1846     		mov	r0, r3
 4129 015c FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEEixEj
 4130 0160 0146     		mov	r1, r0
 118:./include/KnobMulti.hpp ****                         sFlag = false;
 4131              		.loc 24 118 44
 4132 0162 D7E90023 		ldrd	r2, [r7]
 4133 0166 C1E90023 		strd	r2, [r1]
 119:./include/KnobMulti.hpp ****                     }
 4134              		.loc 24 119 31
 4135 016a FB68     		ldr	r3, [r7, #12]
 4136 016c 0022     		movs	r2, #0
 4137 016e 83F85120 		strb	r2, [r3, #81]
 4138              	.L174:
 4139              		.loc 24 124 9
 4140 0172 00BF     		nop
 4141 0174 1037     		adds	r7, r7, #16
 4142              		.cfi_def_cfa_offset 8
 4143 0176 BD46     		mov	sp, r7
 4144              		.cfi_def_cfa_register 13
 4145              		@ sp needed
 4146 0178 80BD     		pop	{r7, pc}
 4147              	.L176:
 4148 017a 00BFAFF3 		.align	3
 4148      0080
 4149              	.L175:
 4150 0180 9A999999 		.word	-1717986918
 4151 0184 9999B93F 		.word	1069128089
 4152 0188 0000F03F 		.word	1072693248
 4153              		.cfi_endproc
 4154              	.LFE5073:
 4156              		.section	.text._ZN1k9KnobMulti10updateKnobEdbi,"axG",%progbits,_ZN1k9KnobMulti10updateKnobEdbi,com
 4157              		.align	1
 4158              		.weak	_ZN1k9KnobMulti10updateKnobEdbi
 4159              		.syntax unified
 4160              		.thumb
 4161              		.thumb_func
 4162              		.fpu fpv5-d16
 4164              	_ZN1k9KnobMulti10updateKnobEdbi:
 4165              	.LFB5074:
 125:./include/KnobMulti.hpp **** 
 126:./include/KnobMulti.hpp ****         void updateKnob(double v, bool b, int layer = 0)
 4166              		.loc 24 126 14
 4167              		.cfi_startproc
 4168              		@ args = 0, pretend = 0, frame = 24
 4169              		@ frame_needed = 1, uses_anonymous_args = 0
 4170 0000 80B5     		push	{r7, lr}
 4171              		.cfi_def_cfa_offset 8
 4172              		.cfi_offset 7, -8
 4173              		.cfi_offset 14, -4
 4174 0002 86B0     		sub	sp, sp, #24
 4175              		.cfi_def_cfa_offset 32
 4176 0004 00AF     		add	r7, sp, #0
 4177              		.cfi_def_cfa_register 7
 4178 0006 7861     		str	r0, [r7, #20]
 4179 0008 87ED020B 		vstr.64	d0, [r7, #8]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 207


 4180 000c 0B46     		mov	r3, r1
 4181 000e 7A60     		str	r2, [r7, #4]
 4182 0010 FB74     		strb	r3, [r7, #19]
 127:./include/KnobMulti.hpp ****         {
 128:./include/KnobMulti.hpp ****             shift(b, layer);
 4183              		.loc 24 128 18
 4184 0012 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 4185 0014 7A68     		ldr	r2, [r7, #4]
 4186 0016 1946     		mov	r1, r3
 4187 0018 7869     		ldr	r0, [r7, #20]
 4188 001a FFF7FEFF 		bl	_ZN1k9KnobMulti5shiftEbi
 129:./include/KnobMulti.hpp ****             updateKnob(v, layer);
 4189              		.loc 24 129 23
 4190 001e 7968     		ldr	r1, [r7, #4]
 4191 0020 97ED020B 		vldr.64	d0, [r7, #8]
 4192 0024 7869     		ldr	r0, [r7, #20]
 4193 0026 FFF7FEFF 		bl	_ZN1k9KnobMulti10updateKnobEdi
 130:./include/KnobMulti.hpp ****         }
 4194              		.loc 24 130 9
 4195 002a 00BF     		nop
 4196 002c 1837     		adds	r7, r7, #24
 4197              		.cfi_def_cfa_offset 8
 4198 002e BD46     		mov	sp, r7
 4199              		.cfi_def_cfa_register 13
 4200              		@ sp needed
 4201 0030 80BD     		pop	{r7, pc}
 4202              		.cfi_endproc
 4203              	.LFE5074:
 4205              		.section	.text._ZN1k9KnobMulti15initShiftValuesEv,"axG",%progbits,_ZN1k9KnobMulti15initShiftValues
 4206              		.align	1
 4207              		.weak	_ZN1k9KnobMulti15initShiftValuesEv
 4208              		.syntax unified
 4209              		.thumb
 4210              		.thumb_func
 4211              		.fpu fpv5-d16
 4213              	_ZN1k9KnobMulti15initShiftValuesEv:
 4214              	.LFB5076:
 131:./include/KnobMulti.hpp **** 
 132:./include/KnobMulti.hpp ****         void setWindowSize(double w)
 133:./include/KnobMulti.hpp ****         {
 134:./include/KnobMulti.hpp ****             windowSize = w;
 135:./include/KnobMulti.hpp ****         }
 136:./include/KnobMulti.hpp **** 
 137:./include/KnobMulti.hpp ****     private:
 138:./include/KnobMulti.hpp ****         int layers;
 139:./include/KnobMulti.hpp **** 		float windowSize = 0.05;
 140:./include/KnobMulti.hpp ****         double value = 0;
 141:./include/KnobMulti.hpp ****         double shiftValue = 0;
 142:./include/KnobMulti.hpp ****         std::vector<double> shiftValues;
 143:./include/KnobMulti.hpp ****         std::vector<double> retValues;
 144:./include/KnobMulti.hpp ****         std::vector<double> retShifts;
 145:./include/KnobMulti.hpp ****         std::vector<bool> shiftStates;
 146:./include/KnobMulti.hpp ****         bool vFlag = false;
 147:./include/KnobMulti.hpp ****         bool sFlag = false;
 148:./include/KnobMulti.hpp ****         bool shiftState = false;
 149:./include/KnobMulti.hpp **** 		bool shiftWasAccessed[2] = {false, false};
 150:./include/KnobMulti.hpp **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 208


 151:./include/KnobMulti.hpp ****         void initShiftValues() {
 4215              		.loc 24 151 14
 4216              		.cfi_startproc
 4217              		@ args = 0, pretend = 0, frame = 32
 4218              		@ frame_needed = 1, uses_anonymous_args = 0
 4219 0000 80B5     		push	{r7, lr}
 4220              		.cfi_def_cfa_offset 8
 4221              		.cfi_offset 7, -8
 4222              		.cfi_offset 14, -4
 4223 0002 88B0     		sub	sp, sp, #32
 4224              		.cfi_def_cfa_offset 40
 4225 0004 00AF     		add	r7, sp, #0
 4226              		.cfi_def_cfa_register 7
 4227 0006 7860     		str	r0, [r7, #4]
 152:./include/KnobMulti.hpp ****             shiftValues.resize(layers, 0);
 4228              		.loc 24 152 31
 4229 0008 7B68     		ldr	r3, [r7, #4]
 4230 000a 03F11800 		add	r0, r3, #24
 4231              		.loc 24 152 32
 4232 000e 7B68     		ldr	r3, [r7, #4]
 4233 0010 1B68     		ldr	r3, [r3]
 4234              		.loc 24 152 31
 4235 0012 1946     		mov	r1, r3
 4236 0014 4FF00002 		mov	r2, #0
 4237 0018 4FF00003 		mov	r3, #0
 4238 001c C7E90223 		strd	r2, [r7, #8]
 4239 0020 07F10803 		add	r3, r7, #8
 4240 0024 1A46     		mov	r2, r3
 4241 0026 FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEE6resizeEjRKd
 153:./include/KnobMulti.hpp ****             retValues.resize(layers, 0);
 4242              		.loc 24 153 29
 4243 002a 7B68     		ldr	r3, [r7, #4]
 4244 002c 03F12400 		add	r0, r3, #36
 4245              		.loc 24 153 30
 4246 0030 7B68     		ldr	r3, [r7, #4]
 4247 0032 1B68     		ldr	r3, [r3]
 4248              		.loc 24 153 29
 4249 0034 1946     		mov	r1, r3
 4250 0036 4FF00002 		mov	r2, #0
 4251 003a 4FF00003 		mov	r3, #0
 4252 003e C7E90423 		strd	r2, [r7, #16]
 4253 0042 07F11003 		add	r3, r7, #16
 4254 0046 1A46     		mov	r2, r3
 4255 0048 FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEE6resizeEjRKd
 154:./include/KnobMulti.hpp ****             retShifts.resize(layers, 0);
 4256              		.loc 24 154 29
 4257 004c 7B68     		ldr	r3, [r7, #4]
 4258 004e 03F13000 		add	r0, r3, #48
 4259              		.loc 24 154 30
 4260 0052 7B68     		ldr	r3, [r7, #4]
 4261 0054 1B68     		ldr	r3, [r3]
 4262              		.loc 24 154 29
 4263 0056 1946     		mov	r1, r3
 4264 0058 4FF00002 		mov	r2, #0
 4265 005c 4FF00003 		mov	r3, #0
 4266 0060 C7E90623 		strd	r2, [r7, #24]
 4267 0064 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 209


 4268 0068 1A46     		mov	r2, r3
 4269 006a FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEE6resizeEjRKd
 155:./include/KnobMulti.hpp ****             shiftStates.resize(layers, false);
 4270              		.loc 24 155 31
 4271 006e 7B68     		ldr	r3, [r7, #4]
 4272 0070 03F13C00 		add	r0, r3, #60
 4273              		.loc 24 155 32
 4274 0074 7B68     		ldr	r3, [r7, #4]
 4275 0076 1B68     		ldr	r3, [r3]
 4276              		.loc 24 155 31
 4277 0078 0022     		movs	r2, #0
 4278 007a 1946     		mov	r1, r3
 4279 007c FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE6resizeEjb
 156:./include/KnobMulti.hpp ****         }
 4280              		.loc 24 156 9
 4281 0080 00BF     		nop
 4282 0082 2037     		adds	r7, r7, #32
 4283              		.cfi_def_cfa_offset 8
 4284 0084 BD46     		mov	sp, r7
 4285              		.cfi_def_cfa_register 13
 4286              		@ sp needed
 4287 0086 80BD     		pop	{r7, pc}
 4288              		.cfi_endproc
 4289              	.LFE5076:
 4291              		.section	.text._ZN1k13OnePoleFilterC2Ev,"axG",%progbits,_ZN1k13OnePoleFilterC5Ev,comdat
 4292              		.align	1
 4293              		.weak	_ZN1k13OnePoleFilterC2Ev
 4294              		.syntax unified
 4295              		.thumb
 4296              		.thumb_func
 4297              		.fpu fpv5-d16
 4299              	_ZN1k13OnePoleFilterC2Ev:
 4300              	.LFB5078:
 4301              		.file 25 "./include/OnePoleFilter.hpp"
   1:./include/OnePoleFilter.hpp **** #if !defined(K_SimpleFilters_23)
   2:./include/OnePoleFilter.hpp **** #define K_SimpleFilters_23
   3:./include/OnePoleFilter.hpp **** // #include "../../Utilities/Constants.hpp"
   4:./include/OnePoleFilter.hpp **** #include <math.h>
   5:./include/OnePoleFilter.hpp **** 
   6:./include/OnePoleFilter.hpp **** #define PI 3.14159265358979323846
   7:./include/OnePoleFilter.hpp **** 
   8:./include/OnePoleFilter.hpp **** namespace k
   9:./include/OnePoleFilter.hpp **** {
  10:./include/OnePoleFilter.hpp **** 	class OnePoleFilter
  11:./include/OnePoleFilter.hpp **** 	{
  12:./include/OnePoleFilter.hpp **** 	public:
  13:./include/OnePoleFilter.hpp **** 
  14:./include/OnePoleFilter.hpp **** 		OnePoleFilter(){}
 4302              		.loc 25 14 3
 4303              		.cfi_startproc
 4304              		@ args = 0, pretend = 0, frame = 8
 4305              		@ frame_needed = 1, uses_anonymous_args = 0
 4306              		@ link register save eliminated.
 4307 0000 80B4     		push	{r7}
 4308              		.cfi_def_cfa_offset 4
 4309              		.cfi_offset 7, -4
 4310 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 210


 4311              		.cfi_def_cfa_offset 16
 4312 0004 00AF     		add	r7, sp, #0
 4313              		.cfi_def_cfa_register 7
 4314 0006 7860     		str	r0, [r7, #4]
 4315              		.loc 25 14 19
 4316 0008 7B68     		ldr	r3, [r7, #4]
 4317 000a 1846     		mov	r0, r3
 4318 000c 0C37     		adds	r7, r7, #12
 4319              		.cfi_def_cfa_offset 4
 4320 000e BD46     		mov	sp, r7
 4321              		.cfi_def_cfa_register 13
 4322              		@ sp needed
 4323 0010 5DF8047B 		ldr	r7, [sp], #4
 4324              		.cfi_restore 7
 4325              		.cfi_def_cfa_offset 0
 4326 0014 7047     		bx	lr
 4327              		.cfi_endproc
 4328              	.LFE5078:
 4330              		.weak	_ZN1k13OnePoleFilterC1Ev
 4331              		.thumb_set _ZN1k13OnePoleFilterC1Ev,_ZN1k13OnePoleFilterC2Ev
 4332              		.section	.text._ZN1k13OnePoleFilter4initEdj,"axG",%progbits,_ZN1k13OnePoleFilter4initEdj,comdat
 4333              		.align	1
 4334              		.weak	_ZN1k13OnePoleFilter4initEdj
 4335              		.syntax unified
 4336              		.thumb
 4337              		.thumb_func
 4338              		.fpu fpv5-d16
 4340              	_ZN1k13OnePoleFilter4initEdj:
 4341              	.LFB5080:
  15:./include/OnePoleFilter.hpp **** 
  16:./include/OnePoleFilter.hpp **** 		void init(double freq, unsigned int sample_rate)	
 4342              		.loc 25 16 8
 4343              		.cfi_startproc
 4344              		@ args = 0, pretend = 0, frame = 16
 4345              		@ frame_needed = 1, uses_anonymous_args = 0
 4346 0000 80B5     		push	{r7, lr}
 4347              		.cfi_def_cfa_offset 8
 4348              		.cfi_offset 7, -8
 4349              		.cfi_offset 14, -4
 4350 0002 84B0     		sub	sp, sp, #16
 4351              		.cfi_def_cfa_offset 24
 4352 0004 00AF     		add	r7, sp, #0
 4353              		.cfi_def_cfa_register 7
 4354 0006 F860     		str	r0, [r7, #12]
 4355 0008 87ED000B 		vstr.64	d0, [r7]
 4356 000c B960     		str	r1, [r7, #8]
  17:./include/OnePoleFilter.hpp **** 		{
  18:./include/OnePoleFilter.hpp **** 			sampleRate = sample_rate;
 4357              		.loc 25 18 15
 4358 000e BB68     		ldr	r3, [r7, #8]
 4359 0010 07EE903A 		vmov	s15, r3	@ int
 4360 0014 B8EE677B 		vcvt.f64.u32	d7, s15
 4361 0018 FB68     		ldr	r3, [r7, #12]
 4362 001a 83ED067B 		vstr.64	d7, [r3, #24]
  19:./include/OnePoleFilter.hpp **** 			setTime(freq);
 4363              		.loc 25 19 11
 4364 001e 97ED000B 		vldr.64	d0, [r7]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 211


 4365 0022 F868     		ldr	r0, [r7, #12]
 4366 0024 FFF7FEFF 		bl	_ZN1k13OnePoleFilter7setTimeEd
  20:./include/OnePoleFilter.hpp **** 		}
 4367              		.loc 25 20 3
 4368 0028 00BF     		nop
 4369 002a 1037     		adds	r7, r7, #16
 4370              		.cfi_def_cfa_offset 8
 4371 002c BD46     		mov	sp, r7
 4372              		.cfi_def_cfa_register 13
 4373              		@ sp needed
 4374 002e 80BD     		pop	{r7, pc}
 4375              		.cfi_endproc
 4376              	.LFE5080:
 4378              		.section	.text._ZN1k13OnePoleFilter7processEd,"axG",%progbits,_ZN1k13OnePoleFilter7processEd,comda
 4379              		.align	1
 4380              		.weak	_ZN1k13OnePoleFilter7processEd
 4381              		.syntax unified
 4382              		.thumb
 4383              		.thumb_func
 4384              		.fpu fpv5-d16
 4386              	_ZN1k13OnePoleFilter7processEd:
 4387              	.LFB5081:
  21:./include/OnePoleFilter.hpp **** 
  22:./include/OnePoleFilter.hpp **** 		float process(double in)
 4388              		.loc 25 22 9
 4389              		.cfi_startproc
 4390              		@ args = 0, pretend = 0, frame = 16
 4391              		@ frame_needed = 1, uses_anonymous_args = 0
 4392              		@ link register save eliminated.
 4393 0000 80B4     		push	{r7}
 4394              		.cfi_def_cfa_offset 4
 4395              		.cfi_offset 7, -4
 4396 0002 85B0     		sub	sp, sp, #20
 4397              		.cfi_def_cfa_offset 24
 4398 0004 00AF     		add	r7, sp, #0
 4399              		.cfi_def_cfa_register 7
 4400 0006 F860     		str	r0, [r7, #12]
 4401 0008 87ED000B 		vstr.64	d0, [r7]
  23:./include/OnePoleFilter.hpp **** 		{
  24:./include/OnePoleFilter.hpp **** 			return buffer = in * a0 + buffer * b1;
 4402              		.loc 25 24 25
 4403 000c FB68     		ldr	r3, [r7, #12]
 4404 000e 93ED026B 		vldr.64	d6, [r3, #8]
 4405              		.loc 25 24 23
 4406 0012 97ED007B 		vldr.64	d7, [r7]
 4407 0016 26EE076B 		vmul.f64	d6, d6, d7
 4408              		.loc 25 24 30
 4409 001a FB68     		ldr	r3, [r7, #12]
 4410 001c 93ED005B 		vldr.64	d5, [r3]
 4411              		.loc 25 24 39
 4412 0020 FB68     		ldr	r3, [r7, #12]
 4413 0022 93ED047B 		vldr.64	d7, [r3, #16]
 4414              		.loc 25 24 37
 4415 0026 25EE077B 		vmul.f64	d7, d5, d7
 4416              		.loc 25 24 28
 4417 002a 36EE077B 		vadd.f64	d7, d6, d7
 4418              		.loc 25 24 18
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 212


 4419 002e FB68     		ldr	r3, [r7, #12]
 4420 0030 83ED007B 		vstr.64	d7, [r3]
 4421              		.loc 25 24 11
 4422 0034 FB68     		ldr	r3, [r7, #12]
 4423 0036 93ED007B 		vldr.64	d7, [r3]
 4424              		.loc 25 24 39
 4425 003a F7EEC77B 		vcvt.f32.f64	s15, d7
  25:./include/OnePoleFilter.hpp **** 		}
 4426              		.loc 25 25 3
 4427 003e B0EE670A 		vmov.f32	s0, s15
 4428 0042 1437     		adds	r7, r7, #20
 4429              		.cfi_def_cfa_offset 4
 4430 0044 BD46     		mov	sp, r7
 4431              		.cfi_def_cfa_register 13
 4432              		@ sp needed
 4433 0046 5DF8047B 		ldr	r7, [sp], #4
 4434              		.cfi_restore 7
 4435              		.cfi_def_cfa_offset 0
 4436 004a 7047     		bx	lr
 4437              		.cfi_endproc
 4438              	.LFE5081:
 4440              		.section	.text._ZN1k13OnePoleFilter7setTimeEd,"axG",%progbits,_ZN1k13OnePoleFilter7setTimeEd,comda
 4441              		.align	1
 4442              		.weak	_ZN1k13OnePoleFilter7setTimeEd
 4443              		.syntax unified
 4444              		.thumb
 4445              		.thumb_func
 4446              		.fpu fpv5-d16
 4448              	_ZN1k13OnePoleFilter7setTimeEd:
 4449              	.LFB5082:
  26:./include/OnePoleFilter.hpp **** 
  27:./include/OnePoleFilter.hpp **** 		void setTime(double freq)
 4450              		.loc 25 27 8
 4451              		.cfi_startproc
 4452              		@ args = 0, pretend = 0, frame = 16
 4453              		@ frame_needed = 1, uses_anonymous_args = 0
 4454 0000 80B5     		push	{r7, lr}
 4455              		.cfi_def_cfa_offset 8
 4456              		.cfi_offset 7, -8
 4457              		.cfi_offset 14, -4
 4458 0002 84B0     		sub	sp, sp, #16
 4459              		.cfi_def_cfa_offset 24
 4460 0004 00AF     		add	r7, sp, #0
 4461              		.cfi_def_cfa_register 7
 4462 0006 F860     		str	r0, [r7, #12]
 4463 0008 87ED000B 		vstr.64	d0, [r7]
  28:./include/OnePoleFilter.hpp **** 		{
  29:./include/OnePoleFilter.hpp **** 			b1 = exp(-2.0 * PI * freq/sampleRate);
 4464              		.loc 25 29 23
 4465 000c 97ED007B 		vldr.64	d7, [r7]
 4466 0010 9FED0F6B 		vldr.64	d6, .L185
 4467 0014 27EE066B 		vmul.f64	d6, d7, d6
 4468              		.loc 25 29 30
 4469 0018 FB68     		ldr	r3, [r7, #12]
 4470 001a 93ED067B 		vldr.64	d7, [r3, #24]
 4471              		.loc 25 29 12
 4472 001e 86EE075B 		vdiv.f64	d5, d6, d7
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 213


 4473 0022 B0EE450B 		vmov.f64	d0, d5
 4474 0026 FFF7FEFF 		bl	exp
 4475 002a B0EE407B 		vmov.f64	d7, d0
 4476              		.loc 25 29 7
 4477 002e FB68     		ldr	r3, [r7, #12]
 4478 0030 83ED047B 		vstr.64	d7, [r3, #16]
  30:./include/OnePoleFilter.hpp ****     		a0 = 1.0 - b1;
 4479              		.loc 25 30 18
 4480 0034 FB68     		ldr	r3, [r7, #12]
 4481 0036 93ED047B 		vldr.64	d7, [r3, #16]
 4482              		.loc 25 30 16
 4483 003a B7EE006B 		vmov.f64	d6, #1.0e+0
 4484 003e 36EE477B 		vsub.f64	d7, d6, d7
 4485              		.loc 25 30 10
 4486 0042 FB68     		ldr	r3, [r7, #12]
 4487 0044 83ED027B 		vstr.64	d7, [r3, #8]
  31:./include/OnePoleFilter.hpp **** 		}
 4488              		.loc 25 31 3
 4489 0048 00BF     		nop
 4490 004a 1037     		adds	r7, r7, #16
 4491              		.cfi_def_cfa_offset 8
 4492 004c BD46     		mov	sp, r7
 4493              		.cfi_def_cfa_register 13
 4494              		@ sp needed
 4495 004e 80BD     		pop	{r7, pc}
 4496              	.L186:
 4497              		.align	3
 4498              	.L185:
 4499 0050 182D4454 		.word	1413754136
 4500 0054 FB2119C0 		.word	-1072094725
 4501              		.cfi_endproc
 4502              	.LFE5082:
 4504              		.section	.rodata._ZL12ReverbParams,"a"
 4505              		.align	2
 4508              	_ZL12ReverbParams:
 4509 0000 431E013D 		.word	1023483459
 4510 0004 0AD7233C 		.word	1008981770
 4511 0008 66664640 		.word	1078355558
 4512 000c 00C0F544 		.word	1156956160
 4513 0010 31267D3C 		.word	1014834737
 4514 0014 5839343C 		.word	1010055512
 4515 0018 00006040 		.word	1080033280
 4516 001c 0066E646 		.word	1189504512
 4517 0020 4161D03C 		.word	1020289345
 4518 0024 96438B3C 		.word	1015759766
 4519 0028 7B148E3F 		.word	1066275963
 4520 002c 0032B346 		.word	1186148864
 4521 0030 BE31443D 		.word	1027879358
 4522 0034 A69BC43B 		.word	1002740646
 4523 0038 A2457E40 		.word	1082017186
 4524 003c 00981946 		.word	1176082432
 4525 0040 B66A173D 		.word	1024944822
 4526 0044 0AD7233C 		.word	1008981770
 4527 0048 F2D21540 		.word	1075172082
 4528 004c 0046A146 		.word	1184974336
 4529 0050 1C61D13C 		.word	1020354844
 4530 0054 5839343C 		.word	1010055512
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 214


 4531 0058 E5D0F23F 		.word	1072877797
 4532 005c 0032B346 		.word	1186148864
 4533 0060 74956E3C 		.word	1013880180
 4534 0064 96438B3C 		.word	1015759766
 4535 0068 9318643F 		.word	1063524499
 4536 006c 0066E646 		.word	1189504512
 4537 0070 27A30A3D 		.word	1024107303
 4538 0074 A69BC43B 		.word	1002740646
 4539 0078 DD244E40 		.word	1078863069
 4540 007c 00446146 		.word	1180779520
 4541              		.global	delay
 4542              		.section	.sdram_bss,"aw"
 4543              		.align	2
 4546              	delay:
 4547 0000 00000000 		.space	3072096
 4547      00000000 
 4547      00000000 
 4547      00000000 
 4547      00000000 
 4548              		.section	.text._ZN9ReverbFDN4InitEf,"axG",%progbits,_ZN9ReverbFDN4InitEf,comdat
 4549              		.align	1
 4550              		.weak	_ZN9ReverbFDN4InitEf
 4551              		.syntax unified
 4552              		.thumb
 4553              		.thumb_func
 4554              		.fpu fpv5-d16
 4556              	_ZN9ReverbFDN4InitEf:
 4557              	.LFB5083:
 4558              		.file 26 "./include/ReverbFDN.hpp"
   1:./include/ReverbFDN.hpp **** #ifndef M_REVERBFDN_24
   2:./include/ReverbFDN.hpp **** #define M_REVERBFDN_24
   3:./include/ReverbFDN.hpp **** 
   4:./include/ReverbFDN.hpp **** #include <iterator>
   5:./include/ReverbFDN.hpp **** #include <random>
   6:./include/ReverbFDN.hpp **** #include "daisy_seed.h"
   7:./include/ReverbFDN.hpp **** #include "daisysp.h"
   8:./include/ReverbFDN.hpp **** 
   9:./include/ReverbFDN.hpp **** #include "OnePoleFilter.hpp"
  10:./include/ReverbFDN.hpp **** 
  11:./include/ReverbFDN.hpp **** using namespace daisy;
  12:./include/ReverbFDN.hpp **** using namespace daisysp;
  13:./include/ReverbFDN.hpp **** 
  14:./include/ReverbFDN.hpp **** // ReverbParams[n][0] = delay time (in seconds)                     */
  15:./include/ReverbFDN.hpp **** // ReverbParams[n][1] = random variation in delay time (in seconds) */
  16:./include/ReverbFDN.hpp **** // ReverbParams[n][2] = random variation frequency (in 1/sec)       */ 
  17:./include/ReverbFDN.hpp **** // ReverbParams[n][3] = random seed (0 - 32767)                     */ NICHT GENUTZT
  18:./include/ReverbFDN.hpp **** 
  19:./include/ReverbFDN.hpp **** 
  20:./include/ReverbFDN.hpp **** static const float ReverbParams[8][4] = {{0.031523, 0.010, 3.100, 1966.0},
  21:./include/ReverbFDN.hpp ****                                          {0.015451, 0.011, 3.500, 29491.0},
  22:./include/ReverbFDN.hpp ****                                          {0.025437, 0.017, 1.110, 22937.0},
  23:./include/ReverbFDN.hpp ****                                          {0.047899, 0.006, 3.973, 9830.0},
  24:./include/ReverbFDN.hpp ****                                          {0.036967, 0.010, 2.341, 20643.0},
  25:./include/ReverbFDN.hpp ****                                          {0.025559, 0.011, 1.897, 22937.0},
  26:./include/ReverbFDN.hpp ****                                          {0.014562, 0.017, 0.891, 29491.0},
  27:./include/ReverbFDN.hpp ****                                          {0.033847, 0.006, 3.221, 14417.0}};
  28:./include/ReverbFDN.hpp **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 215


  29:./include/ReverbFDN.hpp **** DSY_SDRAM_BSS DelayLine<float, ((size_t)(2.0f * 48000.0f))> delay[8]; // max delay
  30:./include/ReverbFDN.hpp **** 
  31:./include/ReverbFDN.hpp **** class ReverbFDN
  32:./include/ReverbFDN.hpp **** {
  33:./include/ReverbFDN.hpp ****   private:
  34:./include/ReverbFDN.hpp **** 
  35:./include/ReverbFDN.hpp ****     k::OnePoleFilter slewLimiter;
  36:./include/ReverbFDN.hpp **** 
  37:./include/ReverbFDN.hpp ****     float sample_rate_;
  38:./include/ReverbFDN.hpp ****     float feedback_ = .9, amount_ = 1, size_ = 1, diffusion_, tone_;
  39:./include/ReverbFDN.hpp ****     int density_ = 8;
  40:./include/ReverbFDN.hpp **** 
  41:./include/ReverbFDN.hpp ****     float delay_variations[8]; // Verzögerungszeitvariationen
  42:./include/ReverbFDN.hpp ****     int variation_counter[8]; // sample counter
  43:./include/ReverbFDN.hpp ****     int variation_period[8]; // 1/frequency in samples
  44:./include/ReverbFDN.hpp ****     float delay_time[8];
  45:./include/ReverbFDN.hpp **** 
  46:./include/ReverbFDN.hpp ****   public:
  47:./include/ReverbFDN.hpp **** 
  48:./include/ReverbFDN.hpp ****     void Init(float sample_rate)
 4559              		.loc 26 48 10
 4560              		.cfi_startproc
 4561              		@ args = 0, pretend = 0, frame = 16
 4562              		@ frame_needed = 1, uses_anonymous_args = 0
 4563 0000 80B5     		push	{r7, lr}
 4564              		.cfi_def_cfa_offset 8
 4565              		.cfi_offset 7, -8
 4566              		.cfi_offset 14, -4
 4567 0002 84B0     		sub	sp, sp, #16
 4568              		.cfi_def_cfa_offset 24
 4569 0004 00AF     		add	r7, sp, #0
 4570              		.cfi_def_cfa_register 7
 4571 0006 7860     		str	r0, [r7, #4]
 4572 0008 87ED000A 		vstr.32	s0, [r7]
  49:./include/ReverbFDN.hpp ****     {
  50:./include/ReverbFDN.hpp ****         sample_rate_ = sample_rate;
 4573              		.loc 26 50 22
 4574 000c 7B68     		ldr	r3, [r7, #4]
 4575 000e 3A68     		ldr	r2, [r7]	@ float
 4576 0010 1A62     		str	r2, [r3, #32]	@ float
 4577              	.LBB36:
  51:./include/ReverbFDN.hpp **** 
  52:./include/ReverbFDN.hpp ****         for(int i = 0; i < density_; i++)
 4578              		.loc 26 52 17
 4579 0012 0023     		movs	r3, #0
 4580 0014 FB60     		str	r3, [r7, #12]
 4581              	.L189:
 4582              		.loc 26 52 28 discriminator 3
 4583 0016 7B68     		ldr	r3, [r7, #4]
 4584 0018 9B6B     		ldr	r3, [r3, #56]
 4585              		.loc 26 52 26 discriminator 3
 4586 001a FA68     		ldr	r2, [r7, #12]
 4587 001c 9A42     		cmp	r2, r3
 4588 001e 22DA     		bge	.L188
  53:./include/ReverbFDN.hpp ****         {
  54:./include/ReverbFDN.hpp ****             delay[i].Init();
 4589              		.loc 26 54 26 discriminator 2
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 216


 4590 0020 FB68     		ldr	r3, [r7, #12]
 4591 0022 1F4A     		ldr	r2, .L190+8
 4592 0024 02FB03F3 		mul	r3, r2, r3
 4593 0028 1E4A     		ldr	r2, .L190+12
 4594 002a 1344     		add	r3, r3, r2
 4595 002c 1846     		mov	r0, r3
 4596 002e FFF7FEFF 		bl	_ZN7daisysp9DelayLineIfLj96000EE4InitEv
  55:./include/ReverbFDN.hpp ****             delay[i].SetDelay(ReverbParams[i][0] * sample_rate_);
 4597              		.loc 26 55 30 discriminator 2
 4598 0032 FB68     		ldr	r3, [r7, #12]
 4599 0034 1A4A     		ldr	r2, .L190+8
 4600 0036 02FB03F3 		mul	r3, r2, r3
 4601 003a 1A4A     		ldr	r2, .L190+12
 4602 003c 1A44     		add	r2, r2, r3
 4603              		.loc 26 55 48 discriminator 2
 4604 003e 1A49     		ldr	r1, .L190+16
 4605 0040 FB68     		ldr	r3, [r7, #12]
 4606 0042 1B01     		lsls	r3, r3, #4
 4607 0044 0B44     		add	r3, r3, r1
 4608 0046 93ED007A 		vldr.32	s14, [r3]
 4609              		.loc 26 55 52 discriminator 2
 4610 004a 7B68     		ldr	r3, [r7, #4]
 4611 004c D3ED087A 		vldr.32	s15, [r3, #32]
 4612              		.loc 26 55 30 discriminator 2
 4613 0050 67EE277A 		vmul.f32	s15, s14, s15
 4614 0054 B0EE670A 		vmov.f32	s0, s15
 4615 0058 1046     		mov	r0, r2
 4616 005a FFF7FEFF 		bl	_ZN7daisysp9DelayLineIfLj96000EE8SetDelayEf
  52:./include/ReverbFDN.hpp ****         {
 4617              		.loc 26 52 9 discriminator 2
 4618 005e FB68     		ldr	r3, [r7, #12]
 4619 0060 0133     		adds	r3, r3, #1
 4620 0062 FB60     		str	r3, [r7, #12]
 4621 0064 D7E7     		b	.L189
 4622              	.L188:
 4623              	.LBE36:
  56:./include/ReverbFDN.hpp ****         }
  57:./include/ReverbFDN.hpp ****         slewLimiter.init(800, sample_rate_);
 4624              		.loc 26 57 25
 4625 0066 7A68     		ldr	r2, [r7, #4]
 4626              		.loc 26 57 31
 4627 0068 7B68     		ldr	r3, [r7, #4]
 4628 006a D3ED087A 		vldr.32	s15, [r3, #32]
 4629              		.loc 26 57 25
 4630 006e FCEEE77A 		vcvt.u32.f32	s15, s15
 4631 0072 17EE901A 		vmov	r1, s15	@ int
 4632 0076 9FED080B 		vldr.64	d0, .L190
 4633 007a 1046     		mov	r0, r2
 4634 007c FFF7FEFF 		bl	_ZN1k13OnePoleFilter4initEdj
  58:./include/ReverbFDN.hpp ****         GenerateDelayVariations(sample_rate);
 4635              		.loc 26 58 32
 4636 0080 97ED000A 		vldr.32	s0, [r7]
 4637 0084 7868     		ldr	r0, [r7, #4]
 4638 0086 FFF7FEFF 		bl	_ZN9ReverbFDN23GenerateDelayVariationsEf
  59:./include/ReverbFDN.hpp ****     }
 4639              		.loc 26 59 5
 4640 008a 00BF     		nop
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 217


 4641 008c 1037     		adds	r7, r7, #16
 4642              		.cfi_def_cfa_offset 8
 4643 008e BD46     		mov	sp, r7
 4644              		.cfi_def_cfa_register 13
 4645              		@ sp needed
 4646 0090 80BD     		pop	{r7, pc}
 4647              	.L191:
 4648 0092 00BFAFF3 		.align	3
 4648      0080
 4649              	.L190:
 4650 0098 00000000 		.word	0
 4651 009c 00008940 		.word	1082720256
 4652 00a0 0CDC0500 		.word	384012
 4653 00a4 00000000 		.word	delay
 4654 00a8 00000000 		.word	_ZL12ReverbParams
 4655              		.cfi_endproc
 4656              	.LFE5083:
 4658              		.section	.text._ZN9ReverbFDN23GenerateDelayVariationsEf,"axG",%progbits,_ZN9ReverbFDN23GenerateDel
 4659              		.align	1
 4660              		.weak	_ZN9ReverbFDN23GenerateDelayVariationsEf
 4661              		.syntax unified
 4662              		.thumb
 4663              		.thumb_func
 4664              		.fpu fpv5-d16
 4666              	_ZN9ReverbFDN23GenerateDelayVariationsEf:
 4667              	.LFB5084:
  60:./include/ReverbFDN.hpp **** 
  61:./include/ReverbFDN.hpp **** 
  62:./include/ReverbFDN.hpp ****     void GenerateDelayVariations(float sample_rate)
 4668              		.loc 26 62 10
 4669              		.cfi_startproc
 4670              		@ args = 0, pretend = 0, frame = 5024
 4671              		@ frame_needed = 1, uses_anonymous_args = 0
 4672 0000 80B5     		push	{r7, lr}
 4673              		.cfi_def_cfa_offset 8
 4674              		.cfi_offset 7, -8
 4675              		.cfi_offset 14, -4
 4676 0002 2DED028B 		vpush.64	{d8}
 4677              		.cfi_def_cfa_offset 16
 4678              		.cfi_offset 80, -16
 4679              		.cfi_offset 81, -12
 4680 0006 ADF59D5D 		sub	sp, sp, #5024
 4681              		.cfi_def_cfa_offset 5040
 4682 000a 00AF     		add	r7, sp, #0
 4683              		.cfi_def_cfa_register 7
 4684 000c 07F56873 		add	r3, r7, #928
 4685 0010 A3F56773 		sub	r3, r3, #924
 4686 0014 1860     		str	r0, [r3]
 4687 0016 07F56873 		add	r3, r7, #928
 4688 001a A3F56873 		sub	r3, r3, #928
 4689 001e 83ED000A 		vstr.32	s0, [r3]
  63:./include/ReverbFDN.hpp ****     {
  64:./include/ReverbFDN.hpp ****         std::random_device rd;
 4690              		.loc 26 64 28
 4691 0022 07F6D813 		addw	r3, r7, #2520
 4692 0026 1846     		mov	r0, r3
 4693 0028 FFF7FEFF 		bl	_ZNSt13random_deviceC1Ev
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 218


  65:./include/ReverbFDN.hpp ****         std::mt19937 gen{rd()};
 4694              		.loc 26 65 30
 4695 002c 07F6D813 		addw	r3, r7, #2520
 4696 0030 1846     		mov	r0, r3
 4697 0032 FFF7FEFF 		bl	_ZNSt13random_deviceclEv
 4698 0036 0246     		mov	r2, r0
 4699 0038 474B     		ldr	r3, .L196
 4700 003a 07F59D51 		add	r1, r7, #5024
 4701 003e 0B44     		add	r3, r3, r1
 4702 0040 1146     		mov	r1, r2
 4703 0042 1846     		mov	r0, r3
 4704 0044 FFF7FEFF 		bl	_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636
  66:./include/ReverbFDN.hpp ****         std::uniform_real_distribution<float> dist{-1.0f, 1.0f};
 4705              		.loc 26 66 63
 4706 0048 444B     		ldr	r3, .L196+4
 4707 004a 07F59D52 		add	r2, r7, #5024
 4708 004e 1344     		add	r3, r3, r2
 4709 0050 F7EE000A 		vmov.f32	s1, #1.0e+0
 4710 0054 BFEE000A 		vmov.f32	s0, #-1.0e+0
 4711 0058 1846     		mov	r0, r3
 4712 005a FFF7FEFF 		bl	_ZNSt25uniform_real_distributionIfEC1Eff
 4713              	.LBB37:
  67:./include/ReverbFDN.hpp **** 
  68:./include/ReverbFDN.hpp ****         for(int i = 0; i < density_; i++)
 4714              		.loc 26 68 17
 4715 005e 0023     		movs	r3, #0
 4716 0060 41F29C32 		movw	r2, #5020
 4717 0064 3A44     		add	r2, r7, r2
 4718 0066 1360     		str	r3, [r2]
 4719              	.L194:
 4720              		.loc 26 68 28 discriminator 3
 4721 0068 07F56873 		add	r3, r7, #928
 4722 006c A3F56773 		sub	r3, r3, #924
 4723 0070 1B68     		ldr	r3, [r3]
 4724 0072 9B6B     		ldr	r3, [r3, #56]
 4725              		.loc 26 68 26 discriminator 3
 4726 0074 41F29C32 		movw	r2, #5020
 4727 0078 3A44     		add	r2, r7, r2
 4728 007a 1268     		ldr	r2, [r2]
 4729 007c 9A42     		cmp	r2, r3
 4730 007e 63DA     		bge	.L195
  69:./include/ReverbFDN.hpp ****         {
  70:./include/ReverbFDN.hpp ****             // Zufällige Perioden für die Variationen basierend auf der Frequenz berechnen
  71:./include/ReverbFDN.hpp ****             variation_period[i] = sample_rate / ReverbParams[i][2];
 4731              		.loc 26 71 66 discriminator 2
 4732 0080 374A     		ldr	r2, .L196+8
 4733 0082 41F29C33 		movw	r3, #5020
 4734 0086 3B44     		add	r3, r7, r3
 4735 0088 1B68     		ldr	r3, [r3]
 4736 008a 1B01     		lsls	r3, r3, #4
 4737 008c 1344     		add	r3, r3, r2
 4738 008e 0833     		adds	r3, r3, #8
 4739 0090 93ED007A 		vldr.32	s14, [r3]
 4740              		.loc 26 71 47 discriminator 2
 4741 0094 07F56873 		add	r3, r7, #928
 4742 0098 A3F56873 		sub	r3, r3, #928
 4743 009c D3ED006A 		vldr.32	s13, [r3]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 219


 4744 00a0 C6EE877A 		vdiv.f32	s15, s13, s14
 4745              		.loc 26 71 33 discriminator 2
 4746 00a4 FDEEE77A 		vcvt.s32.f32	s15, s15
 4747 00a8 17EE901A 		vmov	r1, s15	@ int
 4748 00ac 07F56873 		add	r3, r7, #928
 4749 00b0 A3F56773 		sub	r3, r3, #924
 4750 00b4 1A68     		ldr	r2, [r3]
 4751 00b6 41F29C33 		movw	r3, #5020
 4752 00ba 3B44     		add	r3, r7, r3
 4753 00bc 1B68     		ldr	r3, [r3]
 4754 00be 1E33     		adds	r3, r3, #30
 4755 00c0 9B00     		lsls	r3, r3, #2
 4756 00c2 1344     		add	r3, r3, r2
 4757 00c4 5960     		str	r1, [r3, #4]
  72:./include/ReverbFDN.hpp **** 
  73:./include/ReverbFDN.hpp ****             // Zufällige Werte für die Variationen generieren
  74:./include/ReverbFDN.hpp ****             delay_variations[i] = ReverbParams[i][1] * dist(gen);
 4758              		.loc 26 74 52 discriminator 2
 4759 00c6 264A     		ldr	r2, .L196+8
 4760 00c8 41F29C33 		movw	r3, #5020
 4761 00cc 3B44     		add	r3, r7, r3
 4762 00ce 1B68     		ldr	r3, [r3]
 4763 00d0 1B01     		lsls	r3, r3, #4
 4764 00d2 1344     		add	r3, r3, r2
 4765 00d4 0433     		adds	r3, r3, #4
 4766 00d6 93ED008A 		vldr.32	s16, [r3]
 4767              		.loc 26 74 60 discriminator 2
 4768 00da 1F4A     		ldr	r2, .L196
 4769 00dc 07F59D53 		add	r3, r7, #5024
 4770 00e0 1A44     		add	r2, r2, r3
 4771 00e2 1E4B     		ldr	r3, .L196+4
 4772 00e4 07F59D51 		add	r1, r7, #5024
 4773 00e8 0B44     		add	r3, r3, r1
 4774 00ea 1146     		mov	r1, r2
 4775 00ec 1846     		mov	r0, r3
 4776 00ee FFF7FEFF 		bl	_ZNSt25uniform_real_distributionIfEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567
 4777 00f2 F0EE407A 		vmov.f32	s15, s0
 4778              		.loc 26 74 54 discriminator 2
 4779 00f6 68EE277A 		vmul.f32	s15, s16, s15
 4780              		.loc 26 74 33 discriminator 2
 4781 00fa 07F56873 		add	r3, r7, #928
 4782 00fe A3F56773 		sub	r3, r3, #924
 4783 0102 1A68     		ldr	r2, [r3]
 4784 0104 41F29C33 		movw	r3, #5020
 4785 0108 3B44     		add	r3, r7, r3
 4786 010a 1B68     		ldr	r3, [r3]
 4787 010c 0E33     		adds	r3, r3, #14
 4788 010e 9B00     		lsls	r3, r3, #2
 4789 0110 1344     		add	r3, r3, r2
 4790 0112 0433     		adds	r3, r3, #4
 4791 0114 C3ED007A 		vstr.32	s15, [r3]
  75:./include/ReverbFDN.hpp **** 
  76:./include/ReverbFDN.hpp ****             // Variationen-Zähler initialisieren
  77:./include/ReverbFDN.hpp ****             variation_counter[i] = 0;
 4792              		.loc 26 77 34 discriminator 2
 4793 0118 07F56873 		add	r3, r7, #928
 4794 011c A3F56773 		sub	r3, r3, #924
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 220


 4795 0120 1A68     		ldr	r2, [r3]
 4796 0122 41F29C33 		movw	r3, #5020
 4797 0126 3B44     		add	r3, r7, r3
 4798 0128 1B68     		ldr	r3, [r3]
 4799 012a 1633     		adds	r3, r3, #22
 4800 012c 9B00     		lsls	r3, r3, #2
 4801 012e 1344     		add	r3, r3, r2
 4802 0130 0022     		movs	r2, #0
 4803 0132 5A60     		str	r2, [r3, #4]
  68:./include/ReverbFDN.hpp ****         {
 4804              		.loc 26 68 9 discriminator 2
 4805 0134 41F29C33 		movw	r3, #5020
 4806 0138 3B44     		add	r3, r7, r3
 4807 013a 1B68     		ldr	r3, [r3]
 4808 013c 0133     		adds	r3, r3, #1
 4809 013e 41F29C32 		movw	r2, #5020
 4810 0142 3A44     		add	r2, r7, r2
 4811 0144 1360     		str	r3, [r2]
 4812 0146 8FE7     		b	.L194
 4813              	.L195:
 4814              	.LBE37:
  78:./include/ReverbFDN.hpp ****         }
  79:./include/ReverbFDN.hpp ****     }
 4815              		.loc 26 79 5
 4816 0148 00BF     		nop
 4817 014a 07F59D57 		add	r7, r7, #5024
 4818              		.cfi_def_cfa_offset 16
 4819 014e BD46     		mov	sp, r7
 4820              		.cfi_def_cfa_register 13
 4821              		@ sp needed
 4822 0150 BDEC028B 		vldm	sp!, {d8}
 4823              		.cfi_restore 80
 4824              		.cfi_restore 81
 4825              		.cfi_def_cfa_offset 8
 4826 0154 80BD     		pop	{r7, pc}
 4827              	.L197:
 4828 0156 00BF     		.align	2
 4829              	.L196:
 4830 0158 74ECFFFF 		.word	-5004
 4831 015c 6CECFFFF 		.word	-5012
 4832 0160 00000000 		.word	_ZL12ReverbParams
 4833              		.cfi_endproc
 4834              	.LFE5084:
 4836              		.section	.text._ZN9ReverbFDN11SetFeedbackEf,"axG",%progbits,_ZN9ReverbFDN11SetFeedbackEf,comdat
 4837              		.align	1
 4838              		.weak	_ZN9ReverbFDN11SetFeedbackEf
 4839              		.syntax unified
 4840              		.thumb
 4841              		.thumb_func
 4842              		.fpu fpv5-d16
 4844              	_ZN9ReverbFDN11SetFeedbackEf:
 4845              	.LFB5085:
  80:./include/ReverbFDN.hpp **** 
  81:./include/ReverbFDN.hpp ****     /** Sets the reverb Feedback
  82:./include/ReverbFDN.hpp ****         works > 0
  83:./include/ReverbFDN.hpp ****         warning >= 1
  84:./include/ReverbFDN.hpp ****     */
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 221


  85:./include/ReverbFDN.hpp ****     void SetFeedback(float feedback = .7) { 
 4846              		.loc 26 85 10
 4847              		.cfi_startproc
 4848              		@ args = 0, pretend = 0, frame = 8
 4849              		@ frame_needed = 1, uses_anonymous_args = 0
 4850              		@ link register save eliminated.
 4851 0000 80B4     		push	{r7}
 4852              		.cfi_def_cfa_offset 4
 4853              		.cfi_offset 7, -4
 4854 0002 83B0     		sub	sp, sp, #12
 4855              		.cfi_def_cfa_offset 16
 4856 0004 00AF     		add	r7, sp, #0
 4857              		.cfi_def_cfa_register 7
 4858 0006 7860     		str	r0, [r7, #4]
 4859 0008 87ED000A 		vstr.32	s0, [r7]
  86:./include/ReverbFDN.hpp ****         if (feedback < 0) {
 4860              		.loc 26 86 9
 4861 000c D7ED007A 		vldr.32	s15, [r7]
 4862 0010 F5EEC07A 		vcmpe.f32	s15, #0
 4863 0014 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4864 0018 02D5     		bpl	.L199
  87:./include/ReverbFDN.hpp ****             feedback = 0;
 4865              		.loc 26 87 22
 4866 001a 4FF00003 		mov	r3, #0
 4867 001e 3B60     		str	r3, [r7]	@ float
 4868              	.L199:
  88:./include/ReverbFDN.hpp ****         }
  89:./include/ReverbFDN.hpp **** 
  90:./include/ReverbFDN.hpp ****         feedback_ = feedback;
 4869              		.loc 26 90 19
 4870 0020 7B68     		ldr	r3, [r7, #4]
 4871 0022 3A68     		ldr	r2, [r7]	@ float
 4872 0024 5A62     		str	r2, [r3, #36]	@ float
  91:./include/ReverbFDN.hpp ****     }
 4873              		.loc 26 91 5
 4874 0026 00BF     		nop
 4875 0028 0C37     		adds	r7, r7, #12
 4876              		.cfi_def_cfa_offset 4
 4877 002a BD46     		mov	sp, r7
 4878              		.cfi_def_cfa_register 13
 4879              		@ sp needed
 4880 002c 5DF8047B 		ldr	r7, [sp], #4
 4881              		.cfi_restore 7
 4882              		.cfi_def_cfa_offset 0
 4883 0030 7047     		bx	lr
 4884              		.cfi_endproc
 4885              	.LFE5085:
 4887              		.section	.text._ZN9ReverbFDN9SetAmountEf,"axG",%progbits,_ZN9ReverbFDN9SetAmountEf,comdat
 4888              		.align	1
 4889              		.weak	_ZN9ReverbFDN9SetAmountEf
 4890              		.syntax unified
 4891              		.thumb
 4892              		.thumb_func
 4893              		.fpu fpv5-d16
 4895              	_ZN9ReverbFDN9SetAmountEf:
 4896              	.LFB5086:
  92:./include/ReverbFDN.hpp **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 222


  93:./include/ReverbFDN.hpp ****     /** Sets the reverb Amount (Dry/Wet)
  94:./include/ReverbFDN.hpp ****         between 0 - 1
  95:./include/ReverbFDN.hpp ****     */
  96:./include/ReverbFDN.hpp ****     void SetAmount(float amount = 1) { 
 4897              		.loc 26 96 10
 4898              		.cfi_startproc
 4899              		@ args = 0, pretend = 0, frame = 8
 4900              		@ frame_needed = 1, uses_anonymous_args = 0
 4901              		@ link register save eliminated.
 4902 0000 80B4     		push	{r7}
 4903              		.cfi_def_cfa_offset 4
 4904              		.cfi_offset 7, -4
 4905 0002 83B0     		sub	sp, sp, #12
 4906              		.cfi_def_cfa_offset 16
 4907 0004 00AF     		add	r7, sp, #0
 4908              		.cfi_def_cfa_register 7
 4909 0006 7860     		str	r0, [r7, #4]
 4910 0008 87ED000A 		vstr.32	s0, [r7]
  97:./include/ReverbFDN.hpp ****         if (amount < 0) {
 4911              		.loc 26 97 9
 4912 000c D7ED007A 		vldr.32	s15, [r7]
 4913 0010 F5EEC07A 		vcmpe.f32	s15, #0
 4914 0014 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4915 0018 02D5     		bpl	.L203
  98:./include/ReverbFDN.hpp ****             amount = 0;
 4916              		.loc 26 98 20
 4917 001a 4FF00003 		mov	r3, #0
 4918 001e 3B60     		str	r3, [r7]	@ float
 4919              	.L203:
  99:./include/ReverbFDN.hpp ****         }
 100:./include/ReverbFDN.hpp ****         if (amount > 1) {
 4920              		.loc 26 100 9
 4921 0020 D7ED007A 		vldr.32	s15, [r7]
 4922 0024 B7EE007A 		vmov.f32	s14, #1.0e+0
 4923 0028 F4EEC77A 		vcmpe.f32	s15, s14
 4924 002c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4925 0030 02DD     		ble	.L205
 101:./include/ReverbFDN.hpp ****             amount = 1;
 4926              		.loc 26 101 20
 4927 0032 4FF07E53 		mov	r3, #1065353216
 4928 0036 3B60     		str	r3, [r7]	@ float
 4929              	.L205:
 102:./include/ReverbFDN.hpp ****         }
 103:./include/ReverbFDN.hpp **** 
 104:./include/ReverbFDN.hpp ****         amount_ = amount;
 4930              		.loc 26 104 17
 4931 0038 7B68     		ldr	r3, [r7, #4]
 4932 003a 3A68     		ldr	r2, [r7]	@ float
 4933 003c 9A62     		str	r2, [r3, #40]	@ float
 105:./include/ReverbFDN.hpp ****     }
 4934              		.loc 26 105 5
 4935 003e 00BF     		nop
 4936 0040 0C37     		adds	r7, r7, #12
 4937              		.cfi_def_cfa_offset 4
 4938 0042 BD46     		mov	sp, r7
 4939              		.cfi_def_cfa_register 13
 4940              		@ sp needed
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 223


 4941 0044 5DF8047B 		ldr	r7, [sp], #4
 4942              		.cfi_restore 7
 4943              		.cfi_def_cfa_offset 0
 4944 0048 7047     		bx	lr
 4945              		.cfi_endproc
 4946              	.LFE5086:
 4948              		.section	.text._ZN9ReverbFDN7SetSizeEf,"axG",%progbits,_ZN9ReverbFDN7SetSizeEf,comdat
 4949              		.align	1
 4950              		.weak	_ZN9ReverbFDN7SetSizeEf
 4951              		.syntax unified
 4952              		.thumb
 4953              		.thumb_func
 4954              		.fpu fpv5-d16
 4956              	_ZN9ReverbFDN7SetSizeEf:
 4957              	.LFB5087:
 106:./include/ReverbFDN.hpp **** 
 107:./include/ReverbFDN.hpp ****     /** Sets the room Size (delaytime)
 108:./include/ReverbFDN.hpp **** 
 109:./include/ReverbFDN.hpp ****     */
 110:./include/ReverbFDN.hpp ****     void SetSize(float size = 1) {
 4958              		.loc 26 110 10
 4959              		.cfi_startproc
 4960              		@ args = 0, pretend = 0, frame = 8
 4961              		@ frame_needed = 1, uses_anonymous_args = 0
 4962              		@ link register save eliminated.
 4963 0000 80B4     		push	{r7}
 4964              		.cfi_def_cfa_offset 4
 4965              		.cfi_offset 7, -4
 4966 0002 83B0     		sub	sp, sp, #12
 4967              		.cfi_def_cfa_offset 16
 4968 0004 00AF     		add	r7, sp, #0
 4969              		.cfi_def_cfa_register 7
 4970 0006 7860     		str	r0, [r7, #4]
 4971 0008 87ED000A 		vstr.32	s0, [r7]
 111:./include/ReverbFDN.hpp ****         if (size < 0.01) {
 4972              		.loc 26 111 13
 4973 000c D7ED007A 		vldr.32	s15, [r7]
 4974 0010 B7EEE77A 		vcvt.f64.f32	d7, s15
 4975              		.loc 26 111 9
 4976 0014 9FED0E6B 		vldr.64	d6, .L216
 4977 0018 B4EEC67B 		vcmpe.f64	d7, d6
 4978 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4979 0020 01D5     		bpl	.L210
 112:./include/ReverbFDN.hpp ****             size = 0.01;
 4980              		.loc 26 112 18
 4981 0022 0D4B     		ldr	r3, .L216+8
 4982 0024 3B60     		str	r3, [r7]	@ float
 4983              	.L210:
 113:./include/ReverbFDN.hpp ****         }
 114:./include/ReverbFDN.hpp ****         if (size > 10) {
 4984              		.loc 26 114 9
 4985 0026 D7ED007A 		vldr.32	s15, [r7]
 4986 002a B2EE047A 		vmov.f32	s14, #1.0e+1
 4987 002e F4EEC77A 		vcmpe.f32	s15, s14
 4988 0032 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4989 0036 01DD     		ble	.L212
 115:./include/ReverbFDN.hpp ****             size = 10;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 224


 4990              		.loc 26 115 18
 4991 0038 084B     		ldr	r3, .L216+12
 4992 003a 3B60     		str	r3, [r7]	@ float
 4993              	.L212:
 116:./include/ReverbFDN.hpp ****         }
 117:./include/ReverbFDN.hpp **** 
 118:./include/ReverbFDN.hpp ****         size_ = size;
 4994              		.loc 26 118 15
 4995 003c 7B68     		ldr	r3, [r7, #4]
 4996 003e 3A68     		ldr	r2, [r7]	@ float
 4997 0040 DA62     		str	r2, [r3, #44]	@ float
 119:./include/ReverbFDN.hpp ****     }
 4998              		.loc 26 119 5
 4999 0042 00BF     		nop
 5000 0044 0C37     		adds	r7, r7, #12
 5001              		.cfi_def_cfa_offset 4
 5002 0046 BD46     		mov	sp, r7
 5003              		.cfi_def_cfa_register 13
 5004              		@ sp needed
 5005 0048 5DF8047B 		ldr	r7, [sp], #4
 5006              		.cfi_restore 7
 5007              		.cfi_def_cfa_offset 0
 5008 004c 7047     		bx	lr
 5009              	.L217:
 5010 004e 00BF     		.align	3
 5011              	.L216:
 5012 0050 7B14AE47 		.word	1202590843
 5013 0054 E17A843F 		.word	1065646817
 5014 0058 0AD7233C 		.word	1008981770
 5015 005c 00002041 		.word	1092616192
 5016              		.cfi_endproc
 5017              	.LFE5087:
 5019              		.section	.text._ZN9ReverbFDN10SetDensityEi,"axG",%progbits,_ZN9ReverbFDN10SetDensityEi,comdat
 5020              		.align	1
 5021              		.weak	_ZN9ReverbFDN10SetDensityEi
 5022              		.syntax unified
 5023              		.thumb
 5024              		.thumb_func
 5025              		.fpu fpv5-d16
 5027              	_ZN9ReverbFDN10SetDensityEi:
 5028              	.LFB5088:
 120:./include/ReverbFDN.hpp **** 
 121:./include/ReverbFDN.hpp ****     /** Sets the Reverb Density
 122:./include/ReverbFDN.hpp ****         between 0 - 8
 123:./include/ReverbFDN.hpp ****     */
 124:./include/ReverbFDN.hpp ****     void SetDensity(int density = 8) {
 5029              		.loc 26 124 10
 5030              		.cfi_startproc
 5031              		@ args = 0, pretend = 0, frame = 8
 5032              		@ frame_needed = 1, uses_anonymous_args = 0
 5033              		@ link register save eliminated.
 5034 0000 80B4     		push	{r7}
 5035              		.cfi_def_cfa_offset 4
 5036              		.cfi_offset 7, -4
 5037 0002 83B0     		sub	sp, sp, #12
 5038              		.cfi_def_cfa_offset 16
 5039 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 225


 5040              		.cfi_def_cfa_register 7
 5041 0006 7860     		str	r0, [r7, #4]
 5042 0008 3960     		str	r1, [r7]
 125:./include/ReverbFDN.hpp ****         if (density < 1) {
 5043              		.loc 26 125 9
 5044 000a 3B68     		ldr	r3, [r7]
 5045 000c 002B     		cmp	r3, #0
 5046 000e 01DC     		bgt	.L219
 126:./include/ReverbFDN.hpp ****             density = 1;
 5047              		.loc 26 126 21
 5048 0010 0123     		movs	r3, #1
 5049 0012 3B60     		str	r3, [r7]
 5050              	.L219:
 127:./include/ReverbFDN.hpp ****         }
 128:./include/ReverbFDN.hpp ****         if (density > 8) {
 5051              		.loc 26 128 9
 5052 0014 3B68     		ldr	r3, [r7]
 5053 0016 082B     		cmp	r3, #8
 5054 0018 01DD     		ble	.L220
 129:./include/ReverbFDN.hpp ****             density = 8;
 5055              		.loc 26 129 21
 5056 001a 0823     		movs	r3, #8
 5057 001c 3B60     		str	r3, [r7]
 5058              	.L220:
 130:./include/ReverbFDN.hpp ****         }
 131:./include/ReverbFDN.hpp **** 
 132:./include/ReverbFDN.hpp ****         density_ = density;
 5059              		.loc 26 132 18
 5060 001e 7B68     		ldr	r3, [r7, #4]
 5061 0020 3A68     		ldr	r2, [r7]
 5062 0022 9A63     		str	r2, [r3, #56]
 133:./include/ReverbFDN.hpp ****     }
 5063              		.loc 26 133 5
 5064 0024 00BF     		nop
 5065 0026 0C37     		adds	r7, r7, #12
 5066              		.cfi_def_cfa_offset 4
 5067 0028 BD46     		mov	sp, r7
 5068              		.cfi_def_cfa_register 13
 5069              		@ sp needed
 5070 002a 5DF8047B 		ldr	r7, [sp], #4
 5071              		.cfi_restore 7
 5072              		.cfi_def_cfa_offset 0
 5073 002e 7047     		bx	lr
 5074              		.cfi_endproc
 5075              	.LFE5088:
 5077              		.section	.text._ZN9ReverbFDN12SetDiffusionEf,"axG",%progbits,_ZN9ReverbFDN12SetDiffusionEf,comdat
 5078              		.align	1
 5079              		.weak	_ZN9ReverbFDN12SetDiffusionEf
 5080              		.syntax unified
 5081              		.thumb
 5082              		.thumb_func
 5083              		.fpu fpv5-d16
 5085              	_ZN9ReverbFDN12SetDiffusionEf:
 5086              	.LFB5089:
 134:./include/ReverbFDN.hpp **** 
 135:./include/ReverbFDN.hpp ****     /** Sets the Reverb diffusion
 136:./include/ReverbFDN.hpp ****         best between 0 - 1
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 226


 137:./include/ReverbFDN.hpp ****     */
 138:./include/ReverbFDN.hpp ****     void SetDiffusion(float diffusion = 1) {
 5087              		.loc 26 138 10
 5088              		.cfi_startproc
 5089              		@ args = 0, pretend = 0, frame = 8
 5090              		@ frame_needed = 1, uses_anonymous_args = 0
 5091              		@ link register save eliminated.
 5092 0000 80B4     		push	{r7}
 5093              		.cfi_def_cfa_offset 4
 5094              		.cfi_offset 7, -4
 5095 0002 83B0     		sub	sp, sp, #12
 5096              		.cfi_def_cfa_offset 16
 5097 0004 00AF     		add	r7, sp, #0
 5098              		.cfi_def_cfa_register 7
 5099 0006 7860     		str	r0, [r7, #4]
 5100 0008 87ED000A 		vstr.32	s0, [r7]
 139:./include/ReverbFDN.hpp ****         if (diffusion < 0) {
 5101              		.loc 26 139 9
 5102 000c D7ED007A 		vldr.32	s15, [r7]
 5103 0010 F5EEC07A 		vcmpe.f32	s15, #0
 5104 0014 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5105 0018 02D5     		bpl	.L222
 140:./include/ReverbFDN.hpp ****             diffusion = 0;
 5106              		.loc 26 140 23
 5107 001a 4FF00003 		mov	r3, #0
 5108 001e 3B60     		str	r3, [r7]	@ float
 5109              	.L222:
 141:./include/ReverbFDN.hpp ****         }
 142:./include/ReverbFDN.hpp ****         if (diffusion > 10) {
 5110              		.loc 26 142 9
 5111 0020 D7ED007A 		vldr.32	s15, [r7]
 5112 0024 B2EE047A 		vmov.f32	s14, #1.0e+1
 5113 0028 F4EEC77A 		vcmpe.f32	s15, s14
 5114 002c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5115 0030 01DD     		ble	.L224
 143:./include/ReverbFDN.hpp ****             diffusion = 10;
 5116              		.loc 26 143 23
 5117 0032 054B     		ldr	r3, .L228
 5118 0034 3B60     		str	r3, [r7]	@ float
 5119              	.L224:
 144:./include/ReverbFDN.hpp ****         }
 145:./include/ReverbFDN.hpp **** 
 146:./include/ReverbFDN.hpp ****         diffusion_ = diffusion;
 5120              		.loc 26 146 20
 5121 0036 7B68     		ldr	r3, [r7, #4]
 5122 0038 3A68     		ldr	r2, [r7]	@ float
 5123 003a 1A63     		str	r2, [r3, #48]	@ float
 147:./include/ReverbFDN.hpp ****     }
 5124              		.loc 26 147 5
 5125 003c 00BF     		nop
 5126 003e 0C37     		adds	r7, r7, #12
 5127              		.cfi_def_cfa_offset 4
 5128 0040 BD46     		mov	sp, r7
 5129              		.cfi_def_cfa_register 13
 5130              		@ sp needed
 5131 0042 5DF8047B 		ldr	r7, [sp], #4
 5132              		.cfi_restore 7
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 227


 5133              		.cfi_def_cfa_offset 0
 5134 0046 7047     		bx	lr
 5135              	.L229:
 5136              		.align	2
 5137              	.L228:
 5138 0048 00002041 		.word	1092616192
 5139              		.cfi_endproc
 5140              	.LFE5089:
 5142              		.section	.text._ZN9ReverbFDN12SetSmoothingEf,"axG",%progbits,_ZN9ReverbFDN12SetSmoothingEf,comdat
 5143              		.align	1
 5144              		.weak	_ZN9ReverbFDN12SetSmoothingEf
 5145              		.syntax unified
 5146              		.thumb
 5147              		.thumb_func
 5148              		.fpu fpv5-d16
 5150              	_ZN9ReverbFDN12SetSmoothingEf:
 5151              	.LFB5090:
 148:./include/ReverbFDN.hpp **** 
 149:./include/ReverbFDN.hpp **** /** Sets the diffusion smoothing
 150:./include/ReverbFDN.hpp ****     works best around 1
 151:./include/ReverbFDN.hpp **** */
 152:./include/ReverbFDN.hpp **** 
 153:./include/ReverbFDN.hpp ****     void SetSmoothing(float smoothing = 1) {
 5152              		.loc 26 153 10
 5153              		.cfi_startproc
 5154              		@ args = 0, pretend = 0, frame = 8
 5155              		@ frame_needed = 1, uses_anonymous_args = 0
 5156 0000 80B5     		push	{r7, lr}
 5157              		.cfi_def_cfa_offset 8
 5158              		.cfi_offset 7, -8
 5159              		.cfi_offset 14, -4
 5160 0002 82B0     		sub	sp, sp, #8
 5161              		.cfi_def_cfa_offset 16
 5162 0004 00AF     		add	r7, sp, #0
 5163              		.cfi_def_cfa_register 7
 5164 0006 7860     		str	r0, [r7, #4]
 5165 0008 87ED000A 		vstr.32	s0, [r7]
 154:./include/ReverbFDN.hpp ****         
 155:./include/ReverbFDN.hpp ****         smoothing *= 800;
 5166              		.loc 26 155 19
 5167 000c D7ED007A 		vldr.32	s15, [r7]
 5168 0010 9FED097A 		vldr.32	s14, .L231
 5169 0014 67EE877A 		vmul.f32	s15, s15, s14
 5170 0018 C7ED007A 		vstr.32	s15, [r7]
 156:./include/ReverbFDN.hpp ****         slewLimiter.setTime(smoothing);
 5171              		.loc 26 156 28
 5172 001c 7B68     		ldr	r3, [r7, #4]
 5173 001e D7ED007A 		vldr.32	s15, [r7]
 5174 0022 B7EEE77A 		vcvt.f64.f32	d7, s15
 5175 0026 B0EE470B 		vmov.f64	d0, d7
 5176 002a 1846     		mov	r0, r3
 5177 002c FFF7FEFF 		bl	_ZN1k13OnePoleFilter7setTimeEd
 157:./include/ReverbFDN.hpp ****     }
 5178              		.loc 26 157 5
 5179 0030 00BF     		nop
 5180 0032 0837     		adds	r7, r7, #8
 5181              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 228


 5182 0034 BD46     		mov	sp, r7
 5183              		.cfi_def_cfa_register 13
 5184              		@ sp needed
 5185 0036 80BD     		pop	{r7, pc}
 5186              	.L232:
 5187              		.align	2
 5188              	.L231:
 5189 0038 00004844 		.word	1145569280
 5190              		.cfi_endproc
 5191              	.LFE5090:
 5193              		.section	.text._ZN9ReverbFDN7ProcessEf,"axG",%progbits,_ZN9ReverbFDN7ProcessEf,comdat
 5194              		.align	1
 5195              		.weak	_ZN9ReverbFDN7ProcessEf
 5196              		.syntax unified
 5197              		.thumb
 5198              		.thumb_func
 5199              		.fpu fpv5-d16
 5201              	_ZN9ReverbFDN7ProcessEf:
 5202              	.LFB5091:
 158:./include/ReverbFDN.hpp **** 
 159:./include/ReverbFDN.hpp ****     /** Processes the input Signal
 160:./include/ReverbFDN.hpp ****         Mono reverb
 161:./include/ReverbFDN.hpp ****     */
 162:./include/ReverbFDN.hpp ****     float Process(float input)
 5203              		.loc 26 162 11
 5204              		.cfi_startproc
 5205              		@ args = 0, pretend = 0, frame = 5024
 5206              		@ frame_needed = 1, uses_anonymous_args = 0
 5207 0000 90B5     		push	{r4, r7, lr}
 5208              		.cfi_def_cfa_offset 12
 5209              		.cfi_offset 4, -12
 5210              		.cfi_offset 7, -8
 5211              		.cfi_offset 14, -4
 5212 0002 2DED028B 		vpush.64	{d8}
 5213              		.cfi_def_cfa_offset 20
 5214              		.cfi_offset 80, -20
 5215              		.cfi_offset 81, -16
 5216 0006 ADF59D5D 		sub	sp, sp, #5024
 5217              		.cfi_def_cfa_offset 5044
 5218 000a 81B0     		sub	sp, sp, #4
 5219              		.cfi_def_cfa_offset 5048
 5220 000c 00AF     		add	r7, sp, #0
 5221              		.cfi_def_cfa_register 7
 5222 000e 07F56873 		add	r3, r7, #928
 5223 0012 A3F56773 		sub	r3, r3, #924
 5224 0016 1860     		str	r0, [r3]
 5225 0018 07F56873 		add	r3, r7, #928
 5226 001c A3F56873 		sub	r3, r3, #928
 5227 0020 83ED000A 		vstr.32	s0, [r3]
 163:./include/ReverbFDN.hpp ****     {
 164:./include/ReverbFDN.hpp ****         float output = 0;
 5228              		.loc 26 164 15
 5229 0024 4FF00003 		mov	r3, #0
 5230 0028 41F29C32 		movw	r2, #5020
 5231 002c 3A44     		add	r2, r7, r2
 5232 002e 1360     		str	r3, [r2]	@ float
 5233              	.LBB38:
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 229


 165:./include/ReverbFDN.hpp **** 
 166:./include/ReverbFDN.hpp ****         for(int i = 0; i < density_; i++)
 5234              		.loc 26 166 17
 5235 0030 0023     		movs	r3, #0
 5236 0032 41F29832 		movw	r2, #5016
 5237 0036 3A44     		add	r2, r7, r2
 5238 0038 1360     		str	r3, [r2]
 5239              	.L236:
 5240              		.loc 26 166 28 discriminator 1
 5241 003a 07F56873 		add	r3, r7, #928
 5242 003e A3F56773 		sub	r3, r3, #924
 5243 0042 1B68     		ldr	r3, [r3]
 5244 0044 9B6B     		ldr	r3, [r3, #56]
 5245              		.loc 26 166 26 discriminator 1
 5246 0046 41F29832 		movw	r2, #5016
 5247 004a 3A44     		add	r2, r7, r2
 5248 004c 1268     		ldr	r2, [r2]
 5249 004e 9A42     		cmp	r2, r3
 5250 0050 80F25081 		bge	.L234
 5251              	.LBB39:
 5252              	.LBB40:
 167:./include/ReverbFDN.hpp ****         {
 168:./include/ReverbFDN.hpp **** 
 169:./include/ReverbFDN.hpp ****             if (++variation_counter[i] >= variation_period[i])
 5253              		.loc 26 169 38
 5254 0054 07F56873 		add	r3, r7, #928
 5255 0058 A3F56773 		sub	r3, r3, #924
 5256 005c 1A68     		ldr	r2, [r3]
 5257 005e 41F29833 		movw	r3, #5016
 5258 0062 3B44     		add	r3, r7, r3
 5259 0064 1B68     		ldr	r3, [r3]
 5260 0066 1633     		adds	r3, r3, #22
 5261 0068 9B00     		lsls	r3, r3, #2
 5262 006a 1344     		add	r3, r3, r2
 5263 006c 5B68     		ldr	r3, [r3, #4]
 5264              		.loc 26 169 17
 5265 006e 5A1C     		adds	r2, r3, #1
 5266              		.loc 26 169 40
 5267 0070 07F56873 		add	r3, r7, #928
 5268 0074 A3F56773 		sub	r3, r3, #924
 5269 0078 1968     		ldr	r1, [r3]
 5270 007a 41F29833 		movw	r3, #5016
 5271 007e 3B44     		add	r3, r7, r3
 5272 0080 1B68     		ldr	r3, [r3]
 5273 0082 1633     		adds	r3, r3, #22
 5274 0084 9B00     		lsls	r3, r3, #2
 5275 0086 0B44     		add	r3, r3, r1
 5276 0088 5A60     		str	r2, [r3, #4]
 5277              		.loc 26 169 38
 5278 008a 07F56873 		add	r3, r7, #928
 5279 008e A3F56773 		sub	r3, r3, #924
 5280 0092 1A68     		ldr	r2, [r3]
 5281 0094 41F29833 		movw	r3, #5016
 5282 0098 3B44     		add	r3, r7, r3
 5283 009a 1B68     		ldr	r3, [r3]
 5284 009c 1633     		adds	r3, r3, #22
 5285 009e 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 230


 5286 00a0 1344     		add	r3, r3, r2
 5287 00a2 5A68     		ldr	r2, [r3, #4]
 5288              		.loc 26 169 61
 5289 00a4 07F56873 		add	r3, r7, #928
 5290 00a8 A3F56773 		sub	r3, r3, #924
 5291 00ac 1968     		ldr	r1, [r3]
 5292 00ae 41F29833 		movw	r3, #5016
 5293 00b2 3B44     		add	r3, r7, r3
 5294 00b4 1B68     		ldr	r3, [r3]
 5295 00b6 1E33     		adds	r3, r3, #30
 5296 00b8 9B00     		lsls	r3, r3, #2
 5297 00ba 0B44     		add	r3, r3, r1
 5298 00bc 5B68     		ldr	r3, [r3, #4]
 5299              		.loc 26 169 40
 5300 00be 9A42     		cmp	r2, r3
 5301 00c0 ACBF     		ite	ge
 5302 00c2 0123     		movge	r3, #1
 5303 00c4 0023     		movlt	r3, #0
 5304 00c6 DBB2     		uxtb	r3, r3
 5305              		.loc 26 169 13
 5306 00c8 002B     		cmp	r3, #0
 5307 00ca 00F08580 		beq	.L235
 5308              	.LBB41:
 170:./include/ReverbFDN.hpp ****             {
 171:./include/ReverbFDN.hpp ****                 variation_counter[i] = 0;
 5309              		.loc 26 171 38
 5310 00ce 07F56873 		add	r3, r7, #928
 5311 00d2 A3F56773 		sub	r3, r3, #924
 5312 00d6 1A68     		ldr	r2, [r3]
 5313 00d8 41F29833 		movw	r3, #5016
 5314 00dc 3B44     		add	r3, r7, r3
 5315 00de 1B68     		ldr	r3, [r3]
 5316 00e0 1633     		adds	r3, r3, #22
 5317 00e2 9B00     		lsls	r3, r3, #2
 5318 00e4 1344     		add	r3, r3, r2
 5319 00e6 0022     		movs	r2, #0
 5320 00e8 5A60     		str	r2, [r3, #4]
 172:./include/ReverbFDN.hpp ****                 std::random_device rd;
 5321              		.loc 26 172 36
 5322 00ea A34B     		ldr	r3, .L238
 5323 00ec 07F59D52 		add	r2, r7, #5024
 5324 00f0 1344     		add	r3, r3, r2
 5325 00f2 1846     		mov	r0, r3
 5326 00f4 FFF7FEFF 		bl	_ZNSt13random_deviceC1Ev
 173:./include/ReverbFDN.hpp ****                 std::mt19937 gen{rd()};
 5327              		.loc 26 173 38
 5328 00f8 9F4B     		ldr	r3, .L238
 5329 00fa 07F59D52 		add	r2, r7, #5024
 5330 00fe 1344     		add	r3, r3, r2
 5331 0100 1846     		mov	r0, r3
 5332 0102 FFF7FEFF 		bl	_ZNSt13random_deviceclEv
 5333 0106 0246     		mov	r2, r0
 5334 0108 07F6CC13 		addw	r3, r7, #2508
 5335 010c 1146     		mov	r1, r2
 5336 010e 1846     		mov	r0, r3
 5337 0110 FFF7FEFF 		bl	_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636
 174:./include/ReverbFDN.hpp ****                 std::uniform_real_distribution<float> dist{-1.0f, 1.0f};
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 231


 5338              		.loc 26 174 71
 5339 0114 41F29033 		movw	r3, #5008
 5340 0118 3B44     		add	r3, r7, r3
 5341 011a F7EE000A 		vmov.f32	s1, #1.0e+0
 5342 011e BFEE000A 		vmov.f32	s0, #-1.0e+0
 5343 0122 1846     		mov	r0, r3
 5344 0124 FFF7FEFF 		bl	_ZNSt25uniform_real_distributionIfEC1Eff
 175:./include/ReverbFDN.hpp ****                 delay_variations[i] = ReverbParams[i][1] * dist(gen);
 5345              		.loc 26 175 56
 5346 0128 944A     		ldr	r2, .L238+4
 5347 012a 41F29833 		movw	r3, #5016
 5348 012e 3B44     		add	r3, r7, r3
 5349 0130 1B68     		ldr	r3, [r3]
 5350 0132 1B01     		lsls	r3, r3, #4
 5351 0134 1344     		add	r3, r3, r2
 5352 0136 0433     		adds	r3, r3, #4
 5353 0138 93ED008A 		vldr.32	s16, [r3]
 5354              		.loc 26 175 64
 5355 013c 07F6CC12 		addw	r2, r7, #2508
 5356 0140 41F29033 		movw	r3, #5008
 5357 0144 3B44     		add	r3, r7, r3
 5358 0146 1146     		mov	r1, r2
 5359 0148 1846     		mov	r0, r3
 5360 014a FFF7FEFF 		bl	_ZNSt25uniform_real_distributionIfEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567
 5361 014e F0EE407A 		vmov.f32	s15, s0
 5362              		.loc 26 175 58
 5363 0152 68EE277A 		vmul.f32	s15, s16, s15
 5364              		.loc 26 175 37
 5365 0156 07F56873 		add	r3, r7, #928
 5366 015a A3F56773 		sub	r3, r3, #924
 5367 015e 1A68     		ldr	r2, [r3]
 5368 0160 41F29833 		movw	r3, #5016
 5369 0164 3B44     		add	r3, r7, r3
 5370 0166 1B68     		ldr	r3, [r3]
 5371 0168 0E33     		adds	r3, r3, #14
 5372 016a 9B00     		lsls	r3, r3, #2
 5373 016c 1344     		add	r3, r3, r2
 5374 016e 0433     		adds	r3, r3, #4
 5375 0170 C3ED007A 		vstr.32	s15, [r3]
 176:./include/ReverbFDN.hpp ****                 delay_time[i] = (ReverbParams[i][0] + delay_variations[i] * diffusion_);
 5376              		.loc 26 176 51
 5377 0174 814A     		ldr	r2, .L238+4
 5378 0176 41F29833 		movw	r3, #5016
 5379 017a 3B44     		add	r3, r7, r3
 5380 017c 1B68     		ldr	r3, [r3]
 5381 017e 1B01     		lsls	r3, r3, #4
 5382 0180 1344     		add	r3, r3, r2
 5383 0182 93ED007A 		vldr.32	s14, [r3]
 5384              		.loc 26 176 73
 5385 0186 07F56873 		add	r3, r7, #928
 5386 018a A3F56773 		sub	r3, r3, #924
 5387 018e 1A68     		ldr	r2, [r3]
 5388 0190 41F29833 		movw	r3, #5016
 5389 0194 3B44     		add	r3, r7, r3
 5390 0196 1B68     		ldr	r3, [r3]
 5391 0198 0E33     		adds	r3, r3, #14
 5392 019a 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 232


 5393 019c 1344     		add	r3, r3, r2
 5394 019e 0433     		adds	r3, r3, #4
 5395 01a0 D3ED006A 		vldr.32	s13, [r3]
 5396              		.loc 26 176 77
 5397 01a4 07F56873 		add	r3, r7, #928
 5398 01a8 A3F56773 		sub	r3, r3, #924
 5399 01ac 1B68     		ldr	r3, [r3]
 5400 01ae D3ED0C7A 		vldr.32	s15, [r3, #48]
 5401              		.loc 26 176 75
 5402 01b2 66EEA77A 		vmul.f32	s15, s13, s15
 5403              		.loc 26 176 53
 5404 01b6 77EE277A 		vadd.f32	s15, s14, s15
 5405              		.loc 26 176 31
 5406 01ba 07F56873 		add	r3, r7, #928
 5407 01be A3F56773 		sub	r3, r3, #924
 5408 01c2 1A68     		ldr	r2, [r3]
 5409 01c4 41F29833 		movw	r3, #5016
 5410 01c8 3B44     		add	r3, r7, r3
 5411 01ca 1B68     		ldr	r3, [r3]
 5412 01cc 2633     		adds	r3, r3, #38
 5413 01ce 9B00     		lsls	r3, r3, #2
 5414 01d0 1344     		add	r3, r3, r2
 5415 01d2 0433     		adds	r3, r3, #4
 5416 01d4 C3ED007A 		vstr.32	s15, [r3]
 5417              	.L235:
 5418              	.LBE41:
 5419              	.LBE40:
 177:./include/ReverbFDN.hpp ****             }
 178:./include/ReverbFDN.hpp **** 
 179:./include/ReverbFDN.hpp ****             output += delay[i].Read();
 5420              		.loc 26 179 36 discriminator 2
 5421 01d8 41F29833 		movw	r3, #5016
 5422 01dc 3B44     		add	r3, r7, r3
 5423 01de 1B68     		ldr	r3, [r3]
 5424 01e0 674A     		ldr	r2, .L238+8
 5425 01e2 02FB03F3 		mul	r3, r2, r3
 5426 01e6 674A     		ldr	r2, .L238+12
 5427 01e8 1344     		add	r3, r3, r2
 5428 01ea 1846     		mov	r0, r3
 5429 01ec FFF7FEFF 		bl	_ZNK7daisysp9DelayLineIfLj96000EE4ReadEv
 5430 01f0 B0EE407A 		vmov.f32	s14, s0
 5431              		.loc 26 179 20 discriminator 2
 5432 01f4 41F29C33 		movw	r3, #5020
 5433 01f8 3B44     		add	r3, r7, r3
 5434 01fa D3ED007A 		vldr.32	s15, [r3]
 5435 01fe 77EE877A 		vadd.f32	s15, s15, s14
 5436 0202 41F29C33 		movw	r3, #5020
 5437 0206 3B44     		add	r3, r7, r3
 5438 0208 C3ED007A 		vstr.32	s15, [r3]
 180:./include/ReverbFDN.hpp **** 
 181:./include/ReverbFDN.hpp ****             delay[i].Write(input + delay[i].Read() * feedback_);
 5439              		.loc 26 181 27 discriminator 2
 5440 020c 41F29833 		movw	r3, #5016
 5441 0210 3B44     		add	r3, r7, r3
 5442 0212 1B68     		ldr	r3, [r3]
 5443 0214 5A4A     		ldr	r2, .L238+8
 5444 0216 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 233


 5445 021a 5A4A     		ldr	r2, .L238+12
 5446 021c 9C18     		adds	r4, r3, r2
 5447              		.loc 26 181 49 discriminator 2
 5448 021e 41F29833 		movw	r3, #5016
 5449 0222 3B44     		add	r3, r7, r3
 5450 0224 1B68     		ldr	r3, [r3]
 5451 0226 564A     		ldr	r2, .L238+8
 5452 0228 02FB03F3 		mul	r3, r2, r3
 5453 022c 554A     		ldr	r2, .L238+12
 5454 022e 1344     		add	r3, r3, r2
 5455 0230 1846     		mov	r0, r3
 5456 0232 FFF7FEFF 		bl	_ZNK7daisysp9DelayLineIfLj96000EE4ReadEv
 5457 0236 B0EE407A 		vmov.f32	s14, s0
 5458              		.loc 26 181 54 discriminator 2
 5459 023a 07F56873 		add	r3, r7, #928
 5460 023e A3F56773 		sub	r3, r3, #924
 5461 0242 1B68     		ldr	r3, [r3]
 5462 0244 D3ED097A 		vldr.32	s15, [r3, #36]
 5463              		.loc 26 181 52 discriminator 2
 5464 0248 27EE277A 		vmul.f32	s14, s14, s15
 5465              		.loc 26 181 27 discriminator 2
 5466 024c 07F56873 		add	r3, r7, #928
 5467 0250 A3F56873 		sub	r3, r3, #928
 5468 0254 D3ED007A 		vldr.32	s15, [r3]
 5469 0258 77EE277A 		vadd.f32	s15, s14, s15
 5470 025c B0EE670A 		vmov.f32	s0, s15
 5471 0260 2046     		mov	r0, r4
 5472 0262 FFF7FEFF 		bl	_ZN7daisysp9DelayLineIfLj96000EE5WriteEf
 182:./include/ReverbFDN.hpp **** 
 183:./include/ReverbFDN.hpp ****             delay[i].SetDelay(slewLimiter.process(delay_time[i]) * sample_rate_ * size_);
 5473              		.loc 26 183 30 discriminator 2
 5474 0266 41F29833 		movw	r3, #5016
 5475 026a 3B44     		add	r3, r7, r3
 5476 026c 1B68     		ldr	r3, [r3]
 5477 026e 444A     		ldr	r2, .L238+8
 5478 0270 02FB03F3 		mul	r3, r2, r3
 5479 0274 434A     		ldr	r2, .L238+12
 5480 0276 9C18     		adds	r4, r3, r2
 5481              		.loc 26 183 50 discriminator 2
 5482 0278 07F56873 		add	r3, r7, #928
 5483 027c A3F56773 		sub	r3, r3, #924
 5484 0280 1968     		ldr	r1, [r3]
 5485              		.loc 26 183 63 discriminator 2
 5486 0282 07F56873 		add	r3, r7, #928
 5487 0286 A3F56773 		sub	r3, r3, #924
 5488 028a 1A68     		ldr	r2, [r3]
 5489 028c 41F29833 		movw	r3, #5016
 5490 0290 3B44     		add	r3, r7, r3
 5491 0292 1B68     		ldr	r3, [r3]
 5492 0294 2633     		adds	r3, r3, #38
 5493 0296 9B00     		lsls	r3, r3, #2
 5494 0298 1344     		add	r3, r3, r2
 5495 029a 0433     		adds	r3, r3, #4
 5496 029c D3ED007A 		vldr.32	s15, [r3]
 5497              		.loc 26 183 50 discriminator 2
 5498 02a0 B7EEE77A 		vcvt.f64.f32	d7, s15
 5499 02a4 B0EE470B 		vmov.f64	d0, d7
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 234


 5500 02a8 0846     		mov	r0, r1
 5501 02aa FFF7FEFF 		bl	_ZN1k13OnePoleFilter7processEd
 5502 02ae B0EE407A 		vmov.f32	s14, s0
 5503              		.loc 26 183 68 discriminator 2
 5504 02b2 07F56873 		add	r3, r7, #928
 5505 02b6 A3F56773 		sub	r3, r3, #924
 5506 02ba 1B68     		ldr	r3, [r3]
 5507 02bc D3ED087A 		vldr.32	s15, [r3, #32]
 5508              		.loc 26 183 66 discriminator 2
 5509 02c0 27EE277A 		vmul.f32	s14, s14, s15
 5510              		.loc 26 183 83 discriminator 2
 5511 02c4 07F56873 		add	r3, r7, #928
 5512 02c8 A3F56773 		sub	r3, r3, #924
 5513 02cc 1B68     		ldr	r3, [r3]
 5514 02ce D3ED0B7A 		vldr.32	s15, [r3, #44]
 5515              		.loc 26 183 30 discriminator 2
 5516 02d2 67EE277A 		vmul.f32	s15, s14, s15
 5517 02d6 B0EE670A 		vmov.f32	s0, s15
 5518 02da 2046     		mov	r0, r4
 5519 02dc FFF7FEFF 		bl	_ZN7daisysp9DelayLineIfLj96000EE8SetDelayEf
 5520              	.LBE39:
 166:./include/ReverbFDN.hpp ****         {
 5521              		.loc 26 166 9 discriminator 2
 5522 02e0 41F29833 		movw	r3, #5016
 5523 02e4 3B44     		add	r3, r7, r3
 5524 02e6 1B68     		ldr	r3, [r3]
 5525 02e8 0133     		adds	r3, r3, #1
 5526 02ea 41F29832 		movw	r2, #5016
 5527 02ee 3A44     		add	r2, r7, r2
 5528 02f0 1360     		str	r3, [r2]
 5529 02f2 A2E6     		b	.L236
 5530              	.L234:
 5531              	.LBE38:
 184:./include/ReverbFDN.hpp ****         }
 185:./include/ReverbFDN.hpp **** 
 186:./include/ReverbFDN.hpp **** 
 187:./include/ReverbFDN.hpp ****         // output = 1 - output;
 188:./include/ReverbFDN.hpp ****         output *= amount_;
 5532              		.loc 26 188 19
 5533 02f4 07F56873 		add	r3, r7, #928
 5534 02f8 A3F56773 		sub	r3, r3, #924
 5535 02fc 1B68     		ldr	r3, [r3]
 5536 02fe D3ED0A7A 		vldr.32	s15, [r3, #40]
 5537              		.loc 26 188 16
 5538 0302 41F29C33 		movw	r3, #5020
 5539 0306 3B44     		add	r3, r7, r3
 5540 0308 93ED007A 		vldr.32	s14, [r3]
 5541 030c 67EE277A 		vmul.f32	s15, s14, s15
 5542 0310 41F29C33 		movw	r3, #5020
 5543 0314 3B44     		add	r3, r7, r3
 5544 0316 C3ED007A 		vstr.32	s15, [r3]
 189:./include/ReverbFDN.hpp ****         output += input * (-amount_ + 1);
 5545              		.loc 26 189 29
 5546 031a 07F56873 		add	r3, r7, #928
 5547 031e A3F56773 		sub	r3, r3, #924
 5548 0322 1B68     		ldr	r3, [r3]
 5549 0324 D3ED0A7A 		vldr.32	s15, [r3, #40]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 235


 5550              		.loc 26 189 37
 5551 0328 B7EE007A 		vmov.f32	s14, #1.0e+0
 5552 032c 37EE677A 		vsub.f32	s14, s14, s15
 5553              		.loc 26 189 25
 5554 0330 07F56873 		add	r3, r7, #928
 5555 0334 A3F56873 		sub	r3, r3, #928
 5556 0338 D3ED007A 		vldr.32	s15, [r3]
 5557 033c 67EE277A 		vmul.f32	s15, s14, s15
 5558              		.loc 26 189 16
 5559 0340 41F29C33 		movw	r3, #5020
 5560 0344 3B44     		add	r3, r7, r3
 5561 0346 93ED007A 		vldr.32	s14, [r3]
 5562 034a 77EE277A 		vadd.f32	s15, s14, s15
 5563 034e 41F29C33 		movw	r3, #5020
 5564 0352 3B44     		add	r3, r7, r3
 5565 0354 C3ED007A 		vstr.32	s15, [r3]
 190:./include/ReverbFDN.hpp **** 
 191:./include/ReverbFDN.hpp ****         return output;
 5566              		.loc 26 191 16
 5567 0358 41F29C33 		movw	r3, #5020
 5568 035c 3B44     		add	r3, r7, r3
 5569 035e 1B68     		ldr	r3, [r3]	@ float
 5570 0360 07EE903A 		vmov	s15, r3
 192:./include/ReverbFDN.hpp ****     }
 5571              		.loc 26 192 5
 5572 0364 B0EE670A 		vmov.f32	s0, s15
 5573 0368 07F59D57 		add	r7, r7, #5024
 5574 036c 0437     		adds	r7, r7, #4
 5575              		.cfi_def_cfa_offset 20
 5576 036e BD46     		mov	sp, r7
 5577              		.cfi_def_cfa_register 13
 5578              		@ sp needed
 5579 0370 BDEC028B 		vldm	sp!, {d8}
 5580              		.cfi_restore 80
 5581              		.cfi_restore 81
 5582              		.cfi_def_cfa_offset 12
 5583 0374 90BD     		pop	{r4, r7, pc}
 5584              	.L239:
 5585 0376 00BF     		.align	2
 5586              	.L238:
 5587 0378 68ECFFFF 		.word	-5016
 5588 037c 00000000 		.word	_ZL12ReverbParams
 5589 0380 0CDC0500 		.word	384012
 5590 0384 00000000 		.word	delay
 5591              		.cfi_endproc
 5592              	.LFE5091:
 5594              		.global	hw
 5595              		.section	.bss.hw,"aw",%nobits
 5596              		.align	2
 5599              	hw:
 5600 0000 00000000 		.space	60
 5600      00000000 
 5600      00000000 
 5600      00000000 
 5600      00000000 
 5601              		.global	metro
 5602              		.section	.bss.metro,"aw",%nobits
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 236


 5603              		.align	2
 5606              	metro:
 5607 0000 00000000 		.space	16
 5607      00000000 
 5607      00000000 
 5607      00000000 
 5608              		.global	envelope
 5609              		.section	.bss.envelope,"aw",%nobits
 5610              		.align	2
 5613              	envelope:
 5614 0000 00000000 		.space	48
 5614      00000000 
 5614      00000000 
 5614      00000000 
 5614      00000000 
 5615              		.global	snare
 5616              		.section	.bss.snare,"aw",%nobits
 5617              		.align	2
 5620              	snare:
 5621 0000 00000000 		.space	284
 5621      00000000 
 5621      00000000 
 5621      00000000 
 5621      00000000 
 5622              		.section	.text._ZN9ReverbFDNC2Ev,"axG",%progbits,_ZN9ReverbFDNC5Ev,comdat
 5623              		.align	1
 5624              		.weak	_ZN9ReverbFDNC2Ev
 5625              		.syntax unified
 5626              		.thumb
 5627              		.thumb_func
 5628              		.fpu fpv5-d16
 5630              	_ZN9ReverbFDNC2Ev:
 5631              	.LFB5093:
  31:./include/ReverbFDN.hpp **** {
 5632              		.loc 26 31 7
 5633              		.cfi_startproc
 5634              		@ args = 0, pretend = 0, frame = 8
 5635              		@ frame_needed = 1, uses_anonymous_args = 0
 5636 0000 80B5     		push	{r7, lr}
 5637              		.cfi_def_cfa_offset 8
 5638              		.cfi_offset 7, -8
 5639              		.cfi_offset 14, -4
 5640 0002 82B0     		sub	sp, sp, #8
 5641              		.cfi_def_cfa_offset 16
 5642 0004 00AF     		add	r7, sp, #0
 5643              		.cfi_def_cfa_register 7
 5644 0006 7860     		str	r0, [r7, #4]
 5645              	.LBB42:
  31:./include/ReverbFDN.hpp **** {
 5646              		.loc 26 31 7
 5647 0008 7B68     		ldr	r3, [r7, #4]
 5648 000a 1846     		mov	r0, r3
 5649 000c FFF7FEFF 		bl	_ZN1k13OnePoleFilterC1Ev
 5650 0010 7B68     		ldr	r3, [r7, #4]
 5651 0012 094A     		ldr	r2, .L242
 5652 0014 5A62     		str	r2, [r3, #36]	@ float
 5653 0016 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 237


 5654 0018 4FF07E52 		mov	r2, #1065353216
 5655 001c 9A62     		str	r2, [r3, #40]	@ float
 5656 001e 7B68     		ldr	r3, [r7, #4]
 5657 0020 4FF07E52 		mov	r2, #1065353216
 5658 0024 DA62     		str	r2, [r3, #44]	@ float
 5659 0026 7B68     		ldr	r3, [r7, #4]
 5660 0028 0822     		movs	r2, #8
 5661 002a 9A63     		str	r2, [r3, #56]
 5662              	.LBE42:
 5663 002c 7B68     		ldr	r3, [r7, #4]
 5664 002e 1846     		mov	r0, r3
 5665 0030 0837     		adds	r7, r7, #8
 5666              		.cfi_def_cfa_offset 8
 5667 0032 BD46     		mov	sp, r7
 5668              		.cfi_def_cfa_register 13
 5669              		@ sp needed
 5670 0034 80BD     		pop	{r7, pc}
 5671              	.L243:
 5672 0036 00BF     		.align	2
 5673              	.L242:
 5674 0038 6666663F 		.word	1063675494
 5675              		.cfi_endproc
 5676              	.LFE5093:
 5678              		.weak	_ZN9ReverbFDNC1Ev
 5679              		.thumb_set _ZN9ReverbFDNC1Ev,_ZN9ReverbFDNC2Ev
 5680              		.global	reverb
 5681              		.section	.bss.reverb,"aw",%nobits
 5682              		.align	3
 5685              	reverb:
 5686 0000 00000000 		.space	192
 5686      00000000 
 5686      00000000 
 5686      00000000 
 5686      00000000 
 5687              		.global	adc
 5688              		.section	.bss.adc,"aw",%nobits
 5689              		.align	2
 5692              	adc:
 5693 0000 00000000 		.space	8
 5693      00000000 
 5694              		.global	knob
 5695              		.section	.bss.knob,"aw",%nobits
 5696              		.align	3
 5699              	knob:
 5700 0000 00000000 		.space	616
 5700      00000000 
 5700      00000000 
 5700      00000000 
 5700      00000000 
 5701              		.global	modSwitch
 5702              		.section	.bss.modSwitch,"aw",%nobits
 5703              		.align	2
 5706              	modSwitch:
 5707 0000 00000000 		.space	20
 5707      00000000 
 5707      00000000 
 5707      00000000 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 238


 5707      00000000 
 5708              		.global	effectSwitch
 5709              		.section	.bss.effectSwitch,"aw",%nobits
 5710              		.align	2
 5713              	effectSwitch:
 5714 0000 00000000 		.space	20
 5714      00000000 
 5714      00000000 
 5714      00000000 
 5714      00000000 
 5715              		.global	sampleRate
 5716              		.section	.bss.sampleRate,"aw",%nobits
 5717              		.align	2
 5720              	sampleRate:
 5721 0000 00000000 		.space	4
 5722              		.global	parameters
 5723              		.section	.bss.parameters,"aw",%nobits
 5724              		.align	2
 5727              	parameters:
 5728 0000 00000000 		.space	28
 5728      00000000 
 5728      00000000 
 5728      00000000 
 5728      00000000 
 5729              		.global	volume
 5730              		.section	.bss.volume,"aw",%nobits
 5731              		.align	2
 5734              	volume:
 5735 0000 00000000 		.space	4
 5736              		.global	timerUI
 5737              		.section	.bss.timerUI,"aw",%nobits
 5738              		.align	2
 5741              	timerUI:
 5742 0000 00000000 		.space	4
 5743              		.global	timerVisual
 5744              		.section	.bss.timerVisual,"aw",%nobits
 5745              		.align	2
 5748              	timerVisual:
 5749 0000 00000000 		.space	4
 5750              		.section	.text._Z9initTimerv,"ax",%progbits
 5751              		.align	1
 5752              		.global	_Z9initTimerv
 5753              		.syntax unified
 5754              		.thumb
 5755              		.thumb_func
 5756              		.fpu fpv5-d16
 5758              	_Z9initTimerv:
 5759              	.LFB5095:
 5760              		.file 27 "Reverb_test.cpp"
   1:Reverb_test.cpp **** #include <iterator>
   2:Reverb_test.cpp **** #include <vector>
   3:Reverb_test.cpp **** #include "daisy_seed.h"
   4:Reverb_test.cpp **** #include "daisysp.h"
   5:Reverb_test.cpp **** 
   6:Reverb_test.cpp **** #include "constants.h"
   7:Reverb_test.cpp **** 
   8:Reverb_test.cpp **** #include "KnobMulti.hpp"
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 239


   9:Reverb_test.cpp **** #include "ReverbFDN.hpp"
  10:Reverb_test.cpp **** #include "MapPot.hpp"
  11:Reverb_test.cpp **** 
  12:Reverb_test.cpp **** using namespace daisy;
  13:Reverb_test.cpp **** using namespace daisysp;
  14:Reverb_test.cpp **** using namespace k;
  15:Reverb_test.cpp **** 
  16:Reverb_test.cpp **** DaisySeed hw;
  17:Reverb_test.cpp **** 
  18:Reverb_test.cpp **** // #define SAMPLE_RATE 48000
  19:Reverb_test.cpp **** 
  20:Reverb_test.cpp **** Metro                   metro;
  21:Reverb_test.cpp **** Adsr                    envelope;
  22:Reverb_test.cpp **** SyntheticSnareDrum      snare;
  23:Reverb_test.cpp **** ReverbFDN reverb;
  24:Reverb_test.cpp **** 
  25:Reverb_test.cpp **** AdcHandle adc;
  26:Reverb_test.cpp **** KnobMulti knob[7];
  27:Reverb_test.cpp **** 
  28:Reverb_test.cpp **** GPIO modSwitch, effectSwitch;
  29:Reverb_test.cpp **** 
  30:Reverb_test.cpp **** float sampleRate;
  31:Reverb_test.cpp **** float parameters[7];
  32:Reverb_test.cpp **** float volume;
  33:Reverb_test.cpp **** 
  34:Reverb_test.cpp **** TimerHandle timerUI, timerVisual;
  35:Reverb_test.cpp **** void        UICallback(void *data);
  36:Reverb_test.cpp **** 
  37:Reverb_test.cpp **** void initTimer()
  38:Reverb_test.cpp **** {
 5761              		.loc 27 38 1
 5762              		.cfi_startproc
 5763              		@ args = 0, pretend = 0, frame = 24
 5764              		@ frame_needed = 1, uses_anonymous_args = 0
 5765 0000 80B5     		push	{r7, lr}
 5766              		.cfi_def_cfa_offset 8
 5767              		.cfi_offset 7, -8
 5768              		.cfi_offset 14, -4
 5769 0002 86B0     		sub	sp, sp, #24
 5770              		.cfi_def_cfa_offset 32
 5771 0004 00AF     		add	r7, sp, #0
 5772              		.cfi_def_cfa_register 7
  39:Reverb_test.cpp ****     TimerHandle::Config timcfg;
 5773              		.loc 27 39 25
 5774 0006 3B46     		mov	r3, r7
 5775 0008 1846     		mov	r0, r3
 5776 000a FFF7FEFF 		bl	_ZN5daisy11TimerHandle6ConfigC1Ev
  40:Reverb_test.cpp **** 
  41:Reverb_test.cpp ****     timcfg.periph               = daisy::TimerHandle::Config::Peripheral::TIM_5;
 5777              		.loc 27 41 33
 5778 000e 0323     		movs	r3, #3
 5779 0010 3B60     		str	r3, [r7]
  42:Reverb_test.cpp ****     timcfg.dir                  = daisy::TimerHandle::Config::CounterDir::UP;
 5780              		.loc 27 42 33
 5781 0012 0023     		movs	r3, #0
 5782 0014 7B60     		str	r3, [r7, #4]
  43:Reverb_test.cpp ****     uint32_t      tim_base_freq = daisy::System::GetPClk2Freq();
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 240


 5783              		.loc 27 43 62
 5784 0016 FFF7FEFF 		bl	_ZN5daisy6System12GetPClk2FreqEv
 5785 001a 7861     		str	r0, [r7, #20]
  44:Reverb_test.cpp ****     unsigned long tim_period    = tim_base_freq / 50;
 5786              		.loc 27 44 19
 5787 001c 7B69     		ldr	r3, [r7, #20]
 5788 001e 0D4A     		ldr	r2, .L245
 5789 0020 A2FB0323 		umull	r2, r3, r2, r3
 5790 0024 1B09     		lsrs	r3, r3, #4
 5791 0026 3B61     		str	r3, [r7, #16]
  45:Reverb_test.cpp ****     timcfg.period               = tim_period;
 5792              		.loc 27 45 33
 5793 0028 3B69     		ldr	r3, [r7, #16]
 5794 002a BB60     		str	r3, [r7, #8]
  46:Reverb_test.cpp ****     timcfg.enable_irq           = true;
 5795              		.loc 27 46 33
 5796 002c 0123     		movs	r3, #1
 5797 002e 3B73     		strb	r3, [r7, #12]
  47:Reverb_test.cpp ****     timerUI.Init(timcfg);
 5798              		.loc 27 47 17
 5799 0030 3B46     		mov	r3, r7
 5800 0032 1946     		mov	r1, r3
 5801 0034 0848     		ldr	r0, .L245+4
 5802 0036 FFF7FEFF 		bl	_ZN5daisy11TimerHandle4InitERKNS0_6ConfigE
  48:Reverb_test.cpp ****     timerUI.SetCallback(UICallback, nullptr);
 5803              		.loc 27 48 24
 5804 003a 0022     		movs	r2, #0
 5805 003c 0749     		ldr	r1, .L245+8
 5806 003e 0648     		ldr	r0, .L245+4
 5807 0040 FFF7FEFF 		bl	_ZN5daisy11TimerHandle11SetCallbackEPFvPvES1_
  49:Reverb_test.cpp ****     timerUI.Start();
 5808              		.loc 27 49 18
 5809 0044 0448     		ldr	r0, .L245+4
 5810 0046 FFF7FEFF 		bl	_ZN5daisy11TimerHandle5StartEv
  50:Reverb_test.cpp **** }
 5811              		.loc 27 50 1
 5812 004a 00BF     		nop
 5813 004c 1837     		adds	r7, r7, #24
 5814              		.cfi_def_cfa_offset 8
 5815 004e BD46     		mov	sp, r7
 5816              		.cfi_def_cfa_register 13
 5817              		@ sp needed
 5818 0050 80BD     		pop	{r7, pc}
 5819              	.L246:
 5820 0052 00BF     		.align	2
 5821              	.L245:
 5822 0054 1F85EB51 		.word	1374389535
 5823 0058 00000000 		.word	timerUI
 5824 005c 00000000 		.word	_Z10UICallbackPv
 5825              		.cfi_endproc
 5826              	.LFE5095:
 5828              		.section	.text._Z8CallbackPKfPfj,"ax",%progbits
 5829              		.align	1
 5830              		.global	_Z8CallbackPKfPfj
 5831              		.syntax unified
 5832              		.thumb
 5833              		.thumb_func
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 241


 5834              		.fpu fpv5-d16
 5836              	_Z8CallbackPKfPfj:
 5837              	.LFB5096:
  51:Reverb_test.cpp **** 
  52:Reverb_test.cpp **** 
  53:Reverb_test.cpp **** void Callback(AudioHandle::InterleavingInputBuffer  in,
  54:Reverb_test.cpp ****               AudioHandle::InterleavingOutputBuffer out,
  55:Reverb_test.cpp ****               size_t                                size)
  56:Reverb_test.cpp **** {
 5838              		.loc 27 56 1
 5839              		.cfi_startproc
 5840              		@ args = 0, pretend = 0, frame = 24
 5841              		@ frame_needed = 1, uses_anonymous_args = 0
 5842 0000 80B5     		push	{r7, lr}
 5843              		.cfi_def_cfa_offset 8
 5844              		.cfi_offset 7, -8
 5845              		.cfi_offset 14, -4
 5846 0002 86B0     		sub	sp, sp, #24
 5847              		.cfi_def_cfa_offset 32
 5848 0004 00AF     		add	r7, sp, #0
 5849              		.cfi_def_cfa_register 7
 5850 0006 F860     		str	r0, [r7, #12]
 5851 0008 B960     		str	r1, [r7, #8]
 5852 000a 7A60     		str	r2, [r7, #4]
 5853              	.LBB43:
  57:Reverb_test.cpp ****     float Signal_Snare;
  58:Reverb_test.cpp **** 
  59:Reverb_test.cpp ****     for(size_t i = 0; i < size; i+= 2)
 5854              		.loc 27 59 16
 5855 000c 0023     		movs	r3, #0
 5856 000e 7B61     		str	r3, [r7, #20]
 5857              	.L250:
 5858              		.loc 27 59 25 discriminator 1
 5859 0010 7A69     		ldr	r2, [r7, #20]
 5860 0012 7B68     		ldr	r3, [r7, #4]
 5861 0014 9A42     		cmp	r2, r3
 5862 0016 32D2     		bcs	.L251
  60:Reverb_test.cpp ****     {
  61:Reverb_test.cpp ****         if(metro.Process())
 5863              		.loc 27 61 25
 5864 0018 1B48     		ldr	r0, .L252
 5865 001a FFF7FEFF 		bl	_ZN7daisysp5Metro7ProcessEv
 5866 001e 0346     		mov	r3, r0
 5867 0020 002B     		cmp	r3, #0
 5868 0022 14BF     		ite	ne
 5869 0024 0123     		movne	r3, #1
 5870 0026 0023     		moveq	r3, #0
 5871 0028 DBB2     		uxtb	r3, r3
 5872              		.loc 27 61 9
 5873 002a 002B     		cmp	r3, #0
 5874 002c 02D0     		beq	.L249
  62:Reverb_test.cpp ****         {
  63:Reverb_test.cpp ****             snare.Trig();
 5875              		.loc 27 63 23
 5876 002e 1748     		ldr	r0, .L252+4
 5877 0030 FFF7FEFF 		bl	_ZN7daisysp18SyntheticSnareDrum4TrigEv
 5878              	.L249:
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 242


  64:Reverb_test.cpp ****         }
  65:Reverb_test.cpp **** 
  66:Reverb_test.cpp ****         
  67:Reverb_test.cpp ****         Signal_Snare = reverb.Process(snare.Process()) * volume;
 5879              		.loc 27 67 38 discriminator 2
 5880 0034 0021     		movs	r1, #0
 5881 0036 1548     		ldr	r0, .L252+4
 5882 0038 FFF7FEFF 		bl	_ZN7daisysp18SyntheticSnareDrum7ProcessEb
 5883 003c F0EE407A 		vmov.f32	s15, s0
 5884 0040 B0EE670A 		vmov.f32	s0, s15
 5885 0044 1248     		ldr	r0, .L252+8
 5886 0046 FFF7FEFF 		bl	_ZN9ReverbFDN7ProcessEf
 5887 004a B0EE407A 		vmov.f32	s14, s0
 5888              		.loc 27 67 56 discriminator 2
 5889 004e 114B     		ldr	r3, .L252+12
 5890 0050 D3ED007A 		vldr.32	s15, [r3]
 5891              		.loc 27 67 22 discriminator 2
 5892 0054 67EE277A 		vmul.f32	s15, s14, s15
 5893 0058 C7ED047A 		vstr.32	s15, [r7, #16]
  68:Reverb_test.cpp **** 
  69:Reverb_test.cpp **** 
  70:Reverb_test.cpp ****         out[i] = Signal_Snare;
 5894              		.loc 27 70 14 discriminator 2
 5895 005c 7B69     		ldr	r3, [r7, #20]
 5896 005e 9B00     		lsls	r3, r3, #2
 5897 0060 BA68     		ldr	r2, [r7, #8]
 5898 0062 1344     		add	r3, r3, r2
 5899              		.loc 27 70 16 discriminator 2
 5900 0064 3A69     		ldr	r2, [r7, #16]	@ float
 5901 0066 1A60     		str	r2, [r3]	@ float
  71:Reverb_test.cpp ****         out[i+1] = Signal_Snare;
 5902              		.loc 27 71 16 discriminator 2
 5903 0068 7B69     		ldr	r3, [r7, #20]
 5904 006a 0133     		adds	r3, r3, #1
 5905 006c 9B00     		lsls	r3, r3, #2
 5906 006e BA68     		ldr	r2, [r7, #8]
 5907 0070 1344     		add	r3, r3, r2
 5908              		.loc 27 71 18 discriminator 2
 5909 0072 3A69     		ldr	r2, [r7, #16]	@ float
 5910 0074 1A60     		str	r2, [r3]	@ float
  59:Reverb_test.cpp ****     {
 5911              		.loc 27 59 34 discriminator 2
 5912 0076 7B69     		ldr	r3, [r7, #20]
 5913 0078 0233     		adds	r3, r3, #2
 5914 007a 7B61     		str	r3, [r7, #20]
  59:Reverb_test.cpp ****     {
 5915              		.loc 27 59 5 discriminator 2
 5916 007c C8E7     		b	.L250
 5917              	.L251:
 5918              	.LBE43:
  72:Reverb_test.cpp ****     }
  73:Reverb_test.cpp **** }
 5919              		.loc 27 73 1
 5920 007e 00BF     		nop
 5921 0080 1837     		adds	r7, r7, #24
 5922              		.cfi_def_cfa_offset 8
 5923 0082 BD46     		mov	sp, r7
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 243


 5924              		.cfi_def_cfa_register 13
 5925              		@ sp needed
 5926 0084 80BD     		pop	{r7, pc}
 5927              	.L253:
 5928 0086 00BF     		.align	2
 5929              	.L252:
 5930 0088 00000000 		.word	metro
 5931 008c 00000000 		.word	snare
 5932 0090 00000000 		.word	reverb
 5933 0094 00000000 		.word	volume
 5934              		.cfi_endproc
 5935              	.LFE5096:
 5937              		.section	.text._Z5setupv,"ax",%progbits
 5938              		.align	1
 5939              		.global	_Z5setupv
 5940              		.syntax unified
 5941              		.thumb
 5942              		.thumb_func
 5943              		.fpu fpv5-d16
 5945              	_Z5setupv:
 5946              	.LFB5097:
  74:Reverb_test.cpp **** 
  75:Reverb_test.cpp **** 
  76:Reverb_test.cpp **** void setup()
  77:Reverb_test.cpp **** {
 5947              		.loc 27 77 1
 5948              		.cfi_startproc
 5949              		@ args = 0, pretend = 0, frame = 152
 5950              		@ frame_needed = 1, uses_anonymous_args = 0
 5951 0000 80B5     		push	{r7, lr}
 5952              		.cfi_def_cfa_offset 8
 5953              		.cfi_offset 7, -8
 5954              		.cfi_offset 14, -4
 5955 0002 A8B0     		sub	sp, sp, #160
 5956              		.cfi_def_cfa_offset 168
 5957 0004 02AF     		add	r7, sp, #8
 5958              		.cfi_def_cfa 7, 160
  78:Reverb_test.cpp ****     hw.Configure();
 5959              		.loc 27 78 17
 5960 0006 6548     		ldr	r0, .L257
 5961 0008 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
  79:Reverb_test.cpp ****     hw.Init(true);
 5962              		.loc 27 79 12
 5963 000c 0121     		movs	r1, #1
 5964 000e 6348     		ldr	r0, .L257
 5965 0010 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
  80:Reverb_test.cpp ****     hw.SetAudioBlockSize(1);
 5966              		.loc 27 80 25
 5967 0014 0121     		movs	r1, #1
 5968 0016 6148     		ldr	r0, .L257
 5969 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
  81:Reverb_test.cpp ****     sampleRate = hw.AudioSampleRate();
 5970              		.loc 27 81 36
 5971 001c 5F48     		ldr	r0, .L257
 5972 001e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5973 0022 F0EE407A 		vmov.f32	s15, s0
 5974              		.loc 27 81 16
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 244


 5975 0026 5E4B     		ldr	r3, .L257+4
 5976 0028 C3ED007A 		vstr.32	s15, [r3]
  82:Reverb_test.cpp **** 
  83:Reverb_test.cpp ****     modSwitch.Init(seed::D10, GPIO::Mode::INPUT, GPIO::Pull::PULLUP);
 5977              		.loc 27 83 19
 5978 002c 5D49     		ldr	r1, .L257+8
 5979 002e 0023     		movs	r3, #0
 5980 0030 0093     		str	r3, [sp]
 5981 0032 0123     		movs	r3, #1
 5982 0034 0022     		movs	r2, #0
 5983 0036 0968     		ldr	r1, [r1]
 5984 0038 5B48     		ldr	r0, .L257+12
 5985 003a FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
  84:Reverb_test.cpp ****     effectSwitch.Init(seed::D9, GPIO::Mode::INPUT, GPIO::Pull::PULLUP);
 5986              		.loc 27 84 22
 5987 003e 5B49     		ldr	r1, .L257+16
 5988 0040 0023     		movs	r3, #0
 5989 0042 0093     		str	r3, [sp]
 5990 0044 0123     		movs	r3, #1
 5991 0046 0022     		movs	r2, #0
 5992 0048 0968     		ldr	r1, [r1]
 5993 004a 5948     		ldr	r0, .L257+20
 5994 004c FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
  85:Reverb_test.cpp **** 
  86:Reverb_test.cpp ****     AdcChannelConfig channelConfigArray[7];
  87:Reverb_test.cpp **** 
  88:Reverb_test.cpp ****     channelConfigArray[0].InitSingle(seed::A6);
 5995              		.loc 27 88 37
 5996 0050 5848     		ldr	r0, .L257+24
 5997 0052 FFF7FEFF 		bl	_ZNK5daisy3Pincv12dsy_gpio_pinEv
 5998 0056 0346     		mov	r3, r0	@ movhi
 5999 0058 A7F87830 		strh	r3, [r7, #120]	@ movhi
 6000 005c 3B46     		mov	r3, r7
 6001 005e B96F     		ldr	r1, [r7, #120]
 6002 0060 1846     		mov	r0, r3
 6003 0062 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
  89:Reverb_test.cpp ****     channelConfigArray[1].InitSingle(seed::A5);
 6004              		.loc 27 89 37
 6005 0066 5448     		ldr	r0, .L257+28
 6006 0068 FFF7FEFF 		bl	_ZNK5daisy3Pincv12dsy_gpio_pinEv
 6007 006c 0346     		mov	r3, r0	@ movhi
 6008 006e A7F87C30 		strh	r3, [r7, #124]	@ movhi
 6009 0072 3B46     		mov	r3, r7
 6010 0074 1133     		adds	r3, r3, #17
 6011 0076 F96F     		ldr	r1, [r7, #124]
 6012 0078 1846     		mov	r0, r3
 6013 007a FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
  90:Reverb_test.cpp ****     channelConfigArray[2].InitSingle(seed::A4);
 6014              		.loc 27 90 37
 6015 007e 4F48     		ldr	r0, .L257+32
 6016 0080 FFF7FEFF 		bl	_ZNK5daisy3Pincv12dsy_gpio_pinEv
 6017 0084 0346     		mov	r3, r0	@ movhi
 6018 0086 A7F88030 		strh	r3, [r7, #128]	@ movhi
 6019 008a 3B46     		mov	r3, r7
 6020 008c 2233     		adds	r3, r3, #34
 6021 008e D7F88010 		ldr	r1, [r7, #128]
 6022 0092 1846     		mov	r0, r3
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 245


 6023 0094 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
  91:Reverb_test.cpp ****     channelConfigArray[3].InitSingle(seed::A3);
 6024              		.loc 27 91 37
 6025 0098 4948     		ldr	r0, .L257+36
 6026 009a FFF7FEFF 		bl	_ZNK5daisy3Pincv12dsy_gpio_pinEv
 6027 009e 0346     		mov	r3, r0	@ movhi
 6028 00a0 A7F88430 		strh	r3, [r7, #132]	@ movhi
 6029 00a4 3B46     		mov	r3, r7
 6030 00a6 3333     		adds	r3, r3, #51
 6031 00a8 D7F88410 		ldr	r1, [r7, #132]
 6032 00ac 1846     		mov	r0, r3
 6033 00ae FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
  92:Reverb_test.cpp ****     channelConfigArray[4].InitSingle(seed::A2);
 6034              		.loc 27 92 37
 6035 00b2 4448     		ldr	r0, .L257+40
 6036 00b4 FFF7FEFF 		bl	_ZNK5daisy3Pincv12dsy_gpio_pinEv
 6037 00b8 0346     		mov	r3, r0	@ movhi
 6038 00ba A7F88830 		strh	r3, [r7, #136]	@ movhi
 6039 00be 3B46     		mov	r3, r7
 6040 00c0 4433     		adds	r3, r3, #68
 6041 00c2 D7F88810 		ldr	r1, [r7, #136]
 6042 00c6 1846     		mov	r0, r3
 6043 00c8 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
  93:Reverb_test.cpp ****     channelConfigArray[5].InitSingle(seed::A1);
 6044              		.loc 27 93 37
 6045 00cc 3E48     		ldr	r0, .L257+44
 6046 00ce FFF7FEFF 		bl	_ZNK5daisy3Pincv12dsy_gpio_pinEv
 6047 00d2 0346     		mov	r3, r0	@ movhi
 6048 00d4 A7F88C30 		strh	r3, [r7, #140]	@ movhi
 6049 00d8 3B46     		mov	r3, r7
 6050 00da 5533     		adds	r3, r3, #85
 6051 00dc D7F88C10 		ldr	r1, [r7, #140]
 6052 00e0 1846     		mov	r0, r3
 6053 00e2 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
  94:Reverb_test.cpp ****     channelConfigArray[6].InitSingle(seed::A0);
 6054              		.loc 27 94 37
 6055 00e6 3948     		ldr	r0, .L257+48
 6056 00e8 FFF7FEFF 		bl	_ZNK5daisy3Pincv12dsy_gpio_pinEv
 6057 00ec 0346     		mov	r3, r0	@ movhi
 6058 00ee A7F89030 		strh	r3, [r7, #144]	@ movhi
 6059 00f2 3B46     		mov	r3, r7
 6060 00f4 6633     		adds	r3, r3, #102
 6061 00f6 D7F89010 		ldr	r1, [r7, #144]
 6062 00fa 1846     		mov	r0, r3
 6063 00fc FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
  95:Reverb_test.cpp **** 
  96:Reverb_test.cpp ****     adc.Init(channelConfigArray, 7);
 6064              		.loc 27 96 13
 6065 0100 3946     		mov	r1, r7
 6066 0102 0423     		movs	r3, #4
 6067 0104 0722     		movs	r2, #7
 6068 0106 3248     		ldr	r0, .L257+52
 6069 0108 FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
  97:Reverb_test.cpp ****     adc.Start();
 6070              		.loc 27 97 14
 6071 010c 3048     		ldr	r0, .L257+52
 6072 010e FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 246


 6073              	.LBB44:
  98:Reverb_test.cpp **** 
  99:Reverb_test.cpp ****     for(int i = 0; i < 7; i++)
 6074              		.loc 27 99 13
 6075 0112 0023     		movs	r3, #0
 6076 0114 C7F89430 		str	r3, [r7, #148]
 6077              	.L256:
 6078              		.loc 27 99 22 discriminator 3
 6079 0118 D7F89430 		ldr	r3, [r7, #148]
 6080 011c 062B     		cmp	r3, #6
 6081 011e 10DC     		bgt	.L255
 100:Reverb_test.cpp ****     {
 101:Reverb_test.cpp ****         knob[i].Init(2);
 6082              		.loc 27 101 21 discriminator 2
 6083 0120 D7F89430 		ldr	r3, [r7, #148]
 6084 0124 5822     		movs	r2, #88
 6085 0126 02FB03F3 		mul	r3, r2, r3
 6086 012a 2A4A     		ldr	r2, .L257+56
 6087 012c 1344     		add	r3, r3, r2
 6088 012e 0221     		movs	r1, #2
 6089 0130 1846     		mov	r0, r3
 6090 0132 FFF7FEFF 		bl	_ZN1k9KnobMulti4InitEi
  99:Reverb_test.cpp ****     {
 6091              		.loc 27 99 5 discriminator 2
 6092 0136 D7F89430 		ldr	r3, [r7, #148]
 6093 013a 0133     		adds	r3, r3, #1
 6094 013c C7F89430 		str	r3, [r7, #148]
 6095 0140 EAE7     		b	.L256
 6096              	.L255:
 6097              	.LBE44:
 102:Reverb_test.cpp ****     }
 103:Reverb_test.cpp **** 
 104:Reverb_test.cpp **** 
 105:Reverb_test.cpp ****     // Sequencer
 106:Reverb_test.cpp ****     metro.Init(.5, sampleRate);
 6098              		.loc 27 106 15
 6099 0142 174B     		ldr	r3, .L257+4
 6100 0144 D3ED007A 		vldr.32	s15, [r3]
 6101 0148 F0EE670A 		vmov.f32	s1, s15
 6102 014c B6EE000A 		vmov.f32	s0, #5.0e-1
 6103 0150 2148     		ldr	r0, .L257+60
 6104 0152 FFF7FEFF 		bl	_ZN7daisysp5Metro4InitEff
 107:Reverb_test.cpp **** 
 108:Reverb_test.cpp ****     // Audio
 109:Reverb_test.cpp **** 
 110:Reverb_test.cpp ****     snare.Init(sampleRate);
 6105              		.loc 27 110 15
 6106 0156 124B     		ldr	r3, .L257+4
 6107 0158 D3ED007A 		vldr.32	s15, [r3]
 6108 015c B0EE670A 		vmov.f32	s0, s15
 6109 0160 1E48     		ldr	r0, .L257+64
 6110 0162 FFF7FEFF 		bl	_ZN7daisysp18SyntheticSnareDrum4InitEf
 111:Reverb_test.cpp ****     snare.SetDecay(.2);
 6111              		.loc 27 111 19
 6112 0166 9FED1E0A 		vldr.32	s0, .L257+68
 6113 016a 1C48     		ldr	r0, .L257+64
 6114 016c FFF7FEFF 		bl	_ZN7daisysp18SyntheticSnareDrum8SetDecayEf
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 247


 112:Reverb_test.cpp ****     reverb.Init(sampleRate);
 6115              		.loc 27 112 16
 6116 0170 0B4B     		ldr	r3, .L257+4
 6117 0172 D3ED007A 		vldr.32	s15, [r3]
 6118 0176 B0EE670A 		vmov.f32	s0, s15
 6119 017a 1A48     		ldr	r0, .L257+72
 6120 017c FFF7FEFF 		bl	_ZN9ReverbFDN4InitEf
 113:Reverb_test.cpp **** 
 114:Reverb_test.cpp ****     initTimer();
 6121              		.loc 27 114 14
 6122 0180 FFF7FEFF 		bl	_Z9initTimerv
 115:Reverb_test.cpp ****     hw.StartLog();
 6123              		.loc 27 115 16
 6124 0184 0020     		movs	r0, #0
 6125 0186 FFF7FEFF 		bl	_ZN5daisy9DaisySeed8StartLogEb
 116:Reverb_test.cpp ****     hw.StartAudio(Callback);
 6126              		.loc 27 116 18
 6127 018a 1749     		ldr	r1, .L257+76
 6128 018c 0348     		ldr	r0, .L257
 6129 018e FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKfPfjE
 117:Reverb_test.cpp **** }
 6130              		.loc 27 117 1
 6131 0192 00BF     		nop
 6132 0194 9837     		adds	r7, r7, #152
 6133              		.cfi_def_cfa_offset 8
 6134 0196 BD46     		mov	sp, r7
 6135              		.cfi_def_cfa_register 13
 6136              		@ sp needed
 6137 0198 80BD     		pop	{r7, pc}
 6138              	.L258:
 6139 019a 00BF     		.align	2
 6140              	.L257:
 6141 019c 00000000 		.word	hw
 6142 01a0 00000000 		.word	sampleRate
 6143 01a4 00000000 		.word	_ZN5daisy4seedL3D10E
 6144 01a8 00000000 		.word	modSwitch
 6145 01ac 00000000 		.word	_ZN5daisy4seedL2D9E
 6146 01b0 00000000 		.word	effectSwitch
 6147 01b4 00000000 		.word	_ZN5daisy4seedL2A6E
 6148 01b8 00000000 		.word	_ZN5daisy4seedL2A5E
 6149 01bc 00000000 		.word	_ZN5daisy4seedL2A4E
 6150 01c0 00000000 		.word	_ZN5daisy4seedL2A3E
 6151 01c4 00000000 		.word	_ZN5daisy4seedL2A2E
 6152 01c8 00000000 		.word	_ZN5daisy4seedL2A1E
 6153 01cc 00000000 		.word	_ZN5daisy4seedL2A0E
 6154 01d0 00000000 		.word	adc
 6155 01d4 00000000 		.word	knob
 6156 01d8 00000000 		.word	metro
 6157 01dc 00000000 		.word	snare
 6158 01e0 CDCC4C3E 		.word	1045220557
 6159 01e4 00000000 		.word	reverb
 6160 01e8 00000000 		.word	_Z8CallbackPKfPfj
 6161              		.cfi_endproc
 6162              	.LFE5097:
 6164              		.section	.text._Z10UICallbackPv,"ax",%progbits
 6165              		.align	1
 6166              		.global	_Z10UICallbackPv
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 248


 6167              		.syntax unified
 6168              		.thumb
 6169              		.thumb_func
 6170              		.fpu fpv5-d16
 6172              	_Z10UICallbackPv:
 6173              	.LFB5098:
 118:Reverb_test.cpp **** 
 119:Reverb_test.cpp **** 
 120:Reverb_test.cpp **** void UICallback(void *data)
 121:Reverb_test.cpp **** {
 6174              		.loc 27 121 1
 6175              		.cfi_startproc
 6176              		@ args = 0, pretend = 0, frame = 48
 6177              		@ frame_needed = 1, uses_anonymous_args = 0
 6178 0000 80B5     		push	{r7, lr}
 6179              		.cfi_def_cfa_offset 8
 6180              		.cfi_offset 7, -8
 6181              		.cfi_offset 14, -4
 6182 0002 8CB0     		sub	sp, sp, #48
 6183              		.cfi_def_cfa_offset 56
 6184 0004 00AF     		add	r7, sp, #0
 6185              		.cfi_def_cfa_register 7
 6186 0006 7860     		str	r0, [r7, #4]
 122:Reverb_test.cpp ****     float amount, feedback, size, diffusion, smoothing;
 123:Reverb_test.cpp ****     int density;
 124:Reverb_test.cpp **** 
 125:Reverb_test.cpp ****     int  shiftLayer = 0;
 6187              		.loc 27 125 10
 6188 0008 0023     		movs	r3, #0
 6189 000a FB62     		str	r3, [r7, #44]
 126:Reverb_test.cpp ****     bool shift      = false;
 6190              		.loc 27 126 10
 6191 000c 0023     		movs	r3, #0
 6192 000e 87F82B30 		strb	r3, [r7, #43]
 127:Reverb_test.cpp **** 
 128:Reverb_test.cpp ****     if(!modSwitch.Read())
 6193              		.loc 27 128 23
 6194 0012 8348     		ldr	r0, .L265
 6195 0014 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 6196 0018 0346     		mov	r3, r0
 6197              		.loc 27 128 8
 6198 001a 83F00103 		eor	r3, r3, #1
 6199 001e DBB2     		uxtb	r3, r3
 6200              		.loc 27 128 5
 6201 0020 002B     		cmp	r3, #0
 6202 0022 05D0     		beq	.L260
 129:Reverb_test.cpp ****     {
 130:Reverb_test.cpp ****         shift      = true;
 6203              		.loc 27 130 20
 6204 0024 0123     		movs	r3, #1
 6205 0026 87F82B30 		strb	r3, [r7, #43]
 131:Reverb_test.cpp ****         shiftLayer = 0;
 6206              		.loc 27 131 20
 6207 002a 0023     		movs	r3, #0
 6208 002c FB62     		str	r3, [r7, #44]
 6209 002e 11E0     		b	.L261
 6210              	.L260:
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 249


 132:Reverb_test.cpp ****     }
 133:Reverb_test.cpp ****     else if(!effectSwitch.Read())
 6211              		.loc 27 133 31
 6212 0030 7C48     		ldr	r0, .L265+4
 6213 0032 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 6214 0036 0346     		mov	r3, r0
 6215              		.loc 27 133 13
 6216 0038 83F00103 		eor	r3, r3, #1
 6217 003c DBB2     		uxtb	r3, r3
 6218              		.loc 27 133 10
 6219 003e 002B     		cmp	r3, #0
 6220 0040 05D0     		beq	.L262
 134:Reverb_test.cpp ****     {
 135:Reverb_test.cpp ****         shift      = true;
 6221              		.loc 27 135 20
 6222 0042 0123     		movs	r3, #1
 6223 0044 87F82B30 		strb	r3, [r7, #43]
 136:Reverb_test.cpp ****         shiftLayer = 1;
 6224              		.loc 27 136 20
 6225 0048 0123     		movs	r3, #1
 6226 004a FB62     		str	r3, [r7, #44]
 6227 004c 02E0     		b	.L261
 6228              	.L262:
 137:Reverb_test.cpp ****     }
 138:Reverb_test.cpp ****     else
 139:Reverb_test.cpp ****         shift = false;
 6229              		.loc 27 139 15
 6230 004e 0023     		movs	r3, #0
 6231 0050 87F82B30 		strb	r3, [r7, #43]
 6232              	.L261:
 6233              	.LBB45:
 140:Reverb_test.cpp **** 
 141:Reverb_test.cpp **** 
 142:Reverb_test.cpp ****     for(int i = 0; i < 7; i++)
 6234              		.loc 27 142 13
 6235 0054 0023     		movs	r3, #0
 6236 0056 7B62     		str	r3, [r7, #36]
 6237              	.L264:
 6238              		.loc 27 142 22 discriminator 3
 6239 0058 7B6A     		ldr	r3, [r7, #36]
 6240 005a 062B     		cmp	r3, #6
 6241 005c 2EDC     		bgt	.L263
 143:Reverb_test.cpp ****     {
 144:Reverb_test.cpp ****         parameters[i] = static_cast<float>(adc.Get(i)) / 65535.0f;
 6242              		.loc 27 144 51 discriminator 2
 6243 005e 7B6A     		ldr	r3, [r7, #36]
 6244 0060 DBB2     		uxtb	r3, r3
 6245 0062 1946     		mov	r1, r3
 6246 0064 7048     		ldr	r0, .L265+8
 6247 0066 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle3GetEh
 6248 006a 0346     		mov	r3, r0
 6249 006c 07EE903A 		vmov	s15, r3	@ int
 6250              		.loc 27 144 25 discriminator 2
 6251 0070 B8EE677A 		vcvt.f32.u32	s14, s15
 6252              		.loc 27 144 56 discriminator 2
 6253 0074 DFED6D6A 		vldr.32	s13, .L265+12
 6254 0078 C7EE267A 		vdiv.f32	s15, s14, s13
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 250


 6255              		.loc 27 144 23 discriminator 2
 6256 007c 6C4A     		ldr	r2, .L265+16
 6257 007e 7B6A     		ldr	r3, [r7, #36]
 6258 0080 9B00     		lsls	r3, r3, #2
 6259 0082 1344     		add	r3, r3, r2
 6260 0084 C3ED007A 		vstr.32	s15, [r3]
 145:Reverb_test.cpp ****         knob[i].updateKnob(parameters[i], shift, shiftLayer);
 6261              		.loc 27 145 27 discriminator 2
 6262 0088 7B6A     		ldr	r3, [r7, #36]
 6263 008a 5822     		movs	r2, #88
 6264 008c 02FB03F3 		mul	r3, r2, r3
 6265 0090 684A     		ldr	r2, .L265+20
 6266 0092 9818     		adds	r0, r3, r2
 6267              		.loc 27 145 40 discriminator 2
 6268 0094 664A     		ldr	r2, .L265+16
 6269 0096 7B6A     		ldr	r3, [r7, #36]
 6270 0098 9B00     		lsls	r3, r3, #2
 6271 009a 1344     		add	r3, r3, r2
 6272 009c D3ED007A 		vldr.32	s15, [r3]
 6273              		.loc 27 145 27 discriminator 2
 6274 00a0 B7EEE77A 		vcvt.f64.f32	d7, s15
 6275 00a4 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 6276 00a8 FA6A     		ldr	r2, [r7, #44]
 6277 00aa 1946     		mov	r1, r3
 6278 00ac B0EE470B 		vmov.f64	d0, d7
 6279 00b0 FFF7FEFF 		bl	_ZN1k9KnobMulti10updateKnobEdbi
 142:Reverb_test.cpp ****     {
 6280              		.loc 27 142 5 discriminator 2
 6281 00b4 7B6A     		ldr	r3, [r7, #36]
 6282 00b6 0133     		adds	r3, r3, #1
 6283 00b8 7B62     		str	r3, [r7, #36]
 6284 00ba CDE7     		b	.L264
 6285              	.L263:
 6286              	.LBE45:
 146:Reverb_test.cpp ****     }
 147:Reverb_test.cpp **** 
 148:Reverb_test.cpp **** 
 149:Reverb_test.cpp ****     amount = knob[0].getValue();
 6287              		.loc 27 149 30
 6288 00bc 5D48     		ldr	r0, .L265+20
 6289 00be FFF7FEFF 		bl	_ZN1k9KnobMulti8getValueEv
 6290 00c2 B0EE407B 		vmov.f64	d7, d0
 6291              		.loc 27 149 12
 6292 00c6 F7EEC77B 		vcvt.f32.f64	s15, d7
 6293 00ca C7ED087A 		vstr.32	s15, [r7, #32]
 150:Reverb_test.cpp ****     feedback = mapPot(knob[1].getValue(), 0,1,.25);
 6294              		.loc 27 150 39
 6295 00ce 5A48     		ldr	r0, .L265+24
 6296 00d0 FFF7FEFF 		bl	_ZN1k9KnobMulti8getValueEv
 6297 00d4 B0EE407B 		vmov.f64	d7, d0
 6298              		.loc 27 150 22
 6299 00d8 F7EEC77B 		vcvt.f32.f64	s15, d7
 6300 00dc F7EE002A 		vmov.f32	s5, #1.0e+0
 6301 00e0 9FED562A 		vldr.32	s4, .L265+28
 6302 00e4 0020     		movs	r0, #0
 6303 00e6 F5EE001A 		vmov.f32	s3, #2.5e-1
 6304 00ea B7EE001A 		vmov.f32	s2, #1.0e+0
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 251


 6305 00ee DFED530A 		vldr.32	s1, .L265+28
 6306 00f2 B0EE670A 		vmov.f32	s0, s15
 6307 00f6 FFF7FEFF 		bl	_Z6mapPotffffbff
 6308 00fa 87ED070A 		vstr.32	s0, [r7, #28]
 151:Reverb_test.cpp ****     density = (int) mapPot(knob[2].getValue(), 0,8);
 6309              		.loc 27 151 44
 6310 00fe 5048     		ldr	r0, .L265+32
 6311 0100 FFF7FEFF 		bl	_ZN1k9KnobMulti8getValueEv
 6312 0104 B0EE407B 		vmov.f64	d7, d0
 6313              		.loc 27 151 27
 6314 0108 F7EEC77B 		vcvt.f32.f64	s15, d7
 6315 010c F7EE002A 		vmov.f32	s5, #1.0e+0
 6316 0110 9FED4A2A 		vldr.32	s4, .L265+28
 6317 0114 0020     		movs	r0, #0
 6318 0116 F7EE001A 		vmov.f32	s3, #1.0e+0
 6319 011a B2EE001A 		vmov.f32	s2, #8.0e+0
 6320 011e DFED470A 		vldr.32	s1, .L265+28
 6321 0122 B0EE670A 		vmov.f32	s0, s15
 6322 0126 FFF7FEFF 		bl	_Z6mapPotffffbff
 6323 012a F0EE407A 		vmov.f32	s15, s0
 6324              		.loc 27 151 13
 6325 012e FDEEE77A 		vcvt.s32.f32	s15, s15
 6326 0132 17EE903A 		vmov	r3, s15	@ int
 6327 0136 BB61     		str	r3, [r7, #24]
 152:Reverb_test.cpp ****     size = mapPot(knob[3].getValue(), 0,10,4);
 6328              		.loc 27 152 35
 6329 0138 4248     		ldr	r0, .L265+36
 6330 013a FFF7FEFF 		bl	_ZN1k9KnobMulti8getValueEv
 6331 013e B0EE407B 		vmov.f64	d7, d0
 6332              		.loc 27 152 18
 6333 0142 F7EEC77B 		vcvt.f32.f64	s15, d7
 6334 0146 F7EE002A 		vmov.f32	s5, #1.0e+0
 6335 014a 9FED3C2A 		vldr.32	s4, .L265+28
 6336 014e 0020     		movs	r0, #0
 6337 0150 F1EE001A 		vmov.f32	s3, #4.0e+0
 6338 0154 B2EE041A 		vmov.f32	s2, #1.0e+1
 6339 0158 DFED380A 		vldr.32	s1, .L265+28
 6340 015c B0EE670A 		vmov.f32	s0, s15
 6341 0160 FFF7FEFF 		bl	_Z6mapPotffffbff
 6342 0164 87ED050A 		vstr.32	s0, [r7, #20]
 153:Reverb_test.cpp ****     diffusion = mapPot(knob[4].getValue(), 0,10,2);
 6343              		.loc 27 153 40
 6344 0168 3748     		ldr	r0, .L265+40
 6345 016a FFF7FEFF 		bl	_ZN1k9KnobMulti8getValueEv
 6346 016e B0EE407B 		vmov.f64	d7, d0
 6347              		.loc 27 153 23
 6348 0172 F7EEC77B 		vcvt.f32.f64	s15, d7
 6349 0176 F7EE002A 		vmov.f32	s5, #1.0e+0
 6350 017a 9FED302A 		vldr.32	s4, .L265+28
 6351 017e 0020     		movs	r0, #0
 6352 0180 F0EE001A 		vmov.f32	s3, #2.0e+0
 6353 0184 B2EE041A 		vmov.f32	s2, #1.0e+1
 6354 0188 DFED2C0A 		vldr.32	s1, .L265+28
 6355 018c B0EE670A 		vmov.f32	s0, s15
 6356 0190 FFF7FEFF 		bl	_Z6mapPotffffbff
 6357 0194 87ED040A 		vstr.32	s0, [r7, #16]
 154:Reverb_test.cpp ****     smoothing = mapPot(knob[5].getValue(), 0,2);
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 252


 6358              		.loc 27 154 40
 6359 0198 2C48     		ldr	r0, .L265+44
 6360 019a FFF7FEFF 		bl	_ZN1k9KnobMulti8getValueEv
 6361 019e B0EE407B 		vmov.f64	d7, d0
 6362              		.loc 27 154 23
 6363 01a2 F7EEC77B 		vcvt.f32.f64	s15, d7
 6364 01a6 F7EE002A 		vmov.f32	s5, #1.0e+0
 6365 01aa 9FED242A 		vldr.32	s4, .L265+28
 6366 01ae 0020     		movs	r0, #0
 6367 01b0 F7EE001A 		vmov.f32	s3, #1.0e+0
 6368 01b4 B0EE001A 		vmov.f32	s2, #2.0e+0
 6369 01b8 DFED200A 		vldr.32	s1, .L265+28
 6370 01bc B0EE670A 		vmov.f32	s0, s15
 6371 01c0 FFF7FEFF 		bl	_Z6mapPotffffbff
 6372 01c4 87ED030A 		vstr.32	s0, [r7, #12]
 155:Reverb_test.cpp ****     volume = knob[6].getValue();
 6373              		.loc 27 155 30
 6374 01c8 2148     		ldr	r0, .L265+48
 6375 01ca FFF7FEFF 		bl	_ZN1k9KnobMulti8getValueEv
 6376 01ce B0EE407B 		vmov.f64	d7, d0
 6377 01d2 F7EEC77B 		vcvt.f32.f64	s15, d7
 6378              		.loc 27 155 12
 6379 01d6 1F4B     		ldr	r3, .L265+52
 6380 01d8 C3ED007A 		vstr.32	s15, [r3]
 156:Reverb_test.cpp **** 
 157:Reverb_test.cpp ****     reverb.SetAmount(amount);
 6381              		.loc 27 157 21
 6382 01dc 97ED080A 		vldr.32	s0, [r7, #32]
 6383 01e0 1D48     		ldr	r0, .L265+56
 6384 01e2 FFF7FEFF 		bl	_ZN9ReverbFDN9SetAmountEf
 158:Reverb_test.cpp ****     reverb.SetFeedback(feedback);
 6385              		.loc 27 158 23
 6386 01e6 97ED070A 		vldr.32	s0, [r7, #28]
 6387 01ea 1B48     		ldr	r0, .L265+56
 6388 01ec FFF7FEFF 		bl	_ZN9ReverbFDN11SetFeedbackEf
 159:Reverb_test.cpp ****     reverb.SetDensity(density);
 6389              		.loc 27 159 22
 6390 01f0 B969     		ldr	r1, [r7, #24]
 6391 01f2 1948     		ldr	r0, .L265+56
 6392 01f4 FFF7FEFF 		bl	_ZN9ReverbFDN10SetDensityEi
 160:Reverb_test.cpp ****     reverb.SetSize(size);
 6393              		.loc 27 160 19
 6394 01f8 97ED050A 		vldr.32	s0, [r7, #20]
 6395 01fc 1648     		ldr	r0, .L265+56
 6396 01fe FFF7FEFF 		bl	_ZN9ReverbFDN7SetSizeEf
 161:Reverb_test.cpp ****     reverb.SetDiffusion(diffusion);
 6397              		.loc 27 161 24
 6398 0202 97ED040A 		vldr.32	s0, [r7, #16]
 6399 0206 1448     		ldr	r0, .L265+56
 6400 0208 FFF7FEFF 		bl	_ZN9ReverbFDN12SetDiffusionEf
 162:Reverb_test.cpp ****     reverb.SetSmoothing(smoothing);
 6401              		.loc 27 162 24
 6402 020c 97ED030A 		vldr.32	s0, [r7, #12]
 6403 0210 1148     		ldr	r0, .L265+56
 6404 0212 FFF7FEFF 		bl	_ZN9ReverbFDN12SetSmoothingEf
 163:Reverb_test.cpp **** }
 6405              		.loc 27 163 1
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 253


 6406 0216 00BF     		nop
 6407 0218 3037     		adds	r7, r7, #48
 6408              		.cfi_def_cfa_offset 8
 6409 021a BD46     		mov	sp, r7
 6410              		.cfi_def_cfa_register 13
 6411              		@ sp needed
 6412 021c 80BD     		pop	{r7, pc}
 6413              	.L266:
 6414 021e 00BF     		.align	2
 6415              	.L265:
 6416 0220 00000000 		.word	modSwitch
 6417 0224 00000000 		.word	effectSwitch
 6418 0228 00000000 		.word	adc
 6419 022c 00FF7F47 		.word	1199570688
 6420 0230 00000000 		.word	parameters
 6421 0234 00000000 		.word	knob
 6422 0238 58000000 		.word	knob+88
 6423 023c 00000000 		.word	0
 6424 0240 B0000000 		.word	knob+176
 6425 0244 08010000 		.word	knob+264
 6426 0248 60010000 		.word	knob+352
 6427 024c B8010000 		.word	knob+440
 6428 0250 10020000 		.word	knob+528
 6429 0254 00000000 		.word	volume
 6430 0258 00000000 		.word	reverb
 6431              		.cfi_endproc
 6432              	.LFE5098:
 6434              		.section	.text.main,"ax",%progbits
 6435              		.align	1
 6436              		.global	main
 6437              		.syntax unified
 6438              		.thumb
 6439              		.thumb_func
 6440              		.fpu fpv5-d16
 6442              	main:
 6443              	.LFB5099:
 164:Reverb_test.cpp **** 
 165:Reverb_test.cpp **** 
 166:Reverb_test.cpp **** int main()
 167:Reverb_test.cpp **** {
 6444              		.loc 27 167 1
 6445              		.cfi_startproc
 6446              		@ args = 0, pretend = 0, frame = 0
 6447              		@ frame_needed = 1, uses_anonymous_args = 0
 6448 0000 80B5     		push	{r7, lr}
 6449              		.cfi_def_cfa_offset 8
 6450              		.cfi_offset 7, -8
 6451              		.cfi_offset 14, -4
 6452 0002 00AF     		add	r7, sp, #0
 6453              		.cfi_def_cfa_register 7
 168:Reverb_test.cpp ****     setup();
 6454              		.loc 27 168 10
 6455 0004 FFF7FEFF 		bl	_Z5setupv
 169:Reverb_test.cpp ****     // for(;;) {
 170:Reverb_test.cpp **** 
 171:Reverb_test.cpp ****     // }
 172:Reverb_test.cpp **** };...
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 254


 6456              		.loc 27 172 1
 6457 0008 0023     		movs	r3, #0
 6458 000a 1846     		mov	r0, r3
 6459 000c 80BD     		pop	{r7, pc}
 6460              		.cfi_endproc
 6461              	.LFE5099:
 6463              		.section	.text._ZNSaImED2Ev,"axG",%progbits,_ZNSaImED5Ev,comdat
 6464              		.align	1
 6465              		.weak	_ZNSaImED2Ev
 6466              		.syntax unified
 6467              		.thumb
 6468              		.thumb_func
 6469              		.fpu fpv5-d16
 6471              	_ZNSaImED2Ev:
 6472              	.LFB5363:
 6473              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\allocator.
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Allocators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Copyright (c) 1996-1997
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * that both that copyright notice and this permission notice appear
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * representations about the suitability of this software for any
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /** @file bits/allocator.h
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  This is an internal header file, included by other library headers.
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 255


  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #ifndef _ALLOCATOR_H
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define _ALLOCATOR_H 1
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/memoryfwd.h>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <type_traits>
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** {
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @addtogroup allocators
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @{
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /// allocator<void> specialization.
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator<void>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void        value_type;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t      size_type;
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t   difference_type;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void*       pointer;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const void* const_pointer;
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #else
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() = default;
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	constexpr
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Up>&) { }
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // ! C++20
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L && __cplusplus <= 201703L
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up, typename... _Args>
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 256


  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	destroy(_Up* __p)
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_destructible<_Up>::value)
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ __p->~_Up(); }
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // C++11 to C++17
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     };
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  for further details.
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<typename _Tp>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator : public __allocator_base<_Tp>
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp        value_type;
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t     size_type;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t  difference_type;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp*       pointer;
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp* const_pointer;
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp&       reference;
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp& const_reference;
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // Avoid implicit deprecation.
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator& operator=(const allocator&) = default;
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 257


 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	_GLIBCXX20_CONSTEXPR
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cpp_constexpr_dynamic_alloc
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       constexpr
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 6474              		.loc 28 162 7
 6475              		.cfi_startproc
 6476              		@ args = 0, pretend = 0, frame = 8
 6477              		@ frame_needed = 1, uses_anonymous_args = 0
 6478 0000 80B5     		push	{r7, lr}
 6479              		.cfi_def_cfa_offset 8
 6480              		.cfi_offset 7, -8
 6481              		.cfi_offset 14, -4
 6482 0002 82B0     		sub	sp, sp, #8
 6483              		.cfi_def_cfa_offset 16
 6484 0004 00AF     		add	r7, sp, #0
 6485              		.cfi_def_cfa_register 7
 6486 0006 7860     		str	r0, [r7, #4]
 6487              	.LBB46:
 6488              		.loc 28 162 39
 6489 0008 7868     		ldr	r0, [r7, #4]
 6490 000a FFF7FEFF 		bl	_ZN9__gnu_cxx13new_allocatorImED2Ev
 6491              	.LBE46:
 6492 000e 7B68     		ldr	r3, [r7, #4]
 6493 0010 1846     		mov	r0, r3
 6494 0012 0837     		adds	r7, r7, #8
 6495              		.cfi_def_cfa_offset 8
 6496 0014 BD46     		mov	sp, r7
 6497              		.cfi_def_cfa_register 13
 6498              		@ sp needed
 6499 0016 80BD     		pop	{r7, pc}
 6500              		.cfi_endproc
 6501              	.LFE5363:
 6503              		.weak	_ZNSaImED1Ev
 6504              		.thumb_set _ZNSaImED1Ev,_ZNSaImED2Ev
 6505              		.section	.text._ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev,"axG",%progbits,_ZNSt12_Vector_baseId
 6506              		.align	1
 6507              		.weak	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev
 6508              		.syntax unified
 6509              		.thumb
 6510              		.thumb_func
 6511              		.fpu fpv5-d16
 6513              	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev:
 6514              	.LFB5414:
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 6515              		.loc 23 131 2
 6516              		.cfi_startproc
 6517              		@ args = 0, pretend = 0, frame = 8
 6518              		@ frame_needed = 1, uses_anonymous_args = 0
 6519 0000 80B5     		push	{r7, lr}
 6520              		.cfi_def_cfa_offset 8
 6521              		.cfi_offset 7, -8
 6522              		.cfi_offset 14, -4
 6523 0002 82B0     		sub	sp, sp, #8
 6524              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 258


 6525 0004 00AF     		add	r7, sp, #0
 6526              		.cfi_def_cfa_register 7
 6527 0006 7860     		str	r0, [r7, #4]
 6528              	.LBB47:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 6529              		.loc 23 133 19
 6530 0008 7868     		ldr	r0, [r7, #4]
 6531 000a FFF7FEFF 		bl	_ZNSaIdEC2Ev
 6532 000e 7B68     		ldr	r3, [r7, #4]
 6533 0010 1846     		mov	r0, r3
 6534 0012 FFF7FEFF 		bl	_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev
 6535              	.LBE47:
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 6536              		.loc 23 134 4
 6537 0016 7B68     		ldr	r3, [r7, #4]
 6538 0018 1846     		mov	r0, r3
 6539 001a 0837     		adds	r7, r7, #8
 6540              		.cfi_def_cfa_offset 8
 6541 001c BD46     		mov	sp, r7
 6542              		.cfi_def_cfa_register 13
 6543              		@ sp needed
 6544 001e 80BD     		pop	{r7, pc}
 6545              		.cfi_endproc
 6546              	.LFE5414:
 6548              		.weak	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC1Ev
 6549              		.thumb_set _ZNSt12_Vector_baseIdSaIdEE12_Vector_implC1Ev,_ZNSt12_Vector_baseIdSaIdEE12_Vector_impl
 6550              		.section	.text._ZNSaIdED2Ev,"axG",%progbits,_ZNSaIdED5Ev,comdat
 6551              		.align	1
 6552              		.weak	_ZNSaIdED2Ev
 6553              		.syntax unified
 6554              		.thumb
 6555              		.thumb_func
 6556              		.fpu fpv5-d16
 6558              	_ZNSaIdED2Ev:
 6559              	.LFB5417:
 6560              		.loc 28 162 7
 6561              		.cfi_startproc
 6562              		@ args = 0, pretend = 0, frame = 8
 6563              		@ frame_needed = 1, uses_anonymous_args = 0
 6564 0000 80B5     		push	{r7, lr}
 6565              		.cfi_def_cfa_offset 8
 6566              		.cfi_offset 7, -8
 6567              		.cfi_offset 14, -4
 6568 0002 82B0     		sub	sp, sp, #8
 6569              		.cfi_def_cfa_offset 16
 6570 0004 00AF     		add	r7, sp, #0
 6571              		.cfi_def_cfa_register 7
 6572 0006 7860     		str	r0, [r7, #4]
 6573              	.LBB48:
 6574              		.loc 28 162 39
 6575 0008 7868     		ldr	r0, [r7, #4]
 6576 000a FFF7FEFF 		bl	_ZN9__gnu_cxx13new_allocatorIdED2Ev
 6577              	.LBE48:
 6578 000e 7B68     		ldr	r3, [r7, #4]
 6579 0010 1846     		mov	r0, r3
 6580 0012 0837     		adds	r7, r7, #8
 6581              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 259


 6582 0014 BD46     		mov	sp, r7
 6583              		.cfi_def_cfa_register 13
 6584              		@ sp needed
 6585 0016 80BD     		pop	{r7, pc}
 6586              		.cfi_endproc
 6587              	.LFE5417:
 6589              		.weak	_ZNSaIdED1Ev
 6590              		.thumb_set _ZNSaIdED1Ev,_ZNSaIdED2Ev
 6591              		.section	.text._ZNSt12_Vector_baseIdSaIdEED2Ev,"axG",%progbits,_ZNSt12_Vector_baseIdSaIdEED5Ev,com
 6592              		.align	1
 6593              		.weak	_ZNSt12_Vector_baseIdSaIdEED2Ev
 6594              		.syntax unified
 6595              		.thumb
 6596              		.thumb_func
 6597              		.fpu fpv5-d16
 6599              	_ZNSt12_Vector_baseIdSaIdEED2Ev:
 6600              	.LFB5420:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 6601              		.loc 23 333 7
 6602              		.cfi_startproc
 6603              		@ args = 0, pretend = 0, frame = 8
 6604              		@ frame_needed = 1, uses_anonymous_args = 0
 6605 0000 80B5     		push	{r7, lr}
 6606              		.cfi_def_cfa_offset 8
 6607              		.cfi_offset 7, -8
 6608              		.cfi_offset 14, -4
 6609 0002 82B0     		sub	sp, sp, #8
 6610              		.cfi_def_cfa_offset 16
 6611 0004 00AF     		add	r7, sp, #0
 6612              		.cfi_def_cfa_register 7
 6613 0006 7860     		str	r0, [r7, #4]
 6614              	.LBB49:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 6615              		.loc 23 335 15
 6616 0008 7B68     		ldr	r3, [r7, #4]
 6617 000a 1968     		ldr	r1, [r3]
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 6618              		.loc 23 336 17
 6619 000c 7B68     		ldr	r3, [r7, #4]
 6620 000e 9A68     		ldr	r2, [r3, #8]
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 6621              		.loc 23 336 45
 6622 0010 7B68     		ldr	r3, [r7, #4]
 6623 0012 1B68     		ldr	r3, [r3]
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 6624              		.loc 23 336 35
 6625 0014 D31A     		subs	r3, r2, r3
 6626 0016 DB10     		asrs	r3, r3, #3
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 6627              		.loc 23 335 15
 6628 0018 1A46     		mov	r2, r3
 6629 001a 7868     		ldr	r0, [r7, #4]
 6630 001c FFF7FEFF 		bl	_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdj
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 6631              		.loc 23 337 7
 6632 0020 7B68     		ldr	r3, [r7, #4]
 6633 0022 1846     		mov	r0, r3
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 260


 6634 0024 FFF7FEFF 		bl	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD1Ev
 6635              	.LBE49:
 6636 0028 7B68     		ldr	r3, [r7, #4]
 6637 002a 1846     		mov	r0, r3
 6638 002c 0837     		adds	r7, r7, #8
 6639              		.cfi_def_cfa_offset 8
 6640 002e BD46     		mov	sp, r7
 6641              		.cfi_def_cfa_register 13
 6642              		@ sp needed
 6643 0030 80BD     		pop	{r7, pc}
 6644              		.cfi_endproc
 6645              	.LFE5420:
 6647              		.weak	_ZNSt12_Vector_baseIdSaIdEED1Ev
 6648              		.thumb_set _ZNSt12_Vector_baseIdSaIdEED1Ev,_ZNSt12_Vector_baseIdSaIdEED2Ev
 6649              		.section	.text._ZNSt6vectorIdSaIdEED2Ev,"axG",%progbits,_ZNSt6vectorIdSaIdEED5Ev,comdat
 6650              		.align	1
 6651              		.weak	_ZNSt6vectorIdSaIdEED2Ev
 6652              		.syntax unified
 6653              		.thumb
 6654              		.thumb_func
 6655              		.fpu fpv5-d16
 6657              	_ZNSt6vectorIdSaIdEED2Ev:
 6658              	.LFB5423:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() { }
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator object.
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a) { }
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructed elements.
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_default_initialize(__n); }
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 261


 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value,
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector copy constructor.
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x  will not be copied
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x)
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move constructor.
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector contains the exact contents of the
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  moved instance.
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of the moved instance are a valid, but unspecified
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector.
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&&) noexcept = default;
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Copy constructor with alternative allocator
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(), __a)
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 262


 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, true_type) noexcept
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m, std::move(__rv))
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, false_type)
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m)
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__rv.get_allocator() == __m)
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__rv._M_impl);
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (!__rv.empty())
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_create_storage(__rv.size());
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish =
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  this->_M_impl._M_start,
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __rv.clear();
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Move constructor with alternative allocator
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       noexcept( noexcept(
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(std::declval<vector&&>(), std::declval<const allocator_type&>(),
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       std::declval<typename _Alloc_traits::is_always_equal>())) )
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : vector(std::move(__rv), __m, typename _Alloc_traits::is_always_equal{})
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a __l.
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This will call the element type's copy constructor N times
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(initializer_list<value_type> __l,
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a)
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from a range.
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 263


 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  An input iterator.
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [first,last).
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  random-access, then this will call the elements' copy
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor, and logN memory reallocations.
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  responsibility.
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 6659              		.loc 23 678 7
 6660              		.cfi_startproc
 6661              		@ args = 0, pretend = 0, frame = 8
 6662              		@ frame_needed = 1, uses_anonymous_args = 0
 6663 0000 B0B5     		push	{r4, r5, r7, lr}
 6664              		.cfi_def_cfa_offset 16
 6665              		.cfi_offset 4, -16
 6666              		.cfi_offset 5, -12
 6667              		.cfi_offset 7, -8
 6668              		.cfi_offset 14, -4
 6669 0002 82B0     		sub	sp, sp, #8
 6670              		.cfi_def_cfa_offset 24
 6671 0004 00AF     		add	r7, sp, #0
 6672              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 264


 6673 0006 7860     		str	r0, [r7, #4]
 6674              	.LBB50:
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 6675              		.loc 23 680 15
 6676 0008 7B68     		ldr	r3, [r7, #4]
 6677 000a 1C68     		ldr	r4, [r3]
 6678 000c 7B68     		ldr	r3, [r7, #4]
 6679 000e 5D68     		ldr	r5, [r3, #4]
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 6680              		.loc 23 681 28
 6681 0010 7B68     		ldr	r3, [r7, #4]
 6682 0012 1846     		mov	r0, r3
 6683 0014 FFF7FEFF 		bl	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
 6684 0018 0346     		mov	r3, r0
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 6685              		.loc 23 680 15
 6686 001a 1A46     		mov	r2, r3
 6687 001c 2946     		mov	r1, r5
 6688 001e 2046     		mov	r0, r4
 6689 0020 FFF7FEFF 		bl	_ZSt8_DestroyIPddEvT_S1_RSaIT0_E
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 6690              		.loc 23 683 7
 6691 0024 7B68     		ldr	r3, [r7, #4]
 6692 0026 1846     		mov	r0, r3
 6693 0028 FFF7FEFF 		bl	_ZNSt12_Vector_baseIdSaIdEED2Ev
 6694              	.LBE50:
 6695 002c 7B68     		ldr	r3, [r7, #4]
 6696 002e 1846     		mov	r0, r3
 6697 0030 0837     		adds	r7, r7, #8
 6698              		.cfi_def_cfa_offset 16
 6699 0032 BD46     		mov	sp, r7
 6700              		.cfi_def_cfa_register 13
 6701              		@ sp needed
 6702 0034 B0BD     		pop	{r4, r5, r7, pc}
 6703              		.cfi_endproc
 6704              	.LFE5423:
 6706              		.weak	_ZNSt6vectorIdSaIdEED1Ev
 6707              		.thumb_set _ZNSt6vectorIdSaIdEED1Ev,_ZNSt6vectorIdSaIdEED2Ev
 6708              		.section	.text._ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev,"axG",%progbits,_ZNSt13_Bvector_base
 6709              		.align	1
 6710              		.weak	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev
 6711              		.syntax unified
 6712              		.thumb
 6713              		.thumb_func
 6714              		.fpu fpv5-d16
 6716              	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev:
 6717              	.LFB5426:
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		is_nothrow_default_constructible<_Bit_alloc_type>::value)
 6718              		.loc 6 499 4
 6719              		.cfi_startproc
 6720              		@ args = 0, pretend = 0, frame = 8
 6721              		@ frame_needed = 1, uses_anonymous_args = 0
 6722 0000 80B5     		push	{r7, lr}
 6723              		.cfi_def_cfa_offset 8
 6724              		.cfi_offset 7, -8
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 265


 6725              		.cfi_offset 14, -4
 6726 0002 82B0     		sub	sp, sp, #8
 6727              		.cfi_def_cfa_offset 16
 6728 0004 00AF     		add	r7, sp, #0
 6729              		.cfi_def_cfa_register 7
 6730 0006 7860     		str	r0, [r7, #4]
 6731              	.LBB51:
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  { }
 6732              		.loc 6 501 22
 6733 0008 7868     		ldr	r0, [r7, #4]
 6734 000a FFF7FEFF 		bl	_ZNSaImEC2Ev
 6735 000e 7B68     		ldr	r3, [r7, #4]
 6736 0010 1846     		mov	r0, r3
 6737 0012 FFF7FEFF 		bl	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev
 6738              	.LBE51:
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6739              		.loc 6 502 6
 6740 0016 7B68     		ldr	r3, [r7, #4]
 6741 0018 1846     		mov	r0, r3
 6742 001a 0837     		adds	r7, r7, #8
 6743              		.cfi_def_cfa_offset 8
 6744 001c BD46     		mov	sp, r7
 6745              		.cfi_def_cfa_register 13
 6746              		@ sp needed
 6747 001e 80BD     		pop	{r7, pc}
 6748              		.cfi_endproc
 6749              	.LFE5426:
 6751              		.weak	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC1Ev
 6752              		.thumb_set _ZNSt13_Bvector_baseISaIbEE13_Bvector_implC1Ev,_ZNSt13_Bvector_baseISaIbEE13_Bvector_im
 6753              		.section	.text._ZNSt13_Bvector_baseISaIbEED2Ev,"axG",%progbits,_ZNSt13_Bvector_baseISaIbEED5Ev,com
 6754              		.align	1
 6755              		.weak	_ZNSt13_Bvector_baseISaIbEED2Ev
 6756              		.syntax unified
 6757              		.thumb
 6758              		.thumb_func
 6759              		.fpu fpv5-d16
 6761              	_ZNSt13_Bvector_baseISaIbEED2Ev:
 6762              	.LFB5429:
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 6763              		.loc 6 549 7
 6764              		.cfi_startproc
 6765              		@ args = 0, pretend = 0, frame = 8
 6766              		@ frame_needed = 1, uses_anonymous_args = 0
 6767 0000 80B5     		push	{r7, lr}
 6768              		.cfi_def_cfa_offset 8
 6769              		.cfi_offset 7, -8
 6770              		.cfi_offset 14, -4
 6771 0002 82B0     		sub	sp, sp, #8
 6772              		.cfi_def_cfa_offset 16
 6773 0004 00AF     		add	r7, sp, #0
 6774              		.cfi_def_cfa_register 7
 6775 0006 7860     		str	r0, [r7, #4]
 6776              	.LBB52:
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6777              		.loc 6 550 28
 6778 0008 7868     		ldr	r0, [r7, #4]
 6779 000a FFF7FEFF 		bl	_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 266


 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6780              		.loc 6 550 32
 6781 000e 7B68     		ldr	r3, [r7, #4]
 6782 0010 1846     		mov	r0, r3
 6783 0012 FFF7FEFF 		bl	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD1Ev
 6784              	.LBE52:
 6785 0016 7B68     		ldr	r3, [r7, #4]
 6786 0018 1846     		mov	r0, r3
 6787 001a 0837     		adds	r7, r7, #8
 6788              		.cfi_def_cfa_offset 8
 6789 001c BD46     		mov	sp, r7
 6790              		.cfi_def_cfa_register 13
 6791              		@ sp needed
 6792 001e 80BD     		pop	{r7, pc}
 6793              		.cfi_endproc
 6794              	.LFE5429:
 6796              		.weak	_ZNSt13_Bvector_baseISaIbEED1Ev
 6797              		.thumb_set _ZNSt13_Bvector_baseISaIbEED1Ev,_ZNSt13_Bvector_baseISaIbEED2Ev
 6798              		.section	.text._ZNSt6vectorIbSaIbEED2Ev,"axG",%progbits,_ZNSt6vectorIbSaIbEED5Ev,comdat
 6799              		.align	1
 6800              		.weak	_ZNSt6vectorIbSaIbEED2Ev
 6801              		.syntax unified
 6802              		.thumb
 6803              		.thumb_func
 6804              		.fpu fpv5-d16
 6806              	_ZNSt6vectorIbSaIbEED2Ev:
 6807              	.LFB5432:
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector() { }
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       explicit
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(const allocator_type& __a)
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(__a) { }
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       explicit
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : vector(__n, false, __a)
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { }
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(size_type __n, const bool& __value,
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	     const allocator_type& __a = allocator_type())
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       explicit
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(size_type __n, const bool& __value = bool(),
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	     const allocator_type& __a = allocator_type())
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(__a)
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize(__n);
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize_value(__value);
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(const vector& __x)
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(_Bit_alloc_traits::_S_select_on_copy(__x._M_get_Bit_allocator()))
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 267


 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize(__x.size());
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_copy_aligned(__x.begin(), __x.end(), this->_M_impl._M_start);
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(vector&&) = default;
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(vector&& __x, const allocator_type& __a)
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       noexcept(_Bit_alloc_traits::_S_always_equal())
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(__a)
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__x.get_allocator() == __a)
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  this->_M_move_data(std::move(__x));
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	else
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_initialize(__x.size());
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_copy_aligned(__x.begin(), __x.end(), begin());
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    __x.clear();
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(const vector& __x, const allocator_type& __a)
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(__a)
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize(__x.size());
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_copy_aligned(__x.begin(), __x.end(), this->_M_impl._M_start);
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(initializer_list<bool> __l,
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	     const allocator_type& __a = allocator_type())
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(__a)
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize_range(__l.begin(), __l.end(),
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			    random_access_iterator_tag());
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator,
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	       const allocator_type& __a = allocator_type())
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _Base(__a)
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_initialize_dispatch(__first, __last, __false_type()); }
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	       const allocator_type& __a = allocator_type())
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _Base(__a)
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       ~vector() _GLIBCXX_NOEXCEPT { }
 6808              		.loc 6 737 7
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 268


 6809              		.cfi_startproc
 6810              		@ args = 0, pretend = 0, frame = 8
 6811              		@ frame_needed = 1, uses_anonymous_args = 0
 6812 0000 80B5     		push	{r7, lr}
 6813              		.cfi_def_cfa_offset 8
 6814              		.cfi_offset 7, -8
 6815              		.cfi_offset 14, -4
 6816 0002 82B0     		sub	sp, sp, #8
 6817              		.cfi_def_cfa_offset 16
 6818 0004 00AF     		add	r7, sp, #0
 6819              		.cfi_def_cfa_register 7
 6820 0006 7860     		str	r0, [r7, #4]
 6821              	.LBB53:
 6822              		.loc 6 737 37
 6823 0008 7B68     		ldr	r3, [r7, #4]
 6824 000a 1846     		mov	r0, r3
 6825 000c FFF7FEFF 		bl	_ZNSt13_Bvector_baseISaIbEED2Ev
 6826              	.LBE53:
 6827 0010 7B68     		ldr	r3, [r7, #4]
 6828 0012 1846     		mov	r0, r3
 6829 0014 0837     		adds	r7, r7, #8
 6830              		.cfi_def_cfa_offset 8
 6831 0016 BD46     		mov	sp, r7
 6832              		.cfi_def_cfa_register 13
 6833              		@ sp needed
 6834 0018 80BD     		pop	{r7, pc}
 6835              		.cfi_endproc
 6836              	.LFE5432:
 6838              		.weak	_ZNSt6vectorIbSaIbEED1Ev
 6839              		.thumb_set _ZNSt6vectorIbSaIbEED1Ev,_ZNSt6vectorIbSaIbEED2Ev
 6840              		.section	.text._ZNSt6vectorIdSaIdEEixEj,"axG",%progbits,_ZNSt6vectorIdSaIdEEixEj,comdat
 6841              		.align	1
 6842              		.weak	_ZNSt6vectorIdSaIdEEixEj
 6843              		.syntax unified
 6844              		.thumb
 6845              		.thumb_func
 6846              		.fpu fpv5-d16
 6848              	_ZNSt6vectorIdSaIdEEixEj:
 6849              	.LFB5434:
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector assignment operator.
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x will not be copied.
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is copied depends on the allocator traits.
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(const vector& __x);
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move assignment operator.
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 269


 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  if the allocators permit it).
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Afterwards @a __x is a valid, but unspecified %vector.
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is moved depends on the allocator traits.
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	constexpr bool __move_storage =
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  || _Alloc_traits::_S_always_equal();
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector list assignment operator.
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(initializer_list<value_type> __l)
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __val  Value to be assigned.
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  value.  Note that the assignment completely changes the
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the number of elements assigned.
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(size_type __n, const value_type& __val)
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_assign(__n, __val); }
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  range [__first,__last).
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 270


 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_dispatch(__first, __last, __false_type()); }
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(initializer_list<value_type> __l)
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Get a copy of the memory allocation object.
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::get_allocator;
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // iterators
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points to the first
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 271


 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(end()); }
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  in reverse element order.
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(begin()); }
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 272


 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cbegin() const noexcept
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cend() const noexcept
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crbegin() const noexcept
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crend() const noexcept
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.2] capacity
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _S_max_size(_M_get_Tp_allocator()); }
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 273


 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  default constructed elements are appended.
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size)
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_default_append(__new_size - size());
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 274


 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       shrink_to_fit()
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_shrink_to_fit(); }
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns the total number of elements that the %vector can
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  hold before needing to allocate more memory.
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 - this->_M_impl._M_start); }
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  equal end().)
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _GLIBCXX_NODISCARD bool
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return begin() == end(); }
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *          elements.
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements required.
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function attempts to reserve enough memory for the
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number requested is more than max_size(), length_error is
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  thrown.
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The advantage of this function is that if optimal code is a
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  necessity and the user can determine the number of elements
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that will be required, the user can reserve the memory in
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and copying of %vector data.
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reserve(size_type __n);
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // element access
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 275


 6850              		.loc 23 1043 7
 6851              		.cfi_startproc
 6852              		@ args = 0, pretend = 0, frame = 8
 6853              		@ frame_needed = 1, uses_anonymous_args = 0
 6854              		@ link register save eliminated.
 6855 0000 80B4     		push	{r7}
 6856              		.cfi_def_cfa_offset 4
 6857              		.cfi_offset 7, -4
 6858 0002 83B0     		sub	sp, sp, #12
 6859              		.cfi_def_cfa_offset 16
 6860 0004 00AF     		add	r7, sp, #0
 6861              		.cfi_def_cfa_register 7
 6862 0006 7860     		str	r0, [r7, #4]
 6863 0008 3960     		str	r1, [r7]
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
 6864              		.loc 23 1046 25
 6865 000a 7B68     		ldr	r3, [r7, #4]
 6866 000c 1A68     		ldr	r2, [r3]
 6867              		.loc 23 1046 34
 6868 000e 3B68     		ldr	r3, [r7]
 6869 0010 DB00     		lsls	r3, r3, #3
 6870              		.loc 23 1046 39
 6871 0012 1344     		add	r3, r3, r2
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 6872              		.loc 23 1047 7
 6873 0014 1846     		mov	r0, r3
 6874 0016 0C37     		adds	r7, r7, #12
 6875              		.cfi_def_cfa_offset 4
 6876 0018 BD46     		mov	sp, r7
 6877              		.cfi_def_cfa_register 13
 6878              		@ sp needed
 6879 001a 5DF8047B 		ldr	r7, [sp], #4
 6880              		.cfi_restore 7
 6881              		.cfi_def_cfa_offset 0
 6882 001e 7047     		bx	lr
 6883              		.cfi_endproc
 6884              	.LFE5434:
 6886              		.section	.text._ZNSt6vectorIdSaIdEE6resizeEjRKd,"axG",%progbits,_ZNSt6vectorIdSaIdEE6resizeEjRKd,c
 6887              		.align	1
 6888              		.weak	_ZNSt6vectorIdSaIdEE6resizeEjRKd
 6889              		.syntax unified
 6890              		.thumb
 6891              		.thumb_func
 6892              		.fpu fpv5-d16
 6894              	_ZNSt6vectorIdSaIdEE6resizeEjRKd:
 6895              	.LFB5435:
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 6896              		.loc 23 957 7
 6897              		.cfi_startproc
 6898              		@ args = 0, pretend = 0, frame = 16
 6899              		@ frame_needed = 1, uses_anonymous_args = 0
 6900 0000 90B5     		push	{r4, r7, lr}
 6901              		.cfi_def_cfa_offset 12
 6902              		.cfi_offset 4, -12
 6903              		.cfi_offset 7, -8
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 276


 6904              		.cfi_offset 14, -4
 6905 0002 85B0     		sub	sp, sp, #20
 6906              		.cfi_def_cfa_offset 32
 6907 0004 00AF     		add	r7, sp, #0
 6908              		.cfi_def_cfa_register 7
 6909 0006 F860     		str	r0, [r7, #12]
 6910 0008 B960     		str	r1, [r7, #8]
 6911 000a 7A60     		str	r2, [r7, #4]
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 6912              		.loc 23 959 23
 6913 000c F868     		ldr	r0, [r7, #12]
 6914 000e FFF7FEFF 		bl	_ZNKSt6vectorIdSaIdEE4sizeEv
 6915 0012 0246     		mov	r2, r0
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 6916              		.loc 23 959 17
 6917 0014 BB68     		ldr	r3, [r7, #8]
 6918 0016 9342     		cmp	r3, r2
 6919 0018 8CBF     		ite	hi
 6920 001a 0123     		movhi	r3, #1
 6921 001c 0023     		movls	r3, #0
 6922 001e DBB2     		uxtb	r3, r3
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 6923              		.loc 23 959 2
 6924 0020 002B     		cmp	r3, #0
 6925 0022 0FD0     		beq	.L288
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 6926              		.loc 23 960 18
 6927 0024 F868     		ldr	r0, [r7, #12]
 6928 0026 FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEE3endEv
 6929 002a 0446     		mov	r4, r0
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 6930              		.loc 23 960 43
 6931 002c F868     		ldr	r0, [r7, #12]
 6932 002e FFF7FEFF 		bl	_ZNKSt6vectorIdSaIdEE4sizeEv
 6933 0032 0246     		mov	r2, r0
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 6934              		.loc 23 960 18
 6935 0034 BB68     		ldr	r3, [r7, #8]
 6936 0036 9A1A     		subs	r2, r3, r2
 6937 0038 7B68     		ldr	r3, [r7, #4]
 6938 003a 2146     		mov	r1, r4
 6939 003c F868     		ldr	r0, [r7, #12]
 6940 003e FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEjRKd
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 6941              		.loc 23 963 7
 6942 0042 14E0     		b	.L290
 6943              	.L288:
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 6944              		.loc 23 961 28
 6945 0044 F868     		ldr	r0, [r7, #12]
 6946 0046 FFF7FEFF 		bl	_ZNKSt6vectorIdSaIdEE4sizeEv
 6947 004a 0246     		mov	r2, r0
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 6948              		.loc 23 961 22
 6949 004c BB68     		ldr	r3, [r7, #8]
 6950 004e 9342     		cmp	r3, r2
 6951 0050 34BF     		ite	cc
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 277


 6952 0052 0123     		movcc	r3, #1
 6953 0054 0023     		movcs	r3, #0
 6954 0056 DBB2     		uxtb	r3, r3
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 6955              		.loc 23 961 7
 6956 0058 002B     		cmp	r3, #0
 6957 005a 08D0     		beq	.L290
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 6958              		.loc 23 962 34
 6959 005c FB68     		ldr	r3, [r7, #12]
 6960 005e 1A68     		ldr	r2, [r3]
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 6961              		.loc 23 962 43
 6962 0060 BB68     		ldr	r3, [r7, #8]
 6963 0062 DB00     		lsls	r3, r3, #3
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 6964              		.loc 23 962 19
 6965 0064 1344     		add	r3, r3, r2
 6966 0066 1946     		mov	r1, r3
 6967 0068 F868     		ldr	r0, [r7, #12]
 6968 006a FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd
 6969              	.L290:
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 6970              		.loc 23 963 7
 6971 006e 00BF     		nop
 6972 0070 1437     		adds	r7, r7, #20
 6973              		.cfi_def_cfa_offset 12
 6974 0072 BD46     		mov	sp, r7
 6975              		.cfi_def_cfa_register 13
 6976              		@ sp needed
 6977 0074 90BD     		pop	{r4, r7, pc}
 6978              		.cfi_endproc
 6979              	.LFE5435:
 6981              		.section	.text._ZNSt6vectorIbSaIbEE6resizeEjb,"axG",%progbits,_ZNSt6vectorIbSaIbEE6resizeEjb,comda
 6982              		.align	1
 6983              		.weak	_ZNSt6vectorIbSaIbEE6resizeEjb
 6984              		.syntax unified
 6985              		.thumb
 6986              		.thumb_func
 6987              		.fpu fpv5-d16
 6989              	_ZNSt6vectorIbSaIbEE6resizeEjb:
 6990              	.LFB5436:
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector&
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       operator=(const vector& __x)
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (&__x == this)
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  return *this;
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (_Bit_alloc_traits::_S_propagate_on_copy_assign())
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    if (this->_M_get_Bit_allocator() != __x._M_get_Bit_allocator())
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      {
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		this->_M_deallocate();
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		std::__alloc_on_copy(_M_get_Bit_allocator(),
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 				     __x._M_get_Bit_allocator());
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		_M_initialize(__x.size());
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 278


 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      }
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    else
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      std::__alloc_on_copy(_M_get_Bit_allocator(),
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 				   __x._M_get_Bit_allocator());
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__x.size() > capacity())
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_deallocate();
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_initialize(__x.size());
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	this->_M_impl._M_finish = _M_copy_aligned(__x.begin(), __x.end(),
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 						  begin());
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return *this;
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector&
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       operator=(vector&& __x) noexcept(_Bit_alloc_traits::_S_nothrow_move())
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (_Bit_alloc_traits::_S_propagate_on_move_assign()
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    || this->_M_get_Bit_allocator() == __x._M_get_Bit_allocator())
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_deallocate();
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_move_data(std::move(__x));
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    std::__alloc_on_move(_M_get_Bit_allocator(),
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 				 __x._M_get_Bit_allocator());
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	else
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    if (__x.size() > capacity())
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      {
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		this->_M_deallocate();
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		_M_initialize(__x.size());
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      }
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_finish = _M_copy_aligned(__x.begin(), __x.end(),
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 						      begin());
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    __x.clear();
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return *this;
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector&
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       operator=(initializer_list<bool> __l)
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	this->assign (__l.begin(), __l.end());
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return *this;
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // assign(), a generalized assignment member function.  Two
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // versions: one that takes a count, and one that takes a range.
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // The range version is a member template, so we dispatch on whether
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // or not the type is an integer.
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       assign(size_type __n, const bool& __x)
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_fill_assign(__n, __x); }
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 279


 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator,
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       assign(initializer_list<bool> __l)
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_assign_aux(__l.begin(), __l.end(), random_access_iterator_tag()); }
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       begin() _GLIBCXX_NOEXCEPT
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return iterator(this->_M_impl._M_start._M_p, 0); }
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       begin() const _GLIBCXX_NOEXCEPT
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       end() _GLIBCXX_NOEXCEPT
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       end() const _GLIBCXX_NOEXCEPT
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       reverse_iterator
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return reverse_iterator(end()); }
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reverse_iterator
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_reverse_iterator(end()); }
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       reverse_iterator
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       rend() _GLIBCXX_NOEXCEPT
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return reverse_iterator(begin()); }
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reverse_iterator
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       rend() const _GLIBCXX_NOEXCEPT
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_reverse_iterator(begin()); }
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 280


 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       cbegin() const noexcept
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       cend() const noexcept
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reverse_iterator
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       crbegin() const noexcept
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_reverse_iterator(end()); }
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reverse_iterator
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       crend() const noexcept
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_reverse_iterator(begin()); }
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       size_type
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       size() const _GLIBCXX_NOEXCEPT
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       size_type
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	const size_type __isize =
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __gnu_cxx::__numeric_traits<difference_type>::__max
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  - int(_S_word_bit) + 1;
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	const size_type __asize
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  = _Bit_alloc_traits::max_size(_M_get_Bit_allocator());
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return (__asize <= __isize / int(_S_word_bit)
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		? __asize * int(_S_word_bit) : __isize);
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       size_type
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(const_iterator(this->_M_impl._M_end_addr(), 0)
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			 - begin()); }
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _GLIBCXX_NODISCARD bool
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       empty() const _GLIBCXX_NOEXCEPT
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return begin() == end(); }
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       reference
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       operator[](size_type __n)
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return *iterator(this->_M_impl._M_start._M_p
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			 + __n / int(_S_word_bit), __n % int(_S_word_bit));
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reference
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       operator[](size_type __n) const
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return *const_iterator(this->_M_impl._M_start._M_p
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			     + __n / int(_S_word_bit), __n % int(_S_word_bit));
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     protected:
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 281


 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_range_check(size_type __n) const
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__n >= this->size())
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __throw_out_of_range_fmt(__N("vector<bool>::_M_range_check: __n "
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 				       "(which is %zu) >= this->size() "
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 				       "(which is %zu)"),
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 				   __n, this->size());
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     public:
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       reference
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       at(size_type __n)
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_range_check(__n); return (*this)[__n]; }
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reference
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       at(size_type __n) const
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_range_check(__n); return (*this)[__n]; }
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       reserve(size_type __n)
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__n > max_size())
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __throw_length_error(__N("vector::reserve"));
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (capacity() < __n)
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_reallocate(__n);
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       reference
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       front()
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return *begin(); }
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reference
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       front() const
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return *begin(); }
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       reference
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       back()
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return *(end() - 1); }
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reference
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       back() const
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return *(end() - 1); }
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // DR 464. Suggestion for new member functions in standard containers.
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // N.B. DR 464 says nothing about vector<bool> but we need something
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // here due to the way we are implementing DR 464 in the debug-mode
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // vector class.
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       data() _GLIBCXX_NOEXCEPT { }
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       push_back(bool __x)
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (this->_M_impl._M_finish._M_p != this->_M_impl._M_end_addr())
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  *this->_M_impl._M_finish++ = __x;
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	else
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 282


 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_insert_aux(end(), __x);
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       swap(vector& __x) _GLIBCXX_NOEXCEPT
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	std::swap(this->_M_impl._M_start, __x._M_impl._M_start);
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	std::swap(this->_M_impl._M_finish, __x._M_impl._M_finish);
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	std::swap(this->_M_impl._M_end_of_storage,
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		  __x._M_impl._M_end_of_storage);
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_alloc_traits::_S_on_swap(_M_get_Bit_allocator(),
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 				      __x._M_get_Bit_allocator());
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // [23.2.5]/1, third-to-last entry in synopsis listing
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       static void
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       swap(reference __x, reference __y) _GLIBCXX_NOEXCEPT
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	bool __tmp = __x;
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	__x = __y;
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	__y = __tmp;
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       insert(const_iterator __position, const bool& __x = bool())
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       insert(iterator __position, const bool& __x = bool())
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	const difference_type __n = __position - begin();
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (this->_M_impl._M_finish._M_p != this->_M_impl._M_end_addr()
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    && __position == end())
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  *this->_M_impl._M_finish++ = __x;
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	else
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_insert_aux(__position._M_const_cast(), __x);
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return begin() + __n;
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator,
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	iterator
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	insert(const_iterator __position,
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	       _InputIterator __first, _InputIterator __last)
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  difference_type __offset = __position - cbegin();
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_insert_dispatch(__position._M_const_cast(),
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			     __first, __last, __false_type());
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  return begin() + __offset;
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	insert(iterator __position,
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	       _InputIterator __first, _InputIterator __last)
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 283


1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       insert(const_iterator __position, size_type __n, const bool& __x)
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	difference_type __offset = __position - cbegin();
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_fill_insert(__position._M_const_cast(), __n, __x);
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return begin() + __offset;
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       insert(iterator __position, size_type __n, const bool& __x)
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_fill_insert(__position, __n, __x); }
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       insert(const_iterator __p, initializer_list<bool> __l)
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->insert(__p, __l.begin(), __l.end()); }
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       pop_back()
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { --this->_M_impl._M_finish; }
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       erase(const_iterator __position)
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       erase(iterator __position)
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return _M_erase(__position._M_const_cast()); }
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       erase(const_iterator __first, const_iterator __last)
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       erase(iterator __first, iterator __last)
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return _M_erase(__first._M_const_cast(), __last._M_const_cast()); }
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       resize(size_type __new_size, bool __x = bool())
 6991              		.loc 6 1084 7
 6992              		.cfi_startproc
 6993              		@ args = 0, pretend = 0, frame = 56
 6994              		@ frame_needed = 1, uses_anonymous_args = 0
 6995 0000 80B5     		push	{r7, lr}
 6996              		.cfi_def_cfa_offset 8
 6997              		.cfi_offset 7, -8
 6998              		.cfi_offset 14, -4
 6999 0002 90B0     		sub	sp, sp, #64
 7000              		.cfi_def_cfa_offset 72
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 284


 7001 0004 02AF     		add	r7, sp, #8
 7002              		.cfi_def_cfa 7, 64
 7003 0006 F860     		str	r0, [r7, #12]
 7004 0008 B960     		str	r1, [r7, #8]
 7005 000a 1346     		mov	r3, r2
 7006 000c FB71     		strb	r3, [r7, #7]
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__new_size < size())
 7007              		.loc 6 1086 23
 7008 000e F868     		ldr	r0, [r7, #12]
 7009 0010 FFF7FEFF 		bl	_ZNKSt6vectorIbSaIbEE4sizeEv
 7010 0014 0246     		mov	r2, r0
 7011              		.loc 6 1086 17
 7012 0016 BB68     		ldr	r3, [r7, #8]
 7013 0018 9342     		cmp	r3, r2
 7014 001a 34BF     		ite	cc
 7015 001c 0123     		movcc	r3, #1
 7016 001e 0023     		movcs	r3, #0
 7017 0020 DBB2     		uxtb	r3, r3
 7018              		.loc 6 1086 2
 7019 0022 002B     		cmp	r3, #0
 7020 0024 15D0     		beq	.L292
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_erase_at_end(begin() + difference_type(__new_size));
 7021              		.loc 6 1087 25
 7022 0026 07F11003 		add	r3, r7, #16
 7023 002a F968     		ldr	r1, [r7, #12]
 7024 002c 1846     		mov	r0, r3
 7025 002e FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE5beginEv
 7026              		.loc 6 1087 19
 7027 0032 BA68     		ldr	r2, [r7, #8]
 7028 0034 07F11803 		add	r3, r7, #24
 7029 0038 07F11001 		add	r1, r7, #16
 7030 003c 1846     		mov	r0, r3
 7031 003e FFF7FEFF 		bl	_ZStplRKSt13_Bit_iteratori
 7032 0042 07F11803 		add	r3, r7, #24
 7033 0046 93E80600 		ldm	r3, {r1, r2}
 7034 004a F868     		ldr	r0, [r7, #12]
 7035 004c FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	else
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  insert(end(), __new_size - size(), __x);
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 7036              		.loc 6 1090 7
 7037 0050 1EE0     		b	.L294
 7038              	.L292:
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 7039              		.loc 6 1089 14
 7040 0052 07F13003 		add	r3, r7, #48
 7041 0056 F968     		ldr	r1, [r7, #12]
 7042 0058 1846     		mov	r0, r3
 7043 005a FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE3endEv
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 7044              		.loc 6 1089 10
 7045 005e 07F13002 		add	r2, r7, #48
 7046 0062 07F12803 		add	r3, r7, #40
 7047 0066 1146     		mov	r1, r2
 7048 0068 1846     		mov	r0, r3
 7049 006a FFF7FEFF 		bl	_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 285


1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 7050              		.loc 6 1089 35
 7051 006e F868     		ldr	r0, [r7, #12]
 7052 0070 FFF7FEFF 		bl	_ZNKSt6vectorIbSaIbEE4sizeEv
 7053 0074 0246     		mov	r2, r0
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 7054              		.loc 6 1089 10
 7055 0076 BB68     		ldr	r3, [r7, #8]
 7056 0078 9B1A     		subs	r3, r3, r2
 7057 007a 07F12000 		add	r0, r7, #32
 7058 007e FA1D     		adds	r2, r7, #7
 7059 0080 0192     		str	r2, [sp, #4]
 7060 0082 0093     		str	r3, [sp]
 7061 0084 07F12803 		add	r3, r7, #40
 7062 0088 0CCB     		ldm	r3, {r2, r3}
 7063 008a F968     		ldr	r1, [r7, #12]
 7064 008c FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE6insertESt19_Bit_const_iteratorjRKb
 7065              	.L294:
 7066              		.loc 6 1090 7
 7067 0090 00BF     		nop
 7068 0092 3837     		adds	r7, r7, #56
 7069              		.cfi_def_cfa_offset 8
 7070 0094 BD46     		mov	sp, r7
 7071              		.cfi_def_cfa_register 13
 7072              		@ sp needed
 7073 0096 80BD     		pop	{r7, pc}
 7074              		.cfi_endproc
 7075              	.LFE5436:
 7077              		.section	.text._ZN7daisysp9DelayLineIfLj96000EEC2Ev,"axG",%progbits,_ZN7daisysp9DelayLineIfLj96000
 7078              		.align	1
 7079              		.weak	_ZN7daisysp9DelayLineIfLj96000EEC2Ev
 7080              		.syntax unified
 7081              		.thumb
 7082              		.thumb_func
 7083              		.fpu fpv5-d16
 7085              	_ZN7daisysp9DelayLineIfLj96000EEC2Ev:
 7086              	.LFB5438:
 7087              		.file 29 "../../DaisySP/Source/Utility/delayline.h"
   1:../../DaisySP/Source/Utility/delayline.h **** #pragma once
   2:../../DaisySP/Source/Utility/delayline.h **** #ifndef DSY_DELAY_H
   3:../../DaisySP/Source/Utility/delayline.h **** #define DSY_DELAY_H
   4:../../DaisySP/Source/Utility/delayline.h **** #include <stdlib.h>
   5:../../DaisySP/Source/Utility/delayline.h **** #include <stdint.h>
   6:../../DaisySP/Source/Utility/delayline.h **** namespace daisysp
   7:../../DaisySP/Source/Utility/delayline.h **** {
   8:../../DaisySP/Source/Utility/delayline.h **** /** Simple Delay line.
   9:../../DaisySP/Source/Utility/delayline.h **** November 2019
  10:../../DaisySP/Source/Utility/delayline.h **** 
  11:../../DaisySP/Source/Utility/delayline.h **** Converted to Template December 2019
  12:../../DaisySP/Source/Utility/delayline.h **** 
  13:../../DaisySP/Source/Utility/delayline.h **** declaration example: (1 second of floats)
  14:../../DaisySP/Source/Utility/delayline.h **** 
  15:../../DaisySP/Source/Utility/delayline.h **** DelayLine<float, SAMPLE_RATE> del;
  16:../../DaisySP/Source/Utility/delayline.h **** 
  17:../../DaisySP/Source/Utility/delayline.h **** By: shensley
  18:../../DaisySP/Source/Utility/delayline.h **** */
  19:../../DaisySP/Source/Utility/delayline.h **** template <typename T, size_t max_size>
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 286


  20:../../DaisySP/Source/Utility/delayline.h **** class DelayLine
  21:../../DaisySP/Source/Utility/delayline.h **** {
  22:../../DaisySP/Source/Utility/delayline.h ****   public:
  23:../../DaisySP/Source/Utility/delayline.h ****     DelayLine() {}
 7088              		.loc 29 23 5
 7089              		.cfi_startproc
 7090              		@ args = 0, pretend = 0, frame = 8
 7091              		@ frame_needed = 1, uses_anonymous_args = 0
 7092              		@ link register save eliminated.
 7093 0000 80B4     		push	{r7}
 7094              		.cfi_def_cfa_offset 4
 7095              		.cfi_offset 7, -4
 7096 0002 83B0     		sub	sp, sp, #12
 7097              		.cfi_def_cfa_offset 16
 7098 0004 00AF     		add	r7, sp, #0
 7099              		.cfi_def_cfa_register 7
 7100 0006 7860     		str	r0, [r7, #4]
 7101              		.loc 29 23 18
 7102 0008 7B68     		ldr	r3, [r7, #4]
 7103 000a 1846     		mov	r0, r3
 7104 000c 0C37     		adds	r7, r7, #12
 7105              		.cfi_def_cfa_offset 4
 7106 000e BD46     		mov	sp, r7
 7107              		.cfi_def_cfa_register 13
 7108              		@ sp needed
 7109 0010 5DF8047B 		ldr	r7, [sp], #4
 7110              		.cfi_restore 7
 7111              		.cfi_def_cfa_offset 0
 7112 0014 7047     		bx	lr
 7113              		.cfi_endproc
 7114              	.LFE5438:
 7116              		.weak	_ZN7daisysp9DelayLineIfLj96000EEC1Ev
 7117              		.thumb_set _ZN7daisysp9DelayLineIfLj96000EEC1Ev,_ZN7daisysp9DelayLineIfLj96000EEC2Ev
 7118              		.section	.text._ZN7daisysp9DelayLineIfLj96000EE4InitEv,"axG",%progbits,_ZN7daisysp9DelayLineIfLj96
 7119              		.align	1
 7120              		.weak	_ZN7daisysp9DelayLineIfLj96000EE4InitEv
 7121              		.syntax unified
 7122              		.thumb
 7123              		.thumb_func
 7124              		.fpu fpv5-d16
 7126              	_ZN7daisysp9DelayLineIfLj96000EE4InitEv:
 7127              	.LFB5440:
  24:../../DaisySP/Source/Utility/delayline.h ****     ~DelayLine() {}
  25:../../DaisySP/Source/Utility/delayline.h ****     /** initializes the delay line by clearing the values within, and setting delay to 1 sample.
  26:../../DaisySP/Source/Utility/delayline.h ****     */
  27:../../DaisySP/Source/Utility/delayline.h ****     void Init() { Reset(); }
 7128              		.loc 29 27 10
 7129              		.cfi_startproc
 7130              		@ args = 0, pretend = 0, frame = 8
 7131              		@ frame_needed = 1, uses_anonymous_args = 0
 7132 0000 80B5     		push	{r7, lr}
 7133              		.cfi_def_cfa_offset 8
 7134              		.cfi_offset 7, -8
 7135              		.cfi_offset 14, -4
 7136 0002 82B0     		sub	sp, sp, #8
 7137              		.cfi_def_cfa_offset 16
 7138 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 287


 7139              		.cfi_def_cfa_register 7
 7140 0006 7860     		str	r0, [r7, #4]
 7141              		.loc 29 27 24
 7142 0008 7868     		ldr	r0, [r7, #4]
 7143 000a FFF7FEFF 		bl	_ZN7daisysp9DelayLineIfLj96000EE5ResetEv
 7144              		.loc 29 27 28
 7145 000e 00BF     		nop
 7146 0010 0837     		adds	r7, r7, #8
 7147              		.cfi_def_cfa_offset 8
 7148 0012 BD46     		mov	sp, r7
 7149              		.cfi_def_cfa_register 13
 7150              		@ sp needed
 7151 0014 80BD     		pop	{r7, pc}
 7152              		.cfi_endproc
 7153              	.LFE5440:
 7155              		.section	.text._ZN7daisysp9DelayLineIfLj96000EE8SetDelayEf,"axG",%progbits,_ZN7daisysp9DelayLineIf
 7156              		.align	1
 7157              		.weak	_ZN7daisysp9DelayLineIfLj96000EE8SetDelayEf
 7158              		.syntax unified
 7159              		.thumb
 7160              		.thumb_func
 7161              		.fpu fpv5-d16
 7163              	_ZN7daisysp9DelayLineIfLj96000EE8SetDelayEf:
 7164              	.LFB5441:
  28:../../DaisySP/Source/Utility/delayline.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  29:../../DaisySP/Source/Utility/delayline.h ****     */
  30:../../DaisySP/Source/Utility/delayline.h ****     void Reset()
  31:../../DaisySP/Source/Utility/delayline.h ****     {
  32:../../DaisySP/Source/Utility/delayline.h ****         for(size_t i = 0; i < max_size; i++)
  33:../../DaisySP/Source/Utility/delayline.h ****         {
  34:../../DaisySP/Source/Utility/delayline.h ****             line_[i] = T(0);
  35:../../DaisySP/Source/Utility/delayline.h ****         }
  36:../../DaisySP/Source/Utility/delayline.h ****         write_ptr_ = 0;
  37:../../DaisySP/Source/Utility/delayline.h ****         delay_     = 1;
  38:../../DaisySP/Source/Utility/delayline.h ****     }
  39:../../DaisySP/Source/Utility/delayline.h **** 
  40:../../DaisySP/Source/Utility/delayline.h ****     /** sets the delay time in samples
  41:../../DaisySP/Source/Utility/delayline.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  42:../../DaisySP/Source/Utility/delayline.h ****     */
  43:../../DaisySP/Source/Utility/delayline.h ****     inline void SetDelay(size_t delay)
  44:../../DaisySP/Source/Utility/delayline.h ****     {
  45:../../DaisySP/Source/Utility/delayline.h ****         frac_  = 0.0f;
  46:../../DaisySP/Source/Utility/delayline.h ****         delay_ = delay < max_size ? delay : max_size - 1;
  47:../../DaisySP/Source/Utility/delayline.h ****     }
  48:../../DaisySP/Source/Utility/delayline.h **** 
  49:../../DaisySP/Source/Utility/delayline.h ****     /** sets the delay time in samples
  50:../../DaisySP/Source/Utility/delayline.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  51:../../DaisySP/Source/Utility/delayline.h ****     */
  52:../../DaisySP/Source/Utility/delayline.h ****     inline void SetDelay(float delay)
 7165              		.loc 29 52 17
 7166              		.cfi_startproc
 7167              		@ args = 0, pretend = 0, frame = 16
 7168              		@ frame_needed = 1, uses_anonymous_args = 0
 7169              		@ link register save eliminated.
 7170 0000 80B4     		push	{r7}
 7171              		.cfi_def_cfa_offset 4
 7172              		.cfi_offset 7, -4
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 288


 7173 0002 85B0     		sub	sp, sp, #20
 7174              		.cfi_def_cfa_offset 24
 7175 0004 00AF     		add	r7, sp, #0
 7176              		.cfi_def_cfa_register 7
 7177 0006 7860     		str	r0, [r7, #4]
 7178 0008 87ED000A 		vstr.32	s0, [r7]
  53:../../DaisySP/Source/Utility/delayline.h ****     {
  54:../../DaisySP/Source/Utility/delayline.h ****         int32_t int_delay = static_cast<int32_t>(delay);
 7179              		.loc 29 54 17
 7180 000c D7ED007A 		vldr.32	s15, [r7]
 7181 0010 FDEEE77A 		vcvt.s32.f32	s15, s15
 7182 0014 17EE903A 		vmov	r3, s15	@ int
 7183 0018 FB60     		str	r3, [r7, #12]
  55:../../DaisySP/Source/Utility/delayline.h ****         frac_             = delay - static_cast<float>(int_delay);
 7184              		.loc 29 55 37
 7185 001a FB68     		ldr	r3, [r7, #12]
 7186 001c 07EE903A 		vmov	s15, r3	@ int
 7187 0020 F8EEE77A 		vcvt.f32.s32	s15, s15
 7188              		.loc 29 55 35
 7189 0024 97ED007A 		vldr.32	s14, [r7]
 7190 0028 77EE677A 		vsub.f32	s15, s14, s15
 7191              		.loc 29 55 27
 7192 002c 7B68     		ldr	r3, [r7, #4]
 7193 002e C3ED007A 		vstr.32	s15, [r3]
  56:../../DaisySP/Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 7194              		.loc 29 56 18
 7195 0032 FB68     		ldr	r3, [r7, #12]
 7196              		.loc 29 56 60
 7197 0034 054A     		ldr	r2, .L299
 7198 0036 9A42     		cmp	r2, r3
 7199 0038 28BF     		it	cs
 7200 003a 1A46     		movcs	r2, r3
 7201              		.loc 29 56 16
 7202 003c 7B68     		ldr	r3, [r7, #4]
 7203 003e 9A60     		str	r2, [r3, #8]
  57:../../DaisySP/Source/Utility/delayline.h ****                                                            : max_size - 1;
  58:../../DaisySP/Source/Utility/delayline.h ****     }
 7204              		.loc 29 58 5
 7205 0040 00BF     		nop
 7206 0042 1437     		adds	r7, r7, #20
 7207              		.cfi_def_cfa_offset 4
 7208 0044 BD46     		mov	sp, r7
 7209              		.cfi_def_cfa_register 13
 7210              		@ sp needed
 7211 0046 5DF8047B 		ldr	r7, [sp], #4
 7212              		.cfi_restore 7
 7213              		.cfi_def_cfa_offset 0
 7214 004a 7047     		bx	lr
 7215              	.L300:
 7216              		.align	2
 7217              	.L299:
 7218 004c FF760100 		.word	95999
 7219              		.cfi_endproc
 7220              	.LFE5441:
 7222              		.section	.text._ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj429496729
 7223              		.align	1
 7224              		.weak	_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 289


 7225              		.syntax unified
 7226              		.thumb
 7227              		.thumb_func
 7228              		.fpu fpv5-d16
 7230              	_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj26369286
 7231              	.LFB5443:
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { seed(__sd); }
 7232              		.loc 18 521 7
 7233              		.cfi_startproc
 7234              		@ args = 0, pretend = 0, frame = 8
 7235              		@ frame_needed = 1, uses_anonymous_args = 0
 7236 0000 80B5     		push	{r7, lr}
 7237              		.cfi_def_cfa_offset 8
 7238              		.cfi_offset 7, -8
 7239              		.cfi_offset 14, -4
 7240 0002 82B0     		sub	sp, sp, #8
 7241              		.cfi_def_cfa_offset 16
 7242 0004 00AF     		add	r7, sp, #0
 7243              		.cfi_def_cfa_register 7
 7244 0006 7860     		str	r0, [r7, #4]
 7245 0008 3960     		str	r1, [r7]
 7246              	.LBB54:
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 7247              		.loc 18 522 13
 7248 000a 3968     		ldr	r1, [r7]
 7249 000c 7868     		ldr	r0, [r7, #4]
 7250 000e FFF7FEFF 		bl	_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636
 7251              	.LBE54:
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 7252              		.loc 18 522 21
 7253 0012 7B68     		ldr	r3, [r7, #4]
 7254 0014 1846     		mov	r0, r3
 7255 0016 0837     		adds	r7, r7, #8
 7256              		.cfi_def_cfa_offset 8
 7257 0018 BD46     		mov	sp, r7
 7258              		.cfi_def_cfa_register 13
 7259              		@ sp needed
 7260 001a 80BD     		pop	{r7, pc}
 7261              		.cfi_endproc
 7262              	.LFE5443:
 7264              		.weak	_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2
 7265              		.thumb_set _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj
 7266              		.section	.text._ZNSt25uniform_real_distributionIfEC2Eff,"axG",%progbits,_ZNSt25uniform_real_distri
 7267              		.align	1
 7268              		.weak	_ZNSt25uniform_real_distributionIfEC2Eff
 7269              		.syntax unified
 7270              		.thumb
 7271              		.thumb_func
 7272              		.fpu fpv5-d16
 7274              	_ZNSt25uniform_real_distributionIfEC2Eff:
 7275              	.LFB5446:
1638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     // No copy functions.
1640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     random_device(const random_device&) = delete;
1641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     void operator=(const random_device&) = delete;
1642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   private:
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 290


1644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     void _M_init(const std::string& __token);
1646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     void _M_init_pretr1(const std::string& __token);
1647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     void _M_fini();
1648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     result_type _M_getval();
1650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     result_type _M_getval_pretr1();
1651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     double _M_getentropy() const noexcept;
1652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     void _M_init(const char*, size_t); // not exported from the shared library
1654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     union
1656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
1657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct
1658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
1659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	void*      _M_file;
1660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	result_type (*_M_func)(void*);
1661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	int _M_fd;
1662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       };
1663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       mt19937    _M_mt;
1664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     };
1665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   };
1666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /* @} */ // group random_generators
1668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @addtogroup random_distributions Random Number Distributions
1671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @ingroup random
1672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @{
1673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @addtogroup random_distributions_uniform Uniform Distributions
1677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @ingroup random_distributions
1678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @{
1679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   // std::uniform_int_distribution is defined in <bits/uniform_int_dist.h>
1682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Return true if two uniform integer distributions have
1685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *        different parameters.
1686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _IntType>
1688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     inline bool
1689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator!=(const std::uniform_int_distribution<_IntType>& __d1,
1690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::uniform_int_distribution<_IntType>& __d2)
1691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     { return !(__d1 == __d2); }
1692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Inserts a %uniform_int_distribution random number
1695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *        distribution @p __x into the output stream @p os.
1696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __os An output stream.
1698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __x  A %uniform_int_distribution random number distribution.
1699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns The output stream with the state of @p __x inserted or in
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 291


1701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * an error state.
1702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _IntType, typename _CharT, typename _Traits>
1704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     std::basic_ostream<_CharT, _Traits>&
1705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator<<(std::basic_ostream<_CharT, _Traits>&,
1706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       const std::uniform_int_distribution<_IntType>&);
1707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Extracts a %uniform_int_distribution random number distribution
1710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @p __x from the input stream @p __is.
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __is An input stream.
1713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @param __x  A %uniform_int_distribution random number generator engine.
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @returns The input stream with @p __x extracted or in an error state.
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _IntType, typename _CharT, typename _Traits>
1718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     std::basic_istream<_CharT, _Traits>&
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     operator>>(std::basic_istream<_CharT, _Traits>&,
1720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	       std::uniform_int_distribution<_IntType>&);
1721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   /**
1724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * @brief Uniform continuous distribution for random numbers.
1725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    *
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * A continuous random distribution on the range [min, max) with equal
1727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * probability throughout the range.  The URNG should be real-valued and
1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    * deliver number in the range [0, 1).
1729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****    */
1730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****   template<typename _RealType = double>
1731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     class uniform_real_distribution
1732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     {
1733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       static_assert(std::is_floating_point<_RealType>::value,
1734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		    "result_type must be a floating point type");
1735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
1737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** The type of the range of the distribution. */
1738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       typedef _RealType result_type;
1739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /** Parameter type. */
1741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       struct param_type
1742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       {
1743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	typedef uniform_real_distribution<_RealType> distribution_type;
1744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	param_type() : param_type(0) { }
1746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	explicit
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	param_type(_RealType __a, _RealType __b = _RealType(1))
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_a(__a), _M_b(__b)
1750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
1751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  __glibcxx_assert(_M_a <= _M_b);
1752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	}
1753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	result_type
1755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	a() const
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ return _M_a; }
1757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 292


1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	result_type
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	b() const
1760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ return _M_b; }
1761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend bool
1763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator==(const param_type& __p1, const param_type& __p2)
1764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ return __p1._M_a == __p2._M_a && __p1._M_b == __p2._M_b; }
1765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	friend bool
1767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator!=(const param_type& __p1, const param_type& __p2)
1768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ return !(__p1 == __p2); }
1769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       private:
1771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_RealType _M_a;
1772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	_RealType _M_b;
1773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       };
1774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****     public:
1776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a uniform_real_distribution object.
1778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * The lower bound is set to 0.0 and the upper bound to 1.0
1780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       uniform_real_distribution() : uniform_real_distribution(0.0) { }
1782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Constructs a uniform_real_distribution object.
1785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __a [IN]  The lower bound of the distribution.
1787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __b [IN]  The upper bound of the distribution.
1788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
1790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       uniform_real_distribution(_RealType __a, _RealType __b = _RealType(1))
 7276              		.loc 18 1790 7
 7277              		.cfi_startproc
 7278              		@ args = 0, pretend = 0, frame = 16
 7279              		@ frame_needed = 1, uses_anonymous_args = 0
 7280 0000 80B5     		push	{r7, lr}
 7281              		.cfi_def_cfa_offset 8
 7282              		.cfi_offset 7, -8
 7283              		.cfi_offset 14, -4
 7284 0002 84B0     		sub	sp, sp, #16
 7285              		.cfi_def_cfa_offset 24
 7286 0004 00AF     		add	r7, sp, #0
 7287              		.cfi_def_cfa_register 7
 7288 0006 F860     		str	r0, [r7, #12]
 7289 0008 87ED020A 		vstr.32	s0, [r7, #8]
 7290 000c C7ED010A 		vstr.32	s1, [r7, #4]
 7291              	.LBB55:
1791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_param(__a, __b)
 7292              		.loc 18 1791 26
 7293 0010 FB68     		ldr	r3, [r7, #12]
 7294 0012 D7ED010A 		vldr.32	s1, [r7, #4]
 7295 0016 97ED020A 		vldr.32	s0, [r7, #8]
 7296 001a 1846     		mov	r0, r3
 7297 001c FFF7FEFF 		bl	_ZNSt25uniform_real_distributionIfE10param_typeC1Eff
 7298              	.LBE55:
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 293


1792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { }
 7299              		.loc 18 1792 9
 7300 0020 FB68     		ldr	r3, [r7, #12]
 7301 0022 1846     		mov	r0, r3
 7302 0024 1037     		adds	r7, r7, #16
 7303              		.cfi_def_cfa_offset 8
 7304 0026 BD46     		mov	sp, r7
 7305              		.cfi_def_cfa_register 13
 7306              		@ sp needed
 7307 0028 80BD     		pop	{r7, pc}
 7308              		.cfi_endproc
 7309              	.LFE5446:
 7311              		.weak	_ZNSt25uniform_real_distributionIfEC1Eff
 7312              		.thumb_set _ZNSt25uniform_real_distributionIfEC1Eff,_ZNSt25uniform_real_distributionIfEC2Eff
 7313              		.section	.text._ZNSt25uniform_real_distributionIfEclISt23mersenne_twister_engineIjLj32ELj624ELj397
 7314              		.align	1
 7315              		.weak	_ZNSt25uniform_real_distributionIfEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2
 7316              		.syntax unified
 7317              		.thumb
 7318              		.thumb_func
 7319              		.fpu fpv5-d16
 7321              	_ZNSt25uniform_real_distributionIfEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj25674836
 7322              	.LFB5448:
1793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       explicit
1795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       uniform_real_distribution(const param_type& __p)
1796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       : _M_param(__p)
1797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { }
1798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Resets the distribution state.
1801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        *
1802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * Does nothing for the uniform real distribution.
1803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
1805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       reset() { }
1806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
1808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       a() const
1809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _M_param.a(); }
1810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
1812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       b() const
1813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _M_param.b(); }
1814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Returns the parameter set of the distribution.
1817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       param_type
1819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       param() const
1820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _M_param; }
1821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Sets the parameter set of the distribution.
1824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @param __param The new parameter set of the distribution.
1825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       void
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 294


1827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       param(const param_type& __param)
1828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { _M_param = __param; }
1829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Returns the inclusive lower bound of the distribution range.
1832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
1834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       min() const
1835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return this->a(); }
1836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Returns the inclusive upper bound of the distribution range.
1839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       result_type
1841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       max() const
1842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return this->b(); }
1843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       /**
1845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        * @brief Generating functions.
1846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****        */
1847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _UniformRandomNumberGenerator>
1848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	result_type
1849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator()(_UniformRandomNumberGenerator& __urng)
 7323              		.loc 18 1849 2
 7324              		.cfi_startproc
 7325              		@ args = 0, pretend = 0, frame = 8
 7326              		@ frame_needed = 1, uses_anonymous_args = 0
 7327 0000 80B5     		push	{r7, lr}
 7328              		.cfi_def_cfa_offset 8
 7329              		.cfi_offset 7, -8
 7330              		.cfi_offset 14, -4
 7331 0002 82B0     		sub	sp, sp, #8
 7332              		.cfi_def_cfa_offset 16
 7333 0004 00AF     		add	r7, sp, #0
 7334              		.cfi_def_cfa_register 7
 7335 0006 7860     		str	r0, [r7, #4]
 7336 0008 3960     		str	r1, [r7]
1850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****         { return this->operator()(__urng, _M_param); }
 7337              		.loc 18 1850 43
 7338 000a 7B68     		ldr	r3, [r7, #4]
 7339              		.loc 18 1850 34
 7340 000c 1A46     		mov	r2, r3
 7341 000e 3968     		ldr	r1, [r7]
 7342 0010 7868     		ldr	r0, [r7, #4]
 7343 0012 FFF7FEFF 		bl	_ZNSt25uniform_real_distributionIfEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567
 7344 0016 F0EE407A 		vmov.f32	s15, s0
 7345              		.loc 18 1850 54
 7346 001a B0EE670A 		vmov.f32	s0, s15
 7347 001e 0837     		adds	r7, r7, #8
 7348              		.cfi_def_cfa_offset 8
 7349 0020 BD46     		mov	sp, r7
 7350              		.cfi_def_cfa_register 13
 7351              		@ sp needed
 7352 0022 80BD     		pop	{r7, pc}
 7353              		.cfi_endproc
 7354              	.LFE5448:
 7356              		.section	.text._ZNK7daisysp9DelayLineIfLj96000EE4ReadEv,"axG",%progbits,_ZNK7daisysp9DelayLineIfLj
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 295


 7357              		.align	1
 7358              		.weak	_ZNK7daisysp9DelayLineIfLj96000EE4ReadEv
 7359              		.syntax unified
 7360              		.thumb
 7361              		.thumb_func
 7362              		.fpu fpv5-d16
 7364              	_ZNK7daisysp9DelayLineIfLj96000EE4ReadEv:
 7365              	.LFB5449:
  59:../../DaisySP/Source/Utility/delayline.h **** 
  60:../../DaisySP/Source/Utility/delayline.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  61:../../DaisySP/Source/Utility/delayline.h ****     */
  62:../../DaisySP/Source/Utility/delayline.h ****     inline void Write(const T sample)
  63:../../DaisySP/Source/Utility/delayline.h ****     {
  64:../../DaisySP/Source/Utility/delayline.h ****         line_[write_ptr_] = sample;
  65:../../DaisySP/Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
  66:../../DaisySP/Source/Utility/delayline.h ****     }
  67:../../DaisySP/Source/Utility/delayline.h **** 
  68:../../DaisySP/Source/Utility/delayline.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
  69:../../DaisySP/Source/Utility/delayline.h ****     */
  70:../../DaisySP/Source/Utility/delayline.h ****     inline const T Read() const
 7366              		.loc 29 70 20
 7367              		.cfi_startproc
 7368              		@ args = 0, pretend = 0, frame = 16
 7369              		@ frame_needed = 1, uses_anonymous_args = 0
 7370              		@ link register save eliminated.
 7371 0000 80B4     		push	{r7}
 7372              		.cfi_def_cfa_offset 4
 7373              		.cfi_offset 7, -4
 7374 0002 85B0     		sub	sp, sp, #20
 7375              		.cfi_def_cfa_offset 24
 7376 0004 00AF     		add	r7, sp, #0
 7377              		.cfi_def_cfa_register 7
 7378 0006 7860     		str	r0, [r7, #4]
  71:../../DaisySP/Source/Utility/delayline.h ****     {
  72:../../DaisySP/Source/Utility/delayline.h ****         T a = line_[(write_ptr_ + delay_) % max_size];
 7379              		.loc 29 72 22
 7380 0008 7B68     		ldr	r3, [r7, #4]
 7381 000a 5A68     		ldr	r2, [r3, #4]
 7382              		.loc 29 72 35
 7383 000c 7B68     		ldr	r3, [r7, #4]
 7384 000e 9B68     		ldr	r3, [r3, #8]
 7385              		.loc 29 72 33
 7386 0010 1A44     		add	r2, r2, r3
 7387              		.loc 29 72 43
 7388 0012 1D4B     		ldr	r3, .L309
 7389 0014 A3FB0213 		umull	r1, r3, r3, r2
 7390 0018 DB0A     		lsrs	r3, r3, #11
 7391 001a 1C49     		ldr	r1, .L309+4
 7392 001c 01FB03F3 		mul	r3, r1, r3
 7393 0020 D31A     		subs	r3, r2, r3
 7394              		.loc 29 72 11
 7395 0022 7A68     		ldr	r2, [r7, #4]
 7396 0024 0233     		adds	r3, r3, #2
 7397 0026 9B00     		lsls	r3, r3, #2
 7398 0028 1344     		add	r3, r3, r2
 7399 002a 0433     		adds	r3, r3, #4
 7400 002c 1B68     		ldr	r3, [r3]	@ float
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 296


 7401 002e FB60     		str	r3, [r7, #12]	@ float
  73:../../DaisySP/Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 7402              		.loc 29 73 22
 7403 0030 7B68     		ldr	r3, [r7, #4]
 7404 0032 5A68     		ldr	r2, [r3, #4]
 7405              		.loc 29 73 35
 7406 0034 7B68     		ldr	r3, [r7, #4]
 7407 0036 9B68     		ldr	r3, [r3, #8]
 7408              		.loc 29 73 33
 7409 0038 1344     		add	r3, r3, r2
 7410              		.loc 29 73 42
 7411 003a 5A1C     		adds	r2, r3, #1
 7412              		.loc 29 73 47
 7413 003c 124B     		ldr	r3, .L309
 7414 003e A3FB0213 		umull	r1, r3, r3, r2
 7415 0042 DB0A     		lsrs	r3, r3, #11
 7416 0044 1149     		ldr	r1, .L309+4
 7417 0046 01FB03F3 		mul	r3, r1, r3
 7418 004a D31A     		subs	r3, r2, r3
 7419              		.loc 29 73 11
 7420 004c 7A68     		ldr	r2, [r7, #4]
 7421 004e 0233     		adds	r3, r3, #2
 7422 0050 9B00     		lsls	r3, r3, #2
 7423 0052 1344     		add	r3, r3, r2
 7424 0054 0433     		adds	r3, r3, #4
 7425 0056 1B68     		ldr	r3, [r3]	@ float
 7426 0058 BB60     		str	r3, [r7, #8]	@ float
  74:../../DaisySP/Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 7427              		.loc 29 74 23
 7428 005a 97ED027A 		vldr.32	s14, [r7, #8]
 7429 005e D7ED037A 		vldr.32	s15, [r7, #12]
 7430 0062 37EE677A 		vsub.f32	s14, s14, s15
 7431              		.loc 29 74 30
 7432 0066 7B68     		ldr	r3, [r7, #4]
 7433 0068 D3ED007A 		vldr.32	s15, [r3]
 7434              		.loc 29 74 28
 7435 006c 27EE277A 		vmul.f32	s14, s14, s15
 7436              		.loc 29 74 30
 7437 0070 D7ED037A 		vldr.32	s15, [r7, #12]
 7438 0074 77EE277A 		vadd.f32	s15, s14, s15
  75:../../DaisySP/Source/Utility/delayline.h ****     }
 7439              		.loc 29 75 5
 7440 0078 B0EE670A 		vmov.f32	s0, s15
 7441 007c 1437     		adds	r7, r7, #20
 7442              		.cfi_def_cfa_offset 4
 7443 007e BD46     		mov	sp, r7
 7444              		.cfi_def_cfa_register 13
 7445              		@ sp needed
 7446 0080 5DF8047B 		ldr	r7, [sp], #4
 7447              		.cfi_restore 7
 7448              		.cfi_def_cfa_offset 0
 7449 0084 7047     		bx	lr
 7450              	.L310:
 7451 0086 00BF     		.align	2
 7452              	.L309:
 7453 0088 F1197605 		.word	91625969
 7454 008c 00770100 		.word	96000
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 297


 7455              		.cfi_endproc
 7456              	.LFE5449:
 7458              		.section	.text._ZN7daisysp9DelayLineIfLj96000EE5WriteEf,"axG",%progbits,_ZN7daisysp9DelayLineIfLj9
 7459              		.align	1
 7460              		.weak	_ZN7daisysp9DelayLineIfLj96000EE5WriteEf
 7461              		.syntax unified
 7462              		.thumb
 7463              		.thumb_func
 7464              		.fpu fpv5-d16
 7466              	_ZN7daisysp9DelayLineIfLj96000EE5WriteEf:
 7467              	.LFB5450:
  62:../../DaisySP/Source/Utility/delayline.h ****     {
 7468              		.loc 29 62 17
 7469              		.cfi_startproc
 7470              		@ args = 0, pretend = 0, frame = 8
 7471              		@ frame_needed = 1, uses_anonymous_args = 0
 7472              		@ link register save eliminated.
 7473 0000 80B4     		push	{r7}
 7474              		.cfi_def_cfa_offset 4
 7475              		.cfi_offset 7, -4
 7476 0002 83B0     		sub	sp, sp, #12
 7477              		.cfi_def_cfa_offset 16
 7478 0004 00AF     		add	r7, sp, #0
 7479              		.cfi_def_cfa_register 7
 7480 0006 7860     		str	r0, [r7, #4]
 7481 0008 87ED000A 		vstr.32	s0, [r7]
  64:../../DaisySP/Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 7482              		.loc 29 64 15
 7483 000c 7B68     		ldr	r3, [r7, #4]
 7484 000e 5B68     		ldr	r3, [r3, #4]
  64:../../DaisySP/Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 7485              		.loc 29 64 27
 7486 0010 7A68     		ldr	r2, [r7, #4]
 7487 0012 0233     		adds	r3, r3, #2
 7488 0014 9B00     		lsls	r3, r3, #2
 7489 0016 1344     		add	r3, r3, r2
 7490 0018 0433     		adds	r3, r3, #4
 7491 001a 3A68     		ldr	r2, [r7]	@ float
 7492 001c 1A60     		str	r2, [r3]	@ float
  65:../../DaisySP/Source/Utility/delayline.h ****     }
 7493              		.loc 29 65 30
 7494 001e 7B68     		ldr	r3, [r7, #4]
 7495 0020 5A68     		ldr	r2, [r3, #4]
  65:../../DaisySP/Source/Utility/delayline.h ****     }
 7496              		.loc 29 65 45
 7497 0022 094B     		ldr	r3, .L312
 7498 0024 1344     		add	r3, r3, r2
  65:../../DaisySP/Source/Utility/delayline.h ****     }
 7499              		.loc 29 65 57
 7500 0026 094A     		ldr	r2, .L312+4
 7501 0028 A2FB0312 		umull	r1, r2, r2, r3
 7502 002c D20A     		lsrs	r2, r2, #11
 7503 002e 0849     		ldr	r1, .L312+8
 7504 0030 01FB02F2 		mul	r2, r1, r2
 7505 0034 9A1A     		subs	r2, r3, r2
  65:../../DaisySP/Source/Utility/delayline.h ****     }
 7506              		.loc 29 65 27
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 298


 7507 0036 7B68     		ldr	r3, [r7, #4]
 7508 0038 5A60     		str	r2, [r3, #4]
  66:../../DaisySP/Source/Utility/delayline.h **** 
 7509              		.loc 29 66 5
 7510 003a 00BF     		nop
 7511 003c 0C37     		adds	r7, r7, #12
 7512              		.cfi_def_cfa_offset 4
 7513 003e BD46     		mov	sp, r7
 7514              		.cfi_def_cfa_register 13
 7515              		@ sp needed
 7516 0040 5DF8047B 		ldr	r7, [sp], #4
 7517              		.cfi_restore 7
 7518              		.cfi_def_cfa_offset 0
 7519 0044 7047     		bx	lr
 7520              	.L313:
 7521 0046 00BF     		.align	2
 7522              	.L312:
 7523 0048 FF760100 		.word	95999
 7524 004c F1197605 		.word	91625969
 7525 0050 00770100 		.word	96000
 7526              		.cfi_endproc
 7527              	.LFE5450:
 7529              		.section	.text._ZNSaImEC2Ev,"axG",%progbits,_ZNSaImEC5Ev,comdat
 7530              		.align	1
 7531              		.weak	_ZNSaImEC2Ev
 7532              		.syntax unified
 7533              		.thumb
 7534              		.thumb_func
 7535              		.fpu fpv5-d16
 7537              	_ZNSaImEC2Ev:
 7538              	.LFB5565:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 7539              		.loc 28 144 7
 7540              		.cfi_startproc
 7541              		@ args = 0, pretend = 0, frame = 8
 7542              		@ frame_needed = 1, uses_anonymous_args = 0
 7543 0000 80B5     		push	{r7, lr}
 7544              		.cfi_def_cfa_offset 8
 7545              		.cfi_offset 7, -8
 7546              		.cfi_offset 14, -4
 7547 0002 82B0     		sub	sp, sp, #8
 7548              		.cfi_def_cfa_offset 16
 7549 0004 00AF     		add	r7, sp, #0
 7550              		.cfi_def_cfa_register 7
 7551 0006 7860     		str	r0, [r7, #4]
 7552              	.LBB56:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 7553              		.loc 28 144 36
 7554 0008 7868     		ldr	r0, [r7, #4]
 7555 000a FFF7FEFF 		bl	_ZN9__gnu_cxx13new_allocatorImEC2Ev
 7556              	.LBE56:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 7557              		.loc 28 144 38
 7558 000e 7B68     		ldr	r3, [r7, #4]
 7559 0010 1846     		mov	r0, r3
 7560 0012 0837     		adds	r7, r7, #8
 7561              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 299


 7562 0014 BD46     		mov	sp, r7
 7563              		.cfi_def_cfa_register 13
 7564              		@ sp needed
 7565 0016 80BD     		pop	{r7, pc}
 7566              		.cfi_endproc
 7567              	.LFE5565:
 7569              		.weak	_ZNSaImEC1Ev
 7570              		.thumb_set _ZNSaImEC1Ev,_ZNSaImEC2Ev
 7571              		.section	.text._ZN9__gnu_cxx13new_allocatorImED2Ev,"axG",%progbits,_ZN9__gnu_cxx13new_allocatorImE
 7572              		.align	1
 7573              		.weak	_ZN9__gnu_cxx13new_allocatorImED2Ev
 7574              		.syntax unified
 7575              		.thumb
 7576              		.thumb_func
 7577              		.fpu fpv5-d16
 7579              	_ZN9__gnu_cxx13new_allocatorImED2Ev:
 7580              	.LFB5571:
 7581              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\new_allocat
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** /** @file ext/new_allocator.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  */
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/c++config.h>
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <new>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/functexcept.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/move.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <type_traits>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 300


  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** {
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   /**
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @ingroup allocators
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all allocation calls operator new
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all deallocation calls operator delete
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    */
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   template<typename _Tp>
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     class new_allocator
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     {
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     public:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp        value_type;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::size_t     size_type;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp*       pointer;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp* const_pointer;
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp&       reference;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp& const_reference;
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	struct rebind
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 7582              		.loc 30 89 7
 7583              		.cfi_startproc
 7584              		@ args = 0, pretend = 0, frame = 8
 7585              		@ frame_needed = 1, uses_anonymous_args = 0
 7586              		@ link register save eliminated.
 7587 0000 80B4     		push	{r7}
 7588              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 301


 7589              		.cfi_offset 7, -4
 7590 0002 83B0     		sub	sp, sp, #12
 7591              		.cfi_def_cfa_offset 16
 7592 0004 00AF     		add	r7, sp, #0
 7593              		.cfi_def_cfa_register 7
 7594 0006 7860     		str	r0, [r7, #4]
 7595              		.loc 30 89 48
 7596 0008 7B68     		ldr	r3, [r7, #4]
 7597 000a 1846     		mov	r0, r3
 7598 000c 0C37     		adds	r7, r7, #12
 7599              		.cfi_def_cfa_offset 4
 7600 000e BD46     		mov	sp, r7
 7601              		.cfi_def_cfa_register 13
 7602              		@ sp needed
 7603 0010 5DF8047B 		ldr	r7, [sp], #4
 7604              		.cfi_restore 7
 7605              		.cfi_def_cfa_offset 0
 7606 0014 7047     		bx	lr
 7607              		.cfi_endproc
 7608              	.LFE5571:
 7610              		.weak	_ZN9__gnu_cxx13new_allocatorImED1Ev
 7611              		.thumb_set _ZN9__gnu_cxx13new_allocatorImED1Ev,_ZN9__gnu_cxx13new_allocatorImED2Ev
 7612              		.section	.text._ZNSaIdEC2Ev,"axG",%progbits,_ZNSaIdEC5Ev,comdat
 7613              		.align	1
 7614              		.weak	_ZNSaIdEC2Ev
 7615              		.syntax unified
 7616              		.thumb
 7617              		.thumb_func
 7618              		.fpu fpv5-d16
 7620              	_ZNSaIdEC2Ev:
 7621              	.LFB5579:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 7622              		.loc 28 144 7
 7623              		.cfi_startproc
 7624              		@ args = 0, pretend = 0, frame = 8
 7625              		@ frame_needed = 1, uses_anonymous_args = 0
 7626 0000 80B5     		push	{r7, lr}
 7627              		.cfi_def_cfa_offset 8
 7628              		.cfi_offset 7, -8
 7629              		.cfi_offset 14, -4
 7630 0002 82B0     		sub	sp, sp, #8
 7631              		.cfi_def_cfa_offset 16
 7632 0004 00AF     		add	r7, sp, #0
 7633              		.cfi_def_cfa_register 7
 7634 0006 7860     		str	r0, [r7, #4]
 7635              	.LBB57:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 7636              		.loc 28 144 36
 7637 0008 7868     		ldr	r0, [r7, #4]
 7638 000a FFF7FEFF 		bl	_ZN9__gnu_cxx13new_allocatorIdEC2Ev
 7639              	.LBE57:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 7640              		.loc 28 144 38
 7641 000e 7B68     		ldr	r3, [r7, #4]
 7642 0010 1846     		mov	r0, r3
 7643 0012 0837     		adds	r7, r7, #8
 7644              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 302


 7645 0014 BD46     		mov	sp, r7
 7646              		.cfi_def_cfa_register 13
 7647              		@ sp needed
 7648 0016 80BD     		pop	{r7, pc}
 7649              		.cfi_endproc
 7650              	.LFE5579:
 7652              		.weak	_ZNSaIdEC1Ev
 7653              		.thumb_set _ZNSaIdEC1Ev,_ZNSaIdEC2Ev
 7654              		.section	.text._ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev,"axG",%progbits,_ZNSt12_Vector_b
 7655              		.align	1
 7656              		.weak	_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev
 7657              		.syntax unified
 7658              		.thumb
 7659              		.thumb_func
 7660              		.fpu fpv5-d16
 7662              	_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev:
 7663              	.LFB5582:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 7664              		.loc 23 97 2
 7665              		.cfi_startproc
 7666              		@ args = 0, pretend = 0, frame = 8
 7667              		@ frame_needed = 1, uses_anonymous_args = 0
 7668              		@ link register save eliminated.
 7669 0000 80B4     		push	{r7}
 7670              		.cfi_def_cfa_offset 4
 7671              		.cfi_offset 7, -4
 7672 0002 83B0     		sub	sp, sp, #12
 7673              		.cfi_def_cfa_offset 16
 7674 0004 00AF     		add	r7, sp, #0
 7675              		.cfi_def_cfa_register 7
 7676 0006 7860     		str	r0, [r7, #4]
 7677              	.LBB58:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 7678              		.loc 23 98 47
 7679 0008 7B68     		ldr	r3, [r7, #4]
 7680 000a 0022     		movs	r2, #0
 7681 000c 1A60     		str	r2, [r3]
 7682 000e 7B68     		ldr	r3, [r7, #4]
 7683 0010 0022     		movs	r2, #0
 7684 0012 5A60     		str	r2, [r3, #4]
 7685 0014 7B68     		ldr	r3, [r7, #4]
 7686 0016 0022     		movs	r2, #0
 7687 0018 9A60     		str	r2, [r3, #8]
 7688              	.LBE58:
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 7689              		.loc 23 99 4
 7690 001a 7B68     		ldr	r3, [r7, #4]
 7691 001c 1846     		mov	r0, r3
 7692 001e 0C37     		adds	r7, r7, #12
 7693              		.cfi_def_cfa_offset 4
 7694 0020 BD46     		mov	sp, r7
 7695              		.cfi_def_cfa_register 13
 7696              		@ sp needed
 7697 0022 5DF8047B 		ldr	r7, [sp], #4
 7698              		.cfi_restore 7
 7699              		.cfi_def_cfa_offset 0
 7700 0026 7047     		bx	lr
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 303


 7701              		.cfi_endproc
 7702              	.LFE5582:
 7704              		.weak	_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC1Ev
 7705              		.thumb_set _ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC1Ev,_ZNSt12_Vector_baseIdSaIdEE17_Vector
 7706              		.section	.text._ZN9__gnu_cxx13new_allocatorIdED2Ev,"axG",%progbits,_ZN9__gnu_cxx13new_allocatorIdE
 7707              		.align	1
 7708              		.weak	_ZN9__gnu_cxx13new_allocatorIdED2Ev
 7709              		.syntax unified
 7710              		.thumb
 7711              		.thumb_func
 7712              		.fpu fpv5-d16
 7714              	_ZN9__gnu_cxx13new_allocatorIdED2Ev:
 7715              	.LFB5585:
 7716              		.loc 30 89 7
 7717              		.cfi_startproc
 7718              		@ args = 0, pretend = 0, frame = 8
 7719              		@ frame_needed = 1, uses_anonymous_args = 0
 7720              		@ link register save eliminated.
 7721 0000 80B4     		push	{r7}
 7722              		.cfi_def_cfa_offset 4
 7723              		.cfi_offset 7, -4
 7724 0002 83B0     		sub	sp, sp, #12
 7725              		.cfi_def_cfa_offset 16
 7726 0004 00AF     		add	r7, sp, #0
 7727              		.cfi_def_cfa_register 7
 7728 0006 7860     		str	r0, [r7, #4]
 7729              		.loc 30 89 48
 7730 0008 7B68     		ldr	r3, [r7, #4]
 7731 000a 1846     		mov	r0, r3
 7732 000c 0C37     		adds	r7, r7, #12
 7733              		.cfi_def_cfa_offset 4
 7734 000e BD46     		mov	sp, r7
 7735              		.cfi_def_cfa_register 13
 7736              		@ sp needed
 7737 0010 5DF8047B 		ldr	r7, [sp], #4
 7738              		.cfi_restore 7
 7739              		.cfi_def_cfa_offset 0
 7740 0014 7047     		bx	lr
 7741              		.cfi_endproc
 7742              	.LFE5585:
 7744              		.weak	_ZN9__gnu_cxx13new_allocatorIdED1Ev
 7745              		.thumb_set _ZN9__gnu_cxx13new_allocatorIdED1Ev,_ZN9__gnu_cxx13new_allocatorIdED2Ev
 7746              		.section	.text._ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdj,"axG",%progbits,_ZNSt12_Vector_baseI
 7747              		.align	1
 7748              		.weak	_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdj
 7749              		.syntax unified
 7750              		.thumb
 7751              		.thumb_func
 7752              		.fpu fpv5-d16
 7754              	_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdj:
 7755              	.LFB5587:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7756              		.loc 23 350 7
 7757              		.cfi_startproc
 7758              		@ args = 0, pretend = 0, frame = 16
 7759              		@ frame_needed = 1, uses_anonymous_args = 0
 7760 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 304


 7761              		.cfi_def_cfa_offset 8
 7762              		.cfi_offset 7, -8
 7763              		.cfi_offset 14, -4
 7764 0002 84B0     		sub	sp, sp, #16
 7765              		.cfi_def_cfa_offset 24
 7766 0004 00AF     		add	r7, sp, #0
 7767              		.cfi_def_cfa_register 7
 7768 0006 F860     		str	r0, [r7, #12]
 7769 0008 B960     		str	r1, [r7, #8]
 7770 000a 7A60     		str	r2, [r7, #4]
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 7771              		.loc 23 353 2
 7772 000c BB68     		ldr	r3, [r7, #8]
 7773 000e 002B     		cmp	r3, #0
 7774 0010 05D0     		beq	.L326
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 7775              		.loc 23 354 20
 7776 0012 FB68     		ldr	r3, [r7, #12]
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 7777              		.loc 23 354 19
 7778 0014 7A68     		ldr	r2, [r7, #4]
 7779 0016 B968     		ldr	r1, [r7, #8]
 7780 0018 1846     		mov	r0, r3
 7781 001a FFF7FEFF 		bl	_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdj
 7782              	.L326:
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 7783              		.loc 23 355 7
 7784 001e 00BF     		nop
 7785 0020 1037     		adds	r7, r7, #16
 7786              		.cfi_def_cfa_offset 8
 7787 0022 BD46     		mov	sp, r7
 7788              		.cfi_def_cfa_register 13
 7789              		@ sp needed
 7790 0024 80BD     		pop	{r7, pc}
 7791              		.cfi_endproc
 7792              	.LFE5587:
 7794              		.section	.text._ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv,"axG",%progbits,_ZNSt12_Vector_b
 7795              		.align	1
 7796              		.weak	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
 7797              		.syntax unified
 7798              		.thumb
 7799              		.thumb_func
 7800              		.fpu fpv5-d16
 7802              	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv:
 7803              	.LFB5588:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 7804              		.loc 23 276 7
 7805              		.cfi_startproc
 7806              		@ args = 0, pretend = 0, frame = 8
 7807              		@ frame_needed = 1, uses_anonymous_args = 0
 7808              		@ link register save eliminated.
 7809 0000 80B4     		push	{r7}
 7810              		.cfi_def_cfa_offset 4
 7811              		.cfi_offset 7, -4
 7812 0002 83B0     		sub	sp, sp, #12
 7813              		.cfi_def_cfa_offset 16
 7814 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 305


 7815              		.cfi_def_cfa_register 7
 7816 0006 7860     		str	r0, [r7, #4]
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 7817              		.loc 23 277 22
 7818 0008 7B68     		ldr	r3, [r7, #4]
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 7819              		.loc 23 277 31
 7820 000a 1846     		mov	r0, r3
 7821 000c 0C37     		adds	r7, r7, #12
 7822              		.cfi_def_cfa_offset 4
 7823 000e BD46     		mov	sp, r7
 7824              		.cfi_def_cfa_register 13
 7825              		@ sp needed
 7826 0010 5DF8047B 		ldr	r7, [sp], #4
 7827              		.cfi_restore 7
 7828              		.cfi_def_cfa_offset 0
 7829 0014 7047     		bx	lr
 7830              		.cfi_endproc
 7831              	.LFE5588:
 7833              		.section	.text._ZSt8_DestroyIPddEvT_S1_RSaIT0_E,"axG",%progbits,_ZSt8_DestroyIPddEvT_S1_RSaIT0_E,c
 7834              		.align	1
 7835              		.weak	_ZSt8_DestroyIPddEvT_S1_RSaIT0_E
 7836              		.syntax unified
 7837              		.thumb
 7838              		.thumb_func
 7839              		.fpu fpv5-d16
 7841              	_ZSt8_DestroyIPddEvT_S1_RSaIT0_E:
 7842              	.LFB5589:
 7843              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\alloc_trai
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** /** @file bits/alloc_traits.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  */
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 306


  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/stl_construct.h>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/memoryfwd.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/allocator.h>
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/ptr_traits.h>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <ext/numeric_traits.h>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** {
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   struct __allocator_traits_base
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   {
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up>
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind<_Tp, _Up,
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   protected:
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   };
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Up>
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using __alloc_rebind
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @ingroup allocators
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   */
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 307


  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef _Alloc allocator_type;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's pointer type.
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = _Func<_Alloc>;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT>
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT>
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const pointer type.
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's void pointer type.
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 308


 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's difference type
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's size type
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 309


 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr pointer
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n); }
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct __construct_helper
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename _Alloc2,
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static true_type __test(int);
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename>
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static false_type __test(...);
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using __has_construct
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR _Require<__has_construct<_Tp, _Args...>>
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Tp, _Args...>::value)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 310


 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR auto
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.destroy(__p); }
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR void
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_destructible<_Tp>::value)
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ std::_Destroy(__p); }
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.max_size())
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.max_size(); }
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr size_type
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    / sizeof(value_type);
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr _Alloc2
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a; }
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 311


 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  arguments @a __args...
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR auto
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 312


 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(_Alloc& __a, _Tp* __p)
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const _Alloc& __a) noexcept
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_max_size(__a, 0); }
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR _Alloc
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_select(__rhs, 0); }
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus > 201703L
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # define __cpp_lib_constexpr_dynamic_alloc 201907L
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /// Partial specialization for std::allocator.
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using value_type = _Tp;
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's pointer type.
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = _Tp*;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const pointer type.
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = const _Tp*;
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's void pointer type.
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = void*;
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const void pointer type.
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = const void*;
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's difference type
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 313


 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's size type
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = std::size_t;
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on move assignment
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on swap
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap = false_type;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal = true_type;
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n, __hint);
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n);
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 314


 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type `_Up`
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *	       an object of type `_Up`.
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls `__a.construct(__p, std::forward<_Args>(__args)...)`
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  in C++11, C++14 and C++17. Changed in C++20 to call
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  `std::construct_at(__p, std::forward<_Args>(__args)...)` instead.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up, typename... _Args>
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.construct(__p, std::forward<_Args>(__args)...);
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.destroy(__p);
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::destroy_at(__p);
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size()
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 315


 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.max_size();
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return size_t(-1) / sizeof(value_type);
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR allocator_type
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __do_alloc_on_copy(_Alloc& __one, const _Alloc& __two, true_type)
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { __one = __two; }
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_copy(_Alloc& __one, const _Alloc& __two)
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_copy_assignment __pocca;
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocca::value)
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__one = __two;
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_copy(__one, __two, __pocca());
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     constexpr _Alloc
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_copy(const _Alloc& __a)
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       return __traits::select_on_container_copy_construction(__a);
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc& __one, _Alloc& __two, true_type)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 316


 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { __one = std::move(__two); }
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc&, _Alloc&, false_type)
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_move(_Alloc& __one, _Alloc& __two)
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_move_assignment __pocma;
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocma::value)
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__one = std::move(__two);
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_move(__one, __two, __pocma());
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc& __one, _Alloc& __two, true_type)
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using std::swap;
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       swap(__one, __two);
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc&, _Alloc&, false_type)
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_swap(_Alloc& __one, _Alloc& __two)
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_swap __pocs;
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocs::value)
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using std::swap;
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  swap(__one, __two);
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_swap(__one, __two, __pocs());
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Tp,
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	   typename _ValueT = __remove_cvref_t<typename _Alloc::value_type>,
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	   typename = void>
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_alloc_insertable_impl
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : false_type
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 317


 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Tp, typename _ValueT>
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_alloc_insertable_impl<_Alloc, _Tp, _ValueT,
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __void_t<decltype(allocator_traits<_Alloc>::construct(
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		   std::declval<_Alloc&>(), std::declval<_ValueT*>(),
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		   std::declval<_Tp>()))>>
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : true_type
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // true if _Alloc::value_type is CopyInsertable into containers using _Alloc
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_copy_insertable
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc,
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				 typename _Alloc::value_type const&>::type
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // std::allocator<_Tp> just requires CopyConstructible
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_copy_insertable<allocator<_Tp>>
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : is_copy_constructible<_Tp>
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // true if _Alloc::value_type is MoveInsertable into containers using _Alloc
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_move_insertable
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc, typename _Alloc::value_type>::type
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // std::allocator<_Tp> just requires MoveConstructible
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_move_insertable<allocator<_Tp>>
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : is_move_constructible<_Tp>
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // Trait to detect Allocator-like types.
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename = void>
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_allocator : false_type { };
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_allocator<_Alloc,
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __void_t<typename _Alloc::value_type,
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	       decltype(std::declval<_Alloc&>().allocate(size_t{}))>>
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : true_type { };
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using _RequireAllocator
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename enable_if<__is_allocator<_Alloc>::value, _Alloc>::type;
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using _RequireNotAllocator
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename enable_if<!__is_allocator<_Alloc>::value, _Alloc>::type;
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif // C++11
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 318


 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * Destroy a range of objects using the supplied allocator.  For
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * non-default allocators we do not optimize away invocation of
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * destroy() even if _Tp has a trivial destructor.
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    */
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _ForwardIterator, typename _Allocator>
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     void
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	     _Allocator& __alloc)
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       for (; __first != __last; ++__first)
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201103L
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__alloc.destroy(std::__addressof(*__first));
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	allocator_traits<_Allocator>::destroy(__alloc,
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 					      std::__addressof(*__first));
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _ForwardIterator, typename _Tp>
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 7844              		.loc 31 735 5
 7845              		.cfi_startproc
 7846              		@ args = 0, pretend = 0, frame = 16
 7847              		@ frame_needed = 1, uses_anonymous_args = 0
 7848 0000 80B5     		push	{r7, lr}
 7849              		.cfi_def_cfa_offset 8
 7850              		.cfi_offset 7, -8
 7851              		.cfi_offset 14, -4
 7852 0002 84B0     		sub	sp, sp, #16
 7853              		.cfi_def_cfa_offset 24
 7854 0004 00AF     		add	r7, sp, #0
 7855              		.cfi_def_cfa_register 7
 7856 0006 F860     		str	r0, [r7, #12]
 7857 0008 B960     		str	r1, [r7, #8]
 7858 000a 7A60     		str	r2, [r7, #4]
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	     allocator<_Tp>&)
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _Destroy(__first, __last);
 7859              		.loc 31 738 15
 7860 000c B968     		ldr	r1, [r7, #8]
 7861 000e F868     		ldr	r0, [r7, #12]
 7862 0010 FFF7FEFF 		bl	_ZSt8_DestroyIPdEvT_S1_
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 7863              		.loc 31 739 5
 7864 0014 00BF     		nop
 7865 0016 1037     		adds	r7, r7, #16
 7866              		.cfi_def_cfa_offset 8
 7867 0018 BD46     		mov	sp, r7
 7868              		.cfi_def_cfa_register 13
 7869              		@ sp needed
 7870 001a 80BD     		pop	{r7, pc}
 7871              		.cfi_endproc
 7872              	.LFE5589:
 7874              		.section	.text._ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev,"axG",%progbits,_ZNSt13_Bvector
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 319


 7875              		.align	1
 7876              		.weak	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev
 7877              		.syntax unified
 7878              		.thumb
 7879              		.thumb_func
 7880              		.fpu fpv5-d16
 7882              	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev:
 7883              	.LFB5591:
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 7884              		.loc 6 467 2
 7885              		.cfi_startproc
 7886              		@ args = 0, pretend = 0, frame = 8
 7887              		@ frame_needed = 1, uses_anonymous_args = 0
 7888 0000 80B5     		push	{r7, lr}
 7889              		.cfi_def_cfa_offset 8
 7890              		.cfi_offset 7, -8
 7891              		.cfi_offset 14, -4
 7892 0002 82B0     		sub	sp, sp, #8
 7893              		.cfi_def_cfa_offset 16
 7894 0004 00AF     		add	r7, sp, #0
 7895              		.cfi_def_cfa_register 7
 7896 0006 7860     		str	r0, [r7, #4]
 7897              	.LBB59:
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
 7898              		.loc 6 468 47
 7899 0008 7B68     		ldr	r3, [r7, #4]
 7900 000a 1846     		mov	r0, r3
 7901 000c FFF7FEFF 		bl	_ZNSt13_Bit_iteratorC1Ev
 7902 0010 7B68     		ldr	r3, [r7, #4]
 7903 0012 0833     		adds	r3, r3, #8
 7904 0014 1846     		mov	r0, r3
 7905 0016 FFF7FEFF 		bl	_ZNSt13_Bit_iteratorC1Ev
 7906 001a 7B68     		ldr	r3, [r7, #4]
 7907 001c 0022     		movs	r2, #0
 7908 001e 1A61     		str	r2, [r3, #16]
 7909              	.LBE59:
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7910              		.loc 6 469 4
 7911 0020 7B68     		ldr	r3, [r7, #4]
 7912 0022 1846     		mov	r0, r3
 7913 0024 0837     		adds	r7, r7, #8
 7914              		.cfi_def_cfa_offset 8
 7915 0026 BD46     		mov	sp, r7
 7916              		.cfi_def_cfa_register 13
 7917              		@ sp needed
 7918 0028 80BD     		pop	{r7, pc}
 7919              		.cfi_endproc
 7920              	.LFE5591:
 7922              		.weak	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC1Ev
 7923              		.thumb_set _ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC1Ev,_ZNSt13_Bvector_baseISaIbEE18_Bvect
 7924              		.section	.text._ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv,"axG",%progbits,_ZNSt13_Bvector_baseIS
 7925              		.align	1
 7926              		.weak	_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv
 7927              		.syntax unified
 7928              		.thumb
 7929              		.thumb_func
 7930              		.fpu fpv5-d16
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 320


 7932              	_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv:
 7933              	.LFB5593:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 7934              		.loc 6 560 7
 7935              		.cfi_startproc
 7936              		@ args = 0, pretend = 0, frame = 16
 7937              		@ frame_needed = 1, uses_anonymous_args = 0
 7938 0000 80B5     		push	{r7, lr}
 7939              		.cfi_def_cfa_offset 8
 7940              		.cfi_offset 7, -8
 7941              		.cfi_offset 14, -4
 7942 0002 84B0     		sub	sp, sp, #16
 7943              		.cfi_def_cfa_offset 24
 7944 0004 00AF     		add	r7, sp, #0
 7945              		.cfi_def_cfa_register 7
 7946 0006 7860     		str	r0, [r7, #4]
 7947              	.LBB60:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 7948              		.loc 6 562 23
 7949 0008 7B68     		ldr	r3, [r7, #4]
 7950 000a 1B68     		ldr	r3, [r3]
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 7951              		.loc 6 562 2
 7952 000c 002B     		cmp	r3, #0
 7953 000e 18D0     		beq	.L334
 7954              	.LBB61:
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _Bit_alloc_traits::deallocate(_M_impl,
 7955              		.loc 6 564 44
 7956 0010 7B68     		ldr	r3, [r7, #4]
 7957 0012 1846     		mov	r0, r3
 7958 0014 FFF7FEFF 		bl	_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv
 7959 0018 0246     		mov	r2, r0
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _Bit_alloc_traits::deallocate(_M_impl,
 7960              		.loc 6 564 66
 7961 001a 7B68     		ldr	r3, [r7, #4]
 7962 001c 1B68     		ldr	r3, [r3]
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _Bit_alloc_traits::deallocate(_M_impl,
 7963              		.loc 6 564 47
 7964 001e D31A     		subs	r3, r2, r3
 7965 0020 9B10     		asrs	r3, r3, #2
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _Bit_alloc_traits::deallocate(_M_impl,
 7966              		.loc 6 564 19
 7967 0022 FB60     		str	r3, [r7, #12]
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 					  _M_impl._M_end_of_storage - __n,
 7968              		.loc 6 565 36
 7969 0024 7868     		ldr	r0, [r7, #4]
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 					  __n);
 7970              		.loc 6 566 16
 7971 0026 7B68     		ldr	r3, [r7, #4]
 7972 0028 1A69     		ldr	r2, [r3, #16]
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 					  __n);
 7973              		.loc 6 566 34
 7974 002a FB68     		ldr	r3, [r7, #12]
 7975 002c 9B00     		lsls	r3, r3, #2
 7976 002e 5B42     		rsbs	r3, r3, #0
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 					  _M_impl._M_end_of_storage - __n,
 7977              		.loc 6 565 35
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 321


 7978 0030 1344     		add	r3, r3, r2
 7979 0032 FA68     		ldr	r2, [r7, #12]
 7980 0034 1946     		mov	r1, r3
 7981 0036 FFF7FEFF 		bl	_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmj
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 7982              		.loc 6 568 22
 7983 003a 7B68     		ldr	r3, [r7, #4]
 7984 003c 1846     		mov	r0, r3
 7985 003e FFF7FEFF 		bl	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv
 7986              	.L334:
 7987              	.LBE61:
 7988              	.LBE60:
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7989              		.loc 6 570 7
 7990 0042 00BF     		nop
 7991 0044 1037     		adds	r7, r7, #16
 7992              		.cfi_def_cfa_offset 8
 7993 0046 BD46     		mov	sp, r7
 7994              		.cfi_def_cfa_register 13
 7995              		@ sp needed
 7996 0048 80BD     		pop	{r7, pc}
 7997              		.cfi_endproc
 7998              	.LFE5593:
 8000              		.section	.text._ZNKSt6vectorIdSaIdEE4sizeEv,"axG",%progbits,_ZNKSt6vectorIdSaIdEE4sizeEv,comdat
 8001              		.align	1
 8002              		.weak	_ZNKSt6vectorIdSaIdEE4sizeEv
 8003              		.syntax unified
 8004              		.thumb
 8005              		.thumb_func
 8006              		.fpu fpv5-d16
 8008              	_ZNKSt6vectorIdSaIdEE4sizeEv:
 8009              	.LFB5594:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8010              		.loc 23 918 7
 8011              		.cfi_startproc
 8012              		@ args = 0, pretend = 0, frame = 8
 8013              		@ frame_needed = 1, uses_anonymous_args = 0
 8014              		@ link register save eliminated.
 8015 0000 80B4     		push	{r7}
 8016              		.cfi_def_cfa_offset 4
 8017              		.cfi_offset 7, -4
 8018 0002 83B0     		sub	sp, sp, #12
 8019              		.cfi_def_cfa_offset 16
 8020 0004 00AF     		add	r7, sp, #0
 8021              		.cfi_def_cfa_register 7
 8022 0006 7860     		str	r0, [r7, #4]
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 8023              		.loc 23 919 40
 8024 0008 7B68     		ldr	r3, [r7, #4]
 8025 000a 5A68     		ldr	r2, [r3, #4]
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 8026              		.loc 23 919 66
 8027 000c 7B68     		ldr	r3, [r7, #4]
 8028 000e 1B68     		ldr	r3, [r3]
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 8029              		.loc 23 919 50
 8030 0010 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 322


 8031 0012 DB10     		asrs	r3, r3, #3
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 8032              		.loc 23 919 77
 8033 0014 1846     		mov	r0, r3
 8034 0016 0C37     		adds	r7, r7, #12
 8035              		.cfi_def_cfa_offset 4
 8036 0018 BD46     		mov	sp, r7
 8037              		.cfi_def_cfa_register 13
 8038              		@ sp needed
 8039 001a 5DF8047B 		ldr	r7, [sp], #4
 8040              		.cfi_restore 7
 8041              		.cfi_def_cfa_offset 0
 8042 001e 7047     		bx	lr
 8043              		.cfi_endproc
 8044              	.LFE5594:
 8046              		.section	.rodata
 8047              		.align	2
 8048              	.LC1:
 8049 0008 76656374 		.ascii	"vector::_M_fill_insert\000"
 8049      6F723A3A 
 8049      5F4D5F66 
 8049      696C6C5F 
 8049      696E7365 
 8050              		.section	.text._ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEjRKd,"ax
 8051              		.align	1
 8052              		.weak	_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEjRKd
 8053              		.syntax unified
 8054              		.thumb
 8055              		.thumb_func
 8056              		.fpu fpv5-d16
 8058              	_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEjRKd:
 8059              	.LFB5595:
 8060              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\vector.tcc
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Vector implementation (out of line) -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 323


  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Copyright (c) 1996
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * representations about the suitability of this  software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** /** @file bits/vector.tcc
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #ifndef _VECTOR_TCC
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #define _VECTOR_TCC 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** {
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     reserve(size_type __n)
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n > this->max_size())
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	__throw_length_error(__N("vector::reserve"));
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->capacity() < __n)
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __old_size = size();
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  pointer __tmp;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __tmp = this->_M_allocate(__n);
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  __tmp, _M_get_Tp_allocator());
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 324


  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __tmp = _M_allocate_and_copy(__n,
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_start),
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_finish));
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_deallocate(this->_M_impl._M_start,
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			this->_M_impl._M_end_of_storage
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			- this->_M_impl._M_start);
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_start = __tmp;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = __tmp + __old_size;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       typename vector<_Tp, _Alloc>::reference
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     std::forward<_Args>(__args)...);
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return back();
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     insert(const_iterator __position, const value_type& __x)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     insert(iterator __position, const value_type& __x)
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __n = __position - begin();
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 325


 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__position == end())
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     __x);
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    const auto __pos = begin() + (__position - cbegin());
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    // __x could be an existing element of this vector, so make a
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    // copy of it before _M_insert_aux moves elements around.
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Temporary_value __x_copy(this, __x);
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_insert_aux(__pos, std::move(__x_copy._M_val()));
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_insert_aux(__position, __x);
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(begin() + (__position - cbegin()), __x);
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(__position, __x);
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_erase(iterator __position)
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__position + 1 != end())
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_GLIBCXX_MOVE3(__position + 1, end(), __position);
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       --this->_M_impl._M_finish;
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return __position;
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_erase(iterator __first, iterator __last)
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__first != __last)
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__last != end())
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_MOVE3(__last, end(), __first);
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(__first.base() + (end() - __last));
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return __first;
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 326


 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>&
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     operator=(const vector<_Tp, _Alloc>& __x)
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (&__x != this)
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      if (!_Alloc_traits::_S_always_equal()
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	        {
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  // replacement allocator cannot free existing storage
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->clear();
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _M_deallocate(this->_M_impl._M_start,
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				this->_M_impl._M_end_of_storage
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				- this->_M_impl._M_start);
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_start = nullptr;
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_finish = nullptr;
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_end_of_storage = nullptr;
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__alloc_on_copy(_M_get_Tp_allocator(),
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __x._M_get_Tp_allocator());
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __xlen = __x.size();
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__xlen > capacity())
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						   __x.end());
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_deallocate(this->_M_impl._M_start,
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    this->_M_impl._M_end_of_storage
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    - this->_M_impl._M_start);
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_start = __tmp;
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else if (size() >= __xlen)
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    end(), _M_get_Tp_allocator());
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			this->_M_impl._M_start);
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  __x._M_impl._M_finish,
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  this->_M_impl._M_finish,
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  _M_get_Tp_allocator());
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return *this;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 327


 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_fill_assign(size_t __n, const value_type& __val)
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n > capacity())
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  vector __tmp(__n, __val, _M_get_Tp_allocator());
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __tmp._M_impl._M_swap_data(this->_M_impl);
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else if (__n > size())
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  std::fill(begin(), end(), __val);
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __add = __n - size();
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_GROW(__add);
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish =
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::__uninitialized_fill_n_a(this->_M_impl._M_finish,
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  __add, __val, _M_get_Tp_allocator());
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_GREW(__add);
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****         _M_erase_at_end(std::fill_n(this->_M_impl._M_start, __n, __val));
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _InputIterator>
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_assign_aux(_InputIterator __first, _InputIterator __last,
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::input_iterator_tag)
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	pointer __cur(this->_M_impl._M_start);
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	for (; __first != __last && __cur != this->_M_impl._M_finish;
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	     ++__cur, (void)++__first)
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  *__cur = *__first;
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__first == __last)
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(__cur);
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_range_insert(end(), __first, __last,
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  std::__iterator_category(__first));
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _ForwardIterator>
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::forward_iterator_tag)
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	const size_type __len = std::distance(__first, __last);
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__len > capacity())
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _S_check_init_len(__len, _M_get_Tp_allocator());
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    pointer __tmp(_M_allocate_and_copy(__len, __first, __last));
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 328


 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  _M_get_Tp_allocator());
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_REINIT;
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_deallocate(this->_M_impl._M_start,
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  this->_M_impl._M_end_of_storage
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  - this->_M_impl._M_start);
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_start = __tmp;
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_finish = this->_M_impl._M_start + __len;
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_end_of_storage = this->_M_impl._M_finish;
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else if (size() >= __len)
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(std::copy(__first, __last, this->_M_impl._M_start));
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _ForwardIterator __mid = __first;
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::advance(__mid, size());
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::copy(__first, __mid, this->_M_impl._M_start);
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    const size_type __attribute__((__unused__)) __n = __len - size();
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_finish =
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__mid, __last,
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  this->_M_impl._M_finish,
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  _M_get_Tp_allocator());
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(__n);
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     auto
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_insert_rval(const_iterator __position, value_type&& __v) -> iterator
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const auto __n = __position - cbegin();
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__position == cend())
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     std::move(__v));
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_insert_aux(begin() + __n, std::move(__v));
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(begin() + __n, std::move(__v));
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       auto
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_emplace_aux(const_iterator __position, _Args&&... __args)
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       -> iterator
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 329


 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	const auto __n = __position - cbegin();
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__position == cend())
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				       std::forward<_Args>(__args)...);
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++this->_M_impl._M_finish;
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // We need to construct a temporary because something in __args...
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // could alias one of the elements of the container and so we
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // need to use it before _M_insert_aux moves elements around.
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _Temporary_value __tmp(this, std::forward<_Args>(__args)...);
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_insert_aux(begin() + __n, std::move(__tmp._M_val()));
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_realloc_insert(begin() + __n, std::forward<_Args>(__args)...);
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return iterator(this->_M_impl._M_start + __n);
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _Arg>
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_insert_aux(iterator __position, _Arg&& __arg)
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_insert_aux(iterator __position, const _Tp& __x)
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			       _GLIBCXX_MOVE(*(this->_M_impl._M_finish - 1)));
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       ++this->_M_impl._M_finish;
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus < 201103L
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Tp __x_copy = __x;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_MOVE_BACKWARD3(__position.base(),
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_finish - 2,
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_finish - 1);
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus < 201103L
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       *__position = __x_copy;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       *__position = std::forward<_Arg>(__arg);
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 330


 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_realloc_insert(iterator __position, const _Tp& __x)
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __len =
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_check_len(size_type(1), "vector::_M_realloc_insert");
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __old_start = this->_M_impl._M_start;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __old_finish = this->_M_impl._M_finish;
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __elems_before = __position - begin();
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __new_start(this->_M_allocate(__len));
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __new_finish(__new_start);
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       __try
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // The order of the three operations is dictated by the C++11
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // case, where the moves could alter a new element belonging
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // to the existing vector.  This is an issue only for callers
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // taking the element by lvalue ref (see last bullet of C++11
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // [res.on.arguments]).
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _Alloc_traits::construct(this->_M_impl,
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __new_start + __elems_before,
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   std::forward<_Args>(__args)...);
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __x);
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __new_finish = pointer();
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish = _S_relocate(__old_start, __position.base(),
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					 __new_start, _M_get_Tp_allocator());
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++__new_finish;
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish = _S_relocate(__position.base(), __old_finish,
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					 __new_finish, _M_get_Tp_allocator());
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		(__old_start, __position.base(),
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		 __new_start, _M_get_Tp_allocator());
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++__new_finish;
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 331


 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		(__position.base(), __old_finish,
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		 __new_finish, _M_get_Tp_allocator());
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       __catch(...)
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (!__new_finish)
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::destroy(this->_M_impl,
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __new_start + __elems_before);
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_deallocate(__new_start, __len);
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __throw_exception_again;
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_REINIT;
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_deallocate(__old_start,
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    this->_M_impl._M_end_of_storage - __old_start);
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_finish = __new_finish;
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 8061              		.loc 32 509 5
 8062              		.cfi_startproc
 8063              		@ args = 0, pretend = 0, frame = 72
 8064              		@ frame_needed = 1, uses_anonymous_args = 0
 8065 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 8066              		.cfi_def_cfa_offset 20
 8067              		.cfi_offset 4, -20
 8068              		.cfi_offset 5, -16
 8069              		.cfi_offset 6, -12
 8070              		.cfi_offset 7, -8
 8071              		.cfi_offset 14, -4
 8072 0002 93B0     		sub	sp, sp, #76
 8073              		.cfi_def_cfa_offset 96
 8074 0004 00AF     		add	r7, sp, #0
 8075              		.cfi_def_cfa_register 7
 8076 0006 F860     		str	r0, [r7, #12]
 8077 0008 B960     		str	r1, [r7, #8]
 8078 000a 7A60     		str	r2, [r7, #4]
 8079 000c 3B60     		str	r3, [r7]
 8080              	.LBB62:
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_fill_insert(iterator __position, size_type __n, const value_type& __x)
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n != 0)
 8081              		.loc 32 512 7
 8082 000e 7B68     		ldr	r3, [r7, #4]
 8083 0010 002B     		cmp	r3, #0
 8084 0012 00F02E81 		beq	.L342
 8085              	.LBB63:
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 332


 8086              	.LBB64:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (size_type(this->_M_impl._M_end_of_storage
 8087              		.loc 32 514 32
 8088 0016 FB68     		ldr	r3, [r7, #12]
 8089 0018 9A68     		ldr	r2, [r3, #8]
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			- this->_M_impl._M_finish) >= __n)
 8090              		.loc 32 515 20
 8091 001a FB68     		ldr	r3, [r7, #12]
 8092 001c 5B68     		ldr	r3, [r3, #4]
 8093              		.loc 32 515 4
 8094 001e D31A     		subs	r3, r2, r3
 8095 0020 DB10     		asrs	r3, r3, #3
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			- this->_M_impl._M_finish) >= __n)
 8096              		.loc 32 514 8
 8097 0022 1A46     		mov	r2, r3
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			- this->_M_impl._M_finish) >= __n)
 8098              		.loc 32 514 4
 8099 0024 7B68     		ldr	r3, [r7, #4]
 8100 0026 9342     		cmp	r3, r2
 8101 0028 00F2A380 		bhi	.L339
 8102              	.LBB65:
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus < 201103L
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      value_type __x_copy = __x;
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _Temporary_value __tmp(this, __x);
 8103              		.loc 32 520 25
 8104 002c 07F11003 		add	r3, r7, #16
 8105 0030 3A68     		ldr	r2, [r7]
 8106 0032 F968     		ldr	r1, [r7, #12]
 8107 0034 1846     		mov	r0, r3
 8108 0036 FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEE16_Temporary_valueC1IJRKdEEEPS1_DpOT_
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      value_type& __x_copy = __tmp._M_val();
 8109              		.loc 32 521 43
 8110 003a 07F11003 		add	r3, r7, #16
 8111 003e 1846     		mov	r0, r3
 8112 0040 FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEE16_Temporary_value6_M_valEv
 8113 0044 7863     		str	r0, [r7, #52]
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      const size_type __elems_after = end() - __position;
 8114              		.loc 32 523 43
 8115 0046 F868     		ldr	r0, [r7, #12]
 8116 0048 FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEE3endEv
 8117 004c 0346     		mov	r3, r0
 8118 004e 7B62     		str	r3, [r7, #36]
 8119              		.loc 32 523 46
 8120 0050 07F10802 		add	r2, r7, #8
 8121 0054 07F12403 		add	r3, r7, #36
 8122 0058 1146     		mov	r1, r2
 8123 005a 1846     		mov	r0, r3
 8124 005c FFF7FEFF 		bl	_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_
 8125 0060 0346     		mov	r3, r0
 8126              		.loc 32 523 24
 8127 0062 3B63     		str	r3, [r7, #48]
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __old_finish(this->_M_impl._M_finish);
 8128              		.loc 32 524 16
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 333


 8129 0064 FB68     		ldr	r3, [r7, #12]
 8130 0066 5B68     		ldr	r3, [r3, #4]
 8131 0068 FB62     		str	r3, [r7, #44]
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      if (__elems_after > __n)
 8132              		.loc 32 525 8
 8133 006a 3A6B     		ldr	r2, [r7, #48]
 8134 006c 7B68     		ldr	r3, [r7, #4]
 8135 006e 9A42     		cmp	r2, r3
 8136 0070 41D9     		bls	.L340
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		{
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  std::__uninitialized_move_a(this->_M_impl._M_finish - __n,
 8137              		.loc 32 528 47
 8138 0072 FB68     		ldr	r3, [r7, #12]
 8139 0074 5A68     		ldr	r2, [r3, #4]
 8140              		.loc 32 528 57
 8141 0076 7B68     		ldr	r3, [r7, #4]
 8142 0078 DB00     		lsls	r3, r3, #3
 8143 007a 5B42     		rsbs	r3, r3, #0
 8144              		.loc 32 528 32
 8145 007c D418     		adds	r4, r2, r3
 8146 007e FB68     		ldr	r3, [r7, #12]
 8147 0080 5D68     		ldr	r5, [r3, #4]
 8148 0082 FB68     		ldr	r3, [r7, #12]
 8149 0084 5E68     		ldr	r6, [r3, #4]
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					      this->_M_impl._M_finish,
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					      this->_M_impl._M_finish,
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					      _M_get_Tp_allocator());
 8150              		.loc 32 531 31
 8151 0086 FB68     		ldr	r3, [r7, #12]
 8152 0088 1846     		mov	r0, r3
 8153 008a FFF7FEFF 		bl	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
 8154 008e 0346     		mov	r3, r0
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					      this->_M_impl._M_finish,
 8155              		.loc 32 528 32
 8156 0090 3246     		mov	r2, r6
 8157 0092 2946     		mov	r1, r5
 8158 0094 2046     		mov	r0, r4
 8159 0096 FFF7FEFF 		bl	_ZSt22__uninitialized_move_aIPdS0_SaIdEET0_T_S3_S2_RT1_
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_finish += __n;
 8160              		.loc 32 532 29
 8161 009a FB68     		ldr	r3, [r7, #12]
 8162 009c 5A68     		ldr	r2, [r3, #4]
 8163 009e 7B68     		ldr	r3, [r7, #4]
 8164 00a0 DB00     		lsls	r3, r3, #3
 8165 00a2 1A44     		add	r2, r2, r3
 8166 00a4 FB68     		ldr	r3, [r7, #12]
 8167 00a6 5A60     		str	r2, [r3, #4]
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_ASAN_ANNOTATE_GREW(__n);
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_MOVE_BACKWARD3(__position.base(),
 8168              		.loc 32 534 5
 8169 00a8 07F10803 		add	r3, r7, #8
 8170 00ac 1846     		mov	r0, r3
 8171 00ae FFF7FEFF 		bl	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
 8172 00b2 0346     		mov	r3, r0
 8173 00b4 1868     		ldr	r0, [r3]
 8174 00b6 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 334


 8175 00b8 DB00     		lsls	r3, r3, #3
 8176 00ba 5B42     		rsbs	r3, r3, #0
 8177 00bc FA6A     		ldr	r2, [r7, #44]
 8178 00be 1344     		add	r3, r3, r2
 8179 00c0 FA6A     		ldr	r2, [r7, #44]
 8180 00c2 1946     		mov	r1, r3
 8181 00c4 FFF7FEFF 		bl	_ZSt13move_backwardIPdS0_ET0_T_S2_S1_
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  __old_finish - __n, __old_finish);
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  std::fill(__position.base(), __position.base() + __n,
 8182              		.loc 32 536 30
 8183 00c8 07F10803 		add	r3, r7, #8
 8184 00cc 1846     		mov	r0, r3
 8185 00ce FFF7FEFF 		bl	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
 8186 00d2 0346     		mov	r3, r0
 8187              		.loc 32 536 14
 8188 00d4 1C68     		ldr	r4, [r3]
 8189              		.loc 32 536 49
 8190 00d6 07F10803 		add	r3, r7, #8
 8191 00da 1846     		mov	r0, r3
 8192 00dc FFF7FEFF 		bl	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
 8193 00e0 0346     		mov	r3, r0
 8194              		.loc 32 536 14
 8195 00e2 1A68     		ldr	r2, [r3]
 8196              		.loc 32 536 52
 8197 00e4 7B68     		ldr	r3, [r7, #4]
 8198 00e6 DB00     		lsls	r3, r3, #3
 8199              		.loc 32 536 14
 8200 00e8 1344     		add	r3, r3, r2
 8201 00ea 7A6B     		ldr	r2, [r7, #52]
 8202 00ec 1946     		mov	r1, r3
 8203 00ee 2046     		mov	r0, r4
 8204 00f0 FFF7FEFF 		bl	_ZSt4fillIPddEvT_S1_RKT0_
 8205 00f4 37E0     		b	.L341
 8206              	.L340:
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    __x_copy);
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      else
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		{
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_finish =
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::__uninitialized_fill_n_a(this->_M_impl._M_finish,
 8207              		.loc 32 543 36
 8208 00f6 FB68     		ldr	r3, [r7, #12]
 8209 00f8 5C68     		ldr	r4, [r3, #4]
 8210 00fa 7A68     		ldr	r2, [r7, #4]
 8211 00fc 3B6B     		ldr	r3, [r7, #48]
 8212 00fe D51A     		subs	r5, r2, r3
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						  __n - __elems_after,
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						  __x_copy,
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						  _M_get_Tp_allocator());
 8213              		.loc 32 546 28
 8214 0100 FB68     		ldr	r3, [r7, #12]
 8215 0102 1846     		mov	r0, r3
 8216 0104 FFF7FEFF 		bl	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
 8217 0108 0346     		mov	r3, r0
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						  __n - __elems_after,
 8218              		.loc 32 543 36
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 335


 8219 010a 7A6B     		ldr	r2, [r7, #52]
 8220 010c 2946     		mov	r1, r5
 8221 010e 2046     		mov	r0, r4
 8222 0110 FFF7FEFF 		bl	_ZSt24__uninitialized_fill_n_aIPdjddET_S1_T0_RKT1_RSaIT2_E
 8223 0114 0246     		mov	r2, r0
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::__uninitialized_fill_n_a(this->_M_impl._M_finish,
 8224              		.loc 32 542 29
 8225 0116 FB68     		ldr	r3, [r7, #12]
 8226 0118 5A60     		str	r2, [r3, #4]
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_ASAN_ANNOTATE_GREW(__n - __elems_after);
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  std::__uninitialized_move_a(__position.base(), __old_finish,
 8227              		.loc 32 548 48
 8228 011a 07F10803 		add	r3, r7, #8
 8229 011e 1846     		mov	r0, r3
 8230 0120 FFF7FEFF 		bl	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
 8231 0124 0346     		mov	r3, r0
 8232              		.loc 32 548 32
 8233 0126 1C68     		ldr	r4, [r3]
 8234 0128 FB68     		ldr	r3, [r7, #12]
 8235 012a 5D68     		ldr	r5, [r3, #4]
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					      this->_M_impl._M_finish,
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					      _M_get_Tp_allocator());
 8236              		.loc 32 550 31
 8237 012c FB68     		ldr	r3, [r7, #12]
 8238 012e 1846     		mov	r0, r3
 8239 0130 FFF7FEFF 		bl	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
 8240 0134 0346     		mov	r3, r0
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					      this->_M_impl._M_finish,
 8241              		.loc 32 548 32
 8242 0136 2A46     		mov	r2, r5
 8243 0138 F96A     		ldr	r1, [r7, #44]
 8244 013a 2046     		mov	r0, r4
 8245 013c FFF7FEFF 		bl	_ZSt22__uninitialized_move_aIPdS0_SaIdEET0_T_S3_S2_RT1_
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_finish += __elems_after;
 8246              		.loc 32 551 29
 8247 0140 FB68     		ldr	r3, [r7, #12]
 8248 0142 5A68     		ldr	r2, [r3, #4]
 8249 0144 3B6B     		ldr	r3, [r7, #48]
 8250 0146 DB00     		lsls	r3, r3, #3
 8251 0148 1A44     		add	r2, r2, r3
 8252 014a FB68     		ldr	r3, [r7, #12]
 8253 014c 5A60     		str	r2, [r3, #4]
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_ASAN_ANNOTATE_GREW(__elems_after);
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  std::fill(__position.base(), __old_finish, __x_copy);
 8254              		.loc 32 553 30
 8255 014e 07F10803 		add	r3, r7, #8
 8256 0152 1846     		mov	r0, r3
 8257 0154 FFF7FEFF 		bl	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
 8258 0158 0346     		mov	r3, r0
 8259              		.loc 32 553 14
 8260 015a 1B68     		ldr	r3, [r3]
 8261 015c 7A6B     		ldr	r2, [r7, #52]
 8262 015e F96A     		ldr	r1, [r7, #44]
 8263 0160 1846     		mov	r0, r3
 8264 0162 FFF7FEFF 		bl	_ZSt4fillIPddEvT_S1_RKT0_
 8265              	.L341:
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      value_type& __x_copy = __tmp._M_val();
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 336


 8266              		.loc 32 520 25
 8267 0166 07F11003 		add	r3, r7, #16
 8268 016a 1846     		mov	r0, r3
 8269 016c FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEE16_Temporary_valueD1Ev
 8270              	.LBE65:
 8271              	.LBE64:
 8272              	.LBE63:
 8273              	.LBE62:
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      const size_type __len =
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_M_check_len(__n, "vector::_M_fill_insert");
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      const size_type __elems_before = __position - begin();
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __new_start(this->_M_allocate(__len));
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __new_finish(__new_start);
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __try
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		{
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  // See _M_realloc_insert above.
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  std::__uninitialized_fill_n_a(__new_start + __elems_before,
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						__n, __x,
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						_M_get_Tp_allocator());
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __new_finish = pointer();
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __new_finish
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    = std::__uninitialized_move_if_noexcept_a
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    (this->_M_impl._M_start, __position.base(),
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		     __new_start, _M_get_Tp_allocator());
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __new_finish += __n;
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __new_finish
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    = std::__uninitialized_move_if_noexcept_a
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    (__position.base(), this->_M_impl._M_finish,
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		     __new_finish, _M_get_Tp_allocator());
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __catch(...)
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		{
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  if (!__new_finish)
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::_Destroy(__new_start + __elems_before,
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				  __new_start + __elems_before + __n,
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				  _M_get_Tp_allocator());
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  else
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::_Destroy(__new_start, __new_finish,
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				  _M_get_Tp_allocator());
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _M_deallocate(__new_start, __len);
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __throw_exception_again;
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_REINIT;
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_deallocate(this->_M_impl._M_start,
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    this->_M_impl._M_end_of_storage
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    - this->_M_impl._M_start);
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_start = __new_start;
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_finish = __new_finish;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 337


 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_end_of_storage = __new_start + __len;
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 8274              		.loc 32 606 5
 8275 0170 7FE0     		b	.L342
 8276              	.L339:
 8277              	.LBB69:
 8278              	.LBB68:
 8279              	.LBB67:
 8280              	.LBB66:
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      const size_type __elems_before = __position - begin();
 8281              		.loc 32 559 15
 8282 0172 424A     		ldr	r2, .L343
 8283 0174 7968     		ldr	r1, [r7, #4]
 8284 0176 F868     		ldr	r0, [r7, #12]
 8285 0178 FFF7FEFF 		bl	_ZNKSt6vectorIdSaIdEE12_M_check_lenEjPKc
 8286 017c 7864     		str	r0, [r7, #68]
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __new_start(this->_M_allocate(__len));
 8287              		.loc 32 560 59
 8288 017e F868     		ldr	r0, [r7, #12]
 8289 0180 FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEE5beginEv
 8290 0184 0346     		mov	r3, r0
 8291 0186 BB62     		str	r3, [r7, #40]
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __new_start(this->_M_allocate(__len));
 8292              		.loc 32 560 52
 8293 0188 07F12802 		add	r2, r7, #40
 8294 018c 07F10803 		add	r3, r7, #8
 8295 0190 1146     		mov	r1, r2
 8296 0192 1846     		mov	r0, r3
 8297 0194 FFF7FEFF 		bl	_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_
 8298 0198 0346     		mov	r3, r0
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __new_start(this->_M_allocate(__len));
 8299              		.loc 32 560 24
 8300 019a 3B64     		str	r3, [r7, #64]
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __new_finish(__new_start);
 8301              		.loc 32 561 45
 8302 019c FB68     		ldr	r3, [r7, #12]
 8303 019e 796C     		ldr	r1, [r7, #68]
 8304 01a0 1846     		mov	r0, r3
 8305 01a2 FFF7FEFF 		bl	_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEj
 8306 01a6 F863     		str	r0, [r7, #60]
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __try
 8307              		.loc 32 562 16
 8308 01a8 FB6B     		ldr	r3, [r7, #60]
 8309 01aa BB63     		str	r3, [r7, #56]
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						__n, __x,
 8310              		.loc 32 566 47
 8311 01ac 3B6C     		ldr	r3, [r7, #64]
 8312 01ae DB00     		lsls	r3, r3, #3
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						__n, __x,
 8313              		.loc 32 566 34
 8314 01b0 FA6B     		ldr	r2, [r7, #60]
 8315 01b2 D418     		adds	r4, r2, r3
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __new_finish = pointer();
 8316              		.loc 32 568 26
 8317 01b4 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 338


 8318 01b6 1846     		mov	r0, r3
 8319 01b8 FFF7FEFF 		bl	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
 8320 01bc 0346     		mov	r3, r0
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						__n, __x,
 8321              		.loc 32 566 34
 8322 01be 3A68     		ldr	r2, [r7]
 8323 01c0 7968     		ldr	r1, [r7, #4]
 8324 01c2 2046     		mov	r0, r4
 8325 01c4 FFF7FEFF 		bl	_ZSt24__uninitialized_fill_n_aIPdjddET_S1_T0_RKT1_RSaIT2_E
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 8326              		.loc 32 569 18
 8327 01c8 0023     		movs	r3, #0
 8328 01ca BB63     		str	r3, [r7, #56]
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		     __new_start, _M_get_Tp_allocator());
 8329              		.loc 32 573 7
 8330 01cc FB68     		ldr	r3, [r7, #12]
 8331 01ce 1C68     		ldr	r4, [r3]
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		     __new_start, _M_get_Tp_allocator());
 8332              		.loc 32 573 47
 8333 01d0 07F10803 		add	r3, r7, #8
 8334 01d4 1846     		mov	r0, r3
 8335 01d6 FFF7FEFF 		bl	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
 8336 01da 0346     		mov	r3, r0
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		     __new_start, _M_get_Tp_allocator());
 8337              		.loc 32 573 7
 8338 01dc 1D68     		ldr	r5, [r3]
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 8339              		.loc 32 574 40
 8340 01de FB68     		ldr	r3, [r7, #12]
 8341 01e0 1846     		mov	r0, r3
 8342 01e2 FFF7FEFF 		bl	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
 8343 01e6 0346     		mov	r3, r0
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		     __new_start, _M_get_Tp_allocator());
 8344              		.loc 32 573 7
 8345 01e8 FA6B     		ldr	r2, [r7, #60]
 8346 01ea 2946     		mov	r1, r5
 8347 01ec 2046     		mov	r0, r4
 8348 01ee FFF7FEFF 		bl	_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_
 8349 01f2 B863     		str	r0, [r7, #56]
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 8350              		.loc 32 576 18
 8351 01f4 7B68     		ldr	r3, [r7, #4]
 8352 01f6 DB00     		lsls	r3, r3, #3
 8353 01f8 BA6B     		ldr	r2, [r7, #56]
 8354 01fa 1344     		add	r3, r3, r2
 8355 01fc BB63     		str	r3, [r7, #56]
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		     __new_finish, _M_get_Tp_allocator());
 8356              		.loc 32 580 23
 8357 01fe 07F10803 		add	r3, r7, #8
 8358 0202 1846     		mov	r0, r3
 8359 0204 FFF7FEFF 		bl	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
 8360 0208 0346     		mov	r3, r0
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		     __new_finish, _M_get_Tp_allocator());
 8361              		.loc 32 580 7
 8362 020a 1C68     		ldr	r4, [r3]
 8363 020c FB68     		ldr	r3, [r7, #12]
 8364 020e 5D68     		ldr	r5, [r3, #4]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 339


 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 8365              		.loc 32 581 41
 8366 0210 FB68     		ldr	r3, [r7, #12]
 8367 0212 1846     		mov	r0, r3
 8368 0214 FFF7FEFF 		bl	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
 8369 0218 0346     		mov	r3, r0
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		     __new_finish, _M_get_Tp_allocator());
 8370              		.loc 32 580 7
 8371 021a BA6B     		ldr	r2, [r7, #56]
 8372 021c 2946     		mov	r1, r5
 8373 021e 2046     		mov	r0, r4
 8374 0220 FFF7FEFF 		bl	_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_
 8375 0224 B863     		str	r0, [r7, #56]
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
 8376              		.loc 32 595 21
 8377 0226 FB68     		ldr	r3, [r7, #12]
 8378 0228 1C68     		ldr	r4, [r3]
 8379 022a FB68     		ldr	r3, [r7, #12]
 8380 022c 5D68     		ldr	r5, [r3, #4]
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_REINIT;
 8381              		.loc 32 596 27
 8382 022e FB68     		ldr	r3, [r7, #12]
 8383 0230 1846     		mov	r0, r3
 8384 0232 FFF7FEFF 		bl	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
 8385 0236 0346     		mov	r3, r0
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
 8386              		.loc 32 595 21
 8387 0238 1A46     		mov	r2, r3
 8388 023a 2946     		mov	r1, r5
 8389 023c 2046     		mov	r0, r4
 8390 023e FFF7FEFF 		bl	_ZSt8_DestroyIPddEvT_S1_RSaIT0_E
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    this->_M_impl._M_end_of_storage
 8391              		.loc 32 598 21
 8392 0242 F868     		ldr	r0, [r7, #12]
 8393 0244 FB68     		ldr	r3, [r7, #12]
 8394 0246 1968     		ldr	r1, [r3]
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    - this->_M_impl._M_start);
 8395              		.loc 32 599 22
 8396 0248 FB68     		ldr	r3, [r7, #12]
 8397 024a 9A68     		ldr	r2, [r3, #8]
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_start = __new_start;
 8398              		.loc 32 600 24
 8399 024c FB68     		ldr	r3, [r7, #12]
 8400 024e 1B68     		ldr	r3, [r3]
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_start = __new_start;
 8401              		.loc 32 600 8
 8402 0250 D31A     		subs	r3, r2, r3
 8403 0252 DB10     		asrs	r3, r3, #3
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    this->_M_impl._M_end_of_storage
 8404              		.loc 32 598 21
 8405 0254 1A46     		mov	r2, r3
 8406 0256 FFF7FEFF 		bl	_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdj
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_finish = __new_finish;
 8407              		.loc 32 601 31
 8408 025a FB68     		ldr	r3, [r7, #12]
 8409 025c FA6B     		ldr	r2, [r7, #60]
 8410 025e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 340


 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_end_of_storage = __new_start + __len;
 8411              		.loc 32 602 32
 8412 0260 FB68     		ldr	r3, [r7, #12]
 8413 0262 BA6B     		ldr	r2, [r7, #56]
 8414 0264 5A60     		str	r2, [r3, #4]
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 8415              		.loc 32 603 54
 8416 0266 7B6C     		ldr	r3, [r7, #68]
 8417 0268 DB00     		lsls	r3, r3, #3
 8418 026a FA6B     		ldr	r2, [r7, #60]
 8419 026c 1A44     		add	r2, r2, r3
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 8420              		.loc 32 603 40
 8421 026e FB68     		ldr	r3, [r7, #12]
 8422 0270 9A60     		str	r2, [r3, #8]
 8423              	.L342:
 8424              	.LBE66:
 8425              	.LBE67:
 8426              	.LBE68:
 8427              	.LBE69:
 8428              		.loc 32 606 5
 8429 0272 00BF     		nop
 8430 0274 4C37     		adds	r7, r7, #76
 8431              		.cfi_def_cfa_offset 20
 8432 0276 BD46     		mov	sp, r7
 8433              		.cfi_def_cfa_register 13
 8434              		@ sp needed
 8435 0278 F0BD     		pop	{r4, r5, r6, r7, pc}
 8436              	.L344:
 8437 027a 00BF     		.align	2
 8438              	.L343:
 8439 027c 08000000 		.word	.LC1
 8440              		.cfi_endproc
 8441              	.LFE5595:
 8443              		.section	.text._ZNSt6vectorIdSaIdEE3endEv,"axG",%progbits,_ZNSt6vectorIdSaIdEE3endEv,comdat
 8444              		.align	1
 8445              		.weak	_ZNSt6vectorIdSaIdEE3endEv
 8446              		.syntax unified
 8447              		.thumb
 8448              		.thumb_func
 8449              		.fpu fpv5-d16
 8451              	_ZNSt6vectorIdSaIdEE3endEv:
 8452              	.LFB5596:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 8453              		.loc 23 829 7
 8454              		.cfi_startproc
 8455              		@ args = 0, pretend = 0, frame = 16
 8456              		@ frame_needed = 1, uses_anonymous_args = 0
 8457 0000 80B5     		push	{r7, lr}
 8458              		.cfi_def_cfa_offset 8
 8459              		.cfi_offset 7, -8
 8460              		.cfi_offset 14, -4
 8461 0002 84B0     		sub	sp, sp, #16
 8462              		.cfi_def_cfa_offset 24
 8463 0004 00AF     		add	r7, sp, #0
 8464              		.cfi_def_cfa_register 7
 8465 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 341


 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 8466              		.loc 23 830 39
 8467 0008 7B68     		ldr	r3, [r7, #4]
 8468 000a 1A1D     		adds	r2, r3, #4
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 8469              		.loc 23 830 16
 8470 000c 07F10C03 		add	r3, r7, #12
 8471 0010 1146     		mov	r1, r2
 8472 0012 1846     		mov	r0, r3
 8473 0014 FFF7FEFF 		bl	_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC1ERKS1_
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 8474              		.loc 23 830 48
 8475 0018 FB68     		ldr	r3, [r7, #12]
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 8476              		.loc 23 830 51
 8477 001a 1846     		mov	r0, r3
 8478 001c 1037     		adds	r7, r7, #16
 8479              		.cfi_def_cfa_offset 8
 8480 001e BD46     		mov	sp, r7
 8481              		.cfi_def_cfa_register 13
 8482              		@ sp needed
 8483 0020 80BD     		pop	{r7, pc}
 8484              		.cfi_endproc
 8485              	.LFE5596:
 8487              		.section	.text._ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd,"axG",%progbits,_ZNSt6vectorIdSaIdEE15_M_e
 8488              		.align	1
 8489              		.weak	_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd
 8490              		.syntax unified
 8491              		.thumb
 8492              		.thumb_func
 8493              		.fpu fpv5-d16
 8495              	_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd:
 8496              	.LFB5597:
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Safety check used only from at().
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_range_check(size_type __n) const
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 342


1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__n >= this->size())
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu) >= this->size() "
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu)"),
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				   __n, this->size());
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n)
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n) const
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the first
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 343


1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the last
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element of the %vector.
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // data access
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp*
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp*
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.3] modifiers
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Add data to the end of the %vector.
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be added.
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation.  The function creates an
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element at the end of the %vector and assigns the given data
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  done in constant time if the %vector has preallocated space
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  available.
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 344


1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(const value_type& __x)
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     __x);
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    ++this->_M_impl._M_finish;
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_realloc_insert(end(), __x);
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(value_type&& __x)
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201402L
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	reference
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace_back(_Args&&... __args);
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Removes last element.
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that no data is returned, and if the last element's
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  called.
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	--this->_M_impl._M_finish;
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __args  Arguments.
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert an object of type T constructed
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 345


1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and if it is frequently used the user should consider using
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::list.
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace(const_iterator __position, _Args&&... __args)
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ return _M_emplace_aux(__position, std::forward<_Args>(__args)...); }
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, const value_type& __x);
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__x)); }
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 346


1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  specified by @a position.
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	auto __offset = __position - cbegin();
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(begin() + __offset, __l.begin(), __l.end(),
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			std::random_access_iterator_tag());
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	difference_type __offset = __position - cbegin();
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 347


1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(const_iterator __position, _InputIterator __first,
1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     __first, __last, __false_type());
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  return begin() + __offset;
1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(iterator __position, _InputIterator __first,
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 348


1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove element at given position.
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the element at the given position and thus
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  shorten the %vector by one.
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointer is the user's responsibility.
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __position)
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __position)
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__position); }
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove a range of elements.
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *                  erased.
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *           prior to erasing (or end()).
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the elements in the range
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the elements, and that if the elements themselves are
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __beg = begin();
1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __cbeg = cbegin();
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __first, iterator __last)
1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__first, __last); }
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Swaps data with another %vector.
1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 349


1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocators are swapped depends on the allocator traits.
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       swap(vector& __x) _GLIBCXX_NOEXCEPT
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_assert(_Alloc_traits::propagate_on_container_swap::value
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 || _M_get_Tp_allocator() == __x._M_get_Tp_allocator());
1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				  __x._M_get_Tp_allocator());
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the user's responsibility.
1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_allocate_and_copy(size_type __n,
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      return __result;
1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __catch(...)
1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _M_deallocate(__result, __n);
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __throw_exception_again;
1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal constructor functions follow.
1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 350


1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(_S_check_init_len(
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		static_cast<size_type>(__n), _M_get_Tp_allocator()));
1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			       __false_type)
1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_InputIterator __first, _InputIterator __last,
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::input_iterator_tag)
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try {
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    for (; __first != __last; ++__first)
1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      emplace_back(*__first);
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      push_back(*__first);
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  } __catch(...) {
1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    clear();
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __throw_exception_again;
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 351


1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					this->_M_impl._M_start,
1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // vector(n,value,a) constructor.
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the vector(n) constructor.
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_initialize(size_type __n)
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					   _M_get_Tp_allocator());
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal assign functions follow.  The *_aux functions do the actual
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // assignment work for the range versions.
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_assign(__n, __val); }
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __false_type)
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_InputIterator __first, _InputIterator __last,
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::input_iterator_tag);
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::forward_iterator_tag);
1641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 352


1642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by assign(n,t), and the range assign when it turns out
1643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // to be the same thing.
1644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_assign(size_type __n, const value_type& __val);
1646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal insert functions follow.
1648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,
1656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __true_type)
1657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_insert(__pos, __n, __val); }
1658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _InputIterator __first,
1663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   _InputIterator __last, __false_type)
1664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_insert(__pos, __first, __last,
1666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			  std::__iterator_category(__first));
1667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _InputIterator __first,
1673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_InputIterator __last, std::input_iterator_tag);
1674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _ForwardIterator __first,
1679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_ForwardIterator __last, std::forward_iterator_tag);
1680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,n,x), and the range insert when it turns out to be
1682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // the same thing.
1683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
1685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by resize(n).
1688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_append(size_type __n);
1690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       bool
1692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_shrink_to_fit();
1693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x)
1697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_aux(iterator __position, const value_type& __x);
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 353


1699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_realloc_insert(iterator __position, const value_type& __x);
1702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // A value_type object constructed with _Alloc_traits::construct()
1704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // and destroyed with _Alloc_traits::destroy().
1705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Temporary_value
1706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename... _Args>
1708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  explicit
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Temporary_value(vector* __vec, _Args&&... __args) : _M_this(__vec)
1710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(_M_this->_M_impl, _M_ptr(),
1712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     std::forward<_Args>(__args)...);
1713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	~_Temporary_value()
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _Alloc_traits::destroy(_M_this->_M_impl, _M_ptr()); }
1717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	value_type&
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_val() { return *_M_ptr(); }
1720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       private:
1722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Tp*
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_ptr() { return reinterpret_cast<_Tp*>(&__buf); }
1724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector* _M_this;
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typename aligned_storage<sizeof(_Tp), alignof(_Tp)>::type __buf;
1727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x) and other functions when insertion needs to
1730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // reallocate or move existing elements. _Arg is either _Tp& or _Tp.
1731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Arg>
1732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_aux(iterator __position, _Arg&& __arg);
1734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_realloc_insert(iterator __position, _Args&&... __args);
1738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Either move-construct at the end, or forward to _M_insert_aux.
1740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_rval(const_iterator __position, value_type&& __v);
1742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Try to emplace at the end, otherwise forward to _M_insert_aux.
1744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_emplace_aux(const_iterator __position, _Args&&... __args);
1747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Emplacing an rvalue of the correct type can use _M_insert_rval.
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_emplace_aux(const_iterator __position, value_type&& __v)
1751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__v)); }
1752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by _M_fill_insert, _M_insert_aux etc.
1755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 354


1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_check_len(size_type __n, const char* __s) const
1757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (max_size() - size() < __n)
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
1760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_type __len = size() + (std::max)(size(), __n);
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
1763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by constructors to check initial size.
1766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static size_type
1767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_check_init_len(size_type __n, const allocator_type& __a)
1768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__n > _S_max_size(_Tp_alloc_type(__a)))
1770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
1771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
1772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n;
1773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static size_type
1776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
1777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
1779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
1780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// (even if std::allocator_traits::max_size says we can).
1781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_t __diffmax
1782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
1783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_t __allocmax = _Alloc_traits::max_size(__a);
1784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (std::min)(__diffmax, __allocmax);
1785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal erase functions follow.
1788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by erase(q1,q2), clear(), resize(), _M_fill_assign,
1790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _M_assign_aux.
1791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
 8497              		.loc 23 1792 7
 8498              		.cfi_startproc
 8499              		@ args = 0, pretend = 0, frame = 16
 8500              		@ frame_needed = 1, uses_anonymous_args = 0
 8501 0000 90B5     		push	{r4, r7, lr}
 8502              		.cfi_def_cfa_offset 12
 8503              		.cfi_offset 4, -12
 8504              		.cfi_offset 7, -8
 8505              		.cfi_offset 14, -4
 8506 0002 85B0     		sub	sp, sp, #20
 8507              		.cfi_def_cfa_offset 32
 8508 0004 00AF     		add	r7, sp, #0
 8509              		.cfi_def_cfa_register 7
 8510 0006 7860     		str	r0, [r7, #4]
 8511 0008 3960     		str	r1, [r7]
 8512              	.LBB70:
1793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (size_type __n = this->_M_impl._M_finish - __pos)
 8513              		.loc 23 1794 36
 8514 000a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 355


 8515 000c 5A68     		ldr	r2, [r3, #4]
 8516              		.loc 23 1794 46
 8517 000e 3B68     		ldr	r3, [r7]
 8518 0010 D31A     		subs	r3, r2, r3
 8519 0012 DB10     		asrs	r3, r3, #3
 8520              		.loc 23 1794 16
 8521 0014 FB60     		str	r3, [r7, #12]
 8522              		.loc 23 1794 2
 8523 0016 FB68     		ldr	r3, [r7, #12]
 8524 0018 002B     		cmp	r3, #0
 8525 001a 0ED0     		beq	.L349
1795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::_Destroy(__pos, this->_M_impl._M_finish,
 8526              		.loc 23 1796 19
 8527 001c 7B68     		ldr	r3, [r7, #4]
 8528 001e 5C68     		ldr	r4, [r3, #4]
1797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			  _M_get_Tp_allocator());
 8529              		.loc 23 1797 25
 8530 0020 7B68     		ldr	r3, [r7, #4]
 8531 0022 1846     		mov	r0, r3
 8532 0024 FFF7FEFF 		bl	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
 8533 0028 0346     		mov	r3, r0
1796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			  _M_get_Tp_allocator());
 8534              		.loc 23 1796 19
 8535 002a 1A46     		mov	r2, r3
 8536 002c 2146     		mov	r1, r4
 8537 002e 3868     		ldr	r0, [r7]
 8538 0030 FFF7FEFF 		bl	_ZSt8_DestroyIPddEvT_S1_RSaIT0_E
1798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish = __pos;
 8539              		.loc 23 1798 30
 8540 0034 7B68     		ldr	r3, [r7, #4]
 8541 0036 3A68     		ldr	r2, [r7]
 8542 0038 5A60     		str	r2, [r3, #4]
 8543              	.L349:
 8544              	.LBE70:
1799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_SHRINK(__n);
1800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 8545              		.loc 23 1801 7
 8546 003a 00BF     		nop
 8547 003c 1437     		adds	r7, r7, #20
 8548              		.cfi_def_cfa_offset 12
 8549 003e BD46     		mov	sp, r7
 8550              		.cfi_def_cfa_register 13
 8551              		@ sp needed
 8552 0040 90BD     		pop	{r4, r7, pc}
 8553              		.cfi_endproc
 8554              	.LFE5597:
 8556              		.section	.text._ZNKSt6vectorIbSaIbEE4sizeEv,"axG",%progbits,_ZNKSt6vectorIbSaIbEE4sizeEv,comdat
 8557              		.align	1
 8558              		.weak	_ZNKSt6vectorIbSaIbEE4sizeEv
 8559              		.syntax unified
 8560              		.thumb
 8561              		.thumb_func
 8562              		.fpu fpv5-d16
 8564              	_ZNKSt6vectorIbSaIbEE4sizeEv:
 8565              	.LFB5598:
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 356


 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
 8566              		.loc 6 884 7
 8567              		.cfi_startproc
 8568              		@ args = 0, pretend = 0, frame = 24
 8569              		@ frame_needed = 1, uses_anonymous_args = 0
 8570 0000 80B5     		push	{r7, lr}
 8571              		.cfi_def_cfa_offset 8
 8572              		.cfi_offset 7, -8
 8573              		.cfi_offset 14, -4
 8574 0002 86B0     		sub	sp, sp, #24
 8575              		.cfi_def_cfa_offset 32
 8576 0004 00AF     		add	r7, sp, #0
 8577              		.cfi_def_cfa_register 7
 8578 0006 7860     		str	r0, [r7, #4]
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8579              		.loc 6 885 29
 8580 0008 07F10803 		add	r3, r7, #8
 8581 000c 7968     		ldr	r1, [r7, #4]
 8582 000e 1846     		mov	r0, r3
 8583 0010 FFF7FEFF 		bl	_ZNKSt6vectorIbSaIbEE3endEv
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8584              		.loc 6 885 39
 8585 0014 07F11003 		add	r3, r7, #16
 8586 0018 7968     		ldr	r1, [r7, #4]
 8587 001a 1846     		mov	r0, r3
 8588 001c FFF7FEFF 		bl	_ZNKSt6vectorIbSaIbEE5beginEv
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8589              		.loc 6 885 32
 8590 0020 07F11002 		add	r2, r7, #16
 8591 0024 07F10803 		add	r3, r7, #8
 8592 0028 1146     		mov	r1, r2
 8593 002a 1846     		mov	r0, r3
 8594 002c FFF7FEFF 		bl	_ZStmiRKSt18_Bit_iterator_baseS1_
 8595 0030 0346     		mov	r3, r0
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8596              		.loc 6 885 44
 8597 0032 1846     		mov	r0, r3
 8598 0034 1837     		adds	r7, r7, #24
 8599              		.cfi_def_cfa_offset 8
 8600 0036 BD46     		mov	sp, r7
 8601              		.cfi_def_cfa_register 13
 8602              		@ sp needed
 8603 0038 80BD     		pop	{r7, pc}
 8604              		.cfi_endproc
 8605              	.LFE5598:
 8607              		.section	.text._ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator,"axG",%progbits,_ZNSt6vecto
 8608              		.align	1
 8609              		.weak	_ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator
 8610              		.syntax unified
 8611              		.thumb
 8612              		.thumb_func
 8613              		.fpu fpv5-d16
 8615              	_ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator:
 8616              	.LFB5599:
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 357


1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       shrink_to_fit()
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_shrink_to_fit(); }
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       flip() _GLIBCXX_NOEXCEPT
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_type * const __end = this->_M_impl._M_end_addr();
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	for (_Bit_type * __p = this->_M_impl._M_start._M_p; __p != __end; ++__p)
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  *__p = ~*__p;
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       clear() _GLIBCXX_NOEXCEPT
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_erase_at_end(begin()); }
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename... _Args>
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus > 201402L
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	reference
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	emplace_back(_Args&&... __args)
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  push_back(bool(__args...));
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus > 201402L
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  return back();
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename... _Args>
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	iterator
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	emplace(const_iterator __pos, _Args&&... __args)
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ return insert(__pos, bool(__args...)); }
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     protected:
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // Precondition: __first._M_offset == 0 && __result._M_offset == 0.
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_copy_aligned(const_iterator __first, const_iterator __last,
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		      iterator __result)
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_type* __q = std::copy(__first._M_p, __last._M_p, __result._M_p);
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return std::copy(const_iterator(__last._M_p, 0), __last,
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			 iterator(__q, 0));
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_initialize(size_type __n)
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__n)
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _Bit_pointer __q = this->_M_allocate(__n);
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_end_of_storage = __q + _S_nword(__n);
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(std::__addressof(*__q), 0);
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 358


1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	else
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_end_of_storage = _Bit_pointer();
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(0, 0);
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start + difference_type(__n);
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_initialize_value(bool __x)
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (_Bit_type* __p = this->_M_impl._M_start._M_p)
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __builtin_memset(__p, __x ? ~0 : 0,
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			   (this->_M_impl._M_end_addr() - __p)
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			   * sizeof(_Bit_type));
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_reallocate(size_type __n);
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       bool
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_shrink_to_fit();
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // Check whether it's an integral type.  If so, it's not an iterator.
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // 438. Ambiguity in the "do the right thing" clause
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _Integer>
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize_dispatch(_Integer __n, _Integer __x, __true_type)
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_initialize(static_cast<size_type>(__n));
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_initialize_value(__x);
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			       __false_type)
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_initialize_range(__first, __last,
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			      std::__iterator_category(__first)); }
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize_range(_InputIterator __first, _InputIterator __last,
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			    std::input_iterator_tag)
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  for (; __first != __last; ++__first)
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    push_back(*__first);
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _ForwardIterator>
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize_range(_ForwardIterator __first, _ForwardIterator __last,
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 359


1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			    std::forward_iterator_tag)
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  const size_type __n = std::distance(__first, __last);
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_initialize(__n);
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  std::copy(__first, __last, this->_M_impl._M_start);
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus < 201103L
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // 438. Ambiguity in the "do the right thing" clause
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _Integer>
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_fill_assign(__n, __val); }
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<class _InputIterator>
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			   __false_type)
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_fill_assign(size_t __n, bool __x)
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__n > size())
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_initialize_value(__x);
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    insert(end(), __n - size(), __x);
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	else
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_erase_at_end(begin() + __n);
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_initialize_value(__x);
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_assign_aux(_InputIterator __first, _InputIterator __last,
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		      std::input_iterator_tag)
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  iterator __cur = begin();
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  for (; __first != __last && __cur != end(); ++__cur, (void)++__first)
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    *__cur = *__first;
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  if (__first == __last)
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_erase_at_end(__cur);
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  else
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    insert(end(), __first, __last);
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _ForwardIterator>
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		      std::forward_iterator_tag)
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  const size_type __len = std::distance(__first, __last);
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 360


1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  if (__len < size())
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_erase_at_end(std::copy(__first, __last, begin()));
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  else
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    {
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      _ForwardIterator __mid = __first;
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      std::advance(__mid, size());
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      std::copy(__first, __mid, begin());
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      insert(end(), __mid, __last);
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    }
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // Check whether it's an integral type.  If so, it's not an iterator.
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // 438. Ambiguity in the "do the right thing" clause
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _Integer>
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __x,
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			   __true_type)
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_fill_insert(__pos, __n, __x); }
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_insert_dispatch(iterator __pos,
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			   _InputIterator __first, _InputIterator __last,
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			   __false_type)
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_insert_range(__pos, __first, __last,
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			  std::__iterator_category(__first)); }
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_fill_insert(iterator __position, size_type __n, bool __x);
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_insert_range(iterator __pos, _InputIterator __first,
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			_InputIterator __last, std::input_iterator_tag)
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  for (; __first != __last; ++__first)
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    {
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      __pos = insert(__pos, *__first);
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      ++__pos;
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    }
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _ForwardIterator>
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_insert_range(iterator __position, _ForwardIterator __first,
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			_ForwardIterator __last, std::forward_iterator_tag);
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_insert_aux(iterator __position, bool __x);
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       size_type
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_check_len(size_type __n, const char* __s) const
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (max_size() - size() < __n)
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __throw_length_error(__N(__s));
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 361


1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	const size_type __len = size() + std::max(size(), __n);
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_erase_at_end(iterator __pos)
 8617              		.loc 6 1328 7
 8618              		.cfi_startproc
 8619              		@ args = 0, pretend = 0, frame = 16
 8620              		@ frame_needed = 1, uses_anonymous_args = 0
 8621              		@ link register save eliminated.
 8622 0000 80B4     		push	{r7}
 8623              		.cfi_def_cfa_offset 4
 8624              		.cfi_offset 7, -4
 8625 0002 85B0     		sub	sp, sp, #20
 8626              		.cfi_def_cfa_offset 24
 8627 0004 00AF     		add	r7, sp, #0
 8628              		.cfi_def_cfa_register 7
 8629 0006 F860     		str	r0, [r7, #12]
 8630 0008 3B1D     		adds	r3, r7, #4
 8631 000a 83E80600 		stm	r3, {r1, r2}
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_impl._M_finish = __pos; }
 8632              		.loc 6 1329 9
 8633 000e FB68     		ldr	r3, [r7, #12]
 8634 0010 0833     		adds	r3, r3, #8
 8635 0012 3A1D     		adds	r2, r7, #4
 8636 0014 92E80300 		ldm	r2, {r0, r1}
 8637 0018 83E80300 		stm	r3, {r0, r1}
 8638              		.loc 6 1329 42
 8639 001c 00BF     		nop
 8640 001e 1437     		adds	r7, r7, #20
 8641              		.cfi_def_cfa_offset 4
 8642 0020 BD46     		mov	sp, r7
 8643              		.cfi_def_cfa_register 13
 8644              		@ sp needed
 8645 0022 5DF8047B 		ldr	r7, [sp], #4
 8646              		.cfi_restore 7
 8647              		.cfi_def_cfa_offset 0
 8648 0026 7047     		bx	lr
 8649              		.cfi_endproc
 8650              	.LFE5599:
 8652              		.section	.text._ZNSt6vectorIbSaIbEE5beginEv,"axG",%progbits,_ZNSt6vectorIbSaIbEE5beginEv,comdat
 8653              		.align	1
 8654              		.weak	_ZNSt6vectorIbSaIbEE5beginEv
 8655              		.syntax unified
 8656              		.thumb
 8657              		.thumb_func
 8658              		.fpu fpv5-d16
 8660              	_ZNSt6vectorIbSaIbEE5beginEv:
 8661              	.LFB5600:
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return iterator(this->_M_impl._M_start._M_p, 0); }
 8662              		.loc 6 834 7
 8663              		.cfi_startproc
 8664              		@ args = 0, pretend = 0, frame = 8
 8665              		@ frame_needed = 1, uses_anonymous_args = 0
 8666 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 362


 8667              		.cfi_def_cfa_offset 8
 8668              		.cfi_offset 7, -8
 8669              		.cfi_offset 14, -4
 8670 0002 82B0     		sub	sp, sp, #8
 8671              		.cfi_def_cfa_offset 16
 8672 0004 00AF     		add	r7, sp, #0
 8673              		.cfi_def_cfa_register 7
 8674 0006 7860     		str	r0, [r7, #4]
 8675 0008 3960     		str	r1, [r7]
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8676              		.loc 6 835 55
 8677 000a 3B68     		ldr	r3, [r7]
 8678 000c 1B68     		ldr	r3, [r3]
 8679 000e 0022     		movs	r2, #0
 8680 0010 1946     		mov	r1, r3
 8681 0012 7868     		ldr	r0, [r7, #4]
 8682 0014 FFF7FEFF 		bl	_ZNSt13_Bit_iteratorC1EPmj
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8683              		.loc 6 835 58
 8684 0018 7868     		ldr	r0, [r7, #4]
 8685 001a 0837     		adds	r7, r7, #8
 8686              		.cfi_def_cfa_offset 8
 8687 001c BD46     		mov	sp, r7
 8688              		.cfi_def_cfa_register 13
 8689              		@ sp needed
 8690 001e 80BD     		pop	{r7, pc}
 8691              		.cfi_endproc
 8692              	.LFE5600:
 8694              		.section	.text._ZNSt6vectorIbSaIbEE3endEv,"axG",%progbits,_ZNSt6vectorIbSaIbEE3endEv,comdat
 8695              		.align	1
 8696              		.weak	_ZNSt6vectorIbSaIbEE3endEv
 8697              		.syntax unified
 8698              		.thumb
 8699              		.thumb_func
 8700              		.fpu fpv5-d16
 8702              	_ZNSt6vectorIbSaIbEE3endEv:
 8703              	.LFB5601:
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 8704              		.loc 6 842 7
 8705              		.cfi_startproc
 8706              		@ args = 0, pretend = 0, frame = 8
 8707              		@ frame_needed = 1, uses_anonymous_args = 0
 8708              		@ link register save eliminated.
 8709 0000 80B4     		push	{r7}
 8710              		.cfi_def_cfa_offset 4
 8711              		.cfi_offset 7, -4
 8712 0002 83B0     		sub	sp, sp, #12
 8713              		.cfi_def_cfa_offset 16
 8714 0004 00AF     		add	r7, sp, #0
 8715              		.cfi_def_cfa_register 7
 8716 0006 7860     		str	r0, [r7, #4]
 8717 0008 3960     		str	r1, [r7]
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8718              		.loc 6 843 30
 8719 000a 7A68     		ldr	r2, [r7, #4]
 8720 000c 3B68     		ldr	r3, [r7]
 8721 000e 0833     		adds	r3, r3, #8
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 363


 8722 0010 93E80300 		ldm	r3, {r0, r1}
 8723 0014 82E80300 		stm	r2, {r0, r1}
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8724              		.loc 6 843 41
 8725 0018 7868     		ldr	r0, [r7, #4]
 8726 001a 0C37     		adds	r7, r7, #12
 8727              		.cfi_def_cfa_offset 4
 8728 001c BD46     		mov	sp, r7
 8729              		.cfi_def_cfa_register 13
 8730              		@ sp needed
 8731 001e 5DF8047B 		ldr	r7, [sp], #4
 8732              		.cfi_restore 7
 8733              		.cfi_def_cfa_offset 0
 8734 0022 7047     		bx	lr
 8735              		.cfi_endproc
 8736              	.LFE5601:
 8738              		.section	.text._ZNSt6vectorIbSaIbEE6insertESt19_Bit_const_iteratorjRKb,"axG",%progbits,_ZNSt6vecto
 8739              		.align	1
 8740              		.weak	_ZNSt6vectorIbSaIbEE6insertESt19_Bit_const_iteratorjRKb
 8741              		.syntax unified
 8742              		.thumb
 8743              		.thumb_func
 8744              		.fpu fpv5-d16
 8746              	_ZNSt6vectorIbSaIbEE6insertESt19_Bit_const_iteratorjRKb:
 8747              	.LFB5602:
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 8748              		.loc 6 1045 7
 8749              		.cfi_startproc
 8750              		@ args = 8, pretend = 0, frame = 48
 8751              		@ frame_needed = 1, uses_anonymous_args = 0
 8752 0000 80B5     		push	{r7, lr}
 8753              		.cfi_def_cfa_offset 8
 8754              		.cfi_offset 7, -8
 8755              		.cfi_offset 14, -4
 8756 0002 8EB0     		sub	sp, sp, #56
 8757              		.cfi_def_cfa_offset 64
 8758 0004 02AF     		add	r7, sp, #8
 8759              		.cfi_def_cfa 7, 56
 8760 0006 F860     		str	r0, [r7, #12]
 8761 0008 B960     		str	r1, [r7, #8]
 8762 000a 3946     		mov	r1, r7
 8763 000c 81E80C00 		stm	r1, {r2, r3}
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_fill_insert(__position._M_const_cast(), __n, __x);
 8764              		.loc 6 1047 48
 8765 0010 07F11403 		add	r3, r7, #20
 8766 0014 B968     		ldr	r1, [r7, #8]
 8767 0016 1846     		mov	r0, r3
 8768 0018 FFF7FEFF 		bl	_ZNKSt6vectorIbSaIbEE6cbeginEv
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_fill_insert(__position._M_const_cast(), __n, __x);
 8769              		.loc 6 1047 40
 8770 001c 07F11402 		add	r2, r7, #20
 8771 0020 3B46     		mov	r3, r7
 8772 0022 1146     		mov	r1, r2
 8773 0024 1846     		mov	r0, r3
 8774 0026 FFF7FEFF 		bl	_ZStmiRKSt18_Bit_iterator_baseS1_
 8775 002a F862     		str	r0, [r7, #44]
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return begin() + __offset;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 364


 8776              		.loc 6 1048 16
 8777 002c 07F11C03 		add	r3, r7, #28
 8778 0030 3A46     		mov	r2, r7
 8779 0032 1146     		mov	r1, r2
 8780 0034 1846     		mov	r0, r3
 8781 0036 FFF7FEFF 		bl	_ZNKSt19_Bit_const_iterator13_M_const_castEv
 8782 003a FB6B     		ldr	r3, [r7, #60]
 8783 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8784 003e 0093     		str	r3, [sp]
 8785 0040 BB6B     		ldr	r3, [r7, #56]
 8786 0042 07F11C02 		add	r2, r7, #28
 8787 0046 06CA     		ldm	r2, {r1, r2}
 8788 0048 B868     		ldr	r0, [r7, #8]
 8789 004a FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratorjb
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 8790              		.loc 6 1049 14
 8791 004e 07F12403 		add	r3, r7, #36
 8792 0052 B968     		ldr	r1, [r7, #8]
 8793 0054 1846     		mov	r0, r3
 8794 0056 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE5beginEv
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 8795              		.loc 6 1049 17
 8796 005a FB68     		ldr	r3, [r7, #12]
 8797 005c 07F12401 		add	r1, r7, #36
 8798 0060 FA6A     		ldr	r2, [r7, #44]
 8799 0062 1846     		mov	r0, r3
 8800 0064 FFF7FEFF 		bl	_ZStplRKSt13_Bit_iteratori
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 8801              		.loc 6 1049 19
 8802 0068 00BF     		nop
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 8803              		.loc 6 1050 7
 8804 006a F868     		ldr	r0, [r7, #12]
 8805 006c 3037     		adds	r7, r7, #48
 8806              		.cfi_def_cfa_offset 8
 8807 006e BD46     		mov	sp, r7
 8808              		.cfi_def_cfa_register 13
 8809              		@ sp needed
 8810 0070 80BD     		pop	{r7, pc}
 8811              		.cfi_endproc
 8812              	.LFE5602:
 8814              		.section	.text._ZN7daisysp9DelayLineIfLj96000EE5ResetEv,"axG",%progbits,_ZN7daisysp9DelayLineIfLj9
 8815              		.align	1
 8816              		.weak	_ZN7daisysp9DelayLineIfLj96000EE5ResetEv
 8817              		.syntax unified
 8818              		.thumb
 8819              		.thumb_func
 8820              		.fpu fpv5-d16
 8822              	_ZN7daisysp9DelayLineIfLj96000EE5ResetEv:
 8823              	.LFB5603:
  30:../../DaisySP/Source/Utility/delayline.h ****     {
 8824              		.loc 29 30 10
 8825              		.cfi_startproc
 8826              		@ args = 0, pretend = 0, frame = 16
 8827              		@ frame_needed = 1, uses_anonymous_args = 0
 8828              		@ link register save eliminated.
 8829 0000 80B4     		push	{r7}
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 365


 8830              		.cfi_def_cfa_offset 4
 8831              		.cfi_offset 7, -4
 8832 0002 85B0     		sub	sp, sp, #20
 8833              		.cfi_def_cfa_offset 24
 8834 0004 00AF     		add	r7, sp, #0
 8835              		.cfi_def_cfa_register 7
 8836 0006 7860     		str	r0, [r7, #4]
 8837              	.LBB71:
  32:../../DaisySP/Source/Utility/delayline.h ****         {
 8838              		.loc 29 32 20
 8839 0008 0023     		movs	r3, #0
 8840 000a FB60     		str	r3, [r7, #12]
 8841              	.L361:
  32:../../DaisySP/Source/Utility/delayline.h ****         {
 8842              		.loc 29 32 29 discriminator 3
 8843 000c FB68     		ldr	r3, [r7, #12]
 8844 000e 0E4A     		ldr	r2, .L362
 8845 0010 9342     		cmp	r3, r2
 8846 0012 0CD8     		bhi	.L360
  34:../../DaisySP/Source/Utility/delayline.h ****         }
 8847              		.loc 29 34 22 discriminator 2
 8848 0014 7A68     		ldr	r2, [r7, #4]
 8849 0016 FB68     		ldr	r3, [r7, #12]
 8850 0018 0233     		adds	r3, r3, #2
 8851 001a 9B00     		lsls	r3, r3, #2
 8852 001c 1344     		add	r3, r3, r2
 8853 001e 0433     		adds	r3, r3, #4
 8854 0020 4FF00002 		mov	r2, #0
 8855 0024 1A60     		str	r2, [r3]	@ float
  32:../../DaisySP/Source/Utility/delayline.h ****         {
 8856              		.loc 29 32 9 discriminator 2
 8857 0026 FB68     		ldr	r3, [r7, #12]
 8858 0028 0133     		adds	r3, r3, #1
 8859 002a FB60     		str	r3, [r7, #12]
 8860 002c EEE7     		b	.L361
 8861              	.L360:
 8862              	.LBE71:
  36:../../DaisySP/Source/Utility/delayline.h ****         delay_     = 1;
 8863              		.loc 29 36 20
 8864 002e 7B68     		ldr	r3, [r7, #4]
 8865 0030 0022     		movs	r2, #0
 8866 0032 5A60     		str	r2, [r3, #4]
  37:../../DaisySP/Source/Utility/delayline.h ****     }
 8867              		.loc 29 37 20
 8868 0034 7B68     		ldr	r3, [r7, #4]
 8869 0036 0122     		movs	r2, #1
 8870 0038 9A60     		str	r2, [r3, #8]
  38:../../DaisySP/Source/Utility/delayline.h **** 
 8871              		.loc 29 38 5
 8872 003a 00BF     		nop
 8873 003c 1437     		adds	r7, r7, #20
 8874              		.cfi_def_cfa_offset 4
 8875 003e BD46     		mov	sp, r7
 8876              		.cfi_def_cfa_register 13
 8877              		@ sp needed
 8878 0040 5DF8047B 		ldr	r7, [sp], #4
 8879              		.cfi_restore 7
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 366


 8880              		.cfi_def_cfa_offset 0
 8881 0044 7047     		bx	lr
 8882              	.L363:
 8883 0046 00BF     		.align	2
 8884              	.L362:
 8885 0048 FF760100 		.word	95999
 8886              		.cfi_endproc
 8887              	.LFE5603:
 8889              		.section	.text._ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj429496729
 8890              		.align	1
 8891              		.weak	_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2
 8892              		.syntax unified
 8893              		.thumb
 8894              		.thumb_func
 8895              		.fpu fpv5-d16
 8897              	_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj26369286
 8898              	.LFB5604:
 8899              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\random.tcc
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // random number generation (out of line) -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // Copyright (C) 2009-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** /** @file bits/random.tcc
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****  *  Do not attempt to use it directly. @headername{random}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** #ifndef _RANDOM_TCC
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** #define _RANDOM_TCC 1
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** #include <numeric> // std::accumulate and std::partial_sum
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** {
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   /*
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 367


  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * (Further) implementation-space details.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    */
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   namespace __detail
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   {
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     // General case for x = (ax + c) mod m -- use Schrage's algorithm
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     // to avoid integer overflow.
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     //
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     // Preconditions:  a > 0, m > 0.
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     //
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     // Note: only works correctly for __m % __a < __m / __a.
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c>
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _Tp
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _Mod<_Tp, __m, __a, __c, false, true>::
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __calc(_Tp __x)
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	if (__a == 1)
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __x %= __m;
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	else
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    static const _Tp __q = __m / __a;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    static const _Tp __r = __m % __a;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _Tp __t1 = __a * (__x % __q);
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _Tp __t2 = __r * (__x / __q);
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    if (__t1 >= __t2)
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __x = __t1 - __t2;
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    else
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __x = __m - __t2 + __t1;
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	if (__c != 0)
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const _Tp __d = __m - __x;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    if (__d > __c)
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __x += __c;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    else
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __x = __c - __d;
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	return __x;
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _InputIterator, typename _OutputIterator,
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _Tp>
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _OutputIterator
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __normalize(_InputIterator __first, _InputIterator __last,
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  _OutputIterator __result, const _Tp& __factor)
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	for (; __first != __last; ++__first, ++__result)
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  *__result = *__first / __factor;
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	return __result;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   } // namespace __detail
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::multiplier;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 368


  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::increment;
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::modulus;
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::default_seed;
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   /**
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * Seeds the LCR with integral value @p __s, adjusted so that the
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * ring identity is never a member of the convergence set.
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    */
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     void
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     seed(result_type __s)
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if ((__detail::__mod<_UIntType, __m>(__c) == 0)
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  && (__detail::__mod<_UIntType, __m>(__s) == 0))
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_x = 1;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       else
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_x = __detail::__mod<_UIntType, __m>(__s);
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   /**
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * Seeds the LCR engine with a value generated by @p __q.
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    */
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _Sseq>
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       auto
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       linear_congruential_engine<_UIntType, __a, __c, __m>::
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       seed(_Sseq& __q)
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       -> _If_seed_seq<_Sseq>
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const _UIntType __k0 = __m == 0 ? std::numeric_limits<_UIntType>::digits
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	                                : std::__lg(__m);
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const _UIntType __k = (__k0 + 31) / 32;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	uint_least32_t __arr[__k + 3];
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__q.generate(__arr + 0, __arr + __k + 3);
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_UIntType __factor = 1u;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_UIntType __sum = 0u;
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	for (size_t __j = 0; __j < __k; ++__j)
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __sum += __arr[__j + 3] * __factor;
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __factor *= __detail::_Shift<_UIntType, 32>::__value;
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	seed(__sum);
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m,
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   typename _CharT, typename _Traits>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 369


 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const linear_congruential_engine<_UIntType,
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 						__a, __c, __m>& __lcr)
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::dec | __ios_base::fixed | __ios_base::left);
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__os.widen(' '));
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __lcr._M_x;
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m,
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   typename _CharT, typename _Traits>
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       linear_congruential_engine<_UIntType, __a, __c, __m>& __lcr)
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::dec);
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is >> __lcr._M_x;
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr size_t
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::word_size;
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr size_t
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::state_size;
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 370


 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr size_t
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::shift_size;
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr size_t
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::mask_bits;
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::xor_mask;
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr size_t
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_u;
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_d;
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr size_t
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_s;
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 371


 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_b;
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr size_t
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_t;
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_c;
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr size_t
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_l;
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****                                               initialization_multiplier;
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::default_seed;
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     void
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 8900              		.loc 33 323 5
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 372


 8901              		.cfi_startproc
 8902              		@ args = 0, pretend = 0, frame = 16
 8903              		@ frame_needed = 1, uses_anonymous_args = 0
 8904 0000 80B5     		push	{r7, lr}
 8905              		.cfi_def_cfa_offset 8
 8906              		.cfi_offset 7, -8
 8907              		.cfi_offset 14, -4
 8908 0002 84B0     		sub	sp, sp, #16
 8909              		.cfi_def_cfa_offset 24
 8910 0004 00AF     		add	r7, sp, #0
 8911              		.cfi_def_cfa_register 7
 8912 0006 7860     		str	r0, [r7, #4]
 8913 0008 3960     		str	r1, [r7]
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     seed(result_type __sd)
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_x[0] = __detail::__mod<_UIntType,
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Shift<_UIntType, __w>::__value>(__sd);
 8914              		.loc 33 328 44
 8915 000a 3868     		ldr	r0, [r7]
 8916 000c FFF7FEFF 		bl	_ZNSt8__detail5__modIjLj0ELj1ELj0EEET_S1_
 8917 0010 0246     		mov	r2, r0
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Shift<_UIntType, __w>::__value>(__sd);
 8918              		.loc 33 327 15
 8919 0012 7B68     		ldr	r3, [r7, #4]
 8920 0014 1A60     		str	r2, [r3]
 8921              	.LBB72:
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (size_t __i = 1; __i < state_size; ++__i)
 8922              		.loc 33 330 19
 8923 0016 0123     		movs	r3, #1
 8924 0018 FB60     		str	r3, [r7, #12]
 8925              	.L366:
 8926              		.loc 33 330 32 discriminator 3
 8927 001a FB68     		ldr	r3, [r7, #12]
 8928 001c B3F51C7F 		cmp	r3, #624
 8929 0020 22D2     		bcs	.L365
 8930              	.LBB73:
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _UIntType __x = _M_x[__i - 1];
 8931              		.loc 33 332 29 discriminator 2
 8932 0022 FB68     		ldr	r3, [r7, #12]
 8933 0024 5A1E     		subs	r2, r3, #1
 8934              		.loc 33 332 14 discriminator 2
 8935 0026 7B68     		ldr	r3, [r7, #4]
 8936 0028 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8937 002c BB60     		str	r3, [r7, #8]
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __x ^= __x >> (__w - 2);
 8938              		.loc 33 333 15 discriminator 2
 8939 002e BB68     		ldr	r3, [r7, #8]
 8940 0030 9B0F     		lsrs	r3, r3, #30
 8941              		.loc 33 333 8 discriminator 2
 8942 0032 BA68     		ldr	r2, [r7, #8]
 8943 0034 5340     		eors	r3, r3, r2
 8944 0036 BB60     		str	r3, [r7, #8]
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __x *= __f;
 8945              		.loc 33 334 8 discriminator 2
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 373


 8946 0038 BB68     		ldr	r3, [r7, #8]
 8947 003a 104A     		ldr	r2, .L367
 8948 003c 02FB03F3 		mul	r3, r2, r3
 8949 0040 BB60     		str	r3, [r7, #8]
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __x += __detail::__mod<_UIntType, __n>(__i);
 8950              		.loc 33 335 42 discriminator 2
 8951 0042 F868     		ldr	r0, [r7, #12]
 8952 0044 FFF7FEFF 		bl	_ZNSt8__detail5__modIjLj624ELj1ELj0EEET_S1_
 8953 0048 0246     		mov	r2, r0
 8954              		.loc 33 335 8 discriminator 2
 8955 004a BB68     		ldr	r3, [r7, #8]
 8956 004c 1344     		add	r3, r3, r2
 8957 004e BB60     		str	r3, [r7, #8]
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_x[__i] = __detail::__mod<_UIntType,
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __detail::_Shift<_UIntType, __w>::__value>(__x);
 8958              		.loc 33 337 48 discriminator 2
 8959 0050 B868     		ldr	r0, [r7, #8]
 8960 0052 FFF7FEFF 		bl	_ZNSt8__detail5__modIjLj0ELj1ELj0EEET_S1_
 8961 0056 0146     		mov	r1, r0
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_x[__i] = __detail::__mod<_UIntType,
 8962              		.loc 33 336 14 discriminator 2
 8963 0058 7B68     		ldr	r3, [r7, #4]
 8964 005a FA68     		ldr	r2, [r7, #12]
 8965 005c 43F82210 		str	r1, [r3, r2, lsl #2]
 8966              	.LBE73:
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 8967              		.loc 33 330 7 discriminator 2
 8968 0060 FB68     		ldr	r3, [r7, #12]
 8969 0062 0133     		adds	r3, r3, #1
 8970 0064 FB60     		str	r3, [r7, #12]
 8971 0066 D8E7     		b	.L366
 8972              	.L365:
 8973              	.LBE72:
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_p = state_size;
 8974              		.loc 33 339 12
 8975 0068 7B68     		ldr	r3, [r7, #4]
 8976 006a 4FF41C72 		mov	r2, #624
 8977 006e C3F8C029 		str	r2, [r3, #2496]
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 8978              		.loc 33 340 5
 8979 0072 00BF     		nop
 8980 0074 1037     		adds	r7, r7, #16
 8981              		.cfi_def_cfa_offset 8
 8982 0076 BD46     		mov	sp, r7
 8983              		.cfi_def_cfa_register 13
 8984              		@ sp needed
 8985 0078 80BD     		pop	{r7, pc}
 8986              	.L368:
 8987 007a 00BF     		.align	2
 8988              	.L367:
 8989 007c 6589076C 		.word	1812433253
 8990              		.cfi_endproc
 8991              	.LFE5604:
 8993              		.section	.text._ZNSt25uniform_real_distributionIfE10param_typeC2Eff,"axG",%progbits,_ZNSt25uniform
 8994              		.align	1
 8995              		.weak	_ZNSt25uniform_real_distributionIfE10param_typeC2Eff
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 374


 8996              		.syntax unified
 8997              		.thumb
 8998              		.thumb_func
 8999              		.fpu fpv5-d16
 9001              	_ZNSt25uniform_real_distributionIfE10param_typeC2Eff:
 9002              	.LFB5606:
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_a(__a), _M_b(__b)
 9003              		.loc 18 1748 2
 9004              		.cfi_startproc
 9005              		@ args = 0, pretend = 0, frame = 16
 9006              		@ frame_needed = 1, uses_anonymous_args = 0
 9007              		@ link register save eliminated.
 9008 0000 80B4     		push	{r7}
 9009              		.cfi_def_cfa_offset 4
 9010              		.cfi_offset 7, -4
 9011 0002 85B0     		sub	sp, sp, #20
 9012              		.cfi_def_cfa_offset 24
 9013 0004 00AF     		add	r7, sp, #0
 9014              		.cfi_def_cfa_register 7
 9015 0006 F860     		str	r0, [r7, #12]
 9016 0008 87ED020A 		vstr.32	s0, [r7, #8]
 9017 000c C7ED010A 		vstr.32	s1, [r7, #4]
 9018              	.LBB74:
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
 9019              		.loc 18 1749 23
 9020 0010 FB68     		ldr	r3, [r7, #12]
 9021 0012 BA68     		ldr	r2, [r7, #8]	@ float
 9022 0014 1A60     		str	r2, [r3]	@ float
 9023 0016 FB68     		ldr	r3, [r7, #12]
 9024 0018 7A68     		ldr	r2, [r7, #4]	@ float
 9025 001a 5A60     		str	r2, [r3, #4]	@ float
 9026              	.LBE74:
1752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 9027              		.loc 18 1752 2
 9028 001c FB68     		ldr	r3, [r7, #12]
 9029 001e 1846     		mov	r0, r3
 9030 0020 1437     		adds	r7, r7, #20
 9031              		.cfi_def_cfa_offset 4
 9032 0022 BD46     		mov	sp, r7
 9033              		.cfi_def_cfa_register 13
 9034              		@ sp needed
 9035 0024 5DF8047B 		ldr	r7, [sp], #4
 9036              		.cfi_restore 7
 9037              		.cfi_def_cfa_offset 0
 9038 0028 7047     		bx	lr
 9039              		.cfi_endproc
 9040              	.LFE5606:
 9042              		.weak	_ZNSt25uniform_real_distributionIfE10param_typeC1Eff
 9043              		.thumb_set _ZNSt25uniform_real_distributionIfE10param_typeC1Eff,_ZNSt25uniform_real_distributionIf
 9044              		.section	.text._ZNSt25uniform_real_distributionIfEclISt23mersenne_twister_engineIjLj32ELj624ELj397
 9045              		.align	1
 9046              		.weak	_ZNSt25uniform_real_distributionIfEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2
 9047              		.syntax unified
 9048              		.thumb
 9049              		.thumb_func
 9050              		.fpu fpv5-d16
 9052              	_ZNSt25uniform_real_distributionIfEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj25674836
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 375


 9053              	.LFB5608:
1851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
1852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       template<typename _UniformRandomNumberGenerator>
1853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	result_type
1854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	operator()(_UniformRandomNumberGenerator& __urng,
 9054              		.loc 18 1854 2
 9055              		.cfi_startproc
 9056              		@ args = 0, pretend = 0, frame = 24
 9057              		@ frame_needed = 1, uses_anonymous_args = 0
 9058 0000 80B5     		push	{r7, lr}
 9059              		.cfi_def_cfa_offset 8
 9060              		.cfi_offset 7, -8
 9061              		.cfi_offset 14, -4
 9062 0002 2DED028B 		vpush.64	{d8}
 9063              		.cfi_def_cfa_offset 16
 9064              		.cfi_offset 80, -16
 9065              		.cfi_offset 81, -12
 9066 0006 86B0     		sub	sp, sp, #24
 9067              		.cfi_def_cfa_offset 40
 9068 0008 00AF     		add	r7, sp, #0
 9069              		.cfi_def_cfa_register 7
 9070 000a F860     		str	r0, [r7, #12]
 9071 000c B960     		str	r1, [r7, #8]
 9072 000e 7A60     		str	r2, [r7, #4]
1855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 		   const param_type& __p)
1856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
1857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  __detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
1858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	    __aurng(__urng);
 9073              		.loc 18 1858 6
 9074 0010 07F11403 		add	r3, r7, #20
 9075 0014 B968     		ldr	r1, [r7, #8]
 9076 0016 1846     		mov	r0, r3
 9077 0018 FFF7FEFF 		bl	_ZNSt8__detail8_AdaptorISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj
1859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return (__aurng() * (__p.b() - __p.a())) + __p.a();
 9078              		.loc 18 1859 19
 9079 001c 07F11403 		add	r3, r7, #20
 9080 0020 1846     		mov	r0, r3
 9081 0022 FFF7FEFF 		bl	_ZNSt8__detail8_AdaptorISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj
 9082 0026 B0EE408A 		vmov.f32	s16, s0
 9083              		.loc 18 1859 30
 9084 002a 7868     		ldr	r0, [r7, #4]
 9085 002c FFF7FEFF 		bl	_ZNKSt25uniform_real_distributionIfE10param_type1bEv
 9086 0030 F0EE408A 		vmov.f32	s17, s0
 9087              		.loc 18 1859 40
 9088 0034 7868     		ldr	r0, [r7, #4]
 9089 0036 FFF7FEFF 		bl	_ZNKSt25uniform_real_distributionIfE10param_type1aEv
 9090 003a F0EE407A 		vmov.f32	s15, s0
 9091              		.loc 18 1859 33
 9092 003e 78EEE77A 		vsub.f32	s15, s17, s15
 9093              		.loc 18 1859 22
 9094 0042 28EE278A 		vmul.f32	s16, s16, s15
 9095              		.loc 18 1859 52
 9096 0046 7868     		ldr	r0, [r7, #4]
 9097 0048 FFF7FEFF 		bl	_ZNKSt25uniform_real_distributionIfE10param_type1aEv
 9098 004c F0EE407A 		vmov.f32	s15, s0
 9099              		.loc 18 1859 53
 9100 0050 78EE277A 		vadd.f32	s15, s16, s15
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 376


1860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	}
 9101              		.loc 18 1860 2
 9102 0054 B0EE670A 		vmov.f32	s0, s15
 9103 0058 1837     		adds	r7, r7, #24
 9104              		.cfi_def_cfa_offset 16
 9105 005a BD46     		mov	sp, r7
 9106              		.cfi_def_cfa_register 13
 9107              		@ sp needed
 9108 005c BDEC028B 		vldm	sp!, {d8}
 9109              		.cfi_restore 80
 9110              		.cfi_restore 81
 9111              		.cfi_def_cfa_offset 8
 9112 0060 80BD     		pop	{r7, pc}
 9113              		.cfi_endproc
 9114              	.LFE5608:
 9116              		.section	.text._ZN9__gnu_cxx13new_allocatorImEC2Ev,"axG",%progbits,_ZN9__gnu_cxx13new_allocatorImE
 9117              		.align	1
 9118              		.weak	_ZN9__gnu_cxx13new_allocatorImEC2Ev
 9119              		.syntax unified
 9120              		.thumb
 9121              		.thumb_func
 9122              		.fpu fpv5-d16
 9124              	_ZN9__gnu_cxx13new_allocatorImEC2Ev:
 9125              	.LFB5645:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9126              		.loc 30 79 7
 9127              		.cfi_startproc
 9128              		@ args = 0, pretend = 0, frame = 8
 9129              		@ frame_needed = 1, uses_anonymous_args = 0
 9130              		@ link register save eliminated.
 9131 0000 80B4     		push	{r7}
 9132              		.cfi_def_cfa_offset 4
 9133              		.cfi_offset 7, -4
 9134 0002 83B0     		sub	sp, sp, #12
 9135              		.cfi_def_cfa_offset 16
 9136 0004 00AF     		add	r7, sp, #0
 9137              		.cfi_def_cfa_register 7
 9138 0006 7860     		str	r0, [r7, #4]
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9139              		.loc 30 79 47
 9140 0008 7B68     		ldr	r3, [r7, #4]
 9141 000a 1846     		mov	r0, r3
 9142 000c 0C37     		adds	r7, r7, #12
 9143              		.cfi_def_cfa_offset 4
 9144 000e BD46     		mov	sp, r7
 9145              		.cfi_def_cfa_register 13
 9146              		@ sp needed
 9147 0010 5DF8047B 		ldr	r7, [sp], #4
 9148              		.cfi_restore 7
 9149              		.cfi_def_cfa_offset 0
 9150 0014 7047     		bx	lr
 9151              		.cfi_endproc
 9152              	.LFE5645:
 9154              		.weak	_ZN9__gnu_cxx13new_allocatorImEC1Ev
 9155              		.thumb_set _ZN9__gnu_cxx13new_allocatorImEC1Ev,_ZN9__gnu_cxx13new_allocatorImEC2Ev
 9156              		.section	.text._ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmj,"axG",%progbits,_ZNSt16allocator
 9157              		.align	1
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 377


 9158              		.weak	_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmj
 9159              		.syntax unified
 9160              		.thumb
 9161              		.thumb_func
 9162              		.fpu fpv5-d16
 9164              	_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmj:
 9165              	.LFB5647:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 9166              		.loc 31 491 7
 9167              		.cfi_startproc
 9168              		@ args = 0, pretend = 0, frame = 16
 9169              		@ frame_needed = 1, uses_anonymous_args = 0
 9170 0000 80B5     		push	{r7, lr}
 9171              		.cfi_def_cfa_offset 8
 9172              		.cfi_offset 7, -8
 9173              		.cfi_offset 14, -4
 9174 0002 84B0     		sub	sp, sp, #16
 9175              		.cfi_def_cfa_offset 24
 9176 0004 00AF     		add	r7, sp, #0
 9177              		.cfi_def_cfa_register 7
 9178 0006 F860     		str	r0, [r7, #12]
 9179 0008 B960     		str	r1, [r7, #8]
 9180 000a 7A60     		str	r2, [r7, #4]
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 9181              		.loc 31 492 23
 9182 000c 7A68     		ldr	r2, [r7, #4]
 9183 000e B968     		ldr	r1, [r7, #8]
 9184 0010 F868     		ldr	r0, [r7, #12]
 9185 0012 FFF7FEFF 		bl	_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmj
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 9186              		.loc 31 492 35
 9187 0016 00BF     		nop
 9188 0018 1037     		adds	r7, r7, #16
 9189              		.cfi_def_cfa_offset 8
 9190 001a BD46     		mov	sp, r7
 9191              		.cfi_def_cfa_register 13
 9192              		@ sp needed
 9193 001c 80BD     		pop	{r7, pc}
 9194              		.cfi_endproc
 9195              	.LFE5647:
 9197              		.section	.text._ZN9__gnu_cxx13new_allocatorIdEC2Ev,"axG",%progbits,_ZN9__gnu_cxx13new_allocatorIdE
 9198              		.align	1
 9199              		.weak	_ZN9__gnu_cxx13new_allocatorIdEC2Ev
 9200              		.syntax unified
 9201              		.thumb
 9202              		.thumb_func
 9203              		.fpu fpv5-d16
 9205              	_ZN9__gnu_cxx13new_allocatorIdEC2Ev:
 9206              	.LFB5652:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9207              		.loc 30 79 7
 9208              		.cfi_startproc
 9209              		@ args = 0, pretend = 0, frame = 8
 9210              		@ frame_needed = 1, uses_anonymous_args = 0
 9211              		@ link register save eliminated.
 9212 0000 80B4     		push	{r7}
 9213              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 378


 9214              		.cfi_offset 7, -4
 9215 0002 83B0     		sub	sp, sp, #12
 9216              		.cfi_def_cfa_offset 16
 9217 0004 00AF     		add	r7, sp, #0
 9218              		.cfi_def_cfa_register 7
 9219 0006 7860     		str	r0, [r7, #4]
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9220              		.loc 30 79 47
 9221 0008 7B68     		ldr	r3, [r7, #4]
 9222 000a 1846     		mov	r0, r3
 9223 000c 0C37     		adds	r7, r7, #12
 9224              		.cfi_def_cfa_offset 4
 9225 000e BD46     		mov	sp, r7
 9226              		.cfi_def_cfa_register 13
 9227              		@ sp needed
 9228 0010 5DF8047B 		ldr	r7, [sp], #4
 9229              		.cfi_restore 7
 9230              		.cfi_def_cfa_offset 0
 9231 0014 7047     		bx	lr
 9232              		.cfi_endproc
 9233              	.LFE5652:
 9235              		.weak	_ZN9__gnu_cxx13new_allocatorIdEC1Ev
 9236              		.thumb_set _ZN9__gnu_cxx13new_allocatorIdEC1Ev,_ZN9__gnu_cxx13new_allocatorIdEC2Ev
 9237              		.section	.text._ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdj,"axG",%progbits,_ZNSt16allocator
 9238              		.align	1
 9239              		.weak	_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdj
 9240              		.syntax unified
 9241              		.thumb
 9242              		.thumb_func
 9243              		.fpu fpv5-d16
 9245              	_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdj:
 9246              	.LFB5654:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 9247              		.loc 31 491 7
 9248              		.cfi_startproc
 9249              		@ args = 0, pretend = 0, frame = 16
 9250              		@ frame_needed = 1, uses_anonymous_args = 0
 9251 0000 80B5     		push	{r7, lr}
 9252              		.cfi_def_cfa_offset 8
 9253              		.cfi_offset 7, -8
 9254              		.cfi_offset 14, -4
 9255 0002 84B0     		sub	sp, sp, #16
 9256              		.cfi_def_cfa_offset 24
 9257 0004 00AF     		add	r7, sp, #0
 9258              		.cfi_def_cfa_register 7
 9259 0006 F860     		str	r0, [r7, #12]
 9260 0008 B960     		str	r1, [r7, #8]
 9261 000a 7A60     		str	r2, [r7, #4]
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 9262              		.loc 31 492 23
 9263 000c 7A68     		ldr	r2, [r7, #4]
 9264 000e B968     		ldr	r1, [r7, #8]
 9265 0010 F868     		ldr	r0, [r7, #12]
 9266 0012 FFF7FEFF 		bl	_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdj
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 9267              		.loc 31 492 35
 9268 0016 00BF     		nop
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 379


 9269 0018 1037     		adds	r7, r7, #16
 9270              		.cfi_def_cfa_offset 8
 9271 001a BD46     		mov	sp, r7
 9272              		.cfi_def_cfa_register 13
 9273              		@ sp needed
 9274 001c 80BD     		pop	{r7, pc}
 9275              		.cfi_endproc
 9276              	.LFE5654:
 9278              		.section	.text._ZSt8_DestroyIPdEvT_S1_,"axG",%progbits,_ZSt8_DestroyIPdEvT_S1_,comdat
 9279              		.align	1
 9280              		.weak	_ZSt8_DestroyIPdEvT_S1_
 9281              		.syntax unified
 9282              		.thumb
 9283              		.thumb_func
 9284              		.fpu fpv5-d16
 9286              	_ZSt8_DestroyIPdEvT_S1_:
 9287              	.LFB5655:
 9288              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_constr
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Copyright (c) 1996,1997
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 380


  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** /** @file bits/stl_construct.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <new>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <bits/move.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <bits/stl_iterator_base_types.h> // for iterator_traits
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <bits/stl_iterator_base_funcs.h> // for advance
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** /* This file provides the C++17 functions std::destroy_at, std::destroy, and
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * std::destroy_n, and the C++20 function std::construct_at.
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * It also provides std::_Construct, std::_Destroy,and std::_Destroy_n functions
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * which are defined in all standard modes and so can be used in C++98-14 code.
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * The _Destroy functions will dispatch to destroy_at during constant
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * evaluation, because calls to that function are intercepted by the compiler
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * to allow use in constant expressions.
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  */
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** {
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus >= 201703L
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template <typename _Tp>
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX20_CONSTEXPR inline void
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     destroy_at(_Tp* __location)
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       if constexpr (__cplusplus > 201703L && is_array_v<_Tp>)
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	{
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	  for (auto& __x : *__location)
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	    std::destroy_at(std::__addressof(__x));
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	}
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       else
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	__location->~_Tp();
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     }
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus > 201703L
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _Tp, typename... _Args>
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     constexpr auto
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     construct_at(_Tp* __location, _Args&&... __args)
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     noexcept(noexcept(::new((void*)0) _Tp(std::declval<_Args>()...)))
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     -> decltype(::new((void*)0) _Tp(std::declval<_Args>()...))
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 381


  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif // C++20
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif// C++17
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   /**
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * object's constructor with an initializer.
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    */
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus >= 201103L
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _Tp, typename... _Args>
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     inline void
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Construct(_Tp* __p, _Args&&... __args)
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #else
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _T1, typename _T2>
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     inline void
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     }
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _T1>
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     inline void
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Construct_novalue(_T1* __p)
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1; }
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _ForwardIterator>
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX20_CONSTEXPR void
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last);
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   /**
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * Destroy the object pointed to by a pointer type.
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    */
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _Tp>
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX14_CONSTEXPR inline void
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Destroy(_Tp* __pointer)
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus > 201703L
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       std::destroy_at(__pointer);
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #else
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       __pointer->~_Tp();
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     }
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<bool>
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     struct _Destroy_aux
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       template<typename _ForwardIterator>
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	static _GLIBCXX20_CONSTEXPR void
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	__destroy(_ForwardIterator __first, _ForwardIterator __last)
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	{
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	  for (; __first != __last; ++__first)
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	}
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 382


 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     };
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<>
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     struct _Destroy_aux<true>
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       template<typename _ForwardIterator>
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****         static void
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****         __destroy(_ForwardIterator, _ForwardIterator) { }
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     };
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   /**
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    */
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _ForwardIterator>
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX20_CONSTEXPR inline void
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 9289              		.loc 34 171 5
 9290              		.cfi_startproc
 9291              		@ args = 0, pretend = 0, frame = 8
 9292              		@ frame_needed = 1, uses_anonymous_args = 0
 9293 0000 80B5     		push	{r7, lr}
 9294              		.cfi_def_cfa_offset 8
 9295              		.cfi_offset 7, -8
 9296              		.cfi_offset 14, -4
 9297 0002 82B0     		sub	sp, sp, #8
 9298              		.cfi_def_cfa_offset 16
 9299 0004 00AF     		add	r7, sp, #0
 9300              		.cfi_def_cfa_register 7
 9301 0006 7860     		str	r0, [r7, #4]
 9302 0008 3960     		str	r1, [r7]
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****                        _Value_type;
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus >= 201103L
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       // A deleted destructor is trivial, this ensures we reject such types:
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       static_assert(is_destructible<_Value_type>::value,
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 		    "value type is destructible");
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus > 201703L && defined __cpp_lib_is_constant_evaluated
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       if (std::is_constant_evaluated())
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	return _Destroy_aux<false>::__destroy(__first, __last);
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	__destroy(__first, __last);
 9303              		.loc 34 185 11
 9304 000a 3968     		ldr	r1, [r7]
 9305 000c 7868     		ldr	r0, [r7, #4]
 9306 000e FFF7FEFF 		bl	_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     }
 9307              		.loc 34 186 5
 9308 0012 00BF     		nop
 9309 0014 0837     		adds	r7, r7, #8
 9310              		.cfi_def_cfa_offset 8
 9311 0016 BD46     		mov	sp, r7
 9312              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 383


 9313              		@ sp needed
 9314 0018 80BD     		pop	{r7, pc}
 9315              		.cfi_endproc
 9316              	.LFE5655:
 9318              		.section	.text._ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv,"axG",%progbits,_ZNKSt13
 9319              		.align	1
 9320              		.weak	_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv
 9321              		.syntax unified
 9322              		.thumb
 9323              		.thumb_func
 9324              		.fpu fpv5-d16
 9326              	_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv:
 9327              	.LFB5657:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 9328              		.loc 6 513 2
 9329              		.cfi_startproc
 9330              		@ args = 0, pretend = 0, frame = 8
 9331              		@ frame_needed = 1, uses_anonymous_args = 0
 9332 0000 80B5     		push	{r7, lr}
 9333              		.cfi_def_cfa_offset 8
 9334              		.cfi_offset 7, -8
 9335              		.cfi_offset 14, -4
 9336 0002 82B0     		sub	sp, sp, #8
 9337              		.cfi_def_cfa_offset 16
 9338 0004 00AF     		add	r7, sp, #0
 9339              		.cfi_def_cfa_register 7
 9340 0006 7860     		str	r0, [r7, #4]
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 9341              		.loc 6 515 14
 9342 0008 7B68     		ldr	r3, [r7, #4]
 9343 000a 1B69     		ldr	r3, [r3, #16]
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 9344              		.loc 6 515 4
 9345 000c 002B     		cmp	r3, #0
 9346 000e 08D0     		beq	.L381
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  return 0;
 9347              		.loc 6 516 36
 9348 0010 7B68     		ldr	r3, [r7, #4]
 9349 0012 1B69     		ldr	r3, [r3, #16]
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  return 0;
 9350              		.loc 6 516 29
 9351 0014 043B     		subs	r3, r3, #4
 9352 0016 1846     		mov	r0, r3
 9353 0018 FFF7FEFF 		bl	_ZSt11__addressofImEPT_RS0_
 9354 001c 0346     		mov	r3, r0
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  return 0;
 9355              		.loc 6 516 61
 9356 001e 0433     		adds	r3, r3, #4
 9357 0020 00E0     		b	.L382
 9358              	.L381:
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 9359              		.loc 6 517 11
 9360 0022 0023     		movs	r3, #0
 9361              	.L382:
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       };
 9362              		.loc 6 518 2
 9363 0024 1846     		mov	r0, r3
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 384


 9364 0026 0837     		adds	r7, r7, #8
 9365              		.cfi_def_cfa_offset 8
 9366 0028 BD46     		mov	sp, r7
 9367              		.cfi_def_cfa_register 13
 9368              		@ sp needed
 9369 002a 80BD     		pop	{r7, pc}
 9370              		.cfi_endproc
 9371              	.LFE5657:
 9373              		.section	.text._ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv,"axG",%progbits,_ZNSt13_
 9374              		.align	1
 9375              		.weak	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv
 9376              		.syntax unified
 9377              		.thumb
 9378              		.thumb_func
 9379              		.fpu fpv5-d16
 9381              	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv:
 9382              	.LFB5658:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 9383              		.loc 6 488 2
 9384              		.cfi_startproc
 9385              		@ args = 0, pretend = 0, frame = 16
 9386              		@ frame_needed = 1, uses_anonymous_args = 0
 9387 0000 80B5     		push	{r7, lr}
 9388              		.cfi_def_cfa_offset 8
 9389              		.cfi_offset 7, -8
 9390              		.cfi_offset 14, -4
 9391 0002 84B0     		sub	sp, sp, #16
 9392              		.cfi_def_cfa_offset 24
 9393 0004 00AF     		add	r7, sp, #0
 9394              		.cfi_def_cfa_register 7
 9395 0006 7860     		str	r0, [r7, #4]
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 9396              		.loc 6 490 27
 9397 0008 07F10803 		add	r3, r7, #8
 9398 000c 1846     		mov	r0, r3
 9399 000e FFF7FEFF 		bl	_ZNSt13_Bit_iteratorC1Ev
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 9400              		.loc 6 490 4
 9401 0012 7B68     		ldr	r3, [r7, #4]
 9402 0014 0833     		adds	r3, r3, #8
 9403 0016 07F10802 		add	r2, r7, #8
 9404 001a 92E80300 		ldm	r2, {r0, r1}
 9405 001e 83E80300 		stm	r3, {r0, r1}
 9406 0022 7B68     		ldr	r3, [r7, #4]
 9407 0024 03F10802 		add	r2, r3, #8
 9408 0028 7B68     		ldr	r3, [r7, #4]
 9409 002a 92E80300 		ldm	r2, {r0, r1}
 9410 002e 83E80300 		stm	r3, {r0, r1}
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 9411              		.loc 6 491 22
 9412 0032 7B68     		ldr	r3, [r7, #4]
 9413 0034 0022     		movs	r2, #0
 9414 0036 1A61     		str	r2, [r3, #16]
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       };
 9415              		.loc 6 492 2
 9416 0038 00BF     		nop
 9417 003a 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 385


 9418              		.cfi_def_cfa_offset 8
 9419 003c BD46     		mov	sp, r7
 9420              		.cfi_def_cfa_register 13
 9421              		@ sp needed
 9422 003e 80BD     		pop	{r7, pc}
 9423              		.cfi_endproc
 9424              	.LFE5658:
 9426              		.section	.text._ZNSt6vectorIdSaIdEE16_Temporary_valueC2IJRKdEEEPS1_DpOT_,"axG",%progbits,_ZNSt6vec
 9427              		.align	1
 9428              		.weak	_ZNSt6vectorIdSaIdEE16_Temporary_valueC2IJRKdEEEPS1_DpOT_
 9429              		.syntax unified
 9430              		.thumb
 9431              		.thumb_func
 9432              		.fpu fpv5-d16
 9434              	_ZNSt6vectorIdSaIdEE16_Temporary_valueC2IJRKdEEEPS1_DpOT_:
 9435              	.LFB5660:
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 9436              		.loc 23 1709 4
 9437              		.cfi_startproc
 9438              		@ args = 0, pretend = 0, frame = 16
 9439              		@ frame_needed = 1, uses_anonymous_args = 0
 9440 0000 B0B5     		push	{r4, r5, r7, lr}
 9441              		.cfi_def_cfa_offset 16
 9442              		.cfi_offset 4, -16
 9443              		.cfi_offset 5, -12
 9444              		.cfi_offset 7, -8
 9445              		.cfi_offset 14, -4
 9446 0002 84B0     		sub	sp, sp, #16
 9447              		.cfi_def_cfa_offset 32
 9448 0004 00AF     		add	r7, sp, #0
 9449              		.cfi_def_cfa_register 7
 9450 0006 F860     		str	r0, [r7, #12]
 9451 0008 B960     		str	r1, [r7, #8]
 9452 000a 7A60     		str	r2, [r7, #4]
 9453              	.LBB75:
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 9454              		.loc 23 1709 70
 9455 000c FB68     		ldr	r3, [r7, #12]
 9456 000e BA68     		ldr	r2, [r7, #8]
 9457 0010 1A60     		str	r2, [r3]
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     std::forward<_Args>(__args)...);
 9458              		.loc 23 1711 31
 9459 0012 FB68     		ldr	r3, [r7, #12]
 9460 0014 1B68     		ldr	r3, [r3]
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     std::forward<_Args>(__args)...);
 9461              		.loc 23 1711 40
 9462 0016 1D46     		mov	r5, r3
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     std::forward<_Args>(__args)...);
 9463              		.loc 23 1711 30
 9464 0018 F868     		ldr	r0, [r7, #12]
 9465 001a FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEE16_Temporary_value6_M_ptrEv
 9466 001e 0446     		mov	r4, r0
 9467 0020 7868     		ldr	r0, [r7, #4]
 9468 0022 FFF7FEFF 		bl	_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE
 9469 0026 0346     		mov	r3, r0
 9470 0028 1A46     		mov	r2, r3
 9471 002a 2146     		mov	r1, r4
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 386


 9472 002c 2846     		mov	r0, r5
 9473 002e FFF7FEFF 		bl	_ZNSt16allocator_traitsISaIdEE9constructIdJRKdEEEvRS0_PT_DpOT0_
 9474              	.LBE75:
1713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 9475              		.loc 23 1713 4
 9476 0032 FB68     		ldr	r3, [r7, #12]
 9477 0034 1846     		mov	r0, r3
 9478 0036 1037     		adds	r7, r7, #16
 9479              		.cfi_def_cfa_offset 16
 9480 0038 BD46     		mov	sp, r7
 9481              		.cfi_def_cfa_register 13
 9482              		@ sp needed
 9483 003a B0BD     		pop	{r4, r5, r7, pc}
 9484              		.cfi_endproc
 9485              	.LFE5660:
 9487              		.weak	_ZNSt6vectorIdSaIdEE16_Temporary_valueC1IJRKdEEEPS1_DpOT_
 9488              		.thumb_set _ZNSt6vectorIdSaIdEE16_Temporary_valueC1IJRKdEEEPS1_DpOT_,_ZNSt6vectorIdSaIdEE16_Tempor
 9489              		.section	.text._ZNSt6vectorIdSaIdEE16_Temporary_valueD2Ev,"axG",%progbits,_ZNSt6vectorIdSaIdEE16_T
 9490              		.align	1
 9491              		.weak	_ZNSt6vectorIdSaIdEE16_Temporary_valueD2Ev
 9492              		.syntax unified
 9493              		.thumb
 9494              		.thumb_func
 9495              		.fpu fpv5-d16
 9497              	_ZNSt6vectorIdSaIdEE16_Temporary_valueD2Ev:
 9498              	.LFB5663:
1715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _Alloc_traits::destroy(_M_this->_M_impl, _M_ptr()); }
 9499              		.loc 23 1715 2
 9500              		.cfi_startproc
 9501              		@ args = 0, pretend = 0, frame = 8
 9502              		@ frame_needed = 1, uses_anonymous_args = 0
 9503 0000 90B5     		push	{r4, r7, lr}
 9504              		.cfi_def_cfa_offset 12
 9505              		.cfi_offset 4, -12
 9506              		.cfi_offset 7, -8
 9507              		.cfi_offset 14, -4
 9508 0002 83B0     		sub	sp, sp, #12
 9509              		.cfi_def_cfa_offset 24
 9510 0004 00AF     		add	r7, sp, #0
 9511              		.cfi_def_cfa_register 7
 9512 0006 7860     		str	r0, [r7, #4]
 9513              	.LBB76:
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 9514              		.loc 23 1716 27
 9515 0008 7B68     		ldr	r3, [r7, #4]
 9516 000a 1B68     		ldr	r3, [r3]
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 9517              		.loc 23 1716 36
 9518 000c 1C46     		mov	r4, r3
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 9519              		.loc 23 1716 26
 9520 000e 7868     		ldr	r0, [r7, #4]
 9521 0010 FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEE16_Temporary_value6_M_ptrEv
 9522 0014 0346     		mov	r3, r0
 9523 0016 1946     		mov	r1, r3
 9524 0018 2046     		mov	r0, r4
 9525 001a FFF7FEFF 		bl	_ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 387


 9526              	.LBE76:
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 9527              		.loc 23 1716 56
 9528 001e 7B68     		ldr	r3, [r7, #4]
 9529 0020 1846     		mov	r0, r3
 9530 0022 0C37     		adds	r7, r7, #12
 9531              		.cfi_def_cfa_offset 12
 9532 0024 BD46     		mov	sp, r7
 9533              		.cfi_def_cfa_register 13
 9534              		@ sp needed
 9535 0026 90BD     		pop	{r4, r7, pc}
 9536              		.cfi_endproc
 9537              	.LFE5663:
 9539              		.weak	_ZNSt6vectorIdSaIdEE16_Temporary_valueD1Ev
 9540              		.thumb_set _ZNSt6vectorIdSaIdEE16_Temporary_valueD1Ev,_ZNSt6vectorIdSaIdEE16_Temporary_valueD2Ev
 9541              		.section	.text._ZNSt6vectorIdSaIdEE16_Temporary_value6_M_valEv,"axG",%progbits,_ZNSt6vectorIdSaIdE
 9542              		.align	1
 9543              		.weak	_ZNSt6vectorIdSaIdEE16_Temporary_value6_M_valEv
 9544              		.syntax unified
 9545              		.thumb
 9546              		.thumb_func
 9547              		.fpu fpv5-d16
 9549              	_ZNSt6vectorIdSaIdEE16_Temporary_value6_M_valEv:
 9550              	.LFB5665:
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 9551              		.loc 23 1719 2
 9552              		.cfi_startproc
 9553              		@ args = 0, pretend = 0, frame = 8
 9554              		@ frame_needed = 1, uses_anonymous_args = 0
 9555 0000 80B5     		push	{r7, lr}
 9556              		.cfi_def_cfa_offset 8
 9557              		.cfi_offset 7, -8
 9558              		.cfi_offset 14, -4
 9559 0002 82B0     		sub	sp, sp, #8
 9560              		.cfi_def_cfa_offset 16
 9561 0004 00AF     		add	r7, sp, #0
 9562              		.cfi_def_cfa_register 7
 9563 0006 7860     		str	r0, [r7, #4]
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 9564              		.loc 23 1719 27
 9565 0008 7868     		ldr	r0, [r7, #4]
 9566 000a FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEE16_Temporary_value6_M_ptrEv
 9567 000e 0346     		mov	r3, r0
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 9568              		.loc 23 1719 31
 9569 0010 1846     		mov	r0, r3
 9570 0012 0837     		adds	r7, r7, #8
 9571              		.cfi_def_cfa_offset 8
 9572 0014 BD46     		mov	sp, r7
 9573              		.cfi_def_cfa_register 13
 9574              		@ sp needed
 9575 0016 80BD     		pop	{r7, pc}
 9576              		.cfi_endproc
 9577              	.LFE5665:
 9579              		.section	.text._ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_type
 9580              		.align	1
 9581              		.weak	_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 388


 9582              		.syntax unified
 9583              		.thumb
 9584              		.thumb_func
 9585              		.fpu fpv5-d16
 9587              	_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_:
 9588              	.LFB5666:
 9589              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterat
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Iterators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1996-1998
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 389


  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /** @file bits/stl_iterator.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This file implements reverse_iterator, back_insert_iterator,
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  front_insert_iterator, insert_iterator, __normal_iterator, and their
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  supporting functions and overloaded operators.
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #ifndef _STL_ITERATOR_H
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #define _STL_ITERATOR_H 1
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/cpp_type_traits.h>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <ext/type_traits.h>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/move.h>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/ptr_traits.h>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <type_traits>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201811L
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_constexpr_iterator 201811L
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #elif __cplusplus == 201703L
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201803L
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <compare>
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <new>
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <bits/iterator_concepts.h>
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @addtogroup iterators
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @{
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    */
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   namespace __detail
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   {
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // Weaken iterator_category _Cat to _Limit if it is derived from that,
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // otherwise use _Otherwise.
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<typename _Cat, typename _Limit, typename _Otherwise = _Cat>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using __clamp_iter_cat
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<derived_from<_Cat, _Limit>, _Limit, _Otherwise>;
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   }
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.1 Reverse iterators
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Bidirectional and random access iterators have corresponding reverse
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 390


 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator adaptors that iterate through the data structure in the
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  opposite direction.  They have the same signatures as the corresponding
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.  The fundamental relation between a reverse %iterator and its
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  corresponding %iterator @c i is established by the identity:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @code
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *      &*(reverse_iterator(i)) == &*(i - 1)
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @endcode
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  <em>This mapping is dictated by the fact that while there is always a
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  pointer past the end of an array, there might not be a valid pointer
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  before the beginning of an array.</em> [24.4.1]/1,2
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators can be tricky and surprising at first.  Their
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  semantics make sense, however, and the trickiness is a side effect of
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  the requirement that the iterators must be safe.
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class reverse_iterator
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<typename iterator_traits<_Iterator>::iterator_category,
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::value_type,
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::difference_type,
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::pointer,
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****                       typename iterator_traits<_Iterator>::reference>
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator current;
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer		pointer;
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference		reference;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<random_access_iterator<_Iterator>,
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			random_access_iterator_tag,
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			bidirectional_iterator_tag>;
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_category
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= __detail::__clamp_iter_cat<typename __traits_type::iterator_category,
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 				     random_access_iterator_tag>;
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The default constructor value-initializes member @p current.
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  If it is a pointer, that means it is zero-initialized.
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 235 No specification of default ctor for reverse_iterator
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 1012. reverse_iterator default ctor should value initialize
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator() : current() { }
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This %iterator will move in the opposite direction that @p x does.
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 391


 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX17_CONSTEXPR
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(iterator_type __x) : current(__x) { }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The copy constructor is normal.
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(const reverse_iterator& __x)
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : current(__x.current) { }
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator& operator=(const reverse_iterator&) = default;
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  A %reverse_iterator across other types can be copied if the
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  underlying %iterator can be converted to the type of @c current.
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_GLIBCXX17_CONSTEXPR
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         reverse_iterator(const reverse_iterator<_Iter>& __x)
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	: current(__x.base()) { }
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c current, the %iterator used for underlying work.
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR iterator_type
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return current; }
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reference to the value at @c --current
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @warning This implementation requires that for an iterator of the
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           underlying iterator type, @c x, a reference obtained by
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           @c *x remains valid after @c x has been modified or
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           destroyed. This is a bug: http://gcc.gnu.org/PR51823
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *--__tmp;
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A pointer to the value at @c --current
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR pointer
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_concepts >= 201907L
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires is_pointer_v<_Iterator>
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 392


 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	|| requires(const _Iterator __i) { __i.operator->(); }
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// 1052. operator-> should also support smart pointers
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--__tmp;
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return _S_to_pointer(__tmp);
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The original value of @c *this
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--()
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator with the previous value of @c *this
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--(int)
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 393


 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+(difference_type __n) const
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current - __n); }
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator backwards @a __n steps.
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+=(difference_type __n)
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current -= __n;
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(difference_type __n) const
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current + __n); }
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator forwards @a __n steps.
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-=(difference_type __n)
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current += __n;
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The value at @c current - @a __n - 1
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator[](difference_type __n) const
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *(*this + __n); }
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 394


 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend constexpr iter_rvalue_reference_t<_Iterator>
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       iter_move(const reverse_iterator& __i)
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(is_nothrow_copy_constructible_v<_Iterator>
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       && noexcept(ranges::iter_move(--std::declval<_Iterator&>())))
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	auto __tmp = __i.base();
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return ranges::iter_move(--__tmp);
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<indirectly_swappable<_Iterator> _Iter2>
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	friend constexpr void
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter_swap(const reverse_iterator& __x,
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		  const reverse_iterator<_Iter2>& __y)
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	noexcept(is_nothrow_copy_constructible_v<_Iterator>
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && is_nothrow_copy_constructible_v<_Iter2>
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && noexcept(ranges::iter_swap(--std::declval<_Iterator&>(),
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					       --std::declval<_Iter2&>())))
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __xtmp = __x.base();
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __ytmp = __y.base();
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  ranges::iter_swap(--__xtmp, --__ytmp);
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	}
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     private:
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR _Tp*
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp* __p)
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __p; }
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR pointer
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp __t)
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __t.operator->(); }
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@{
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A %reverse_iterator.
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __y  A %reverse_iterator.
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  A simple bool.
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators forward comparisons to their underlying base()
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus <= 201703L || ! defined __cpp_lib_concepts
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_Iterator>& __x,
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_Iterator>& __x,
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 395


 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_Iterator>& __x,
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_Iterator>& __x,
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_Iterator>& __x,
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_Iterator>& __x,
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 280. Comparison of reverse_iterator to const reverse_iterator.
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 396


 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else // C++20
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() == __y.base() } -> convertible_to<bool>; }
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() != __y.base() } -> convertible_to<bool>; }
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() != __y.base(); }
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() > __y.base() } -> convertible_to<bool>; }
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() > __y.base(); }
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() < __y.base() } -> convertible_to<bool>; }
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() < __y.base(); }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() >= __y.base() } -> convertible_to<bool>; }
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() >= __y.base(); }
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() <= __y.base() } -> convertible_to<bool>; }
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() <= __y.base(); }
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL,
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	   three_way_comparable_with<_IteratorL> _IteratorR>
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr compare_three_way_result_t<_IteratorL, _IteratorR>
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=>(const reverse_iterator<_IteratorL>& __x,
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		const reverse_iterator<_IteratorR>& __y)
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() <=> __x.base(); }
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++20
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@}
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 397


 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_Iterator>::difference_type
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_IteratorL>::difference_type
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 685. reverse_iterator/move_iterator difference has invalid signatures
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR auto
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__y.base() - __x.base())
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __x)
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__x.base() - __n); }
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Same as C++14 make_reverse_iterator but used in C++11 mode too.
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __make_reverse_iterator(_Iterator __i)
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # if __cplusplus >= 201402L
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  define __cpp_lib_make_reverse_iterator 201402
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 2285. make_reverse_iterator
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /// Generator function for reverse_iterator.
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     make_reverse_iterator(_Iterator __i)
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  if __cplusplus > 201703L && defined __cpp_lib_concepts
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator1, typename _Iterator2>
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires (!sized_sentinel_for<_Iterator1, _Iterator2>)
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline constexpr bool
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     disable_sized_sentinel_for<reverse_iterator<_Iterator1>,
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			       reverse_iterator<_Iterator2>> = true;
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  endif // C++20
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # endif // C++14
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 398


 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __niter_base(reverse_iterator<_Iterator> __it)
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__niter_base(__it.base())))
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__niter_base(__it.base())); }
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     struct __is_move_iterator<reverse_iterator<_Iterator> >
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : __is_move_iterator<_Iterator>
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { };
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __miter_base(reverse_iterator<_Iterator> __it)
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__miter_base(__it.base())))
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__miter_base(__it.base())); }
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++11
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.2.2.1 back_insert_iterator
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator appends it to the container using
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_back.
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the back_inserter function to create these iterators can
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class back_insert_iterator
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr back_insert_iterator() noexcept : container(nullptr) { }
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator(_Container& __x)
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 399


 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the end, if you like).  Assigning a value to the %iterator will
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always append the value to the end of the container.
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(std::move(__value));
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of back_insert_iterator working on @p __x.
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating back_insert_iterator instances.
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 400


 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline back_insert_iterator<_Container>
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     back_inserter(_Container& __x)
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return back_insert_iterator<_Container>(__x); }
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator prepends it to the container using
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_front.
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the front_inserter function to create these iterators can
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class front_insert_iterator
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr front_insert_iterator() noexcept : container(nullptr) { }
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator(_Container& __x)
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the front, if you like).  Assigning a value to the %iterator will
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always prepend the value to the front of the container.
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 401


 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(std::move(__value));
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of front_insert_iterator working on @p x.
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating front_insert_iterator instances.
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline front_insert_iterator<_Container>
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     front_inserter(_Container& __x)
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return front_insert_iterator<_Container>(__x); }
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 402


 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator inserts it in the container at the
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position, rather than overwriting the value at that
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  position.
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  (Sequences will actually insert a @e copy of the value before the
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position.)
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the inserter function to create these iterators can
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class insert_iterator
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using _Iter = std::__detail::__range_iter_t<_Container>;
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container = nullptr;
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter = _Iter();
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename _Container::iterator		_Iter;
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter;
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator() = default;
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The only way to create this %iterator is with a container and an
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  initial position (a normal %iterator into the container).
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator(_Container& __x, _Iter __i)
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)), iter(__i) {}
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator maintains its own position in the
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container.  Assigning a value to the %iterator will insert the
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 403


 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  value into the container at the place before the %iterator.
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The position is maintained such that subsequent assignments will
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  insert values immediately after one another.  For example,
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @code
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A and Z
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     insert_iterator i (v, ++v.begin());
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 1;
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 2;
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 3;
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A, 1, 2, 3, and Z
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @endcode
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, std::move(__value));
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 404


 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __x  A container of arbitrary type.
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __i  An iterator into the container.
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of insert_iterator working on @p __x.
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating insert_iterator instances.
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr insert_iterator<_Container>
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, std::__detail::__range_iter_t<_Container> __i)
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return insert_iterator<_Container>(__x, __i); }
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container, typename _Iterator>
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline insert_iterator<_Container>
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, _Iterator __i)
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       return insert_iterator<_Container>(__x,
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					 typename _Container::iterator(__i));
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     }
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // @} group iterators
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** } // namespace
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // This iterator adapter is @a normal in the sense that it does not
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // change the semantics of any of the operators of its iterator
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // parameter.  Its primary purpose is to convert an iterator that is
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // not a class, e.g. a pointer, into an iterator that is a class.
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // The _Container parameter exists solely so that different containers
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // using this template can instantiate different types, even if the
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _Iterator parameter is the same.
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class __normal_iterator
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator _M_current;
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef std::iterator_traits<_Iterator>		__traits_type;
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 405


 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type 	difference_type;
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference 	reference;
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer   	pointer;
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept = std::__detail::__iter_concept<_Iterator>;
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(_Iterator()) { }
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Allow iterator to const_iterator conversion
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         _GLIBCXX20_CONSTEXPR
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         __normal_iterator(const __normal_iterator<_Iter,
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			  typename __enable_if<
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      _Container>::__type>& __i) _GLIBCXX_NOEXCEPT
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         : _M_current(__i.base()) { }
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Forward iterator requirements
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reference
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const _GLIBCXX_NOEXCEPT
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *_M_current; }
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       pointer
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const _GLIBCXX_NOEXCEPT
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++() _GLIBCXX_NOEXCEPT
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++_M_current;
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int) _GLIBCXX_NOEXCEPT
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current++); }
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Bidirectional iterator requirements
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--() _GLIBCXX_NOEXCEPT
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--_M_current;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 406


1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--(int) _GLIBCXX_NOEXCEPT
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current--); }
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Random access iterator requirements
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reference
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator[](difference_type __n) const _GLIBCXX_NOEXCEPT
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current[__n]; }
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+=(difference_type __n) _GLIBCXX_NOEXCEPT
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { _M_current += __n; return *this; }
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-=(difference_type __n) _GLIBCXX_NOEXCEPT
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { _M_current -= __n; return *this; }
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       const _Iterator&
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const _GLIBCXX_NOEXCEPT
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Note: In what follows, the left- and right-hand-side iterators are
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // allowed to vary in types (conceptually in cv-qualification) so that
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // comparison between cv-qualified and non-cv-qualified iterators be
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // valid.  However, the greedy and unfriendly operators in std::rel_ops
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // will make overload resolution ambiguous (when in scope) if we don't
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // provide overloads whose operands are of the same type.  Can someone
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // remind me what generic programming is about? -- Gaby
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cpp_lib_three_way_comparison
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires (_IteratorL __lhs, _IteratorR __rhs)
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { { __lhs == __rhs } -> std::convertible_to<bool>; }
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     noexcept(noexcept(__lhs.base() == __rhs.base()))
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 407


1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr std::__detail::__synth3way_t<_IteratorR, _IteratorL>
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=>(const __normal_iterator<_IteratorL, _Container>& __lhs,
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		const __normal_iterator<_IteratorR, _Container>& __rhs)
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     noexcept(noexcept(std::__detail::__synth3way(__lhs.base(), __rhs.base())))
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return std::__detail::__synth3way(__lhs.base(), __rhs.base()); }
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    // Forward iterator requirements
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Random access iterator requirements
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const __normal_iterator<_Iterator, _Container>& __lhs,
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 408


1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const __normal_iterator<_Iterator, _Container>& __lhs,
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const __normal_iterator<_IteratorL, _Container>& __lhs,
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const __normal_iterator<_Iterator, _Container>& __lhs,
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const __normal_iterator<_IteratorL, _Container>& __lhs,
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const __normal_iterator<_Iterator, _Container>& __lhs,
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // three-way comparison
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // According to the resolution of DR179 not only the various comparison
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // operators but also operator- must accept mixed iterator/const_iterator
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // parameters.
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // DR 685.
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline auto
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs) noexcept
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 409


1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__lhs.base() - __rhs.base())
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename __normal_iterator<_IteratorL, _Container>::difference_type
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename __normal_iterator<_Iterator, _Container>::difference_type
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 9590              		.loc 35 1202 5
 9591              		.cfi_startproc
 9592              		@ args = 0, pretend = 0, frame = 8
 9593              		@ frame_needed = 1, uses_anonymous_args = 0
 9594 0000 90B5     		push	{r4, r7, lr}
 9595              		.cfi_def_cfa_offset 12
 9596              		.cfi_offset 4, -12
 9597              		.cfi_offset 7, -8
 9598              		.cfi_offset 14, -4
 9599 0002 83B0     		sub	sp, sp, #12
 9600              		.cfi_def_cfa_offset 24
 9601 0004 00AF     		add	r7, sp, #0
 9602              		.cfi_def_cfa_register 7
 9603 0006 7860     		str	r0, [r7, #4]
 9604 0008 3960     		str	r1, [r7]
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 9605              		.loc 35 1205 24
 9606 000a 7868     		ldr	r0, [r7, #4]
 9607 000c FFF7FEFF 		bl	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
 9608 0010 0346     		mov	r3, r0
 9609              		.loc 35 1205 27
 9610 0012 1C68     		ldr	r4, [r3]
 9611              		.loc 35 1205 39
 9612 0014 3868     		ldr	r0, [r7]
 9613 0016 FFF7FEFF 		bl	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
 9614 001a 0346     		mov	r3, r0
 9615              		.loc 35 1205 27
 9616 001c 1B68     		ldr	r3, [r3]
 9617 001e E31A     		subs	r3, r4, r3
 9618              		.loc 35 1205 40
 9619 0020 DB10     		asrs	r3, r3, #3
 9620              		.loc 35 1205 43
 9621 0022 1846     		mov	r0, r3
 9622 0024 0C37     		adds	r7, r7, #12
 9623              		.cfi_def_cfa_offset 12
 9624 0026 BD46     		mov	sp, r7
 9625              		.cfi_def_cfa_register 13
 9626              		@ sp needed
 9627 0028 90BD     		pop	{r4, r7, pc}
 9628              		.cfi_endproc
 9629              	.LFE5666:
 9631              		.section	.text._ZSt22__uninitialized_move_aIPdS0_SaIdEET0_T_S3_S2_RT1_,"axG",%progbits,_ZSt22__uni
 9632              		.align	1
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 410


 9633              		.weak	_ZSt22__uninitialized_move_aIPdS0_SaIdEET0_T_S3_S2_RT1_
 9634              		.syntax unified
 9635              		.thumb
 9636              		.thumb_func
 9637              		.fpu fpv5-d16
 9639              	_ZSt22__uninitialized_move_aIPdS0_SaIdEET0_T_S3_S2_RT1_:
 9640              	.LFB5667:
 9641              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_uninit
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 411


  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus > 201402L
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <bits/stl_pair.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <type_traits>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <ext/alloc_traits.h>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** {
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /** @addtogroup memory
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @{
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    */
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __first != __last; ++__first, (void)++__cur)
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy<true>
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 412


 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType1;
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType2;
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::copy
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType2, decltype(*__first)>::value,
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from value type of input range");
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::copy
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::copy:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __assignable>::
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 413


 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill<true>
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       const _Tp& __x)
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 414


 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::fill_n(__first, __n, __x); }
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // DR 1339. uninitialized_fill_n should return the end of its range
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 415


 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  any of the POD optimizations.
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __first != __last; ++__first, (void)++__cur)
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __last, __result); }
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_a(_InputIterator __first, _InputIterator __last,
 9642              		.loc 36 330 5
 9643              		.cfi_startproc
 9644              		@ args = 0, pretend = 0, frame = 16
 9645              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 416


 9646 0000 90B5     		push	{r4, r7, lr}
 9647              		.cfi_def_cfa_offset 12
 9648              		.cfi_offset 4, -12
 9649              		.cfi_offset 7, -8
 9650              		.cfi_offset 14, -4
 9651 0002 85B0     		sub	sp, sp, #20
 9652              		.cfi_def_cfa_offset 32
 9653 0004 00AF     		add	r7, sp, #0
 9654              		.cfi_def_cfa_register 7
 9655 0006 F860     		str	r0, [r7, #12]
 9656 0008 B960     		str	r1, [r7, #8]
 9657 000a 7A60     		str	r2, [r7, #4]
 9658 000c 3B60     		str	r3, [r7]
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy_a(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 9659              		.loc 36 333 41
 9660 000e F868     		ldr	r0, [r7, #12]
 9661 0010 FFF7FEFF 		bl	_ZSt18make_move_iteratorIPdESt13move_iteratorIT_ES2_
 9662 0014 0446     		mov	r4, r0
 9663 0016 B868     		ldr	r0, [r7, #8]
 9664 0018 FFF7FEFF 		bl	_ZSt18make_move_iteratorIPdESt13move_iteratorIT_ES2_
 9665 001c 0146     		mov	r1, r0
 9666 001e 3B68     		ldr	r3, [r7]
 9667 0020 7A68     		ldr	r2, [r7, #4]
 9668 0022 2046     		mov	r0, r4
 9669 0024 FFF7FEFF 		bl	_ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E
 9670 0028 0346     		mov	r3, r0
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 _GLIBCXX_MAKE_MOVE_ITERATOR(__last),
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 __result, __alloc);
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 9671              		.loc 36 336 5
 9672 002a 1846     		mov	r0, r3
 9673 002c 1437     		adds	r7, r7, #20
 9674              		.cfi_def_cfa_offset 12
 9675 002e BD46     		mov	sp, r7
 9676              		.cfi_def_cfa_register 13
 9677              		@ sp needed
 9678 0030 90BD     		pop	{r4, r7, pc}
 9679              		.cfi_endproc
 9680              	.LFE5667:
 9682              		.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv,"axG",%progbits,_ZNK9
 9683              		.align	1
 9684              		.weak	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
 9685              		.syntax unified
 9686              		.thumb
 9687              		.thumb_func
 9688              		.fpu fpv5-d16
 9690              	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv:
 9691              	.LFB5668:
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
 9692              		.loc 35 1056 7
 9693              		.cfi_startproc
 9694              		@ args = 0, pretend = 0, frame = 8
 9695              		@ frame_needed = 1, uses_anonymous_args = 0
 9696              		@ link register save eliminated.
 9697 0000 80B4     		push	{r7}
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 417


 9698              		.cfi_def_cfa_offset 4
 9699              		.cfi_offset 7, -4
 9700 0002 83B0     		sub	sp, sp, #12
 9701              		.cfi_def_cfa_offset 16
 9702 0004 00AF     		add	r7, sp, #0
 9703              		.cfi_def_cfa_register 7
 9704 0006 7860     		str	r0, [r7, #4]
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 9705              		.loc 35 1057 16
 9706 0008 7B68     		ldr	r3, [r7, #4]
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 9707              		.loc 35 1057 28
 9708 000a 1846     		mov	r0, r3
 9709 000c 0C37     		adds	r7, r7, #12
 9710              		.cfi_def_cfa_offset 4
 9711 000e BD46     		mov	sp, r7
 9712              		.cfi_def_cfa_register 13
 9713              		@ sp needed
 9714 0010 5DF8047B 		ldr	r7, [sp], #4
 9715              		.cfi_restore 7
 9716              		.cfi_def_cfa_offset 0
 9717 0014 7047     		bx	lr
 9718              		.cfi_endproc
 9719              	.LFE5668:
 9721              		.section	.text._ZSt13move_backwardIPdS0_ET0_T_S2_S1_,"axG",%progbits,_ZSt13move_backwardIPdS0_ET0_
 9722              		.align	1
 9723              		.weak	_ZSt13move_backwardIPdS0_ET0_T_S2_S1_
 9724              		.syntax unified
 9725              		.thumb
 9726              		.thumb_func
 9727              		.fpu fpv5-d16
 9729              	_ZSt13move_backwardIPdS0_ET0_T_S2_S1_:
 9730              	.LFB5669:
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 9731              		.loc 4 833 5
 9732              		.cfi_startproc
 9733              		@ args = 0, pretend = 0, frame = 16
 9734              		@ frame_needed = 1, uses_anonymous_args = 0
 9735 0000 90B5     		push	{r4, r7, lr}
 9736              		.cfi_def_cfa_offset 12
 9737              		.cfi_offset 4, -12
 9738              		.cfi_offset 7, -8
 9739              		.cfi_offset 14, -4
 9740 0002 85B0     		sub	sp, sp, #20
 9741              		.cfi_def_cfa_offset 32
 9742 0004 00AF     		add	r7, sp, #0
 9743              		.cfi_def_cfa_register 7
 9744 0006 F860     		str	r0, [r7, #12]
 9745 0008 B960     		str	r1, [r7, #8]
 9746 000a 7A60     		str	r2, [r7, #4]
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					       std::__miter_base(__last),
 9747              		.loc 4 843 47
 9748 000c F868     		ldr	r0, [r7, #12]
 9749 000e FFF7FEFF 		bl	_ZSt12__miter_baseIPdET_S1_
 9750 0012 0446     		mov	r4, r0
 9751 0014 B868     		ldr	r0, [r7, #8]
 9752 0016 FFF7FEFF 		bl	_ZSt12__miter_baseIPdET_S1_
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 418


 9753 001a 0346     		mov	r3, r0
 9754 001c 7A68     		ldr	r2, [r7, #4]
 9755 001e 1946     		mov	r1, r3
 9756 0020 2046     		mov	r0, r4
 9757 0022 FFF7FEFF 		bl	_ZSt22__copy_move_backward_aILb1EPdS0_ET1_T0_S2_S1_
 9758 0026 0346     		mov	r3, r0
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 9759              		.loc 4 846 5
 9760 0028 1846     		mov	r0, r3
 9761 002a 1437     		adds	r7, r7, #20
 9762              		.cfi_def_cfa_offset 12
 9763 002c BD46     		mov	sp, r7
 9764              		.cfi_def_cfa_register 13
 9765              		@ sp needed
 9766 002e 90BD     		pop	{r4, r7, pc}
 9767              		.cfi_endproc
 9768              	.LFE5669:
 9770              		.section	.text._ZSt4fillIPddEvT_S1_RKT0_,"axG",%progbits,_ZSt4fillIPddEvT_S1_RKT0_,comdat
 9771              		.align	1
 9772              		.weak	_ZSt4fillIPddEvT_S1_RKT0_
 9773              		.syntax unified
 9774              		.thumb
 9775              		.thumb_func
 9776              		.fpu fpv5-d16
 9778              	_ZSt4fillIPddEvT_S1_RKT0_:
 9779              	.LFB5670:
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 9780              		.loc 4 937 5
 9781              		.cfi_startproc
 9782              		@ args = 0, pretend = 0, frame = 16
 9783              		@ frame_needed = 1, uses_anonymous_args = 0
 9784 0000 80B5     		push	{r7, lr}
 9785              		.cfi_def_cfa_offset 8
 9786              		.cfi_offset 7, -8
 9787              		.cfi_offset 14, -4
 9788 0002 84B0     		sub	sp, sp, #16
 9789              		.cfi_def_cfa_offset 24
 9790 0004 00AF     		add	r7, sp, #0
 9791              		.cfi_def_cfa_register 7
 9792 0006 F860     		str	r0, [r7, #12]
 9793 0008 B960     		str	r1, [r7, #8]
 9794 000a 7A60     		str	r2, [r7, #4]
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 9795              		.loc 4 944 20
 9796 000c 7A68     		ldr	r2, [r7, #4]
 9797 000e B968     		ldr	r1, [r7, #8]
 9798 0010 F868     		ldr	r0, [r7, #12]
 9799 0012 FFF7FEFF 		bl	_ZSt8__fill_aIPddEvT_S1_RKT0_
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 9800              		.loc 4 945 5
 9801 0016 00BF     		nop
 9802 0018 1037     		adds	r7, r7, #16
 9803              		.cfi_def_cfa_offset 8
 9804 001a BD46     		mov	sp, r7
 9805              		.cfi_def_cfa_register 13
 9806              		@ sp needed
 9807 001c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 419


 9808              		.cfi_endproc
 9809              	.LFE5670:
 9811              		.section	.text._ZSt24__uninitialized_fill_n_aIPdjddET_S1_T0_RKT1_RSaIT2_E,"axG",%progbits,_ZSt24__
 9812              		.align	1
 9813              		.weak	_ZSt24__uninitialized_fill_n_aIPdjddET_S1_T0_RKT1_RSaIT2_E
 9814              		.syntax unified
 9815              		.thumb
 9816              		.thumb_func
 9817              		.fpu fpv5-d16
 9819              	_ZSt24__uninitialized_fill_n_aIPdjddET_S1_T0_RKT1_RSaIT2_E:
 9820              	.LFB5671:
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_if_noexcept_a(_InputIterator __first,
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _InputIterator __last,
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _ForwardIterator __result,
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _Allocator& __alloc)
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy_a
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Allocator>
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     void
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   const _Tp& __x, _Allocator& __alloc)
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Tp2>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   const _Tp& __x, allocator<_Tp2>&)
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { std::uninitialized_fill(__first, __last, __x); }
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			     const _Tp& __x, _Allocator& __alloc)
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 420


 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__cur)
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Tp2>
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 9821              		.loc 36 400 5
 9822              		.cfi_startproc
 9823              		@ args = 0, pretend = 0, frame = 16
 9824              		@ frame_needed = 1, uses_anonymous_args = 0
 9825 0000 80B5     		push	{r7, lr}
 9826              		.cfi_def_cfa_offset 8
 9827              		.cfi_offset 7, -8
 9828              		.cfi_offset 14, -4
 9829 0002 84B0     		sub	sp, sp, #16
 9830              		.cfi_def_cfa_offset 24
 9831 0004 00AF     		add	r7, sp, #0
 9832              		.cfi_def_cfa_register 7
 9833 0006 F860     		str	r0, [r7, #12]
 9834 0008 B960     		str	r1, [r7, #8]
 9835 000a 7A60     		str	r2, [r7, #4]
 9836 000c 3B60     		str	r3, [r7]
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			     const _Tp& __x, allocator<_Tp2>&)
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_fill_n(__first, __n, __x); }
 9837              		.loc 36 402 39
 9838 000e 7A68     		ldr	r2, [r7, #4]
 9839 0010 B968     		ldr	r1, [r7, #8]
 9840 0012 F868     		ldr	r0, [r7, #12]
 9841 0014 FFF7FEFF 		bl	_ZSt20uninitialized_fill_nIPdjdET_S1_T0_RKT1_
 9842 0018 0346     		mov	r3, r0
 9843              		.loc 36 402 60
 9844 001a 1846     		mov	r0, r3
 9845 001c 1037     		adds	r7, r7, #16
 9846              		.cfi_def_cfa_offset 8
 9847 001e BD46     		mov	sp, r7
 9848              		.cfi_def_cfa_register 13
 9849              		@ sp needed
 9850 0020 80BD     		pop	{r7, pc}
 9851              		.cfi_endproc
 9852              	.LFE5671:
 9854              		.section	.text._ZNKSt6vectorIdSaIdEE12_M_check_lenEjPKc,"axG",%progbits,_ZNKSt6vectorIdSaIdEE12_M_
 9855              		.align	1
 9856              		.weak	_ZNKSt6vectorIdSaIdEE12_M_check_lenEjPKc
 9857              		.syntax unified
 9858              		.thumb
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 421


 9859              		.thumb_func
 9860              		.fpu fpv5-d16
 9862              	_ZNKSt6vectorIdSaIdEE12_M_check_lenEjPKc:
 9863              	.LFB5672:
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 9864              		.loc 23 1756 7
 9865              		.cfi_startproc
 9866              		@ args = 0, pretend = 0, frame = 24
 9867              		@ frame_needed = 1, uses_anonymous_args = 0
 9868 0000 90B5     		push	{r4, r7, lr}
 9869              		.cfi_def_cfa_offset 12
 9870              		.cfi_offset 4, -12
 9871              		.cfi_offset 7, -8
 9872              		.cfi_offset 14, -4
 9873 0002 87B0     		sub	sp, sp, #28
 9874              		.cfi_def_cfa_offset 40
 9875 0004 00AF     		add	r7, sp, #0
 9876              		.cfi_def_cfa_register 7
 9877 0006 F860     		str	r0, [r7, #12]
 9878 0008 B960     		str	r1, [r7, #8]
 9879 000a 7A60     		str	r2, [r7, #4]
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
 9880              		.loc 23 1758 14
 9881 000c F868     		ldr	r0, [r7, #12]
 9882 000e FFF7FEFF 		bl	_ZNKSt6vectorIdSaIdEE8max_sizeEv
 9883 0012 0446     		mov	r4, r0
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
 9884              		.loc 23 1758 23
 9885 0014 F868     		ldr	r0, [r7, #12]
 9886 0016 FFF7FEFF 		bl	_ZNKSt6vectorIdSaIdEE4sizeEv
 9887 001a 0346     		mov	r3, r0
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
 9888              		.loc 23 1758 17
 9889 001c E21A     		subs	r2, r4, r3
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
 9890              		.loc 23 1758 26
 9891 001e BB68     		ldr	r3, [r7, #8]
 9892 0020 9A42     		cmp	r2, r3
 9893 0022 34BF     		ite	cc
 9894 0024 0123     		movcc	r3, #1
 9895 0026 0023     		movcs	r3, #0
 9896 0028 DBB2     		uxtb	r3, r3
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
 9897              		.loc 23 1758 2
 9898 002a 002B     		cmp	r3, #0
 9899 002c 02D0     		beq	.L402
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 9900              		.loc 23 1759 24
 9901 002e 7868     		ldr	r0, [r7, #4]
 9902 0030 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 9903              	.L402:
1761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 9904              		.loc 23 1761 30
 9905 0034 F868     		ldr	r0, [r7, #12]
 9906 0036 FFF7FEFF 		bl	_ZNKSt6vectorIdSaIdEE4sizeEv
 9907 003a 0446     		mov	r4, r0
1761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 422


 9908              		.loc 23 1761 50
 9909 003c F868     		ldr	r0, [r7, #12]
 9910 003e FFF7FEFF 		bl	_ZNKSt6vectorIdSaIdEE4sizeEv
 9911 0042 0346     		mov	r3, r0
 9912 0044 3B61     		str	r3, [r7, #16]
1761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 9913              		.loc 23 1761 45
 9914 0046 07F10802 		add	r2, r7, #8
 9915 004a 07F11003 		add	r3, r7, #16
 9916 004e 1146     		mov	r1, r2
 9917 0050 1846     		mov	r0, r3
 9918 0052 FFF7FEFF 		bl	_ZSt3maxIjERKT_S2_S2_
 9919 0056 0346     		mov	r3, r0
1761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 9920              		.loc 23 1761 33
 9921 0058 1B68     		ldr	r3, [r3]
1761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 9922              		.loc 23 1761 18
 9923 005a 2344     		add	r3, r3, r4
 9924 005c 7B61     		str	r3, [r7, #20]
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 9925              		.loc 23 1762 22
 9926 005e F868     		ldr	r0, [r7, #12]
 9927 0060 FFF7FEFF 		bl	_ZNKSt6vectorIdSaIdEE4sizeEv
 9928 0064 0246     		mov	r2, r0
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 9929              		.loc 23 1762 48
 9930 0066 7B69     		ldr	r3, [r7, #20]
 9931 0068 9342     		cmp	r3, r2
 9932 006a 06D3     		bcc	.L403
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 9933              		.loc 23 1762 44 discriminator 2
 9934 006c F868     		ldr	r0, [r7, #12]
 9935 006e FFF7FEFF 		bl	_ZNKSt6vectorIdSaIdEE8max_sizeEv
 9936 0072 0246     		mov	r2, r0
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 9937              		.loc 23 1762 25 discriminator 2
 9938 0074 7B69     		ldr	r3, [r7, #20]
 9939 0076 9342     		cmp	r3, r2
 9940 0078 04D9     		bls	.L404
 9941              	.L403:
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 9942              		.loc 23 1762 58 discriminator 3
 9943 007a F868     		ldr	r0, [r7, #12]
 9944 007c FFF7FEFF 		bl	_ZNKSt6vectorIdSaIdEE8max_sizeEv
 9945 0080 0346     		mov	r3, r0
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 9946              		.loc 23 1762 48 discriminator 3
 9947 0082 00E0     		b	.L405
 9948              	.L404:
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 9949              		.loc 23 1762 48 is_stmt 0 discriminator 4
 9950 0084 7B69     		ldr	r3, [r7, #20]
 9951              	.L405:
1763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 9952              		.loc 23 1763 7 is_stmt 1 discriminator 6
 9953 0086 1846     		mov	r0, r3
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 423


 9954 0088 1C37     		adds	r7, r7, #28
 9955              		.cfi_def_cfa_offset 12
 9956 008a BD46     		mov	sp, r7
 9957              		.cfi_def_cfa_register 13
 9958              		@ sp needed
 9959 008c 90BD     		pop	{r4, r7, pc}
 9960              		.cfi_endproc
 9961              	.LFE5672:
 9963              		.section	.text._ZNSt6vectorIdSaIdEE5beginEv,"axG",%progbits,_ZNSt6vectorIdSaIdEE5beginEv,comdat
 9964              		.align	1
 9965              		.weak	_ZNSt6vectorIdSaIdEE5beginEv
 9966              		.syntax unified
 9967              		.thumb
 9968              		.thumb_func
 9969              		.fpu fpv5-d16
 9971              	_ZNSt6vectorIdSaIdEE5beginEv:
 9972              	.LFB5673:
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 9973              		.loc 23 811 7
 9974              		.cfi_startproc
 9975              		@ args = 0, pretend = 0, frame = 16
 9976              		@ frame_needed = 1, uses_anonymous_args = 0
 9977 0000 80B5     		push	{r7, lr}
 9978              		.cfi_def_cfa_offset 8
 9979              		.cfi_offset 7, -8
 9980              		.cfi_offset 14, -4
 9981 0002 84B0     		sub	sp, sp, #16
 9982              		.cfi_def_cfa_offset 24
 9983 0004 00AF     		add	r7, sp, #0
 9984              		.cfi_def_cfa_register 7
 9985 0006 7860     		str	r0, [r7, #4]
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 9986              		.loc 23 812 39
 9987 0008 7A68     		ldr	r2, [r7, #4]
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 9988              		.loc 23 812 16
 9989 000a 07F10C03 		add	r3, r7, #12
 9990 000e 1146     		mov	r1, r2
 9991 0010 1846     		mov	r0, r3
 9992 0012 FFF7FEFF 		bl	_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC1ERKS1_
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 9993              		.loc 23 812 47
 9994 0016 FB68     		ldr	r3, [r7, #12]
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 9995              		.loc 23 812 50
 9996 0018 1846     		mov	r0, r3
 9997 001a 1037     		adds	r7, r7, #16
 9998              		.cfi_def_cfa_offset 8
 9999 001c BD46     		mov	sp, r7
 10000              		.cfi_def_cfa_register 13
 10001              		@ sp needed
 10002 001e 80BD     		pop	{r7, pc}
 10003              		.cfi_endproc
 10004              	.LFE5673:
 10006              		.section	.text._ZNSt12_Vector_baseIdSaIdEE11_M_allocateEj,"axG",%progbits,_ZNSt12_Vector_baseIdSaI
 10007              		.align	1
 10008              		.weak	_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEj
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 424


 10009              		.syntax unified
 10010              		.thumb
 10011              		.thumb_func
 10012              		.fpu fpv5-d16
 10014              	_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEj:
 10015              	.LFB5674:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 10016              		.loc 23 343 7
 10017              		.cfi_startproc
 10018              		@ args = 0, pretend = 0, frame = 8
 10019              		@ frame_needed = 1, uses_anonymous_args = 0
 10020 0000 80B5     		push	{r7, lr}
 10021              		.cfi_def_cfa_offset 8
 10022              		.cfi_offset 7, -8
 10023              		.cfi_offset 14, -4
 10024 0002 82B0     		sub	sp, sp, #8
 10025              		.cfi_def_cfa_offset 16
 10026 0004 00AF     		add	r7, sp, #0
 10027              		.cfi_def_cfa_register 7
 10028 0006 7860     		str	r0, [r7, #4]
 10029 0008 3960     		str	r1, [r7]
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 10030              		.loc 23 346 18
 10031 000a 3B68     		ldr	r3, [r7]
 10032 000c 002B     		cmp	r3, #0
 10033 000e 06D0     		beq	.L410
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 10034              		.loc 23 346 34 discriminator 1
 10035 0010 7B68     		ldr	r3, [r7, #4]
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 10036              		.loc 23 346 33 discriminator 1
 10037 0012 3968     		ldr	r1, [r7]
 10038 0014 1846     		mov	r0, r3
 10039 0016 FFF7FEFF 		bl	_ZNSt16allocator_traitsISaIdEE8allocateERS0_j
 10040 001a 0346     		mov	r3, r0
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 10041              		.loc 23 346 58 discriminator 1
 10042 001c 00E0     		b	.L412
 10043              	.L410:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 10044              		.loc 23 346 18 discriminator 2
 10045 001e 0023     		movs	r3, #0
 10046              	.L412:
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 10047              		.loc 23 347 7 discriminator 5
 10048 0020 1846     		mov	r0, r3
 10049 0022 0837     		adds	r7, r7, #8
 10050              		.cfi_def_cfa_offset 8
 10051 0024 BD46     		mov	sp, r7
 10052              		.cfi_def_cfa_register 13
 10053              		@ sp needed
 10054 0026 80BD     		pop	{r7, pc}
 10055              		.cfi_endproc
 10056              	.LFE5674:
 10058              		.section	.text._ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_,"axG",%progbits
 10059              		.align	1
 10060              		.weak	_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 425


 10061              		.syntax unified
 10062              		.thumb
 10063              		.thumb_func
 10064              		.fpu fpv5-d16
 10066              	_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_:
 10067              	.LFB5675:
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _InputIterator __last,
 10068              		.loc 36 341 5
 10069              		.cfi_startproc
 10070              		@ args = 0, pretend = 0, frame = 16
 10071              		@ frame_needed = 1, uses_anonymous_args = 0
 10072 0000 90B5     		push	{r4, r7, lr}
 10073              		.cfi_def_cfa_offset 12
 10074              		.cfi_offset 4, -12
 10075              		.cfi_offset 7, -8
 10076              		.cfi_offset 14, -4
 10077 0002 85B0     		sub	sp, sp, #20
 10078              		.cfi_def_cfa_offset 32
 10079 0004 00AF     		add	r7, sp, #0
 10080              		.cfi_def_cfa_register 7
 10081 0006 F860     		str	r0, [r7, #12]
 10082 0008 B960     		str	r1, [r7, #8]
 10083 000a 7A60     		str	r2, [r7, #4]
 10084 000c 3B60     		str	r3, [r7]
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
 10085              		.loc 36 347 2
 10086 000e F868     		ldr	r0, [r7, #12]
 10087 0010 FFF7FEFF 		bl	_ZSt32__make_move_if_noexcept_iteratorIdSt13move_iteratorIPdEET0_PT_
 10088 0014 0446     		mov	r4, r0
 10089 0016 B868     		ldr	r0, [r7, #8]
 10090 0018 FFF7FEFF 		bl	_ZSt32__make_move_if_noexcept_iteratorIdSt13move_iteratorIPdEET0_PT_
 10091 001c 0146     		mov	r1, r0
 10092 001e 3B68     		ldr	r3, [r7]
 10093 0020 7A68     		ldr	r2, [r7, #4]
 10094 0022 2046     		mov	r0, r4
 10095 0024 FFF7FEFF 		bl	_ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E
 10096 0028 0346     		mov	r3, r0
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 10097              		.loc 36 349 5
 10098 002a 1846     		mov	r0, r3
 10099 002c 1437     		adds	r7, r7, #20
 10100              		.cfi_def_cfa_offset 12
 10101 002e BD46     		mov	sp, r7
 10102              		.cfi_def_cfa_register 13
 10103              		@ sp needed
 10104 0030 90BD     		pop	{r4, r7, pc}
 10105              		.cfi_endproc
 10106              	.LFE5675:
 10108              		.section	.text._ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_,"axG",%progbits,_ZN9_
 10109              		.align	1
 10110              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_
 10111              		.syntax unified
 10112              		.thumb
 10113              		.thumb_func
 10114              		.fpu fpv5-d16
 10116              	_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_:
 10117              	.LFB5677:
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 426


 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 10118              		.loc 35 978 7
 10119              		.cfi_startproc
 10120              		@ args = 0, pretend = 0, frame = 8
 10121              		@ frame_needed = 1, uses_anonymous_args = 0
 10122              		@ link register save eliminated.
 10123 0000 80B4     		push	{r7}
 10124              		.cfi_def_cfa_offset 4
 10125              		.cfi_offset 7, -4
 10126 0002 83B0     		sub	sp, sp, #12
 10127              		.cfi_def_cfa_offset 16
 10128 0004 00AF     		add	r7, sp, #0
 10129              		.cfi_def_cfa_register 7
 10130 0006 7860     		str	r0, [r7, #4]
 10131 0008 3960     		str	r1, [r7]
 10132              	.LBB77:
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 10133              		.loc 35 979 23
 10134 000a 3B68     		ldr	r3, [r7]
 10135 000c 1A68     		ldr	r2, [r3]
 10136 000e 7B68     		ldr	r3, [r7, #4]
 10137 0010 1A60     		str	r2, [r3]
 10138              	.LBE77:
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 10139              		.loc 35 979 27
 10140 0012 7B68     		ldr	r3, [r7, #4]
 10141 0014 1846     		mov	r0, r3
 10142 0016 0C37     		adds	r7, r7, #12
 10143              		.cfi_def_cfa_offset 4
 10144 0018 BD46     		mov	sp, r7
 10145              		.cfi_def_cfa_register 13
 10146              		@ sp needed
 10147 001a 5DF8047B 		ldr	r7, [sp], #4
 10148              		.cfi_restore 7
 10149              		.cfi_def_cfa_offset 0
 10150 001e 7047     		bx	lr
 10151              		.cfi_endproc
 10152              	.LFE5677:
 10154              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC1ERKS1_
 10155              		.thumb_set _ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC1ERKS1_,_ZN9__gnu_cxx17__normal_i
 10156              		.section	.text._ZNKSt6vectorIbSaIbEE3endEv,"axG",%progbits,_ZNKSt6vectorIbSaIbEE3endEv,comdat
 10157              		.align	1
 10158              		.weak	_ZNKSt6vectorIbSaIbEE3endEv
 10159              		.syntax unified
 10160              		.thumb
 10161              		.thumb_func
 10162              		.fpu fpv5-d16
 10164              	_ZNKSt6vectorIbSaIbEE3endEv:
 10165              	.LFB5679:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 10166              		.loc 6 846 7
 10167              		.cfi_startproc
 10168              		@ args = 0, pretend = 0, frame = 8
 10169              		@ frame_needed = 1, uses_anonymous_args = 0
 10170 0000 80B5     		push	{r7, lr}
 10171              		.cfi_def_cfa_offset 8
 10172              		.cfi_offset 7, -8
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 427


 10173              		.cfi_offset 14, -4
 10174 0002 82B0     		sub	sp, sp, #8
 10175              		.cfi_def_cfa_offset 16
 10176 0004 00AF     		add	r7, sp, #0
 10177              		.cfi_def_cfa_register 7
 10178 0006 7860     		str	r0, [r7, #4]
 10179 0008 3960     		str	r1, [r7]
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 10180              		.loc 6 847 30
 10181 000a 3B68     		ldr	r3, [r7]
 10182 000c 0833     		adds	r3, r3, #8
 10183 000e 1946     		mov	r1, r3
 10184 0010 7868     		ldr	r0, [r7, #4]
 10185 0012 FFF7FEFF 		bl	_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 10186              		.loc 6 847 41
 10187 0016 7868     		ldr	r0, [r7, #4]
 10188 0018 0837     		adds	r7, r7, #8
 10189              		.cfi_def_cfa_offset 8
 10190 001a BD46     		mov	sp, r7
 10191              		.cfi_def_cfa_register 13
 10192              		@ sp needed
 10193 001c 80BD     		pop	{r7, pc}
 10194              		.cfi_endproc
 10195              	.LFE5679:
 10197              		.section	.text._ZNKSt6vectorIbSaIbEE5beginEv,"axG",%progbits,_ZNKSt6vectorIbSaIbEE5beginEv,comdat
 10198              		.align	1
 10199              		.weak	_ZNKSt6vectorIbSaIbEE5beginEv
 10200              		.syntax unified
 10201              		.thumb
 10202              		.thumb_func
 10203              		.fpu fpv5-d16
 10205              	_ZNKSt6vectorIbSaIbEE5beginEv:
 10206              	.LFB5680:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 10207              		.loc 6 838 7
 10208              		.cfi_startproc
 10209              		@ args = 0, pretend = 0, frame = 8
 10210              		@ frame_needed = 1, uses_anonymous_args = 0
 10211 0000 80B5     		push	{r7, lr}
 10212              		.cfi_def_cfa_offset 8
 10213              		.cfi_offset 7, -8
 10214              		.cfi_offset 14, -4
 10215 0002 82B0     		sub	sp, sp, #8
 10216              		.cfi_def_cfa_offset 16
 10217 0004 00AF     		add	r7, sp, #0
 10218              		.cfi_def_cfa_register 7
 10219 0006 7860     		str	r0, [r7, #4]
 10220 0008 3960     		str	r1, [r7]
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 10221              		.loc 6 839 54
 10222 000a 3B68     		ldr	r3, [r7]
 10223 000c 1B68     		ldr	r3, [r3]
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 10224              		.loc 6 839 61
 10225 000e 0022     		movs	r2, #0
 10226 0010 1946     		mov	r1, r3
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 428


 10227 0012 7868     		ldr	r0, [r7, #4]
 10228 0014 FFF7FEFF 		bl	_ZNSt19_Bit_const_iteratorC1EPmj
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 10229              		.loc 6 839 64
 10230 0018 7868     		ldr	r0, [r7, #4]
 10231 001a 0837     		adds	r7, r7, #8
 10232              		.cfi_def_cfa_offset 8
 10233 001c BD46     		mov	sp, r7
 10234              		.cfi_def_cfa_register 13
 10235              		@ sp needed
 10236 001e 80BD     		pop	{r7, pc}
 10237              		.cfi_endproc
 10238              	.LFE5680:
 10240              		.section	.text._ZNKSt6vectorIbSaIbEE6cbeginEv,"axG",%progbits,_ZNKSt6vectorIbSaIbEE6cbeginEv,comda
 10241              		.align	1
 10242              		.weak	_ZNKSt6vectorIbSaIbEE6cbeginEv
 10243              		.syntax unified
 10244              		.thumb
 10245              		.thumb_func
 10246              		.fpu fpv5-d16
 10248              	_ZNKSt6vectorIbSaIbEE6cbeginEv:
 10249              	.LFB5681:
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 10250              		.loc 6 867 7
 10251              		.cfi_startproc
 10252              		@ args = 0, pretend = 0, frame = 8
 10253              		@ frame_needed = 1, uses_anonymous_args = 0
 10254 0000 80B5     		push	{r7, lr}
 10255              		.cfi_def_cfa_offset 8
 10256              		.cfi_offset 7, -8
 10257              		.cfi_offset 14, -4
 10258 0002 82B0     		sub	sp, sp, #8
 10259              		.cfi_def_cfa_offset 16
 10260 0004 00AF     		add	r7, sp, #0
 10261              		.cfi_def_cfa_register 7
 10262 0006 7860     		str	r0, [r7, #4]
 10263 0008 3960     		str	r1, [r7]
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 10264              		.loc 6 868 54
 10265 000a 3B68     		ldr	r3, [r7]
 10266 000c 1B68     		ldr	r3, [r3]
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 10267              		.loc 6 868 61
 10268 000e 0022     		movs	r2, #0
 10269 0010 1946     		mov	r1, r3
 10270 0012 7868     		ldr	r0, [r7, #4]
 10271 0014 FFF7FEFF 		bl	_ZNSt19_Bit_const_iteratorC1EPmj
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 10272              		.loc 6 868 64
 10273 0018 7868     		ldr	r0, [r7, #4]
 10274 001a 0837     		adds	r7, r7, #8
 10275              		.cfi_def_cfa_offset 8
 10276 001c BD46     		mov	sp, r7
 10277              		.cfi_def_cfa_register 13
 10278              		@ sp needed
 10279 001e 80BD     		pop	{r7, pc}
 10280              		.cfi_endproc
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 429


 10281              	.LFE5681:
 10283              		.section	.rodata
 10284 001f 00       		.align	2
 10285              	.LC2:
 10286 0020 76656374 		.ascii	"vector<bool>::_M_fill_insert\000"
 10286      6F723C62 
 10286      6F6F6C3E 
 10286      3A3A5F4D 
 10286      5F66696C 
 10287              		.section	.text._ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratorjb,"axG",%progbits,_ZNSt6vect
 10288              		.align	1
 10289              		.weak	_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratorjb
 10290              		.syntax unified
 10291              		.thumb
 10292              		.thumb_func
 10293              		.fpu fpv5-d16
 10295              	_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratorjb:
 10296              	.LFB5682:
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_default_append(size_type __n)
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n != 0)
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __size = size();
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					 - this->_M_impl._M_finish);
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__size > max_size() || __navail > max_size() - __size)
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    __builtin_unreachable();
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__navail >= __n)
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_finish =
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						 __n, _M_get_Tp_allocator());
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GREW(__n);
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      const size_type __len =
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_M_check_len(__n, "vector::_M_default_append");
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __new_start(this->_M_allocate(__len));
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		{
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __try
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    {
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      std::__uninitialized_default_n_a(__new_start + __size,
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      __n, _M_get_Tp_allocator());
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    }
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __catch(...)
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    {
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      _M_deallocate(__new_start, __len);
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 430


 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      __throw_exception_again;
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    }
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      __new_start, _M_get_Tp_allocator());
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      else
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		{
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  pointer __destroy_from = pointer();
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __try
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    {
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      std::__uninitialized_default_n_a(__new_start + __size,
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      __n, _M_get_Tp_allocator());
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      __destroy_from = __new_start + __size;
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      std::__uninitialized_move_if_noexcept_a(
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_start, this->_M_impl._M_finish,
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      __new_start, _M_get_Tp_allocator());
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    }
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __catch(...)
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    {
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      if (__destroy_from)
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			std::_Destroy(__destroy_from, __destroy_from + __n,
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				      _M_get_Tp_allocator());
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      _M_deallocate(__new_start, __len);
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      __throw_exception_again;
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    }
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				_M_get_Tp_allocator());
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_REINIT;
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_deallocate(this->_M_impl._M_start,
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    this->_M_impl._M_end_of_storage
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    - this->_M_impl._M_start);
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_start = __new_start;
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_finish = __new_start + __size + __n;
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_end_of_storage = __new_start + __len;
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     bool
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_shrink_to_fit()
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (capacity() == size())
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return false;
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_REINIT;
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return std::__shrink_to_fit_aux<vector>::_S_do_it(*this);
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _InputIterator>
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_range_insert(iterator __pos, _InputIterator __first,
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      _InputIterator __last, std::input_iterator_tag)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 431


 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__pos == end())
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    for (; __first != __last; ++__first)
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      insert(end(), *__first);
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else if (__first != __last)
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    vector __tmp(__first, __last, _M_get_Tp_allocator());
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    insert(__pos,
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		   _GLIBCXX_MAKE_MOVE_ITERATOR(__tmp.begin()),
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		   _GLIBCXX_MAKE_MOVE_ITERATOR(__tmp.end()));
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _ForwardIterator>
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_range_insert(iterator __position, _ForwardIterator __first,
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      _ForwardIterator __last, std::forward_iterator_tag)
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__first != __last)
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    const size_type __n = std::distance(__first, __last);
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    if (size_type(this->_M_impl._M_end_of_storage
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  - this->_M_impl._M_finish) >= __n)
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      {
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		const size_type __elems_after = end() - __position;
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		pointer __old_finish(this->_M_impl._M_finish);
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		if (__elems_after > __n)
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  {
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::__uninitialized_move_a(this->_M_impl._M_finish - __n,
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						this->_M_impl._M_finish,
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						this->_M_impl._M_finish,
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						_M_get_Tp_allocator());
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    this->_M_impl._M_finish += __n;
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _GLIBCXX_ASAN_ANNOTATE_GREW(__n);
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _GLIBCXX_MOVE_BACKWARD3(__position.base(),
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					    __old_finish - __n, __old_finish);
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::copy(__first, __last, __position);
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  }
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		else
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  {
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _ForwardIterator __mid = __first;
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::advance(__mid, __elems_after);
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::__uninitialized_copy_a(__mid, __last,
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						this->_M_impl._M_finish,
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						_M_get_Tp_allocator());
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    this->_M_impl._M_finish += __n - __elems_after;
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _GLIBCXX_ASAN_ANNOTATE_GREW(__n - __elems_after);
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::__uninitialized_move_a(__position.base(),
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						__old_finish,
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						this->_M_impl._M_finish,
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						_M_get_Tp_allocator());
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 432


 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    this->_M_impl._M_finish += __elems_after;
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _GLIBCXX_ASAN_ANNOTATE_GREW(__elems_after);
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::copy(__first, __mid, __position);
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  }
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      }
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    else
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      {
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		const size_type __len =
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _M_check_len(__n, "vector::_M_range_insert");
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		pointer __new_start(this->_M_allocate(__len));
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		pointer __new_finish(__new_start);
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		__try
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  {
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    __new_finish
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      = std::__uninitialized_move_if_noexcept_a
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      (this->_M_impl._M_start, __position.base(),
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		       __new_start, _M_get_Tp_allocator());
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    __new_finish
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      = std::__uninitialized_copy_a(__first, __last,
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						    __new_finish,
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						    _M_get_Tp_allocator());
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    __new_finish
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      = std::__uninitialized_move_if_noexcept_a
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      (__position.base(), this->_M_impl._M_finish,
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		       __new_finish, _M_get_Tp_allocator());
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  }
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		__catch(...)
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  {
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::_Destroy(__new_start, __new_finish,
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				  _M_get_Tp_allocator());
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _M_deallocate(__new_start, __len);
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    __throw_exception_again;
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  }
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      _M_get_Tp_allocator());
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_GLIBCXX_ASAN_ANNOTATE_REINIT;
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_M_deallocate(this->_M_impl._M_start,
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_end_of_storage
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      - this->_M_impl._M_start);
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		this->_M_impl._M_start = __new_start;
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		this->_M_impl._M_finish = __new_finish;
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		this->_M_impl._M_end_of_storage = __new_start + __len;
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      }
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   // vector<bool>
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Alloc>
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<bool, _Alloc>::
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_reallocate(size_type __n)
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Bit_pointer __q = this->_M_allocate(__n);
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       iterator __start(std::__addressof(*__q), 0);
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       iterator __finish(_M_copy_aligned(begin(), end(), __start));
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_deallocate();
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 433


 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __start;
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_finish = __finish;
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __q + _S_nword(__n);
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Alloc>
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<bool, _Alloc>::
 10297              		.loc 32 824 5
 10298              		.cfi_startproc
 10299              		@ args = 4, pretend = 0, frame = 128
 10300              		@ frame_needed = 1, uses_anonymous_args = 0
 10301 0000 90B5     		push	{r4, r7, lr}
 10302              		.cfi_def_cfa_offset 12
 10303              		.cfi_offset 4, -12
 10304              		.cfi_offset 7, -8
 10305              		.cfi_offset 14, -4
 10306 0002 A5B0     		sub	sp, sp, #148
 10307              		.cfi_def_cfa_offset 160
 10308 0004 04AF     		add	r7, sp, #16
 10309              		.cfi_def_cfa 7, 144
 10310 0006 F860     		str	r0, [r7, #12]
 10311 0008 381D     		adds	r0, r7, #4
 10312 000a 80E80600 		stm	r0, {r1, r2}
 10313 000e 3B60     		str	r3, [r7]
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_fill_insert(iterator __position, size_type __n, bool __x)
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n == 0)
 10314              		.loc 32 827 7
 10315 0010 3B68     		ldr	r3, [r7]
 10316 0012 002B     		cmp	r3, #0
 10317 0014 00F0DC80 		beq	.L427
 10318              	.LBB78:
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return;
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (capacity() - size() >= __n)
 10319              		.loc 32 829 19
 10320 0018 F868     		ldr	r0, [r7, #12]
 10321 001a FFF7FEFF 		bl	_ZNKSt6vectorIbSaIbEE8capacityEv
 10322 001e 0446     		mov	r4, r0
 10323              		.loc 32 829 28
 10324 0020 F868     		ldr	r0, [r7, #12]
 10325 0022 FFF7FEFF 		bl	_ZNKSt6vectorIbSaIbEE4sizeEv
 10326 0026 0346     		mov	r3, r0
 10327              		.loc 32 829 22
 10328 0028 E31A     		subs	r3, r4, r3
 10329              		.loc 32 829 31
 10330 002a 3A68     		ldr	r2, [r7]
 10331 002c 9A42     		cmp	r2, r3
 10332 002e 94BF     		ite	ls
 10333 0030 0123     		movls	r3, #1
 10334 0032 0023     		movhi	r3, #0
 10335 0034 DBB2     		uxtb	r3, r3
 10336              		.loc 32 829 7
 10337 0036 002B     		cmp	r3, #0
 10338 0038 38D0     		beq	.L426
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  std::copy_backward(__position, end(),
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 434


 10339              		.loc 32 831 22
 10340 003a 07F13003 		add	r3, r7, #48
 10341 003e F968     		ldr	r1, [r7, #12]
 10342 0040 1846     		mov	r0, r3
 10343 0042 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE3endEv
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			     this->_M_impl._M_finish + difference_type(__n));
 10344              		.loc 32 832 23
 10345 0046 FB68     		ldr	r3, [r7, #12]
 10346 0048 03F10801 		add	r1, r3, #8
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			     this->_M_impl._M_finish + difference_type(__n));
 10347              		.loc 32 831 22
 10348 004c 3A68     		ldr	r2, [r7]
 10349 004e 07F13803 		add	r3, r7, #56
 10350 0052 1846     		mov	r0, r3
 10351 0054 FFF7FEFF 		bl	_ZStplRKSt13_Bit_iteratori
 10352 0058 07F12804 		add	r4, r7, #40
 10353 005c 01AA     		add	r2, sp, #4
 10354 005e 07F13803 		add	r3, r7, #56
 10355 0062 93E80300 		ldm	r3, {r0, r1}
 10356 0066 82E80300 		stm	r2, {r0, r1}
 10357 006a 7B6B     		ldr	r3, [r7, #52]
 10358 006c 0093     		str	r3, [sp]
 10359 006e 3B6B     		ldr	r3, [r7, #48]
 10360 0070 3A1D     		adds	r2, r7, #4
 10361 0072 06CA     		ldm	r2, {r1, r2}
 10362 0074 2046     		mov	r0, r4
 10363 0076 FFF7FEFF 		bl	_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  std::fill(__position, __position + difference_type(__n), __x);
 10364              		.loc 32 833 13
 10365 007a 3A68     		ldr	r2, [r7]
 10366 007c 07F14003 		add	r3, r7, #64
 10367 0080 391D     		adds	r1, r7, #4
 10368 0082 1846     		mov	r0, r3
 10369 0084 FFF7FEFF 		bl	_ZStplRKSt13_Bit_iteratori
 10370 0088 07F19003 		add	r3, r7, #144
 10371 008c 0093     		str	r3, [sp]
 10372 008e 07F14003 		add	r3, r7, #64
 10373 0092 0CCB     		ldm	r3, {r2, r3}
 10374 0094 391D     		adds	r1, r7, #4
 10375 0096 03C9     		ldm	r1, {r0, r1}
 10376 0098 FFF7FEFF 		bl	_ZSt4fillSt13_Bit_iteratorS_RKb
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish += difference_type(__n);
 10377              		.loc 32 834 28
 10378 009c FB68     		ldr	r3, [r7, #12]
 10379 009e 0833     		adds	r3, r3, #8
 10380 00a0 3A68     		ldr	r2, [r7]
 10381 00a2 1146     		mov	r1, r2
 10382 00a4 1846     		mov	r0, r3
 10383 00a6 FFF7FEFF 		bl	_ZNSt13_Bit_iteratorpLEi
 10384 00aa 92E0     		b	.L423
 10385              	.L426:
 10386              	.LBB79:
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __len = 
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_check_len(__n, "vector<bool>::_M_fill_insert");
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 435


 10387              		.loc 32 839 18
 10388 00ac 4A4A     		ldr	r2, .L428
 10389 00ae 3968     		ldr	r1, [r7]
 10390 00b0 F868     		ldr	r0, [r7, #12]
 10391 00b2 FFF7FEFF 		bl	_ZNKSt6vectorIbSaIbEE12_M_check_lenEjPKc
 10392 00b6 F867     		str	r0, [r7, #124]
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _Bit_pointer __q = this->_M_allocate(__len);
 10393              		.loc 32 840 40
 10394 00b8 FB68     		ldr	r3, [r7, #12]
 10395 00ba F96F     		ldr	r1, [r7, #124]
 10396 00bc 1846     		mov	r0, r3
 10397 00be FFF7FEFF 		bl	_ZNSt13_Bvector_baseISaIbEE11_M_allocateEj
 10398 00c2 B867     		str	r0, [r7, #120]
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  iterator __start(std::__addressof(*__q), 0);
 10399              		.loc 32 841 13
 10400 00c4 B86F     		ldr	r0, [r7, #120]
 10401 00c6 FFF7FEFF 		bl	_ZSt11__addressofImEPT_RS0_
 10402 00ca 0146     		mov	r1, r0
 10403 00cc 07F12003 		add	r3, r7, #32
 10404 00d0 0022     		movs	r2, #0
 10405 00d2 1846     		mov	r0, r3
 10406 00d4 FFF7FEFF 		bl	_ZNSt13_Bit_iteratorC1EPmj
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  iterator __i = _M_copy_aligned(begin(), __position, __start);
 10407              		.loc 32 842 40
 10408 00d8 07F15003 		add	r3, r7, #80
 10409 00dc F968     		ldr	r1, [r7, #12]
 10410 00de 1846     		mov	r0, r3
 10411 00e0 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE5beginEv
 10412              		.loc 32 842 34
 10413 00e4 07F15002 		add	r2, r7, #80
 10414 00e8 07F14803 		add	r3, r7, #72
 10415 00ec 1146     		mov	r1, r2
 10416 00ee 1846     		mov	r0, r3
 10417 00f0 FFF7FEFF 		bl	_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator
 10418 00f4 3A1D     		adds	r2, r7, #4
 10419 00f6 07F15803 		add	r3, r7, #88
 10420 00fa 1146     		mov	r1, r2
 10421 00fc 1846     		mov	r0, r3
 10422 00fe FFF7FEFF 		bl	_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator
 10423 0102 07F11804 		add	r4, r7, #24
 10424 0106 02AA     		add	r2, sp, #8
 10425 0108 07F12003 		add	r3, r7, #32
 10426 010c 93E80300 		ldm	r3, {r0, r1}
 10427 0110 82E80300 		stm	r2, {r0, r1}
 10428 0114 6A46     		mov	r2, sp
 10429 0116 07F15803 		add	r3, r7, #88
 10430 011a 93E80300 		ldm	r3, {r0, r1}
 10431 011e 82E80300 		stm	r2, {r0, r1}
 10432 0122 07F14803 		add	r3, r7, #72
 10433 0126 0CCB     		ldm	r3, {r2, r3}
 10434 0128 F968     		ldr	r1, [r7, #12]
 10435 012a 2046     		mov	r0, r4
 10436 012c FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  std::fill(__i, __i + difference_type(__n), __x);
 10437              		.loc 32 843 13
 10438 0130 3A68     		ldr	r2, [r7]
 10439 0132 07F16003 		add	r3, r7, #96
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 436


 10440 0136 07F11801 		add	r1, r7, #24
 10441 013a 1846     		mov	r0, r3
 10442 013c FFF7FEFF 		bl	_ZStplRKSt13_Bit_iteratori
 10443 0140 07F19003 		add	r3, r7, #144
 10444 0144 0093     		str	r3, [sp]
 10445 0146 07F16003 		add	r3, r7, #96
 10446 014a 0CCB     		ldm	r3, {r2, r3}
 10447 014c 07F11801 		add	r1, r7, #24
 10448 0150 03C9     		ldm	r1, {r0, r1}
 10449 0152 FFF7FEFF 		bl	_ZSt4fillSt13_Bit_iteratorS_RKb
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  iterator __finish = std::copy(__position, end(),
 10450              		.loc 32 844 33
 10451 0156 07F16803 		add	r3, r7, #104
 10452 015a F968     		ldr	r1, [r7, #12]
 10453 015c 1846     		mov	r0, r3
 10454 015e FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE3endEv
 10455 0162 3A68     		ldr	r2, [r7]
 10456 0164 07F17003 		add	r3, r7, #112
 10457 0168 07F11801 		add	r1, r7, #24
 10458 016c 1846     		mov	r0, r3
 10459 016e FFF7FEFF 		bl	_ZStplRKSt13_Bit_iteratori
 10460 0172 07F11004 		add	r4, r7, #16
 10461 0176 01AA     		add	r2, sp, #4
 10462 0178 07F17003 		add	r3, r7, #112
 10463 017c 93E80300 		ldm	r3, {r0, r1}
 10464 0180 82E80300 		stm	r2, {r0, r1}
 10465 0184 FB6E     		ldr	r3, [r7, #108]
 10466 0186 0093     		str	r3, [sp]
 10467 0188 BB6E     		ldr	r3, [r7, #104]
 10468 018a 3A1D     		adds	r2, r7, #4
 10469 018c 06CA     		ldm	r2, {r1, r2}
 10470 018e 2046     		mov	r0, r4
 10471 0190 FFF7FEFF 		bl	_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					__i + difference_type(__n));
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_deallocate();
 10472              		.loc 32 846 23
 10473 0194 FB68     		ldr	r3, [r7, #12]
 10474 0196 1846     		mov	r0, r3
 10475 0198 FFF7FEFF 		bl	_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_end_of_storage = __q + _S_nword(__len);
 10476              		.loc 32 847 52
 10477 019c F86F     		ldr	r0, [r7, #124]
 10478 019e FFF7FEFF 		bl	_ZNSt13_Bvector_baseISaIbEE8_S_nwordEj
 10479 01a2 0346     		mov	r3, r0
 10480              		.loc 32 847 42
 10481 01a4 9B00     		lsls	r3, r3, #2
 10482 01a6 BA6F     		ldr	r2, [r7, #120]
 10483 01a8 1A44     		add	r2, r2, r3
 10484              		.loc 32 847 36
 10485 01aa FB68     		ldr	r3, [r7, #12]
 10486 01ac 1A61     		str	r2, [r3, #16]
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_start = __start;
 10487              		.loc 32 848 4
 10488 01ae FB68     		ldr	r3, [r7, #12]
 10489 01b0 1A46     		mov	r2, r3
 10490 01b2 07F12003 		add	r3, r7, #32
 10491 01b6 93E80300 		ldm	r3, {r0, r1}
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 437


 10492 01ba 82E80300 		stm	r2, {r0, r1}
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = __finish;
 10493              		.loc 32 849 4
 10494 01be FB68     		ldr	r3, [r7, #12]
 10495 01c0 0833     		adds	r3, r3, #8
 10496 01c2 07F11002 		add	r2, r7, #16
 10497 01c6 92E80300 		ldm	r2, {r0, r1}
 10498 01ca 83E80300 		stm	r3, {r0, r1}
 10499 01ce 00E0     		b	.L423
 10500              	.L427:
 10501              	.LBE79:
 10502              	.LBE78:
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (capacity() - size() >= __n)
 10503              		.loc 32 828 2
 10504 01d0 00BF     		nop
 10505              	.L423:
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 10506              		.loc 32 851 5
 10507 01d2 8437     		adds	r7, r7, #132
 10508              		.cfi_def_cfa_offset 12
 10509 01d4 BD46     		mov	sp, r7
 10510              		.cfi_def_cfa_register 13
 10511              		@ sp needed
 10512 01d6 90BD     		pop	{r4, r7, pc}
 10513              	.L429:
 10514              		.align	2
 10515              	.L428:
 10516 01d8 20000000 		.word	.LC2
 10517              		.cfi_endproc
 10518              	.LFE5682:
 10520              		.section	.text._ZNSt8__detail5__modIjLj0ELj1ELj0EEET_S1_,"axG",%progbits,_ZNSt8__detail5__modIjLj0
 10521              		.align	1
 10522              		.weak	_ZNSt8__detail5__modIjLj0ELj1ELj0EEET_S1_
 10523              		.syntax unified
 10524              		.thumb
 10525              		.thumb_func
 10526              		.fpu fpv5-d16
 10528              	_ZNSt8__detail5__modIjLj0ELj1ELj0EEET_S1_:
 10529              	.LFB5683:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _Mod<_Tp, __m, __a, __c>::__calc(__x); }
 10530              		.loc 18 148 7
 10531              		.cfi_startproc
 10532              		@ args = 0, pretend = 0, frame = 8
 10533              		@ frame_needed = 1, uses_anonymous_args = 0
 10534 0000 80B5     		push	{r7, lr}
 10535              		.cfi_def_cfa_offset 8
 10536              		.cfi_offset 7, -8
 10537              		.cfi_offset 14, -4
 10538 0002 82B0     		sub	sp, sp, #8
 10539              		.cfi_def_cfa_offset 16
 10540 0004 00AF     		add	r7, sp, #0
 10541              		.cfi_def_cfa_register 7
 10542 0006 7860     		str	r0, [r7, #4]
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 10543              		.loc 18 149 48
 10544 0008 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 438


 10545 000a FFF7FEFF 		bl	_ZNSt8__detail4_ModIjLj0ELj1ELj0ELb1ELb0EE6__calcEj
 10546 000e 0346     		mov	r3, r0
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 10547              		.loc 18 149 55
 10548 0010 1846     		mov	r0, r3
 10549 0012 0837     		adds	r7, r7, #8
 10550              		.cfi_def_cfa_offset 8
 10551 0014 BD46     		mov	sp, r7
 10552              		.cfi_def_cfa_register 13
 10553              		@ sp needed
 10554 0016 80BD     		pop	{r7, pc}
 10555              		.cfi_endproc
 10556              	.LFE5683:
 10558              		.section	.text._ZNSt8__detail5__modIjLj624ELj1ELj0EEET_S1_,"axG",%progbits,_ZNSt8__detail5__modIjL
 10559              		.align	1
 10560              		.weak	_ZNSt8__detail5__modIjLj624ELj1ELj0EEET_S1_
 10561              		.syntax unified
 10562              		.thumb
 10563              		.thumb_func
 10564              		.fpu fpv5-d16
 10566              	_ZNSt8__detail5__modIjLj624ELj1ELj0EEET_S1_:
 10567              	.LFB5684:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return _Mod<_Tp, __m, __a, __c>::__calc(__x); }
 10568              		.loc 18 148 7
 10569              		.cfi_startproc
 10570              		@ args = 0, pretend = 0, frame = 8
 10571              		@ frame_needed = 1, uses_anonymous_args = 0
 10572 0000 80B5     		push	{r7, lr}
 10573              		.cfi_def_cfa_offset 8
 10574              		.cfi_offset 7, -8
 10575              		.cfi_offset 14, -4
 10576 0002 82B0     		sub	sp, sp, #8
 10577              		.cfi_def_cfa_offset 16
 10578 0004 00AF     		add	r7, sp, #0
 10579              		.cfi_def_cfa_register 7
 10580 0006 7860     		str	r0, [r7, #4]
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 10581              		.loc 18 149 48
 10582 0008 7868     		ldr	r0, [r7, #4]
 10583 000a FFF7FEFF 		bl	_ZNSt8__detail4_ModIjLj624ELj1ELj0ELb1ELb1EE6__calcEj
 10584 000e 0346     		mov	r3, r0
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 10585              		.loc 18 149 55
 10586 0010 1846     		mov	r0, r3
 10587 0012 0837     		adds	r7, r7, #8
 10588              		.cfi_def_cfa_offset 8
 10589 0014 BD46     		mov	sp, r7
 10590              		.cfi_def_cfa_register 13
 10591              		@ sp needed
 10592 0016 80BD     		pop	{r7, pc}
 10593              		.cfi_endproc
 10594              	.LFE5684:
 10596              		.section	.text._ZNSt8__detail8_AdaptorISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj256748
 10597              		.align	1
 10598              		.weak	_ZNSt8__detail8_AdaptorISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11
 10599              		.syntax unified
 10600              		.thumb
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 439


 10601              		.thumb_func
 10602              		.fpu fpv5-d16
 10604              	_ZNSt8__detail8_AdaptorISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294
 10605              	.LFB5686:
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	: _M_g(__g) { }
 10606              		.loc 18 162 2
 10607              		.cfi_startproc
 10608              		@ args = 0, pretend = 0, frame = 8
 10609              		@ frame_needed = 1, uses_anonymous_args = 0
 10610              		@ link register save eliminated.
 10611 0000 80B4     		push	{r7}
 10612              		.cfi_def_cfa_offset 4
 10613              		.cfi_offset 7, -4
 10614 0002 83B0     		sub	sp, sp, #12
 10615              		.cfi_def_cfa_offset 16
 10616 0004 00AF     		add	r7, sp, #0
 10617              		.cfi_def_cfa_register 7
 10618 0006 7860     		str	r0, [r7, #4]
 10619 0008 3960     		str	r1, [r7]
 10620              	.LBB80:
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 10621              		.loc 18 163 12
 10622 000a 7B68     		ldr	r3, [r7, #4]
 10623 000c 3A68     		ldr	r2, [r7]
 10624 000e 1A60     		str	r2, [r3]
 10625              	.LBE80:
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 10626              		.loc 18 163 16
 10627 0010 7B68     		ldr	r3, [r7, #4]
 10628 0012 1846     		mov	r0, r3
 10629 0014 0C37     		adds	r7, r7, #12
 10630              		.cfi_def_cfa_offset 4
 10631 0016 BD46     		mov	sp, r7
 10632              		.cfi_def_cfa_register 13
 10633              		@ sp needed
 10634 0018 5DF8047B 		ldr	r7, [sp], #4
 10635              		.cfi_restore 7
 10636              		.cfi_def_cfa_offset 0
 10637 001c 7047     		bx	lr
 10638              		.cfi_endproc
 10639              	.LFE5686:
 10641              		.weak	_ZNSt8__detail8_AdaptorISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11
 10642              		.thumb_set _ZNSt8__detail8_AdaptorISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615
 10643              		.section	.text._ZNSt8__detail8_AdaptorISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj256748
 10644              		.align	1
 10645              		.weak	_ZNSt8__detail8_AdaptorISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11
 10646              		.syntax unified
 10647              		.thumb
 10648              		.thumb_func
 10649              		.fpu fpv5-d16
 10651              	_ZNSt8__detail8_AdaptorISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294
 10652              	.LFB5688:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
 10653              		.loc 18 179 2
 10654              		.cfi_startproc
 10655              		@ args = 0, pretend = 0, frame = 8
 10656              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 440


 10657 0000 80B5     		push	{r7, lr}
 10658              		.cfi_def_cfa_offset 8
 10659              		.cfi_offset 7, -8
 10660              		.cfi_offset 14, -4
 10661 0002 82B0     		sub	sp, sp, #8
 10662              		.cfi_def_cfa_offset 16
 10663 0004 00AF     		add	r7, sp, #0
 10664              		.cfi_def_cfa_register 7
 10665 0006 7860     		str	r0, [r7, #4]
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	}
 10666              		.loc 18 183 38
 10667 0008 7B68     		ldr	r3, [r7, #4]
 10668 000a 1B68     		ldr	r3, [r3]
 10669 000c 1846     		mov	r0, r3
 10670 000e FFF7FEFF 		bl	_ZSt18generate_canonicalIfLj24ESt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615E
 10671 0012 F0EE407A 		vmov.f32	s15, s0
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 10672              		.loc 18 184 2
 10673 0016 B0EE670A 		vmov.f32	s0, s15
 10674 001a 0837     		adds	r7, r7, #8
 10675              		.cfi_def_cfa_offset 8
 10676 001c BD46     		mov	sp, r7
 10677              		.cfi_def_cfa_register 13
 10678              		@ sp needed
 10679 001e 80BD     		pop	{r7, pc}
 10680              		.cfi_endproc
 10681              	.LFE5688:
 10683              		.section	.text._ZNKSt25uniform_real_distributionIfE10param_type1bEv,"axG",%progbits,_ZNKSt25unifor
 10684              		.align	1
 10685              		.weak	_ZNKSt25uniform_real_distributionIfE10param_type1bEv
 10686              		.syntax unified
 10687              		.thumb
 10688              		.thumb_func
 10689              		.fpu fpv5-d16
 10691              	_ZNKSt25uniform_real_distributionIfE10param_type1bEv:
 10692              	.LFB5689:
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ return _M_b; }
 10693              		.loc 18 1759 2
 10694              		.cfi_startproc
 10695              		@ args = 0, pretend = 0, frame = 8
 10696              		@ frame_needed = 1, uses_anonymous_args = 0
 10697              		@ link register save eliminated.
 10698 0000 80B4     		push	{r7}
 10699              		.cfi_def_cfa_offset 4
 10700              		.cfi_offset 7, -4
 10701 0002 83B0     		sub	sp, sp, #12
 10702              		.cfi_def_cfa_offset 16
 10703 0004 00AF     		add	r7, sp, #0
 10704              		.cfi_def_cfa_register 7
 10705 0006 7860     		str	r0, [r7, #4]
1760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 10706              		.loc 18 1760 11
 10707 0008 7B68     		ldr	r3, [r7, #4]
 10708 000a 5B68     		ldr	r3, [r3, #4]	@ float
 10709 000c 07EE903A 		vmov	s15, r3
1760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 10710              		.loc 18 1760 17
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 441


 10711 0010 B0EE670A 		vmov.f32	s0, s15
 10712 0014 0C37     		adds	r7, r7, #12
 10713              		.cfi_def_cfa_offset 4
 10714 0016 BD46     		mov	sp, r7
 10715              		.cfi_def_cfa_register 13
 10716              		@ sp needed
 10717 0018 5DF8047B 		ldr	r7, [sp], #4
 10718              		.cfi_restore 7
 10719              		.cfi_def_cfa_offset 0
 10720 001c 7047     		bx	lr
 10721              		.cfi_endproc
 10722              	.LFE5689:
 10724              		.section	.text._ZNKSt25uniform_real_distributionIfE10param_type1aEv,"axG",%progbits,_ZNKSt25unifor
 10725              		.align	1
 10726              		.weak	_ZNKSt25uniform_real_distributionIfE10param_type1aEv
 10727              		.syntax unified
 10728              		.thumb
 10729              		.thumb_func
 10730              		.fpu fpv5-d16
 10732              	_ZNKSt25uniform_real_distributionIfE10param_type1aEv:
 10733              	.LFB5690:
1755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{ return _M_a; }
 10734              		.loc 18 1755 2
 10735              		.cfi_startproc
 10736              		@ args = 0, pretend = 0, frame = 8
 10737              		@ frame_needed = 1, uses_anonymous_args = 0
 10738              		@ link register save eliminated.
 10739 0000 80B4     		push	{r7}
 10740              		.cfi_def_cfa_offset 4
 10741              		.cfi_offset 7, -4
 10742 0002 83B0     		sub	sp, sp, #12
 10743              		.cfi_def_cfa_offset 16
 10744 0004 00AF     		add	r7, sp, #0
 10745              		.cfi_def_cfa_register 7
 10746 0006 7860     		str	r0, [r7, #4]
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 10747              		.loc 18 1756 11
 10748 0008 7B68     		ldr	r3, [r7, #4]
 10749 000a 1B68     		ldr	r3, [r3]	@ float
 10750 000c 07EE903A 		vmov	s15, r3
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 10751              		.loc 18 1756 17
 10752 0010 B0EE670A 		vmov.f32	s0, s15
 10753 0014 0C37     		adds	r7, r7, #12
 10754              		.cfi_def_cfa_offset 4
 10755 0016 BD46     		mov	sp, r7
 10756              		.cfi_def_cfa_register 13
 10757              		@ sp needed
 10758 0018 5DF8047B 		ldr	r7, [sp], #4
 10759              		.cfi_restore 7
 10760              		.cfi_def_cfa_offset 0
 10761 001c 7047     		bx	lr
 10762              		.cfi_endproc
 10763              	.LFE5690:
 10765              		.section	.text._ZN9__gnu_cxx13new_allocatorImE10deallocateEPmj,"axG",%progbits,_ZN9__gnu_cxx13new_
 10766              		.align	1
 10767              		.weak	_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmj
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 442


 10768              		.syntax unified
 10769              		.thumb
 10770              		.thumb_func
 10771              		.fpu fpv5-d16
 10773              	_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmj:
 10774              	.LFB5725:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       pointer
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       const_pointer
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // about what the return value is when __n == 0.
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX_NODISCARD _Tp*
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (__n > this->_M_max_size())
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // __p is not permitted to be a null pointer.
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       void
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       deallocate(_Tp* __p, size_type __t)
 10775              		.loc 30 120 7
 10776              		.cfi_startproc
 10777              		@ args = 0, pretend = 0, frame = 16
 10778              		@ frame_needed = 1, uses_anonymous_args = 0
 10779 0000 80B5     		push	{r7, lr}
 10780              		.cfi_def_cfa_offset 8
 10781              		.cfi_offset 7, -8
 10782              		.cfi_offset 14, -4
 10783 0002 84B0     		sub	sp, sp, #16
 10784              		.cfi_def_cfa_offset 24
 10785 0004 00AF     		add	r7, sp, #0
 10786              		.cfi_def_cfa_register 7
 10787 0006 F860     		str	r0, [r7, #12]
 10788 0008 B960     		str	r1, [r7, #8]
 10789 000a 7A60     		str	r2, [r7, #4]
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    ::operator delete(__p,
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 443


 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # if __cpp_sized_deallocation
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      __t * sizeof(_Tp),
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # endif
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      std::align_val_t(alignof(_Tp)));
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return;
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	::operator delete(__p
 10790              		.loc 30 133 19
 10791 000c 7B68     		ldr	r3, [r7, #4]
 10792 000e 9B00     		lsls	r3, r3, #2
 10793 0010 1946     		mov	r1, r3
 10794 0012 B868     		ldr	r0, [r7, #8]
 10795 0014 FFF7FEFF 		bl	_ZdlPvj
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			  , __t * sizeof(_Tp)
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			 );
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 10796              		.loc 30 138 7
 10797 0018 00BF     		nop
 10798 001a 1037     		adds	r7, r7, #16
 10799              		.cfi_def_cfa_offset 8
 10800 001c BD46     		mov	sp, r7
 10801              		.cfi_def_cfa_register 13
 10802              		@ sp needed
 10803 001e 80BD     		pop	{r7, pc}
 10804              		.cfi_endproc
 10805              	.LFE5725:
 10807              		.section	.text._ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdj,"axG",%progbits,_ZN9__gnu_cxx13new_
 10808              		.align	1
 10809              		.weak	_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdj
 10810              		.syntax unified
 10811              		.thumb
 10812              		.thumb_func
 10813              		.fpu fpv5-d16
 10815              	_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdj:
 10816              	.LFB5727:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10817              		.loc 30 120 7
 10818              		.cfi_startproc
 10819              		@ args = 0, pretend = 0, frame = 16
 10820              		@ frame_needed = 1, uses_anonymous_args = 0
 10821 0000 80B5     		push	{r7, lr}
 10822              		.cfi_def_cfa_offset 8
 10823              		.cfi_offset 7, -8
 10824              		.cfi_offset 14, -4
 10825 0002 84B0     		sub	sp, sp, #16
 10826              		.cfi_def_cfa_offset 24
 10827 0004 00AF     		add	r7, sp, #0
 10828              		.cfi_def_cfa_register 7
 10829 0006 F860     		str	r0, [r7, #12]
 10830 0008 B960     		str	r1, [r7, #8]
 10831 000a 7A60     		str	r2, [r7, #4]
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10832              		.loc 30 133 19
 10833 000c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 444


 10834 000e DB00     		lsls	r3, r3, #3
 10835 0010 1946     		mov	r1, r3
 10836 0012 B868     		ldr	r0, [r7, #8]
 10837 0014 FFF7FEFF 		bl	_ZdlPvj
 10838              		.loc 30 138 7
 10839 0018 00BF     		nop
 10840 001a 1037     		adds	r7, r7, #16
 10841              		.cfi_def_cfa_offset 8
 10842 001c BD46     		mov	sp, r7
 10843              		.cfi_def_cfa_register 13
 10844              		@ sp needed
 10845 001e 80BD     		pop	{r7, pc}
 10846              		.cfi_endproc
 10847              	.LFE5727:
 10849              		.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_,"axG",%progbits,_ZNSt12_Destroy_auxI
 10850              		.align	1
 10851              		.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_
 10852              		.syntax unified
 10853              		.thumb
 10854              		.thumb_func
 10855              		.fpu fpv5-d16
 10857              	_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_:
 10858              	.LFB5728:
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     };
 10859              		.loc 34 161 9
 10860              		.cfi_startproc
 10861              		@ args = 0, pretend = 0, frame = 8
 10862              		@ frame_needed = 1, uses_anonymous_args = 0
 10863              		@ link register save eliminated.
 10864 0000 80B4     		push	{r7}
 10865              		.cfi_def_cfa_offset 4
 10866              		.cfi_offset 7, -4
 10867 0002 83B0     		sub	sp, sp, #12
 10868              		.cfi_def_cfa_offset 16
 10869 0004 00AF     		add	r7, sp, #0
 10870              		.cfi_def_cfa_register 7
 10871 0006 7860     		str	r0, [r7, #4]
 10872 0008 3960     		str	r1, [r7]
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     };
 10873              		.loc 34 161 57
 10874 000a 00BF     		nop
 10875 000c 0C37     		adds	r7, r7, #12
 10876              		.cfi_def_cfa_offset 4
 10877 000e BD46     		mov	sp, r7
 10878              		.cfi_def_cfa_register 13
 10879              		@ sp needed
 10880 0010 5DF8047B 		ldr	r7, [sp], #4
 10881              		.cfi_restore 7
 10882              		.cfi_def_cfa_offset 0
 10883 0014 7047     		bx	lr
 10884              		.cfi_endproc
 10885              	.LFE5728:
 10887              		.section	.text._ZSt11__addressofImEPT_RS0_,"axG",%progbits,_ZSt11__addressofImEPT_RS0_,comdat
 10888              		.align	1
 10889              		.weak	_ZSt11__addressofImEPT_RS0_
 10890              		.syntax unified
 10891              		.thumb
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 445


 10892              		.thumb_func
 10893              		.fpu fpv5-d16
 10895              	_ZSt11__addressofImEPT_RS0_:
 10896              	.LFB5729:
 10897              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\move.h"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Move, forward and identity for C++11 + swap -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** /** @file bits/move.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #ifndef _MOVE_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _MOVE_H 1
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #include <bits/c++config.h>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus < 201103L
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** # include <bits/concept_check.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** {
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // Used, in C++03 mode too, by allocators, etc.
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief Same as C++11 std::addressof
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @ingroup utilities
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     inline _GLIBCXX_CONSTEXPR _Tp*
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 10898              		.loc 37 49 5
 10899              		.cfi_startproc
 10900              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 446


 10901              		@ frame_needed = 1, uses_anonymous_args = 0
 10902              		@ link register save eliminated.
 10903 0000 80B4     		push	{r7}
 10904              		.cfi_def_cfa_offset 4
 10905              		.cfi_offset 7, -4
 10906 0002 83B0     		sub	sp, sp, #12
 10907              		.cfi_def_cfa_offset 16
 10908 0004 00AF     		add	r7, sp, #0
 10909              		.cfi_def_cfa_register 7
 10910 0006 7860     		str	r0, [r7, #4]
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return __builtin_addressof(__r); }
 10911              		.loc 37 50 37
 10912 0008 7B68     		ldr	r3, [r7, #4]
 10913              		.loc 37 50 40
 10914 000a 1846     		mov	r0, r3
 10915 000c 0C37     		adds	r7, r7, #12
 10916              		.cfi_def_cfa_offset 4
 10917 000e BD46     		mov	sp, r7
 10918              		.cfi_def_cfa_register 13
 10919              		@ sp needed
 10920 0010 5DF8047B 		ldr	r7, [sp], #4
 10921              		.cfi_restore 7
 10922              		.cfi_def_cfa_offset 0
 10923 0014 7047     		bx	lr
 10924              		.cfi_endproc
 10925              	.LFE5729:
 10927              		.section	.text._ZNSt6vectorIdSaIdEE16_Temporary_value6_M_ptrEv,"axG",%progbits,_ZNSt6vectorIdSaIdE
 10928              		.align	1
 10929              		.weak	_ZNSt6vectorIdSaIdEE16_Temporary_value6_M_ptrEv
 10930              		.syntax unified
 10931              		.thumb
 10932              		.thumb_func
 10933              		.fpu fpv5-d16
 10935              	_ZNSt6vectorIdSaIdEE16_Temporary_value6_M_ptrEv:
 10936              	.LFB5730:
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 10937              		.loc 23 1723 2
 10938              		.cfi_startproc
 10939              		@ args = 0, pretend = 0, frame = 8
 10940              		@ frame_needed = 1, uses_anonymous_args = 0
 10941              		@ link register save eliminated.
 10942 0000 80B4     		push	{r7}
 10943              		.cfi_def_cfa_offset 4
 10944              		.cfi_offset 7, -4
 10945 0002 83B0     		sub	sp, sp, #12
 10946              		.cfi_def_cfa_offset 16
 10947 0004 00AF     		add	r7, sp, #0
 10948              		.cfi_def_cfa_register 7
 10949 0006 7860     		str	r0, [r7, #4]
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 10950              		.loc 23 1723 49
 10951 0008 7B68     		ldr	r3, [r7, #4]
 10952 000a 0833     		adds	r3, r3, #8
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 10953              		.loc 23 1723 52
 10954 000c 1846     		mov	r0, r3
 10955 000e 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 447


 10956              		.cfi_def_cfa_offset 4
 10957 0010 BD46     		mov	sp, r7
 10958              		.cfi_def_cfa_register 13
 10959              		@ sp needed
 10960 0012 5DF8047B 		ldr	r7, [sp], #4
 10961              		.cfi_restore 7
 10962              		.cfi_def_cfa_offset 0
 10963 0016 7047     		bx	lr
 10964              		.cfi_endproc
 10965              	.LFE5730:
 10967              		.section	.text._ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE,"axG",%progbits,_ZSt7forwardI
 10968              		.align	1
 10969              		.weak	_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE
 10970              		.syntax unified
 10971              		.thumb
 10972              		.thumb_func
 10973              		.fpu fpv5-d16
 10975              	_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE:
 10976              	.LFB5731:
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus >= 201103L
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** } // namespace
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #include <type_traits> // Brings in std::declval too.
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** {
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @addtogroup utilities
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @{
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Forward an lvalue.
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to the specified type.
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  This function is used to implement "perfect forwarding".
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr _Tp&&
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 10977              		.loc 37 76 5
 10978              		.cfi_startproc
 10979              		@ args = 0, pretend = 0, frame = 8
 10980              		@ frame_needed = 1, uses_anonymous_args = 0
 10981              		@ link register save eliminated.
 10982 0000 80B4     		push	{r7}
 10983              		.cfi_def_cfa_offset 4
 10984              		.cfi_offset 7, -4
 10985 0002 83B0     		sub	sp, sp, #12
 10986              		.cfi_def_cfa_offset 16
 10987 0004 00AF     		add	r7, sp, #0
 10988              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 448


 10989 0006 7860     		str	r0, [r7, #4]
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 10990              		.loc 37 77 36
 10991 0008 7B68     		ldr	r3, [r7, #4]
 10992              		.loc 37 77 39
 10993 000a 1846     		mov	r0, r3
 10994 000c 0C37     		adds	r7, r7, #12
 10995              		.cfi_def_cfa_offset 4
 10996 000e BD46     		mov	sp, r7
 10997              		.cfi_def_cfa_register 13
 10998              		@ sp needed
 10999 0010 5DF8047B 		ldr	r7, [sp], #4
 11000              		.cfi_restore 7
 11001              		.cfi_def_cfa_offset 0
 11002 0014 7047     		bx	lr
 11003              		.cfi_endproc
 11004              	.LFE5731:
 11006              		.section	.text._ZNSt16allocator_traitsISaIdEE9constructIdJRKdEEEvRS0_PT_DpOT0_,"axG",%progbits,_ZN
 11007              		.align	1
 11008              		.weak	_ZNSt16allocator_traitsISaIdEE9constructIdJRKdEEEvRS0_PT_DpOT0_
 11009              		.syntax unified
 11010              		.thumb
 11011              		.thumb_func
 11012              		.fpu fpv5-d16
 11014              	_ZNSt16allocator_traitsISaIdEE9constructIdJRKdEEEvRS0_PT_DpOT0_:
 11015              	.LFB5732:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 11016              		.loc 31 507 2
 11017              		.cfi_startproc
 11018              		@ args = 0, pretend = 0, frame = 16
 11019              		@ frame_needed = 1, uses_anonymous_args = 0
 11020 0000 80B5     		push	{r7, lr}
 11021              		.cfi_def_cfa_offset 8
 11022              		.cfi_offset 7, -8
 11023              		.cfi_offset 14, -4
 11024 0002 84B0     		sub	sp, sp, #16
 11025              		.cfi_def_cfa_offset 24
 11026 0004 00AF     		add	r7, sp, #0
 11027              		.cfi_def_cfa_register 7
 11028 0006 F860     		str	r0, [r7, #12]
 11029 0008 B960     		str	r1, [r7, #8]
 11030 000a 7A60     		str	r2, [r7, #4]
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 11031              		.loc 31 512 17
 11032 000c 7868     		ldr	r0, [r7, #4]
 11033 000e FFF7FEFF 		bl	_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE
 11034 0012 0346     		mov	r3, r0
 11035 0014 1A46     		mov	r2, r3
 11036 0016 B968     		ldr	r1, [r7, #8]
 11037 0018 F868     		ldr	r0, [r7, #12]
 11038 001a FFF7FEFF 		bl	_ZN9__gnu_cxx13new_allocatorIdE9constructIdJRKdEEEvPT_DpOT0_
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 11039              		.loc 31 516 2
 11040 001e 00BF     		nop
 11041 0020 1037     		adds	r7, r7, #16
 11042              		.cfi_def_cfa_offset 8
 11043 0022 BD46     		mov	sp, r7
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 449


 11044              		.cfi_def_cfa_register 13
 11045              		@ sp needed
 11046 0024 80BD     		pop	{r7, pc}
 11047              		.cfi_endproc
 11048              	.LFE5732:
 11050              		.section	.text._ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_,"axG",%progbits,_ZNSt16allocator
 11051              		.align	1
 11052              		.weak	_ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_
 11053              		.syntax unified
 11054              		.thumb
 11055              		.thumb_func
 11056              		.fpu fpv5-d16
 11058              	_ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_:
 11059              	.LFB5733:
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 11060              		.loc 31 527 2
 11061              		.cfi_startproc
 11062              		@ args = 0, pretend = 0, frame = 8
 11063              		@ frame_needed = 1, uses_anonymous_args = 0
 11064 0000 80B5     		push	{r7, lr}
 11065              		.cfi_def_cfa_offset 8
 11066              		.cfi_offset 7, -8
 11067              		.cfi_offset 14, -4
 11068 0002 82B0     		sub	sp, sp, #8
 11069              		.cfi_def_cfa_offset 16
 11070 0004 00AF     		add	r7, sp, #0
 11071              		.cfi_def_cfa_register 7
 11072 0006 7860     		str	r0, [r7, #4]
 11073 0008 3960     		str	r1, [r7]
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 11074              		.loc 31 531 15
 11075 000a 3968     		ldr	r1, [r7]
 11076 000c 7868     		ldr	r0, [r7, #4]
 11077 000e FFF7FEFF 		bl	_ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 11078              		.loc 31 535 2
 11079 0012 00BF     		nop
 11080 0014 0837     		adds	r7, r7, #8
 11081              		.cfi_def_cfa_offset 8
 11082 0016 BD46     		mov	sp, r7
 11083              		.cfi_def_cfa_register 13
 11084              		@ sp needed
 11085 0018 80BD     		pop	{r7, pc}
 11086              		.cfi_endproc
 11087              	.LFE5733:
 11089              		.section	.text._ZSt18make_move_iteratorIPdESt13move_iteratorIT_ES2_,"axG",%progbits,_ZSt18make_mov
 11090              		.align	1
 11091              		.weak	_ZSt18make_move_iteratorIPdESt13move_iteratorIT_ES2_
 11092              		.syntax unified
 11093              		.thumb
 11094              		.thumb_func
 11095              		.fpu fpv5-d16
 11097              	_ZSt18make_move_iteratorIPdESt13move_iteratorIT_ES2_:
 11098              	.LFB5734:
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 450


1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline __normal_iterator<_Iterator, _Container>
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator+(typename __normal_iterator<_Iterator, _Container>::difference_type
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      __n, const __normal_iterator<_Iterator, _Container>& __i)
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __normal_iterator<_Iterator, _Container>(__i.base() + __n); }
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** } // namespace
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _Iterator
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __it.base(); }
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @addtogroup iterators
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @{
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    */
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<semiregular _Sent>
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class move_sentinel
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       move_sentinel()
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(is_nothrow_default_constructible_v<_Sent>)
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_last() { }
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr explicit
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       move_sentinel(_Sent __s)
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(is_nothrow_move_constructible_v<_Sent>)
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_last(std::move(__s)) { }
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _S2> requires convertible_to<const _S2&, _Sent>
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	constexpr
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	move_sentinel(const move_sentinel<_S2>& __s)
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	noexcept(is_nothrow_constructible_v<_Sent, const _S2&>)
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	: _M_last(__s.base())
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{ }
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _S2> requires assignable_from<_Sent&, const _S2&>
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	constexpr move_sentinel&
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	operator=(const move_sentinel<_S2>& __s)
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	noexcept(is_nothrow_assignable_v<_Sent, const _S2&>)
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  _M_last = __s.base();
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  return *this;
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	}
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 451


1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr _Sent
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(is_nothrow_copy_constructible_v<_Sent>)
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_last; }
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     private:
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Sent _M_last;
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++20
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.3  Move iterators
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Class template move_iterator is an iterator adapter with the same
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  behavior as the underlying iterator except that its dereference
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  operator implicitly converts the value returned by the underlying
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterator's dereference operator to an rvalue reference.  Some
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  generic algorithms can be called with move iterators to replace
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  copying with moving.
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    */
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class move_iterator
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator _M_current;
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using __traits_type = iterator_traits<_Iterator>;
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using __base_cat = typename __traits_type::iterator_category;
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using __base_ref = typename __traits_type::reference;
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_type = _Iterator;
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept = input_iterator_tag;
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_category
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= __detail::__clamp_iter_cat<__base_cat, random_access_iterator_tag>;
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using value_type = iter_value_t<_Iterator>;
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = iter_difference_t<_Iterator>;
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using pointer = _Iterator;
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using reference = iter_rvalue_reference_t<_Iterator>;
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // NB: DR 680.
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					pointer;
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 2106. move_iterator wrapping iterators returning prvalues
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename conditional<is_reference<__base_ref>::value,
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			 typename remove_reference<__base_ref>::type&&,
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			 __base_ref>::type		reference;
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       move_iterator()
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 452


1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current() { }
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX17_CONSTEXPR
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       move_iterator(iterator_type __i)
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(std::move(__i)) { }
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_GLIBCXX17_CONSTEXPR
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	move_iterator(const move_iterator<_Iter>& __i)
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	: _M_current(__i.base()) { }
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus <= 201703L
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR iterator_type
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr iterator_type
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const &
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cpp_lib_concepts
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	requires copy_constructible<iterator_type>
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr iterator_type
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() &&
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return std::move(_M_current); }
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return ranges::iter_move(_M_current); }
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return static_cast<reference>(*_M_current); }
1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR pointer
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR move_iterator&
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++_M_current;
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR move_iterator
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	move_iterator __tmp = *this;
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++_M_current;
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cpp_lib_concepts
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr void
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 453


1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int) requires (!forward_iterator<_Iterator>)
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { ++_M_current; }
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR move_iterator&
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--()
1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--_M_current;
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR move_iterator
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--(int)
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	move_iterator __tmp = *this;
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--_M_current;
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR move_iterator
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+(difference_type __n) const
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return move_iterator(_M_current + __n); }
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR move_iterator&
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+=(difference_type __n)
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_M_current += __n;
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR move_iterator
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(difference_type __n) const
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return move_iterator(_M_current - __n); }
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     
1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR move_iterator&
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-=(difference_type __n)
1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { 
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_M_current -= __n;
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator[](difference_type __n) const
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return ranges::iter_move(_M_current + __n); }
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return std::move(_M_current[__n]); }
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<sentinel_for<_Iterator> _Sent>
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	friend constexpr bool
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	operator==(const move_iterator& __x, const move_sentinel<_Sent>& __y)
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{ return __x.base() == __y.base(); }
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<sized_sentinel_for<_Iterator> _Sent>
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	friend constexpr iter_difference_t<_Iterator>
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 454


1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	operator-(const move_sentinel<_Sent>& __x, const move_iterator& __y)
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{ return __x.base() - __y.base(); }
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<sized_sentinel_for<_Iterator> _Sent>
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	friend constexpr iter_difference_t<_Iterator>
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	operator-(const move_iterator& __x, const move_sentinel<_Sent>& __y)
1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{ return __x.base() - __y.base(); }
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend constexpr iter_rvalue_reference_t<_Iterator>
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       iter_move(const move_iterator& __i)
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(noexcept(ranges::iter_move(__i._M_current)))
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return ranges::iter_move(__i._M_current); }
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<indirectly_swappable<_Iterator> _Iter2>
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	friend constexpr void
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter_swap(const move_iterator& __x, const move_iterator<_Iter2>& __y)
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	noexcept(noexcept(ranges::iter_swap(__x._M_current, __y._M_current)))
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{ return ranges::iter_swap(__x._M_current, __y._M_current); }
1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++20
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const move_iterator<_IteratorL>& __x,
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const move_iterator<_IteratorR>& __y)
1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() == __y.base() } -> convertible_to<bool>; }
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cpp_lib_three_way_comparison
1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL,
1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	   three_way_comparable_with<_IteratorL> _IteratorR>
1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr compare_three_way_result_t<_IteratorL, _IteratorR>
1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=>(const move_iterator<_IteratorL>& __x,
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		const move_iterator<_IteratorR>& __y)
1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() <=> __y.base(); }
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const move_iterator<_IteratorL>& __x,
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const move_iterator<_IteratorR>& __y)
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const move_iterator<_IteratorL>& __x,
1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const move_iterator<_IteratorR>& __y)
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() < __y.base() } -> convertible_to<bool>; }
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() < __y.base(); }
1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const move_iterator<_IteratorL>& __x,
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 455


1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const move_iterator<_IteratorR>& __y)
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __y.base() < __x.base() } -> convertible_to<bool>; }
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const move_iterator<_IteratorL>& __x,
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const move_iterator<_IteratorR>& __y)
1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __y.base() < __x.base() } -> convertible_to<bool>; }
1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const move_iterator<_IteratorL>& __x,
1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const move_iterator<_IteratorR>& __y)
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() < __y.base() } -> convertible_to<bool>; }
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if ! (__cplusplus > 201703L && __cpp_lib_concepts)
1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Note: See __normal_iterator operators note from Gaby to understand
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // why we have these extra overloads for some move_iterator operators.
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // These extra overloads are not needed in C++20, because the ones above
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // are constrained with a requires-clause and so overload resolution will
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // prefer them to greedy unconstrained function templates.
1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const move_iterator<_Iterator>& __x,
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const move_iterator<_Iterator>& __y)
1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const move_iterator<_Iterator>& __x,
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const move_iterator<_Iterator>& __y)
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const move_iterator<_Iterator>& __x,
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const move_iterator<_Iterator>& __y)
1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() < __y.base(); }
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const move_iterator<_Iterator>& __x,
1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const move_iterator<_Iterator>& __y)
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 456


1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const move_iterator<_Iterator>& __x,
1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const move_iterator<_Iterator>& __y)
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const move_iterator<_Iterator>& __x,
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const move_iterator<_Iterator>& __y)
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // ! C++20
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 685.
1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR auto
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const move_iterator<_IteratorL>& __x,
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const move_iterator<_IteratorR>& __y)
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__x.base() - __y.base())
1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() - __y.base(); }
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR move_iterator<_Iterator>
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator+(typename move_iterator<_Iterator>::difference_type __n,
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const move_iterator<_Iterator>& __x)
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x + __n; }
1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR move_iterator<_Iterator>
1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     make_move_iterator(_Iterator __i)
 11099              		.loc 35 1579 5
 11100              		.cfi_startproc
 11101              		@ args = 0, pretend = 0, frame = 16
 11102              		@ frame_needed = 1, uses_anonymous_args = 0
 11103 0000 80B5     		push	{r7, lr}
 11104              		.cfi_def_cfa_offset 8
 11105              		.cfi_offset 7, -8
 11106              		.cfi_offset 14, -4
 11107 0002 84B0     		sub	sp, sp, #16
 11108              		.cfi_def_cfa_offset 24
 11109 0004 00AF     		add	r7, sp, #0
 11110              		.cfi_def_cfa_register 7
 11111 0006 7860     		str	r0, [r7, #4]
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return move_iterator<_Iterator>(std::move(__i)); }
 11112              		.loc 35 1580 48
 11113 0008 3B1D     		adds	r3, r7, #4
 11114 000a 1846     		mov	r0, r3
 11115 000c FFF7FEFF 		bl	_ZSt4moveIRPdEONSt16remove_referenceIT_E4typeEOS3_
 11116 0010 0346     		mov	r3, r0
 11117              		.loc 35 1580 14
 11118 0012 1A68     		ldr	r2, [r3]
 11119 0014 07F10C03 		add	r3, r7, #12
 11120 0018 1146     		mov	r1, r2
 11121 001a 1846     		mov	r0, r3
 11122 001c FFF7FEFF 		bl	_ZNSt13move_iteratorIPdEC1ES0_
 11123              		.loc 35 1580 53
 11124 0020 FB68     		ldr	r3, [r7, #12]
 11125              		.loc 35 1580 56
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 457


 11126 0022 1846     		mov	r0, r3
 11127 0024 1037     		adds	r7, r7, #16
 11128              		.cfi_def_cfa_offset 8
 11129 0026 BD46     		mov	sp, r7
 11130              		.cfi_def_cfa_register 13
 11131              		@ sp needed
 11132 0028 80BD     		pop	{r7, pc}
 11133              		.cfi_endproc
 11134              	.LFE5734:
 11136              		.section	.text._ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E,"axG",%p
 11137              		.align	1
 11138              		.weak	_ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E
 11139              		.syntax unified
 11140              		.thumb
 11141              		.thumb_func
 11142              		.fpu fpv5-d16
 11144              	_ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E:
 11145              	.LFB5735:
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 11146              		.loc 36 323 5
 11147              		.cfi_startproc
 11148              		@ args = 0, pretend = 0, frame = 16
 11149              		@ frame_needed = 1, uses_anonymous_args = 0
 11150 0000 80B5     		push	{r7, lr}
 11151              		.cfi_def_cfa_offset 8
 11152              		.cfi_offset 7, -8
 11153              		.cfi_offset 14, -4
 11154 0002 84B0     		sub	sp, sp, #16
 11155              		.cfi_def_cfa_offset 24
 11156 0004 00AF     		add	r7, sp, #0
 11157              		.cfi_def_cfa_register 7
 11158 0006 F860     		str	r0, [r7, #12]
 11159 0008 B960     		str	r1, [r7, #8]
 11160 000a 7A60     		str	r2, [r7, #4]
 11161 000c 3B60     		str	r3, [r7]
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 11162              		.loc 36 325 37
 11163 000e 7A68     		ldr	r2, [r7, #4]
 11164 0010 B968     		ldr	r1, [r7, #8]
 11165 0012 F868     		ldr	r0, [r7, #12]
 11166 0014 FFF7FEFF 		bl	_ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_
 11167 0018 0346     		mov	r3, r0
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 11168              		.loc 36 325 66
 11169 001a 1846     		mov	r0, r3
 11170 001c 1037     		adds	r7, r7, #16
 11171              		.cfi_def_cfa_offset 8
 11172 001e BD46     		mov	sp, r7
 11173              		.cfi_def_cfa_register 13
 11174              		@ sp needed
 11175 0020 80BD     		pop	{r7, pc}
 11176              		.cfi_endproc
 11177              	.LFE5735:
 11179              		.section	.text._ZSt12__miter_baseIPdET_S1_,"axG",%progbits,_ZSt12__miter_baseIPdET_S1_,comdat
 11180              		.align	1
 11181              		.weak	_ZSt12__miter_baseIPdET_S1_
 11182              		.syntax unified
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 458


 11183              		.thumb
 11184              		.thumb_func
 11185              		.fpu fpv5-d16
 11187              	_ZSt12__miter_baseIPdET_S1_:
 11188              	.LFB5736:
 11189              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\cpp_type_t
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // The  -*- C++ -*- type traits classes for internal use in libstdc++
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // Copyright (C) 2000-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** /** @file bits/cpp_type_traits.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****  *  Do not attempt to use it directly. @headername{ext/type_traits}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // Written by Gabriel Dos Reis <dosreis@cmla.ens-cachan.fr>
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #ifndef _CPP_TYPE_TRAITS_H
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #define _CPP_TYPE_TRAITS_H 1
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #pragma GCC system_header
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #include <bits/c++config.h>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** //
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // This file provides some compile-time information about various types.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // These representations were designed, on purpose, to be constant-expressions
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // and not types as found in <bits/type_traits.h>.  In particular, they
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // can be used in control structures and the optimizer hopefully will do
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // the obvious thing.
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** //
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // Why integral expressions, and not functions nor types?
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // Firstly, these compile-time entities are used as template-arguments
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // so function return values won't work:  We need compile-time entities.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // We're left with types and constant  integral expressions.
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // Secondly, from the point of view of ease of use, type-based compile-time
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // information is -not- *that* convenient.  One has to write lots of
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 459


  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // overloaded functions and to hope that the compiler will select the right
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // one. As a net effect, the overall structure isn't very clear at first
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // glance.
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // Thirdly, partial ordering and overload resolution (of function templates)
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // is highly costly in terms of compiler-resource.  It is a Good Thing to
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // keep these resource consumption as least as possible.
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** //
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // See valarray_array.h for a case use.
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** //
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // -- Gaby (dosreis@cmla.ens-cachan.fr) 2000-03-06.
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** //
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // Update 2005: types are also provided and <bits/type_traits.h> has been
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** // removed.
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** //
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** extern "C++" {
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** {
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   struct __true_type { };
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   struct __false_type { };
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<bool>
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __truth_type
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     { typedef __false_type __type; };
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __truth_type<true>
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     { typedef __true_type __type; };
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // N.B. The conversions to bool are needed due to the issue
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // explained in c++/19404.
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<class _Sp, class _Tp>
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __traitor
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = bool(_Sp::__value) || bool(_Tp::__value) };
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef typename __truth_type<__value>::__type __type;
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // Compare for equality of types.
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename, typename>
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __are_same
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 0 };
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __false_type __type;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Tp>
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __are_same<_Tp, _Tp>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // Holds if the template-argument is a void type.
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 460


 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Tp>
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_void
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 0 };
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __false_type __type;
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_void<void>
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   //
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // Integer types
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   //
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Tp>
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_integer
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 0 };
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __false_type __type;
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // Thirteen specializations (yes there are eleven standard integer
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // types; <em>long long</em> and <em>unsigned long long</em> are
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // supported as extensions).  Up to four target-specific __int<N>
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // types are supported as well.
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_integer<bool>
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_integer<char>
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_integer<signed char>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_integer<unsigned char>
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** # ifdef _GLIBCXX_USE_WCHAR_T
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 461


 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_integer<wchar_t>
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** # endif
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #ifdef _GLIBCXX_USE_CHAR8_T
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_integer<char8_t>
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #endif
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #if __cplusplus >= 201103L
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_integer<char16_t>
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_integer<char32_t>
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #endif
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_integer<short>
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_integer<unsigned short>
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_integer<int>
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_integer<unsigned int>
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 462


 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_integer<long>
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_integer<unsigned long>
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_integer<long long>
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_integer<unsigned long long>
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #define __INT_N(TYPE) 			\
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>				\
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_integer<TYPE>		\
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {					\
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };		\
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;	\
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };					\
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>				\
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_integer<unsigned TYPE>	\
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {					\
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };		\
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;	\
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #ifdef __GLIBCXX_TYPE_INT_N_0
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** __INT_N(__GLIBCXX_TYPE_INT_N_0)
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #endif
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #ifdef __GLIBCXX_TYPE_INT_N_1
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** __INT_N(__GLIBCXX_TYPE_INT_N_1)
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #endif
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #ifdef __GLIBCXX_TYPE_INT_N_2
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** __INT_N(__GLIBCXX_TYPE_INT_N_2)
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #endif
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #ifdef __GLIBCXX_TYPE_INT_N_3
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** __INT_N(__GLIBCXX_TYPE_INT_N_3)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 463


 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #endif
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #undef __INT_N
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   //
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // Floating point types
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   //
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Tp>
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_floating
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 0 };
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __false_type __type;
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // three specializations (float, double and 'long double')
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_floating<float>
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_floating<double>
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_floating<long double>
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   //
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // Pointer types
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   //
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Tp>
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_pointer
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 0 };
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __false_type __type;
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Tp>
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_pointer<_Tp*>
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   //
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // An arithmetic type is an integer type or a floating point type
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   //
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Tp>
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 464


 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_arithmetic
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> >
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     { };
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   //
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // A scalar type is an arithmetic type or a pointer type
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // 
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Tp>
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_scalar
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     : public __traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> >
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     { };
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   //
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // For use in std::copy and std::find overloads for streambuf iterators.
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   //
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Tp>
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_char
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 0 };
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __false_type __type;
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_char<char>
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #ifdef _GLIBCXX_USE_WCHAR_T
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_char<wchar_t>
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #endif
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Tp>
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_byte
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 0 };
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __false_type __type;
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_byte<char>
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_byte<signed char>
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 465


 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_byte<unsigned char>
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #if __cplusplus >= 201703L
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   enum class byte : unsigned char;
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_byte<byte>
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #endif // C++17
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #ifdef _GLIBCXX_USE_CHAR8_T
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_byte<char8_t>
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 1 };
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __true_type __type;
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #endif
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename> struct iterator_traits;
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // A type that is safe for use with memcpy, memmove, memcmp etc.
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Tp>
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_nonvolatile_trivially_copyable
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = __is_trivially_copyable(_Tp) };
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // Cannot use memcpy/memmove/memcmp on volatile types even if they are
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // trivially copyable, so ensure __memcpyable<volatile int*, volatile int*>
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // and similar will be false.
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Tp>
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_nonvolatile_trivially_copyable<volatile _Tp>
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 0 };
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // Whether two iterator types can be used with memcpy/memmove.
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _OutputIter, typename _InputIter>
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __memcpyable
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 0 };
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Tp>
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __memcpyable<_Tp*, _Tp*>
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     : __is_nonvolatile_trivially_copyable<_Tp>
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 466


 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     { };
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Tp>
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __memcpyable<_Tp*, const _Tp*>
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     : __is_nonvolatile_trivially_copyable<_Tp>
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     { };
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // Whether two iterator types can be used with memcmp.
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // This trait only says it's well-formed to use memcmp, not that it
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // gives the right answer for a given algorithm. So for example, std::equal
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // needs to add additional checks that the types are integers or pointers,
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // because other trivially copyable types can overload operator==.
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Iter1, typename _Iter2>
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __memcmpable
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 0 };
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // OK to use memcmp with pointers to trivially copyable types.
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Tp>
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __memcmpable<_Tp*, _Tp*>
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     : __is_nonvolatile_trivially_copyable<_Tp>
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     { };
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Tp>
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __memcmpable<const _Tp*, _Tp*>
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     : __is_nonvolatile_trivially_copyable<_Tp>
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     { };
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Tp>
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __memcmpable<_Tp*, const _Tp*>
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     : __is_nonvolatile_trivially_copyable<_Tp>
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     { };
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // Whether memcmp can be used to determine ordering for a type
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // e.g. in std::lexicographical_compare or three-way comparisons.
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // True for unsigned narrow character types (and std::byte).
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Tp, bool _TreatAsBytes = __is_byte<_Tp>::__value>
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_memcmp_ordered
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       static const bool __value = _Tp(-1) > _Tp(1); // is unsigned
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Tp>
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_memcmp_ordered<_Tp, false>
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       static const bool __value = false;
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // Whether two types can be compared using memcmp.
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Tp, typename _Up, bool = sizeof(_Tp) == sizeof(_Up)>
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_memcmp_ordered_with
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       static const bool __value = __is_memcmp_ordered<_Tp>::__value
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 	&& __is_memcmp_ordered<_Up>::__value;
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 467


 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Tp, typename _Up>
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_memcmp_ordered_with<_Tp, _Up, false>
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       static const bool __value = false;
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #if __cplusplus >= 201703L
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // std::byte can only be compared to itself, not to other types.
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<>
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_memcmp_ordered_with<std::byte, std::byte, true>
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     { static constexpr bool __value = true; };
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Tp, bool _SameSize>
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_memcmp_ordered_with<_Tp, std::byte, _SameSize>
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     { static constexpr bool __value = false; };
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Up, bool _SameSize>
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_memcmp_ordered_with<std::byte, _Up, _SameSize>
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     { static constexpr bool __value = false; };
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** #endif
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   //
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // Move iterator type
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   //
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Tp>
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     struct __is_move_iterator
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     {
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       enum { __value = 0 };
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****       typedef __false_type __type;
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     };
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h **** 
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   // remove the move_iterator wrapper.
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****   template<typename _Iterator>
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     _GLIBCXX20_CONSTEXPR
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     inline _Iterator
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     __miter_base(_Iterator __it)
 11190              		.loc 38 544 5
 11191              		.cfi_startproc
 11192              		@ args = 0, pretend = 0, frame = 8
 11193              		@ frame_needed = 1, uses_anonymous_args = 0
 11194              		@ link register save eliminated.
 11195 0000 80B4     		push	{r7}
 11196              		.cfi_def_cfa_offset 4
 11197              		.cfi_offset 7, -4
 11198 0002 83B0     		sub	sp, sp, #12
 11199              		.cfi_def_cfa_offset 16
 11200 0004 00AF     		add	r7, sp, #0
 11201              		.cfi_def_cfa_register 7
 11202 0006 7860     		str	r0, [r7, #4]
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     { return __it; }
 11203              		.loc 38 545 14
 11204 0008 7B68     		ldr	r3, [r7, #4]
 11205              		.loc 38 545 20
 11206 000a 1846     		mov	r0, r3
 11207 000c 0C37     		adds	r7, r7, #12
 11208              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 468


 11209 000e BD46     		mov	sp, r7
 11210              		.cfi_def_cfa_register 13
 11211              		@ sp needed
 11212 0010 5DF8047B 		ldr	r7, [sp], #4
 11213              		.cfi_restore 7
 11214              		.cfi_def_cfa_offset 0
 11215 0014 7047     		bx	lr
 11216              		.cfi_endproc
 11217              	.LFE5736:
 11219              		.section	.text._ZSt22__copy_move_backward_aILb1EPdS0_ET1_T0_S2_S1_,"axG",%progbits,_ZSt22__copy_mo
 11220              		.align	1
 11221              		.weak	_ZSt22__copy_move_backward_aILb1EPdS0_ET1_T0_S2_S1_
 11222              		.syntax unified
 11223              		.thumb
 11224              		.thumb_func
 11225              		.fpu fpv5-d16
 11227              	_ZSt22__copy_move_backward_aILb1EPdS0_ET1_T0_S2_S1_:
 11228              	.LFB5737:
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 11229              		.loc 4 745 5
 11230              		.cfi_startproc
 11231              		@ args = 0, pretend = 0, frame = 16
 11232              		@ frame_needed = 1, uses_anonymous_args = 0
 11233 0000 B0B5     		push	{r4, r5, r7, lr}
 11234              		.cfi_def_cfa_offset 16
 11235              		.cfi_offset 4, -16
 11236              		.cfi_offset 5, -12
 11237              		.cfi_offset 7, -8
 11238              		.cfi_offset 14, -4
 11239 0002 84B0     		sub	sp, sp, #16
 11240              		.cfi_def_cfa_offset 32
 11241 0004 00AF     		add	r7, sp, #0
 11242              		.cfi_def_cfa_register 7
 11243 0006 F860     		str	r0, [r7, #12]
 11244 0008 B960     		str	r1, [r7, #8]
 11245 000a 7A60     		str	r2, [r7, #4]
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		std::__copy_move_backward_a1<_IsMove>
 11246              		.loc 4 747 31
 11247 000c F868     		ldr	r0, [r7, #12]
 11248 000e FFF7FEFF 		bl	_ZSt12__niter_baseIPdET_S1_
 11249 0012 0446     		mov	r4, r0
 11250 0014 B868     		ldr	r0, [r7, #8]
 11251 0016 FFF7FEFF 		bl	_ZSt12__niter_baseIPdET_S1_
 11252 001a 0546     		mov	r5, r0
 11253 001c 7B68     		ldr	r3, [r7, #4]
 11254 001e 1846     		mov	r0, r3
 11255 0020 FFF7FEFF 		bl	_ZSt12__niter_baseIPdET_S1_
 11256 0024 0346     		mov	r3, r0
 11257 0026 1A46     		mov	r2, r3
 11258 0028 2946     		mov	r1, r5
 11259 002a 2046     		mov	r0, r4
 11260 002c FFF7FEFF 		bl	_ZSt23__copy_move_backward_a1ILb1EPdS0_ET1_T0_S2_S1_
 11261 0030 0246     		mov	r2, r0
 11262 0032 3B1D     		adds	r3, r7, #4
 11263 0034 1146     		mov	r1, r2
 11264 0036 1846     		mov	r0, r3
 11265 0038 FFF7FEFF 		bl	_ZSt12__niter_wrapIPdET_RKS1_S1_
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 469


 11266 003c 0346     		mov	r3, r0
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 11267              		.loc 4 751 5
 11268 003e 1846     		mov	r0, r3
 11269 0040 1037     		adds	r7, r7, #16
 11270              		.cfi_def_cfa_offset 16
 11271 0042 BD46     		mov	sp, r7
 11272              		.cfi_def_cfa_register 13
 11273              		@ sp needed
 11274 0044 B0BD     		pop	{r4, r5, r7, pc}
 11275              		.cfi_endproc
 11276              	.LFE5737:
 11278              		.section	.text._ZSt8__fill_aIPddEvT_S1_RKT0_,"axG",%progbits,_ZSt8__fill_aIPddEvT_S1_RKT0_,comdat
 11279              		.align	1
 11280              		.weak	_ZSt8__fill_aIPddEvT_S1_RKT0_
 11281              		.syntax unified
 11282              		.thumb
 11283              		.thumb_func
 11284              		.fpu fpv5-d16
 11286              	_ZSt8__fill_aIPddEvT_S1_RKT0_:
 11287              	.LFB5739:
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 11288              		.loc 4 913 5
 11289              		.cfi_startproc
 11290              		@ args = 0, pretend = 0, frame = 16
 11291              		@ frame_needed = 1, uses_anonymous_args = 0
 11292 0000 80B5     		push	{r7, lr}
 11293              		.cfi_def_cfa_offset 8
 11294              		.cfi_offset 7, -8
 11295              		.cfi_offset 14, -4
 11296 0002 84B0     		sub	sp, sp, #16
 11297              		.cfi_def_cfa_offset 24
 11298 0004 00AF     		add	r7, sp, #0
 11299              		.cfi_def_cfa_register 7
 11300 0006 F860     		str	r0, [r7, #12]
 11301 0008 B960     		str	r1, [r7, #8]
 11302 000a 7A60     		str	r2, [r7, #4]
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 11303              		.loc 4 914 21
 11304 000c 7A68     		ldr	r2, [r7, #4]
 11305 000e B968     		ldr	r1, [r7, #8]
 11306 0010 F868     		ldr	r0, [r7, #12]
 11307 0012 FFF7FEFF 		bl	_ZSt9__fill_a1IPddEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 11308              		.loc 4 914 49
 11309 0016 00BF     		nop
 11310 0018 1037     		adds	r7, r7, #16
 11311              		.cfi_def_cfa_offset 8
 11312 001a BD46     		mov	sp, r7
 11313              		.cfi_def_cfa_register 13
 11314              		@ sp needed
 11315 001c 80BD     		pop	{r7, pc}
 11316              		.cfi_endproc
 11317              	.LFE5739:
 11319              		.section	.text._ZSt20uninitialized_fill_nIPdjdET_S1_T0_RKT1_,"axG",%progbits,_ZSt20uninitialized_f
 11320              		.align	1
 11321              		.weak	_ZSt20uninitialized_fill_nIPdjdET_S1_T0_RKT1_
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 470


 11322              		.syntax unified
 11323              		.thumb
 11324              		.thumb_func
 11325              		.fpu fpv5-d16
 11327              	_ZSt20uninitialized_fill_nIPdjdET_S1_T0_RKT1_:
 11328              	.LFB5740:
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 11329              		.loc 36 272 5
 11330              		.cfi_startproc
 11331              		@ args = 0, pretend = 0, frame = 24
 11332              		@ frame_needed = 1, uses_anonymous_args = 0
 11333 0000 80B5     		push	{r7, lr}
 11334              		.cfi_def_cfa_offset 8
 11335              		.cfi_offset 7, -8
 11336              		.cfi_offset 14, -4
 11337 0002 86B0     		sub	sp, sp, #24
 11338              		.cfi_def_cfa_offset 32
 11339 0004 00AF     		add	r7, sp, #0
 11340              		.cfi_def_cfa_register 7
 11341 0006 F860     		str	r0, [r7, #12]
 11342 0008 B960     		str	r1, [r7, #8]
 11343 000a 7A60     		str	r2, [r7, #4]
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 11344              		.loc 36 286 18
 11345 000c 0123     		movs	r3, #1
 11346 000e FB75     		strb	r3, [r7, #23]
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 11347              		.loc 36 289 17
 11348 0010 7A68     		ldr	r2, [r7, #4]
 11349 0012 B968     		ldr	r1, [r7, #8]
 11350 0014 F868     		ldr	r0, [r7, #12]
 11351 0016 FFF7FEFF 		bl	_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPdjdEET_S3_T0_RKT1_
 11352 001a 0346     		mov	r3, r0
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 11353              		.loc 36 290 5
 11354 001c 1846     		mov	r0, r3
 11355 001e 1837     		adds	r7, r7, #24
 11356              		.cfi_def_cfa_offset 8
 11357 0020 BD46     		mov	sp, r7
 11358              		.cfi_def_cfa_register 13
 11359              		@ sp needed
 11360 0022 80BD     		pop	{r7, pc}
 11361              		.cfi_endproc
 11362              	.LFE5740:
 11364              		.section	.text._ZNKSt6vectorIdSaIdEE8max_sizeEv,"axG",%progbits,_ZNKSt6vectorIdSaIdEE8max_sizeEv,c
 11365              		.align	1
 11366              		.weak	_ZNKSt6vectorIdSaIdEE8max_sizeEv
 11367              		.syntax unified
 11368              		.thumb
 11369              		.thumb_func
 11370              		.fpu fpv5-d16
 11372              	_ZNKSt6vectorIdSaIdEE8max_sizeEv:
 11373              	.LFB5741:
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _S_max_size(_M_get_Tp_allocator()); }
 11374              		.loc 23 923 7
 11375              		.cfi_startproc
 11376              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 471


 11377              		@ frame_needed = 1, uses_anonymous_args = 0
 11378 0000 80B5     		push	{r7, lr}
 11379              		.cfi_def_cfa_offset 8
 11380              		.cfi_offset 7, -8
 11381              		.cfi_offset 14, -4
 11382 0002 82B0     		sub	sp, sp, #8
 11383              		.cfi_def_cfa_offset 16
 11384 0004 00AF     		add	r7, sp, #0
 11385              		.cfi_def_cfa_register 7
 11386 0006 7860     		str	r0, [r7, #4]
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 11387              		.loc 23 924 47
 11388 0008 7B68     		ldr	r3, [r7, #4]
 11389 000a 1846     		mov	r0, r3
 11390 000c FFF7FEFF 		bl	_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
 11391 0010 0346     		mov	r3, r0
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 11392              		.loc 23 924 27
 11393 0012 1846     		mov	r0, r3
 11394 0014 FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_
 11395 0018 0346     		mov	r3, r0
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 11396              		.loc 23 924 52
 11397 001a 1846     		mov	r0, r3
 11398 001c 0837     		adds	r7, r7, #8
 11399              		.cfi_def_cfa_offset 8
 11400 001e BD46     		mov	sp, r7
 11401              		.cfi_def_cfa_register 13
 11402              		@ sp needed
 11403 0020 80BD     		pop	{r7, pc}
 11404              		.cfi_endproc
 11405              	.LFE5741:
 11407              		.section	.text._ZSt3maxIjERKT_S2_S2_,"axG",%progbits,_ZSt3maxIjERKT_S2_S2_,comdat
 11408              		.align	1
 11409              		.weak	_ZSt3maxIjERKT_S2_S2_
 11410              		.syntax unified
 11411              		.thumb
 11412              		.thumb_func
 11413              		.fpu fpv5-d16
 11415              	_ZSt3maxIjERKT_S2_S2_:
 11416              	.LFB5742:
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 11417              		.loc 4 254 5
 11418              		.cfi_startproc
 11419              		@ args = 0, pretend = 0, frame = 8
 11420              		@ frame_needed = 1, uses_anonymous_args = 0
 11421              		@ link register save eliminated.
 11422 0000 80B4     		push	{r7}
 11423              		.cfi_def_cfa_offset 4
 11424              		.cfi_offset 7, -4
 11425 0002 83B0     		sub	sp, sp, #12
 11426              		.cfi_def_cfa_offset 16
 11427 0004 00AF     		add	r7, sp, #0
 11428              		.cfi_def_cfa_register 7
 11429 0006 7860     		str	r0, [r7, #4]
 11430 0008 3960     		str	r1, [r7]
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 472


 11431              		.loc 4 259 15
 11432 000a 7B68     		ldr	r3, [r7, #4]
 11433 000c 1A68     		ldr	r2, [r3]
 11434 000e 3B68     		ldr	r3, [r7]
 11435 0010 1B68     		ldr	r3, [r3]
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 11436              		.loc 4 259 7
 11437 0012 9A42     		cmp	r2, r3
 11438 0014 01D2     		bcs	.L467
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 11439              		.loc 4 260 9
 11440 0016 3B68     		ldr	r3, [r7]
 11441 0018 00E0     		b	.L468
 11442              	.L467:
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 11443              		.loc 4 261 14
 11444 001a 7B68     		ldr	r3, [r7, #4]
 11445              	.L468:
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 11446              		.loc 4 262 5
 11447 001c 1846     		mov	r0, r3
 11448 001e 0C37     		adds	r7, r7, #12
 11449              		.cfi_def_cfa_offset 4
 11450 0020 BD46     		mov	sp, r7
 11451              		.cfi_def_cfa_register 13
 11452              		@ sp needed
 11453 0022 5DF8047B 		ldr	r7, [sp], #4
 11454              		.cfi_restore 7
 11455              		.cfi_def_cfa_offset 0
 11456 0026 7047     		bx	lr
 11457              		.cfi_endproc
 11458              	.LFE5742:
 11460              		.section	.text._ZNSt16allocator_traitsISaIdEE8allocateERS0_j,"axG",%progbits,_ZNSt16allocator_trai
 11461              		.align	1
 11462              		.weak	_ZNSt16allocator_traitsISaIdEE8allocateERS0_j
 11463              		.syntax unified
 11464              		.thumb
 11465              		.thumb_func
 11466              		.fpu fpv5-d16
 11468              	_ZNSt16allocator_traitsISaIdEE8allocateERS0_j:
 11469              	.LFB5743:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 11470              		.loc 31 459 7
 11471              		.cfi_startproc
 11472              		@ args = 0, pretend = 0, frame = 8
 11473              		@ frame_needed = 1, uses_anonymous_args = 0
 11474 0000 80B5     		push	{r7, lr}
 11475              		.cfi_def_cfa_offset 8
 11476              		.cfi_offset 7, -8
 11477              		.cfi_offset 14, -4
 11478 0002 82B0     		sub	sp, sp, #8
 11479              		.cfi_def_cfa_offset 16
 11480 0004 00AF     		add	r7, sp, #0
 11481              		.cfi_def_cfa_register 7
 11482 0006 7860     		str	r0, [r7, #4]
 11483 0008 3960     		str	r1, [r7]
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 473


 11484              		.loc 31 460 28
 11485 000a 0022     		movs	r2, #0
 11486 000c 3968     		ldr	r1, [r7]
 11487 000e 7868     		ldr	r0, [r7, #4]
 11488 0010 FFF7FEFF 		bl	_ZN9__gnu_cxx13new_allocatorIdE8allocateEjPKv
 11489 0014 0346     		mov	r3, r0
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 11490              		.loc 31 460 35
 11491 0016 1846     		mov	r0, r3
 11492 0018 0837     		adds	r7, r7, #8
 11493              		.cfi_def_cfa_offset 8
 11494 001a BD46     		mov	sp, r7
 11495              		.cfi_def_cfa_register 13
 11496              		@ sp needed
 11497 001c 80BD     		pop	{r7, pc}
 11498              		.cfi_endproc
 11499              	.LFE5743:
 11501              		.section	.text._ZSt32__make_move_if_noexcept_iteratorIdSt13move_iteratorIPdEET0_PT_,"axG",%progbit
 11502              		.align	1
 11503              		.weak	_ZSt32__make_move_if_noexcept_iteratorIdSt13move_iteratorIPdEET0_PT_
 11504              		.syntax unified
 11505              		.thumb
 11506              		.thumb_func
 11507              		.fpu fpv5-d16
 11509              	_ZSt32__make_move_if_noexcept_iteratorIdSt13move_iteratorIPdEET0_PT_:
 11510              	.LFB5744:
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _ReturnType
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     = typename conditional<__move_if_noexcept_cond
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       <typename iterator_traits<_Iterator>::value_type>::value,
1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****                 _Iterator, move_iterator<_Iterator>>::type>
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR _ReturnType
1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __make_move_if_noexcept_iterator(_Iterator __i)
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return _ReturnType(__i); }
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Overload for pointers that matches std::move_if_noexcept more closely,
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // returning a constant iterator when we don't want to move.
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Tp, typename _ReturnType
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     = typename conditional<__move_if_noexcept_cond<_Tp>::value,
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			   const _Tp*, move_iterator<_Tp*>>::type>
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR _ReturnType
1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __make_move_if_noexcept_iterator(_Tp* __i)
 11511              		.loc 35 1596 5
 11512              		.cfi_startproc
 11513              		@ args = 0, pretend = 0, frame = 16
 11514              		@ frame_needed = 1, uses_anonymous_args = 0
 11515 0000 80B5     		push	{r7, lr}
 11516              		.cfi_def_cfa_offset 8
 11517              		.cfi_offset 7, -8
 11518              		.cfi_offset 14, -4
 11519 0002 84B0     		sub	sp, sp, #16
 11520              		.cfi_def_cfa_offset 24
 11521 0004 00AF     		add	r7, sp, #0
 11522              		.cfi_def_cfa_register 7
 11523 0006 7860     		str	r0, [r7, #4]
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return _ReturnType(__i); }
 11524              		.loc 35 1597 14
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 474


 11525 0008 07F10C03 		add	r3, r7, #12
 11526 000c 7968     		ldr	r1, [r7, #4]
 11527 000e 1846     		mov	r0, r3
 11528 0010 FFF7FEFF 		bl	_ZNSt13move_iteratorIPdEC1ES0_
 11529              		.loc 35 1597 29
 11530 0014 FB68     		ldr	r3, [r7, #12]
 11531              		.loc 35 1597 32
 11532 0016 1846     		mov	r0, r3
 11533 0018 1037     		adds	r7, r7, #16
 11534              		.cfi_def_cfa_offset 8
 11535 001a BD46     		mov	sp, r7
 11536              		.cfi_def_cfa_register 13
 11537              		@ sp needed
 11538 001c 80BD     		pop	{r7, pc}
 11539              		.cfi_endproc
 11540              	.LFE5744:
 11542              		.section	.text._ZNKSt6vectorIbSaIbEE8capacityEv,"axG",%progbits,_ZNKSt6vectorIbSaIbEE8capacityEv,c
 11543              		.align	1
 11544              		.weak	_ZNKSt6vectorIbSaIbEE8capacityEv
 11545              		.syntax unified
 11546              		.thumb
 11547              		.thumb_func
 11548              		.fpu fpv5-d16
 11550              	_ZNKSt6vectorIbSaIbEE8capacityEv:
 11551              	.LFB5745:
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(const_iterator(this->_M_impl._M_end_addr(), 0)
 11552              		.loc 6 900 7
 11553              		.cfi_startproc
 11554              		@ args = 0, pretend = 0, frame = 24
 11555              		@ frame_needed = 1, uses_anonymous_args = 0
 11556 0000 80B5     		push	{r7, lr}
 11557              		.cfi_def_cfa_offset 8
 11558              		.cfi_offset 7, -8
 11559              		.cfi_offset 14, -4
 11560 0002 86B0     		sub	sp, sp, #24
 11561              		.cfi_def_cfa_offset 32
 11562 0004 00AF     		add	r7, sp, #0
 11563              		.cfi_def_cfa_register 7
 11564 0006 7860     		str	r0, [r7, #4]
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			 - begin()); }
 11565              		.loc 6 901 26
 11566 0008 7B68     		ldr	r3, [r7, #4]
 11567 000a 1846     		mov	r0, r3
 11568 000c FFF7FEFF 		bl	_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv
 11569 0010 0146     		mov	r1, r0
 11570 0012 07F10803 		add	r3, r7, #8
 11571 0016 0022     		movs	r2, #0
 11572 0018 1846     		mov	r0, r3
 11573 001a FFF7FEFF 		bl	_ZNSt19_Bit_const_iteratorC1EPmj
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11574              		.loc 6 902 12
 11575 001e 07F11003 		add	r3, r7, #16
 11576 0022 7968     		ldr	r1, [r7, #4]
 11577 0024 1846     		mov	r0, r3
 11578 0026 FFF7FEFF 		bl	_ZNKSt6vectorIbSaIbEE5beginEv
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11579              		.loc 6 902 5
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 475


 11580 002a 07F11002 		add	r2, r7, #16
 11581 002e 07F10803 		add	r3, r7, #8
 11582 0032 1146     		mov	r1, r2
 11583 0034 1846     		mov	r0, r3
 11584 0036 FFF7FEFF 		bl	_ZStmiRKSt18_Bit_iterator_baseS1_
 11585 003a 0346     		mov	r3, r0
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11586              		.loc 6 902 17
 11587 003c 1846     		mov	r0, r3
 11588 003e 1837     		adds	r7, r7, #24
 11589              		.cfi_def_cfa_offset 8
 11590 0040 BD46     		mov	sp, r7
 11591              		.cfi_def_cfa_register 13
 11592              		@ sp needed
 11593 0042 80BD     		pop	{r7, pc}
 11594              		.cfi_endproc
 11595              	.LFE5745:
 11597              		.section	.text._ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_,"axG",%progbits,_ZSt13copy_bac
 11598              		.align	1
 11599              		.weak	_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_
 11600              		.syntax unified
 11601              		.thumb
 11602              		.thumb_func
 11603              		.fpu fpv5-d16
 11605              	_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_:
 11606              	.LFB5746:
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 11607              		.loc 4 797 5
 11608              		.cfi_startproc
 11609              		@ args = 20, pretend = 8, frame = 32
 11610              		@ frame_needed = 1, uses_anonymous_args = 0
 11611 0000 82B0     		sub	sp, sp, #8
 11612              		.cfi_def_cfa_offset 8
 11613 0002 90B5     		push	{r4, r7, lr}
 11614              		.cfi_def_cfa_offset 20
 11615              		.cfi_offset 4, -20
 11616              		.cfi_offset 7, -16
 11617              		.cfi_offset 14, -12
 11618 0004 8DB0     		sub	sp, sp, #52
 11619              		.cfi_def_cfa_offset 72
 11620 0006 04AF     		add	r7, sp, #16
 11621              		.cfi_def_cfa 7, 56
 11622 0008 F860     		str	r0, [r7, #12]
 11623 000a 381D     		adds	r0, r7, #4
 11624 000c 80E80600 		stm	r0, {r1, r2}
 11625 0010 7B63     		str	r3, [r7, #52]
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 11626              		.loc 4 808 7
 11627 0012 07F11000 		add	r0, r7, #16
 11628 0016 3B1D     		adds	r3, r7, #4
 11629 0018 93E80600 		ldm	r3, {r1, r2}
 11630 001c FFF7FEFF 		bl	_ZSt12__miter_baseISt13_Bit_iteratorET_S1_
 11631 0020 07F11800 		add	r0, r7, #24
 11632 0024 07F13403 		add	r3, r7, #52
 11633 0028 93E80600 		ldm	r3, {r1, r2}
 11634 002c FFF7FEFF 		bl	_ZSt12__miter_baseISt13_Bit_iteratorET_S1_
 11635 0030 FC68     		ldr	r4, [r7, #12]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 476


 11636 0032 01AA     		add	r2, sp, #4
 11637 0034 07F13C03 		add	r3, r7, #60
 11638 0038 93E80300 		ldm	r3, {r0, r1}
 11639 003c 82E80300 		stm	r2, {r0, r1}
 11640 0040 FB69     		ldr	r3, [r7, #28]
 11641 0042 0093     		str	r3, [sp]
 11642 0044 BB69     		ldr	r3, [r7, #24]
 11643 0046 07F11002 		add	r2, r7, #16
 11644 004a 06CA     		ldm	r2, {r1, r2}
 11645 004c 2046     		mov	r0, r4
 11646 004e FFF7FEFF 		bl	_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 11647              		.loc 4 808 71
 11648 0052 00BF     		nop
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 11649              		.loc 4 809 5
 11650 0054 F868     		ldr	r0, [r7, #12]
 11651 0056 2437     		adds	r7, r7, #36
 11652              		.cfi_def_cfa_offset 20
 11653 0058 BD46     		mov	sp, r7
 11654              		.cfi_def_cfa_register 13
 11655              		@ sp needed
 11656 005a BDE89040 		pop	{r4, r7, lr}
 11657              		.cfi_restore 14
 11658              		.cfi_restore 7
 11659              		.cfi_restore 4
 11660              		.cfi_def_cfa_offset 8
 11661 005e 02B0     		add	sp, sp, #8
 11662              		.cfi_def_cfa_offset 0
 11663 0060 7047     		bx	lr
 11664              		.cfi_endproc
 11665              	.LFE5746:
 11667              		.section	.text._ZNKSt6vectorIbSaIbEE12_M_check_lenEjPKc,"axG",%progbits,_ZNKSt6vectorIbSaIbEE12_M_
 11668              		.align	1
 11669              		.weak	_ZNKSt6vectorIbSaIbEE12_M_check_lenEjPKc
 11670              		.syntax unified
 11671              		.thumb
 11672              		.thumb_func
 11673              		.fpu fpv5-d16
 11675              	_ZNKSt6vectorIbSaIbEE12_M_check_lenEjPKc:
 11676              	.LFB5747:
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 11677              		.loc 6 1318 7
 11678              		.cfi_startproc
 11679              		@ args = 0, pretend = 0, frame = 24
 11680              		@ frame_needed = 1, uses_anonymous_args = 0
 11681 0000 90B5     		push	{r4, r7, lr}
 11682              		.cfi_def_cfa_offset 12
 11683              		.cfi_offset 4, -12
 11684              		.cfi_offset 7, -8
 11685              		.cfi_offset 14, -4
 11686 0002 87B0     		sub	sp, sp, #28
 11687              		.cfi_def_cfa_offset 40
 11688 0004 00AF     		add	r7, sp, #0
 11689              		.cfi_def_cfa_register 7
 11690 0006 F860     		str	r0, [r7, #12]
 11691 0008 B960     		str	r1, [r7, #8]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 477


 11692 000a 7A60     		str	r2, [r7, #4]
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __throw_length_error(__N(__s));
 11693              		.loc 6 1320 14
 11694 000c F868     		ldr	r0, [r7, #12]
 11695 000e FFF7FEFF 		bl	_ZNKSt6vectorIbSaIbEE8max_sizeEv
 11696 0012 0446     		mov	r4, r0
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __throw_length_error(__N(__s));
 11697              		.loc 6 1320 23
 11698 0014 F868     		ldr	r0, [r7, #12]
 11699 0016 FFF7FEFF 		bl	_ZNKSt6vectorIbSaIbEE4sizeEv
 11700 001a 0346     		mov	r3, r0
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __throw_length_error(__N(__s));
 11701              		.loc 6 1320 17
 11702 001c E21A     		subs	r2, r4, r3
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __throw_length_error(__N(__s));
 11703              		.loc 6 1320 26
 11704 001e BB68     		ldr	r3, [r7, #8]
 11705 0020 9A42     		cmp	r2, r3
 11706 0022 34BF     		ite	cc
 11707 0024 0123     		movcc	r3, #1
 11708 0026 0023     		movcs	r3, #0
 11709 0028 DBB2     		uxtb	r3, r3
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __throw_length_error(__N(__s));
 11710              		.loc 6 1320 2
 11711 002a 002B     		cmp	r3, #0
 11712 002c 02D0     		beq	.L478
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11713              		.loc 6 1321 24
 11714 002e 7868     		ldr	r0, [r7, #4]
 11715 0030 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 11716              	.L478:
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 11717              		.loc 6 1323 30
 11718 0034 F868     		ldr	r0, [r7, #12]
 11719 0036 FFF7FEFF 		bl	_ZNKSt6vectorIbSaIbEE4sizeEv
 11720 003a 0446     		mov	r4, r0
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 11721              		.loc 6 1323 48
 11722 003c F868     		ldr	r0, [r7, #12]
 11723 003e FFF7FEFF 		bl	_ZNKSt6vectorIbSaIbEE4sizeEv
 11724 0042 0346     		mov	r3, r0
 11725 0044 3B61     		str	r3, [r7, #16]
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 11726              		.loc 6 1323 43
 11727 0046 07F10802 		add	r2, r7, #8
 11728 004a 07F11003 		add	r3, r7, #16
 11729 004e 1146     		mov	r1, r2
 11730 0050 1846     		mov	r0, r3
 11731 0052 FFF7FEFF 		bl	_ZSt3maxIjERKT_S2_S2_
 11732 0056 0346     		mov	r3, r0
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 11733              		.loc 6 1323 33
 11734 0058 1B68     		ldr	r3, [r3]
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 11735              		.loc 6 1323 18
 11736 005a 2344     		add	r3, r3, r4
 11737 005c 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 478


1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 11738              		.loc 6 1324 22
 11739 005e F868     		ldr	r0, [r7, #12]
 11740 0060 FFF7FEFF 		bl	_ZNKSt6vectorIbSaIbEE4sizeEv
 11741 0064 0246     		mov	r2, r0
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 11742              		.loc 6 1324 48
 11743 0066 7B69     		ldr	r3, [r7, #20]
 11744 0068 9342     		cmp	r3, r2
 11745 006a 06D3     		bcc	.L479
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 11746              		.loc 6 1324 44 discriminator 2
 11747 006c F868     		ldr	r0, [r7, #12]
 11748 006e FFF7FEFF 		bl	_ZNKSt6vectorIbSaIbEE8max_sizeEv
 11749 0072 0246     		mov	r2, r0
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 11750              		.loc 6 1324 25 discriminator 2
 11751 0074 7B69     		ldr	r3, [r7, #20]
 11752 0076 9342     		cmp	r3, r2
 11753 0078 04D9     		bls	.L480
 11754              	.L479:
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 11755              		.loc 6 1324 58 discriminator 3
 11756 007a F868     		ldr	r0, [r7, #12]
 11757 007c FFF7FEFF 		bl	_ZNKSt6vectorIbSaIbEE8max_sizeEv
 11758 0080 0346     		mov	r3, r0
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 11759              		.loc 6 1324 48 discriminator 3
 11760 0082 00E0     		b	.L481
 11761              	.L480:
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 11762              		.loc 6 1324 48 is_stmt 0 discriminator 4
 11763 0084 7B69     		ldr	r3, [r7, #20]
 11764              	.L481:
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11765              		.loc 6 1325 7 is_stmt 1 discriminator 6
 11766 0086 1846     		mov	r0, r3
 11767 0088 1C37     		adds	r7, r7, #28
 11768              		.cfi_def_cfa_offset 12
 11769 008a BD46     		mov	sp, r7
 11770              		.cfi_def_cfa_register 13
 11771              		@ sp needed
 11772 008c 90BD     		pop	{r4, r7, pc}
 11773              		.cfi_endproc
 11774              	.LFE5747:
 11776              		.section	.text._ZNSt13_Bvector_baseISaIbEE11_M_allocateEj,"axG",%progbits,_ZNSt13_Bvector_baseISaI
 11777              		.align	1
 11778              		.weak	_ZNSt13_Bvector_baseISaIbEE11_M_allocateEj
 11779              		.syntax unified
 11780              		.thumb
 11781              		.thumb_func
 11782              		.fpu fpv5-d16
 11784              	_ZNSt13_Bvector_baseISaIbEE11_M_allocateEj:
 11785              	.LFB5748:
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return _Bit_alloc_traits::allocate(_M_impl, _S_nword(__n)); }
 11786              		.loc 6 556 7
 11787              		.cfi_startproc
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 479


 11788              		@ args = 0, pretend = 0, frame = 8
 11789              		@ frame_needed = 1, uses_anonymous_args = 0
 11790 0000 90B5     		push	{r4, r7, lr}
 11791              		.cfi_def_cfa_offset 12
 11792              		.cfi_offset 4, -12
 11793              		.cfi_offset 7, -8
 11794              		.cfi_offset 14, -4
 11795 0002 83B0     		sub	sp, sp, #12
 11796              		.cfi_def_cfa_offset 24
 11797 0004 00AF     		add	r7, sp, #0
 11798              		.cfi_def_cfa_register 7
 11799 0006 7860     		str	r0, [r7, #4]
 11800 0008 3960     		str	r1, [r7]
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11801              		.loc 6 557 44
 11802 000a 7C68     		ldr	r4, [r7, #4]
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11803              		.loc 6 557 43
 11804 000c 3868     		ldr	r0, [r7]
 11805 000e FFF7FEFF 		bl	_ZNSt13_Bvector_baseISaIbEE8_S_nwordEj
 11806 0012 0346     		mov	r3, r0
 11807 0014 1946     		mov	r1, r3
 11808 0016 2046     		mov	r0, r4
 11809 0018 FFF7FEFF 		bl	_ZNSt16allocator_traitsISaImEE8allocateERS0_j
 11810 001c 0346     		mov	r3, r0
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11811              		.loc 6 557 69
 11812 001e 1846     		mov	r0, r3
 11813 0020 0C37     		adds	r7, r7, #12
 11814              		.cfi_def_cfa_offset 12
 11815 0022 BD46     		mov	sp, r7
 11816              		.cfi_def_cfa_register 13
 11817              		@ sp needed
 11818 0024 90BD     		pop	{r4, r7, pc}
 11819              		.cfi_endproc
 11820              	.LFE5748:
 11822              		.section	.text._ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator,"
 11823              		.align	1
 11824              		.weak	_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator
 11825              		.syntax unified
 11826              		.thumb
 11827              		.thumb_func
 11828              		.fpu fpv5-d16
 11830              	_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator:
 11831              	.LFB5749:
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		      iterator __result)
 11832              		.loc 6 1134 7
 11833              		.cfi_startproc
 11834              		@ args = 16, pretend = 0, frame = 40
 11835              		@ frame_needed = 1, uses_anonymous_args = 0
 11836 0000 90B5     		push	{r4, r7, lr}
 11837              		.cfi_def_cfa_offset 12
 11838              		.cfi_offset 4, -12
 11839              		.cfi_offset 7, -8
 11840              		.cfi_offset 14, -4
 11841 0002 8FB0     		sub	sp, sp, #60
 11842              		.cfi_def_cfa_offset 72
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 480


 11843 0004 04AF     		add	r7, sp, #16
 11844              		.cfi_def_cfa 7, 56
 11845 0006 F860     		str	r0, [r7, #12]
 11846 0008 B960     		str	r1, [r7, #8]
 11847 000a 3946     		mov	r1, r7
 11848 000c 81E80C00 		stm	r1, {r2, r3}
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return std::copy(const_iterator(__last._M_p, 0), __last,
 11849              		.loc 6 1137 28
 11850 0010 3B68     		ldr	r3, [r7]
 11851 0012 B96B     		ldr	r1, [r7, #56]
 11852 0014 3A6C     		ldr	r2, [r7, #64]
 11853 0016 1846     		mov	r0, r3
 11854 0018 FFF7FEFF 		bl	_ZSt4copyIPmS0_ET0_T_S2_S1_
 11855 001c 7862     		str	r0, [r7, #36]
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			 iterator(__q, 0));
 11856              		.loc 6 1138 19
 11857 001e B96B     		ldr	r1, [r7, #56]
 11858 0020 07F11403 		add	r3, r7, #20
 11859 0024 0022     		movs	r2, #0
 11860 0026 1846     		mov	r0, r3
 11861 0028 FFF7FEFF 		bl	_ZNSt19_Bit_const_iteratorC1EPmj
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 11862              		.loc 6 1139 5
 11863 002c 07F11C03 		add	r3, r7, #28
 11864 0030 0022     		movs	r2, #0
 11865 0032 796A     		ldr	r1, [r7, #36]
 11866 0034 1846     		mov	r0, r3
 11867 0036 FFF7FEFF 		bl	_ZNSt13_Bit_iteratorC1EPmj
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			 iterator(__q, 0));
 11868              		.loc 6 1138 18
 11869 003a FC68     		ldr	r4, [r7, #12]
 11870 003c 01AA     		add	r2, sp, #4
 11871 003e 07F11C03 		add	r3, r7, #28
 11872 0042 93E80300 		ldm	r3, {r0, r1}
 11873 0046 82E80300 		stm	r2, {r0, r1}
 11874 004a FB6B     		ldr	r3, [r7, #60]
 11875 004c 0093     		str	r3, [sp]
 11876 004e BB6B     		ldr	r3, [r7, #56]
 11877 0050 07F11402 		add	r2, r7, #20
 11878 0054 06CA     		ldm	r2, {r1, r2}
 11879 0056 2046     		mov	r0, r4
 11880 0058 FFF7FEFF 		bl	_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 11881              		.loc 6 1139 21
 11882 005c 00BF     		nop
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11883              		.loc 6 1140 7
 11884 005e F868     		ldr	r0, [r7, #12]
 11885 0060 2C37     		adds	r7, r7, #44
 11886              		.cfi_def_cfa_offset 12
 11887 0062 BD46     		mov	sp, r7
 11888              		.cfi_def_cfa_register 13
 11889              		@ sp needed
 11890 0064 90BD     		pop	{r4, r7, pc}
 11891              		.cfi_endproc
 11892              	.LFE5749:
 11894              		.section	.text._ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_,"axG",%progbits,_ZSt4copyISt13_Bit_itera
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 481


 11895              		.align	1
 11896              		.weak	_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_
 11897              		.syntax unified
 11898              		.thumb
 11899              		.thumb_func
 11900              		.fpu fpv5-d16
 11902              	_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_:
 11903              	.LFB5750:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 11904              		.loc 4 560 5
 11905              		.cfi_startproc
 11906              		@ args = 20, pretend = 8, frame = 32
 11907              		@ frame_needed = 1, uses_anonymous_args = 0
 11908 0000 82B0     		sub	sp, sp, #8
 11909              		.cfi_def_cfa_offset 8
 11910 0002 90B5     		push	{r4, r7, lr}
 11911              		.cfi_def_cfa_offset 20
 11912              		.cfi_offset 4, -20
 11913              		.cfi_offset 7, -16
 11914              		.cfi_offset 14, -12
 11915 0004 8DB0     		sub	sp, sp, #52
 11916              		.cfi_def_cfa_offset 72
 11917 0006 04AF     		add	r7, sp, #16
 11918              		.cfi_def_cfa 7, 56
 11919 0008 F860     		str	r0, [r7, #12]
 11920 000a 381D     		adds	r0, r7, #4
 11921 000c 80E80600 		stm	r0, {r1, r2}
 11922 0010 7B63     		str	r3, [r7, #52]
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 11923              		.loc 4 569 7
 11924 0012 07F11000 		add	r0, r7, #16
 11925 0016 3B1D     		adds	r3, r7, #4
 11926 0018 93E80600 		ldm	r3, {r1, r2}
 11927 001c FFF7FEFF 		bl	_ZSt12__miter_baseISt13_Bit_iteratorET_S1_
 11928 0020 07F11800 		add	r0, r7, #24
 11929 0024 07F13403 		add	r3, r7, #52
 11930 0028 93E80600 		ldm	r3, {r1, r2}
 11931 002c FFF7FEFF 		bl	_ZSt12__miter_baseISt13_Bit_iteratorET_S1_
 11932 0030 FC68     		ldr	r4, [r7, #12]
 11933 0032 01AA     		add	r2, sp, #4
 11934 0034 07F13C03 		add	r3, r7, #60
 11935 0038 93E80300 		ldm	r3, {r0, r1}
 11936 003c 82E80300 		stm	r2, {r0, r1}
 11937 0040 FB69     		ldr	r3, [r7, #28]
 11938 0042 0093     		str	r3, [sp]
 11939 0044 BB69     		ldr	r3, [r7, #24]
 11940 0046 07F11002 		add	r2, r7, #16
 11941 004a 06CA     		ldm	r2, {r1, r2}
 11942 004c 2046     		mov	r0, r4
 11943 004e FFF7FEFF 		bl	_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 11944              		.loc 4 569 71
 11945 0052 00BF     		nop
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 11946              		.loc 4 570 5
 11947 0054 F868     		ldr	r0, [r7, #12]
 11948 0056 2437     		adds	r7, r7, #36
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 482


 11949              		.cfi_def_cfa_offset 20
 11950 0058 BD46     		mov	sp, r7
 11951              		.cfi_def_cfa_register 13
 11952              		@ sp needed
 11953 005a BDE89040 		pop	{r4, r7, lr}
 11954              		.cfi_restore 14
 11955              		.cfi_restore 7
 11956              		.cfi_restore 4
 11957              		.cfi_def_cfa_offset 8
 11958 005e 02B0     		add	sp, sp, #8
 11959              		.cfi_def_cfa_offset 0
 11960 0060 7047     		bx	lr
 11961              		.cfi_endproc
 11962              	.LFE5750:
 11964              		.section	.text._ZNSt13_Bvector_baseISaIbEE8_S_nwordEj,"axG",%progbits,_ZNSt13_Bvector_baseISaIbEE8
 11965              		.align	1
 11966              		.weak	_ZNSt13_Bvector_baseISaIbEE8_S_nwordEj
 11967              		.syntax unified
 11968              		.thumb
 11969              		.thumb_func
 11970              		.fpu fpv5-d16
 11972              	_ZNSt13_Bvector_baseISaIbEE8_S_nwordEj:
 11973              	.LFB5751:
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 11974              		.loc 6 579 7
 11975              		.cfi_startproc
 11976              		@ args = 0, pretend = 0, frame = 8
 11977              		@ frame_needed = 1, uses_anonymous_args = 0
 11978              		@ link register save eliminated.
 11979 0000 80B4     		push	{r7}
 11980              		.cfi_def_cfa_offset 4
 11981              		.cfi_offset 7, -4
 11982 0002 83B0     		sub	sp, sp, #12
 11983              		.cfi_def_cfa_offset 16
 11984 0004 00AF     		add	r7, sp, #0
 11985              		.cfi_def_cfa_register 7
 11986 0006 7860     		str	r0, [r7, #4]
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 11987              		.loc 6 580 40
 11988 0008 7B68     		ldr	r3, [r7, #4]
 11989 000a 1F33     		adds	r3, r3, #31
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 11990              		.loc 6 580 62
 11991 000c 5B09     		lsrs	r3, r3, #5
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 11992              		.loc 6 580 65
 11993 000e 1846     		mov	r0, r3
 11994 0010 0C37     		adds	r7, r7, #12
 11995              		.cfi_def_cfa_offset 4
 11996 0012 BD46     		mov	sp, r7
 11997              		.cfi_def_cfa_register 13
 11998              		@ sp needed
 11999 0014 5DF8047B 		ldr	r7, [sp], #4
 12000              		.cfi_restore 7
 12001              		.cfi_def_cfa_offset 0
 12002 0018 7047     		bx	lr
 12003              		.cfi_endproc
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 483


 12004              	.LFE5751:
 12006              		.section	.text._ZNSt8__detail4_ModIjLj0ELj1ELj0ELb1ELb0EE6__calcEj,"axG",%progbits,_ZNSt8__detail4
 12007              		.align	1
 12008              		.weak	_ZNSt8__detail4_ModIjLj0ELj1ELj0ELb1ELb0EE6__calcEj
 12009              		.syntax unified
 12010              		.thumb
 12011              		.thumb_func
 12012              		.fpu fpv5-d16
 12014              	_ZNSt8__detail4_ModIjLj0ELj1ELj0ELb1ELb0EE6__calcEj:
 12015              	.LFB5752:
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
 12016              		.loc 18 137 2
 12017              		.cfi_startproc
 12018              		@ args = 0, pretend = 0, frame = 16
 12019              		@ frame_needed = 1, uses_anonymous_args = 0
 12020              		@ link register save eliminated.
 12021 0000 80B4     		push	{r7}
 12022              		.cfi_def_cfa_offset 4
 12023              		.cfi_offset 7, -4
 12024 0002 85B0     		sub	sp, sp, #20
 12025              		.cfi_def_cfa_offset 24
 12026 0004 00AF     		add	r7, sp, #0
 12027              		.cfi_def_cfa_register 7
 12028 0006 7860     		str	r0, [r7, #4]
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  if (__m)
 12029              		.loc 18 139 8
 12030 0008 7B68     		ldr	r3, [r7, #4]
 12031 000a FB60     		str	r3, [r7, #12]
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	}
 12032              		.loc 18 142 11
 12033 000c FB68     		ldr	r3, [r7, #12]
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       };
 12034              		.loc 18 143 2
 12035 000e 1846     		mov	r0, r3
 12036 0010 1437     		adds	r7, r7, #20
 12037              		.cfi_def_cfa_offset 4
 12038 0012 BD46     		mov	sp, r7
 12039              		.cfi_def_cfa_register 13
 12040              		@ sp needed
 12041 0014 5DF8047B 		ldr	r7, [sp], #4
 12042              		.cfi_restore 7
 12043              		.cfi_def_cfa_offset 0
 12044 0018 7047     		bx	lr
 12045              		.cfi_endproc
 12046              	.LFE5752:
 12048              		.section	.text._ZNSt8__detail4_ModIjLj624ELj1ELj0ELb1ELb1EE6__calcEj,"axG",%progbits,_ZNSt8__detai
 12049              		.align	1
 12050              		.weak	_ZNSt8__detail4_ModIjLj624ELj1ELj0ELb1ELb1EE6__calcEj
 12051              		.syntax unified
 12052              		.thumb
 12053              		.thumb_func
 12054              		.fpu fpv5-d16
 12056              	_ZNSt8__detail4_ModIjLj624ELj1ELj0ELb1ELb1EE6__calcEj:
 12057              	.LFB5753:
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	{
 12058              		.loc 18 137 2
 12059              		.cfi_startproc
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 484


 12060              		@ args = 0, pretend = 0, frame = 16
 12061              		@ frame_needed = 1, uses_anonymous_args = 0
 12062              		@ link register save eliminated.
 12063 0000 80B4     		push	{r7}
 12064              		.cfi_def_cfa_offset 4
 12065              		.cfi_offset 7, -4
 12066 0002 85B0     		sub	sp, sp, #20
 12067              		.cfi_def_cfa_offset 24
 12068 0004 00AF     		add	r7, sp, #0
 12069              		.cfi_def_cfa_register 7
 12070 0006 7860     		str	r0, [r7, #4]
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  if (__m)
 12071              		.loc 18 139 8
 12072 0008 7B68     		ldr	r3, [r7, #4]
 12073 000a FB60     		str	r3, [r7, #12]
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	  return __res;
 12074              		.loc 18 141 12
 12075 000c FB68     		ldr	r3, [r7, #12]
 12076 000e 1A09     		lsrs	r2, r3, #4
 12077 0010 0849     		ldr	r1, .L495
 12078 0012 A1FB0212 		umull	r1, r2, r1, r2
 12079 0016 9208     		lsrs	r2, r2, #2
 12080 0018 4FF41C71 		mov	r1, #624
 12081 001c 01FB02F2 		mul	r2, r1, r2
 12082 0020 9B1A     		subs	r3, r3, r2
 12083 0022 FB60     		str	r3, [r7, #12]
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 	}
 12084              		.loc 18 142 11
 12085 0024 FB68     		ldr	r3, [r7, #12]
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       };
 12086              		.loc 18 143 2
 12087 0026 1846     		mov	r0, r3
 12088 0028 1437     		adds	r7, r7, #20
 12089              		.cfi_def_cfa_offset 4
 12090 002a BD46     		mov	sp, r7
 12091              		.cfi_def_cfa_register 13
 12092              		@ sp needed
 12093 002c 5DF8047B 		ldr	r7, [sp], #4
 12094              		.cfi_restore 7
 12095              		.cfi_def_cfa_offset 0
 12096 0030 7047     		bx	lr
 12097              	.L496:
 12098 0032 00BF     		.align	2
 12099              	.L495:
 12100 0034 1BA4411A 		.word	440509467
 12101              		.cfi_endproc
 12102              	.LFE5753:
 12104              		.section	.text._ZSt3minIjERKT_S2_S2_,"axG",%progbits,_ZSt3minIjERKT_S2_S2_,comdat
 12105              		.align	1
 12106              		.weak	_ZSt3minIjERKT_S2_S2_
 12107              		.syntax unified
 12108              		.thumb
 12109              		.thumb_func
 12110              		.fpu fpv5-d16
 12112              	_ZSt3minIjERKT_S2_S2_:
 12113              	.LFB5755:
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 485


 12114              		.loc 4 230 5
 12115              		.cfi_startproc
 12116              		@ args = 0, pretend = 0, frame = 8
 12117              		@ frame_needed = 1, uses_anonymous_args = 0
 12118              		@ link register save eliminated.
 12119 0000 80B4     		push	{r7}
 12120              		.cfi_def_cfa_offset 4
 12121              		.cfi_offset 7, -4
 12122 0002 83B0     		sub	sp, sp, #12
 12123              		.cfi_def_cfa_offset 16
 12124 0004 00AF     		add	r7, sp, #0
 12125              		.cfi_def_cfa_register 7
 12126 0006 7860     		str	r0, [r7, #4]
 12127 0008 3960     		str	r1, [r7]
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 12128              		.loc 4 235 15
 12129 000a 3B68     		ldr	r3, [r7]
 12130 000c 1A68     		ldr	r2, [r3]
 12131 000e 7B68     		ldr	r3, [r7, #4]
 12132 0010 1B68     		ldr	r3, [r3]
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 12133              		.loc 4 235 7
 12134 0012 9A42     		cmp	r2, r3
 12135 0014 01D2     		bcs	.L498
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 12136              		.loc 4 236 9
 12137 0016 3B68     		ldr	r3, [r7]
 12138 0018 00E0     		b	.L499
 12139              	.L498:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 12140              		.loc 4 237 14
 12141 001a 7B68     		ldr	r3, [r7, #4]
 12142              	.L499:
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 12143              		.loc 4 238 5
 12144 001c 1846     		mov	r0, r3
 12145 001e 0C37     		adds	r7, r7, #12
 12146              		.cfi_def_cfa_offset 4
 12147 0020 BD46     		mov	sp, r7
 12148              		.cfi_def_cfa_register 13
 12149              		@ sp needed
 12150 0022 5DF8047B 		ldr	r7, [sp], #4
 12151              		.cfi_restore 7
 12152              		.cfi_def_cfa_offset 0
 12153 0026 7047     		bx	lr
 12154              		.cfi_endproc
 12155              	.LFE5755:
 12157              		.section	.text._ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj429496729
 12158              		.align	1
 12159              		.weak	_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2
 12160              		.syntax unified
 12161              		.thumb
 12162              		.thumb_func
 12163              		.fpu fpv5-d16
 12165              	_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj26369286
 12166              	.LFB5757:
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h ****       { return 0; }
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 486


 12167              		.loc 18 546 7
 12168              		.cfi_startproc
 12169              		@ args = 0, pretend = 0, frame = 0
 12170              		@ frame_needed = 1, uses_anonymous_args = 0
 12171              		@ link register save eliminated.
 12172 0000 80B4     		push	{r7}
 12173              		.cfi_def_cfa_offset 4
 12174              		.cfi_offset 7, -4
 12175 0002 00AF     		add	r7, sp, #0
 12176              		.cfi_def_cfa_register 7
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 12177              		.loc 18 547 16
 12178 0004 0023     		movs	r3, #0
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.h **** 
 12179              		.loc 18 547 19
 12180 0006 1846     		mov	r0, r3
 12181 0008 BD46     		mov	sp, r7
 12182              		.cfi_def_cfa_register 13
 12183              		@ sp needed
 12184 000a 5DF8047B 		ldr	r7, [sp], #4
 12185              		.cfi_restore 7
 12186              		.cfi_def_cfa_offset 0
 12187 000e 7047     		bx	lr
 12188              		.cfi_endproc
 12189              	.LFE5757:
 12191              		.section	.text._ZSt18generate_canonicalIfLj24ESt23mersenne_twister_engineIjLj32ELj624ELj397ELj31EL
 12192              		.align	1
 12193              		.weak	_ZSt18generate_canonicalIfLj24ESt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj25674836
 12194              		.syntax unified
 12195              		.thumb
 12196              		.thumb_func
 12197              		.fpu fpv5-d16
 12199              	_ZSt18generate_canonicalIfLj24ESt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11
 12200              	.LFB5754:
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType,
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _Sseq>
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       auto
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			      __s, __b, __t, __c, __l, __f>::
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       seed(_Sseq& __q)
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       -> _If_seed_seq<_Sseq>
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const _UIntType __upper_mask = (~_UIntType()) << __r;
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const size_t __k = (__w + 31) / 32;
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	uint_least32_t __arr[__n * __k];
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__q.generate(__arr + 0, __arr + __n * __k);
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	bool __zero = true;
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	for (size_t __i = 0; __i < state_size; ++__i)
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _UIntType __factor = 1u;
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _UIntType __sum = 0u;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 487


 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    for (size_t __j = 0; __j < __k; ++__j)
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      {
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__sum += __arr[__k * __i + __j] * __factor;
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__factor *= __detail::_Shift<_UIntType, 32>::__value;
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      }
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _M_x[__i] = __detail::__mod<_UIntType,
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __detail::_Shift<_UIntType, __w>::__value>(__sum);
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    if (__zero)
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      {
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		if (__i == 0)
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  {
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    if ((_M_x[0] & __upper_mask) != 0u)
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      __zero = false;
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  }
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		else if (_M_x[__i] != 0u)
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  __zero = false;
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      }
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****         if (__zero)
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****           _M_x[0] = __detail::_Shift<_UIntType, __w - 1>::__value;
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_p = state_size;
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, size_t __w,
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __n, size_t __m, size_t __r,
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     void
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     _M_gen_rand(void)
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _UIntType __upper_mask = (~_UIntType()) << __r;
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _UIntType __lower_mask = ~__upper_mask;
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (size_t __k = 0; __k < (__n - __m); ++__k)
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****         {
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _UIntType __y = ((_M_x[__k] & __upper_mask)
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_x[__k] = (_M_x[__k + __m] ^ (__y >> 1)
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****         }
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (size_t __k = (__n - __m); __k < (__n - 1); ++__k)
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _UIntType __y = ((_M_x[__k] & __upper_mask)
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_x[__k] = (_M_x[__k + (__m - __n)] ^ (__y >> 1)
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _UIntType __y = ((_M_x[__n - 1] & __upper_mask)
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       | (_M_x[0] & __lower_mask));
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_x[__n - 1] = (_M_x[__m - 1] ^ (__y >> 1)
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 488


 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_p = 0;
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, size_t __w,
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __n, size_t __m, size_t __r,
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     void
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     discard(unsigned long long __z)
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       while (__z > state_size - _M_p)
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __z -= state_size - _M_p;
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_gen_rand();
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_p += __z;
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, size_t __w,
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __n, size_t __m, size_t __r,
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f>
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     typename
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::result_type
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator()()
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       // Reload the vector - cost is O(n) amortized over n calls.
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (_M_p >= state_size)
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_gen_rand();
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       // Calculate o(x(i)).
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       result_type __z = _M_x[_M_p++];
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z >> __u) & __d;
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z << __s) & __b;
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z << __t) & __c;
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z >> __l);
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __z;
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, size_t __w,
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __n, size_t __m, size_t __r,
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f, typename _CharT, typename _Traits>
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const mersenne_twister_engine<_UIntType, __w, __n, __m,
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>& __x)
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 489


 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __space = __os.widen(' ');
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::dec | __ios_base::fixed | __ios_base::left);
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__space);
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (size_t __i = 0; __i < __n; ++__i)
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__os << __x._M_x[__i] << __space;
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __x._M_p;
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, size_t __w,
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   size_t __n, size_t __m, size_t __r,
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   _UIntType __f, typename _CharT, typename _Traits>
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       mersenne_twister_engine<_UIntType, __w, __n, __m,
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>& __x)
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (size_t __i = 0; __i < __n; ++__i)
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__is >> __x._M_x[__i];
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is >> __x._M_p;
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr size_t
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::word_size;
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr size_t
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::short_lag;
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr size_t
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::long_lag;
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr _UIntType
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::default_seed;
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 490


 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     void
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     seed(result_type __value)
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       std::linear_congruential_engine<result_type, 40014u, 0u, 2147483563u>
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__lcg(__value == 0u ? default_seed : __value);
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const size_t __n = (__w + 31) / 32;
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (size_t __i = 0; __i < long_lag; ++__i)
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _UIntType __sum = 0u;
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _UIntType __factor = 1u;
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  for (size_t __j = 0; __j < __n; ++__j)
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    {
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __sum += __detail::__mod<uint_least32_t,
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       __detail::_Shift<uint_least32_t, 32>::__value>
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			 (__lcg()) * __factor;
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __factor *= __detail::_Shift<_UIntType, 32>::__value;
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    }
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_x[__i] = __detail::__mod<_UIntType,
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __detail::_Shift<_UIntType, __w>::__value>(__sum);
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_carry = (_M_x[long_lag - 1] == 0) ? 1 : 0;
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_p = 0;
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _Sseq>
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       auto
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       subtract_with_carry_engine<_UIntType, __w, __s, __r>::
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       seed(_Sseq& __q)
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       -> _If_seed_seq<_Sseq>
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const size_t __k = (__w + 31) / 32;
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	uint_least32_t __arr[__r * __k];
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__q.generate(__arr + 0, __arr + __r * __k);
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	for (size_t __i = 0; __i < long_lag; ++__i)
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _UIntType __sum = 0u;
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _UIntType __factor = 1u;
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    for (size_t __j = 0; __j < __k; ++__j)
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      {
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__sum += __arr[__k * __i + __j] * __factor;
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__factor *= __detail::_Shift<_UIntType, 32>::__value;
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      }
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _M_x[__i] = __detail::__mod<_UIntType,
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __detail::_Shift<_UIntType, __w>::__value>(__sum);
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_carry = (_M_x[long_lag - 1] == 0) ? 1 : 0;
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_p = 0;
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     typename subtract_with_carry_engine<_UIntType, __w, __s, __r>::
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 491


 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     result_type
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator()()
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       // Derive short lag index from current index.
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       long __ps = _M_p - short_lag;
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__ps < 0)
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__ps += long_lag;
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       // Calculate new x(i) without overflow or division.
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       // NB: Thanks to the requirements for _UIntType, _M_x[_M_p] + _M_carry
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       // cannot overflow.
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _UIntType __xi;
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (_M_x[__ps] >= _M_x[_M_p] + _M_carry)
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __xi = _M_x[__ps] - _M_x[_M_p] - _M_carry;
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_carry = 0;
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       else
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __xi = (__detail::_Shift<_UIntType, __w>::__value
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  - _M_x[_M_p] - _M_carry + _M_x[__ps]);
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_carry = 1;
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_x[_M_p] = __xi;
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       // Adjust current index to loop around in ring buffer.
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (++_M_p >= long_lag)
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_p = 0;
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __xi;
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r,
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   typename _CharT, typename _Traits>
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const subtract_with_carry_engine<_UIntType,
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 						__w, __s, __r>& __x)
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __space = __os.widen(' ');
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::dec | __ios_base::fixed | __ios_base::left);
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__space);
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (size_t __i = 0; __i < __r; ++__i)
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__os << __x._M_x[__i] << __space;
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __x._M_carry << __space << __x._M_p;
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 492


 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r,
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   typename _CharT, typename _Traits>
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       subtract_with_carry_engine<_UIntType, __w, __s, __r>& __x)
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (size_t __i = 0; __i < __r; ++__i)
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__is >> __x._M_x[__i];
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is >> __x._M_carry;
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is >> __x._M_p;
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr size_t
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     discard_block_engine<_RandomNumberEngine, __p, __r>::block_size;
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr size_t
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     discard_block_engine<_RandomNumberEngine, __p, __r>::used_block;
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     typename discard_block_engine<_RandomNumberEngine,
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			   __p, __r>::result_type
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     discard_block_engine<_RandomNumberEngine, __p, __r>::
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator()()
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (_M_n >= used_block)
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_b.discard(block_size - _M_n);
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_n = 0;
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       ++_M_n;
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return _M_b();
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RandomNumberEngine, size_t __p, size_t __r,
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   typename _CharT, typename _Traits>
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const discard_block_engine<_RandomNumberEngine,
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       __p, __r>& __x)
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __space = __os.widen(' ');
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::dec | __ios_base::fixed | __ios_base::left);
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 493


 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__space);
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __x.base() << __space << __x._M_n;
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RandomNumberEngine, size_t __p, size_t __r,
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   typename _CharT, typename _Traits>
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       discard_block_engine<_RandomNumberEngine, __p, __r>& __x)
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is >> __x._M_b >> __x._M_n;
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RandomNumberEngine, size_t __w, typename _UIntType>
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     typename independent_bits_engine<_RandomNumberEngine, __w, _UIntType>::
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       result_type
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     independent_bits_engine<_RandomNumberEngine, __w, _UIntType>::
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator()()
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       typedef typename _RandomNumberEngine::result_type _Eresult_type;
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _Eresult_type __r
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	= (_M_b.max() - _M_b.min() < std::numeric_limits<_Eresult_type>::max()
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   ? _M_b.max() - _M_b.min() + 1 : 0);
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const unsigned __edig = std::numeric_limits<_Eresult_type>::digits;
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const unsigned __m = __r ? std::__lg(__r) : __edig;
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       typedef typename std::common_type<_Eresult_type, result_type>::type
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__ctype;
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const unsigned __cdig = std::numeric_limits<__ctype>::digits;
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       unsigned __n, __n0;
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __ctype __s0, __s1, __y0, __y1;
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (size_t __i = 0; __i < 2; ++__i)
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __n = (__w + __m - 1) / __m + __i;
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __n0 = __n - __w % __n;
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  const unsigned __w0 = __w / __n;  // __w0 <= __m
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __s0 = 0;
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __s1 = 0;
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  if (__w0 < __cdig)
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    {
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 494


 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __s0 = __ctype(1) << __w0;
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __s1 = __s0 << 1;
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    }
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __y0 = 0;
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __y1 = 0;
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  if (__r)
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    {
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __y0 = __s0 * (__r / __s0);
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      if (__s1)
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__y1 = __s1 * (__r / __s1);
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      if (__r - __y0 <= __y0 / __n)
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		break;
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    }
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  else
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    break;
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       result_type __sum = 0;
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (size_t __k = 0; __k < __n0; ++__k)
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __ctype __u;
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  do
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __u = _M_b() - _M_b.min();
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  while (__y0 && __u >= __y0);
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __sum = __s0 * __sum + (__s0 ? __u % __s0 : __u);
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (size_t __k = __n0; __k < __n; ++__k)
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __ctype __u;
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  do
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __u = _M_b() - _M_b.min();
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  while (__y1 && __u >= __y1);
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __sum = __s1 * __sum + (__s1 ? __u % __s1 : __u);
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __sum;
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RandomNumberEngine, size_t __k>
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     constexpr size_t
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     shuffle_order_engine<_RandomNumberEngine, __k>::table_size;
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RandomNumberEngine, size_t __k>
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     typename shuffle_order_engine<_RandomNumberEngine, __k>::result_type
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     shuffle_order_engine<_RandomNumberEngine, __k>::
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator()()
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       size_t __j = __k * ((_M_y - _M_b.min())
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			  / (_M_b.max() - _M_b.min() + 1.0L));
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_y = _M_v[__j];
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_v[__j] = _M_b();
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return _M_y;
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 495


 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RandomNumberEngine, size_t __k,
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   typename _CharT, typename _Traits>
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const shuffle_order_engine<_RandomNumberEngine, __k>& __x)
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __space = __os.widen(' ');
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::dec | __ios_base::fixed | __ios_base::left);
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__space);
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __x.base();
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (size_t __i = 0; __i < __k; ++__i)
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__os << __space << __x._M_v[__i];
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __space << __x._M_y;
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RandomNumberEngine, size_t __k,
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   typename _CharT, typename _Traits>
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       shuffle_order_engine<_RandomNumberEngine, __k>& __x)
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is >> __x._M_b;
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (size_t __i = 0; __i < __k; ++__i)
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__is >> __x._M_v[__i];
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is >> __x._M_y;
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType, typename _CharT, typename _Traits>
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const uniform_int_distribution<_IntType>& __x)
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __space = __os.widen(' ');
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__space);
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 496


 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __x.a() << __space << __x.b();
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType, typename _CharT, typename _Traits>
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       uniform_int_distribution<_IntType>& __x)
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using param_type
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	= typename uniform_int_distribution<_IntType>::param_type;
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _IntType __a, __b;
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__is >> __a >> __b)
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__x.param(param_type(__a, __b));
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _ForwardIterator,
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _UniformRandomNumberGenerator>
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       void
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       uniform_real_distribution<_RealType>::
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      const param_type& __p)
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __aurng(__urng);
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	auto __range = __p.b() - __p.a();
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__f != __t)
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  *__f++ = __aurng() * __range + __p.a();
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const uniform_real_distribution<_RealType>& __x)
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const std::streamsize __precision = __os.precision();
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __space = __os.widen(' ');
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 497


 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__space);
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __x.a() << __space << __x.b();
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(__precision);
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       uniform_real_distribution<_RealType>& __x)
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using param_type
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	= typename uniform_real_distribution<_RealType>::param_type;
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::skipws);
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _RealType __a, __b;
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__is >> __a >> __b)
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__x.param(param_type(__a, __b));
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _ForwardIterator,
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   typename _UniformRandomNumberGenerator>
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     void
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::bernoulli_distribution::
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    _UniformRandomNumberGenerator& __urng,
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    const param_type& __p)
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __detail::_Adaptor<_UniformRandomNumberGenerator, double>
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__aurng(__urng);
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       auto __limit = __p.p() * (__aurng.max() - __aurng.min());
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       while (__f != __t)
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	*__f++ = (__aurng() - __aurng.min()) < __limit;
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _CharT, typename _Traits>
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const bernoulli_distribution& __x)
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 498


 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const std::streamsize __precision = __os.precision();
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__os.widen(' '));
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(std::numeric_limits<double>::max_digits10);
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __x.p();
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(__precision);
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType>
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _UniformRandomNumberGenerator>
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       typename geometric_distribution<_IntType>::result_type
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       geometric_distribution<_IntType>::
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		 const param_type& __param)
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	// About the epsilon thing see this thread:
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	// http://gcc.gnu.org/ml/gcc-patches/2006-10/msg00971.html
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const double __naf =
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  (1 - std::numeric_limits<double>::epsilon()) / 2;
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	// The largest _RealType convertible to _IntType.
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const double __thr =
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  std::numeric_limits<_IntType>::max() + __naf;
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, double>
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __aurng(__urng);
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	double __cand;
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	do
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __cand = std::floor(std::log(1.0 - __aurng()) / __param._M_log_1_p);
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__cand >= __thr);
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	return result_type(__cand + __naf);
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType>
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _ForwardIterator,
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _UniformRandomNumberGenerator>
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       void
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       geometric_distribution<_IntType>::
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      const param_type& __param)
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	// About the epsilon thing see this thread:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	// http://gcc.gnu.org/ml/gcc-patches/2006-10/msg00971.html
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const double __naf =
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  (1 - std::numeric_limits<double>::epsilon()) / 2;
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	// The largest _RealType convertible to _IntType.
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const double __thr =
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 499


1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  std::numeric_limits<_IntType>::max() + __naf;
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, double>
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __aurng(__urng);
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__f != __t)
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    double __cand;
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    do
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __cand = std::floor(std::log(1.0 - __aurng())
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 				  / __param._M_log_1_p);
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    while (__cand >= __thr);
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    *__f++ = __cand + __naf;
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType,
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   typename _CharT, typename _Traits>
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const geometric_distribution<_IntType>& __x)
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const std::streamsize __precision = __os.precision();
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__os.widen(' '));
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(std::numeric_limits<double>::max_digits10);
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __x.p();
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(__precision);
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType,
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   typename _CharT, typename _Traits>
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       geometric_distribution<_IntType>& __x)
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using param_type = typename geometric_distribution<_IntType>::param_type;
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::skipws);
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       double __p;
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__is >> __p)
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__x.param(param_type(__p));
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 500


1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   // This is Leger's algorithm, also in Devroye, Ch. X, Example 1.5.
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType>
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _UniformRandomNumberGenerator>
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       typename negative_binomial_distribution<_IntType>::result_type
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       negative_binomial_distribution<_IntType>::
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng)
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const double __y = _M_gd(__urng);
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	// XXX Is the constructor too slow?
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	std::poisson_distribution<result_type> __poisson(__y);
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	return __poisson(__urng);
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType>
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _UniformRandomNumberGenerator>
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       typename negative_binomial_distribution<_IntType>::result_type
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       negative_binomial_distribution<_IntType>::
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		 const param_type& __p)
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	typedef typename std::gamma_distribution<double>::param_type
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  param_type;
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const double __y =
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_gd(__urng, param_type(__p.k(), (1.0 - __p.p()) / __p.p()));
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	std::poisson_distribution<result_type> __poisson(__y);
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	return __poisson(__urng);
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType>
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _ForwardIterator,
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _UniformRandomNumberGenerator>
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       void
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       negative_binomial_distribution<_IntType>::
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      _UniformRandomNumberGenerator& __urng)
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__f != __t)
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __y = _M_gd(__urng);
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    // XXX Is the constructor too slow?
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    std::poisson_distribution<result_type> __poisson(__y);
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    *__f++ = __poisson(__urng);
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType>
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _ForwardIterator,
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _UniformRandomNumberGenerator>
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       void
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       negative_binomial_distribution<_IntType>::
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 501


1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      const param_type& __p)
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	typename std::gamma_distribution<result_type>::param_type
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __p2(__p.k(), (1.0 - __p.p()) / __p.p());
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__f != __t)
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __y = _M_gd(__urng, __p2);
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    std::poisson_distribution<result_type> __poisson(__y);
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    *__f++ = __poisson(__urng);
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType, typename _CharT, typename _Traits>
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const negative_binomial_distribution<_IntType>& __x)
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const std::streamsize __precision = __os.precision();
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __space = __os.widen(' ');
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__os.widen(' '));
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(std::numeric_limits<double>::max_digits10);
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __x.k() << __space << __x.p()
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   << __space << __x._M_gd;
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(__precision);
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType, typename _CharT, typename _Traits>
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       negative_binomial_distribution<_IntType>& __x)
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using param_type
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	= typename negative_binomial_distribution<_IntType>::param_type;
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::skipws);
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _IntType __k;
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       double __p;
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__is >> __k >> __p >> __x._M_gd)
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__x.param(param_type(__k, __p));
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 502


1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType>
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     void
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     poisson_distribution<_IntType>::param_type::
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     _M_initialize()
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** #if _GLIBCXX_USE_C99_MATH_TR1
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (_M_mean >= 12)
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  const double __m = std::floor(_M_mean);
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_lm_thr = std::log(_M_mean);
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_lfm = std::lgamma(__m + 1);
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_sm = std::sqrt(__m);
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  const double __pi_4 = 0.7853981633974483096156608458198757L;
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  const double __dx = std::sqrt(2 * __m * std::log(32 * __m
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 							      / __pi_4));
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_d = std::round(std::max<double>(6.0, std::min(__m, __dx)));
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  const double __cx = 2 * __m + _M_d;
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_scx = std::sqrt(__cx / 2);
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_1cx = 1 / __cx;
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_c2b = std::sqrt(__pi_4 * __cx) * std::exp(_M_1cx);
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_cb = 2 * __cx * std::exp(-_M_d * _M_1cx * (1 + _M_d / 2))
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		/ _M_d;
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       else
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** #endif
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_lm_thr = std::exp(-_M_mean);
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   /**
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * A rejection algorithm when mean >= 12 and a simple method based
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * upon the multiplication of uniform random variates otherwise.
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * NB: The former is available only if _GLIBCXX_USE_C99_MATH_TR1
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * is defined.
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    *
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * Reference:
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * Devroye, L. Non-Uniform Random Variates Generation. Springer-Verlag,
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * New York, 1986, Ch. X, Sects. 3.3 & 3.4 (+ Errata!).
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    */
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType>
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _UniformRandomNumberGenerator>
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       typename poisson_distribution<_IntType>::result_type
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       poisson_distribution<_IntType>::
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		 const param_type& __param)
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, double>
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __aurng(__urng);
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** #if _GLIBCXX_USE_C99_MATH_TR1
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	if (__param.mean() >= 12)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 503


1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    double __x;
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    // See comments above...
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __naf =
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      (1 - std::numeric_limits<double>::epsilon()) / 2;
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __thr =
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      std::numeric_limits<_IntType>::max() + __naf;
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __m = std::floor(__param.mean());
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    // sqrt(pi / 2)
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __spi_2 = 1.2533141373155002512078826424055226L;
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __c1 = __param._M_sm * __spi_2;
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __c2 = __param._M_c2b + __c1;
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __c3 = __c2 + 1;
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __c4 = __c3 + 1;
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    // 1 / 78
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __178 = 0.0128205128205128205128205128205128L;
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    // e^(1 / 78)
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __e178 = 1.0129030479320018583185514777512983L;
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __c5 = __c4 + __e178;
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __c = __param._M_cb + __c5;
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __2cx = 2 * (2 * __m + __param._M_d);
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    bool __reject = true;
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    do
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      {
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		const double __u = __c * __aurng();
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		const double __e = -std::log(1.0 - __aurng());
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		double __w = 0.0;
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		if (__u <= __c1)
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  {
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    const double __n = _M_nd(__urng);
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    const double __y = -std::abs(__n) * __param._M_sm - 1;
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    __x = std::floor(__y);
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    __w = -__n * __n / 2;
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    if (__x < -__m)
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      continue;
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  }
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		else if (__u <= __c2)
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  {
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    const double __n = _M_nd(__urng);
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    const double __y = 1 + std::abs(__n) * __param._M_scx;
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    __x = std::ceil(__y);
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    __w = __y * (2 - __y) * __param._M_1cx;
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    if (__x > __param._M_d)
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      continue;
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  }
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		else if (__u <= __c3)
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  // NB: This case not in the book, nor in the Errata,
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  // but should be ok...
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  __x = -1;
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		else if (__u <= __c4)
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  __x = 0;
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		else if (__u <= __c5)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 504


1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  {
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    __x = 1;
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    // Only in the Errata, see libstdc++/83237.
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    __w = __178;
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  }
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		else
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  {
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    const double __v = -std::log(1.0 - __aurng());
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    const double __y = __param._M_d
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 				     + __v * __2cx / __param._M_d;
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    __x = std::ceil(__y);
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    __w = -__param._M_d * __param._M_1cx * (1 + __y / 2);
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  }
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__reject = (__w - __e - __x * __param._M_lm_thr
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    > __param._M_lfm - std::lgamma(__x + __m + 1));
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__reject |= __x + __m >= __thr;
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      } while (__reject);
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    return result_type(__x + __m + __naf);
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	else
1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** #endif
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _IntType     __x = 0;
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    double __prod = 1.0;
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    do
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      {
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__prod *= __aurng();
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__x += 1;
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      }
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    while (__prod > __param._M_lm_thr);
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    return __x - 1;
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType>
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _ForwardIterator,
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _UniformRandomNumberGenerator>
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       void
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       poisson_distribution<_IntType>::
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      const param_type& __param)
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	// We could duplicate everything from operator()...
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__f != __t)
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  *__f++ = this->operator()(__urng, __param);
1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType,
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   typename _CharT, typename _Traits>
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 505


1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const poisson_distribution<_IntType>& __x)
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const std::streamsize __precision = __os.precision();
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __space = __os.widen(' ');
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__space);
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(std::numeric_limits<double>::max_digits10);
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __x.mean() << __space << __x._M_nd;
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(__precision);
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType,
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   typename _CharT, typename _Traits>
1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       poisson_distribution<_IntType>& __x)
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using param_type = typename poisson_distribution<_IntType>::param_type;
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::skipws);
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       double __mean;
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__is >> __mean >> __x._M_nd)
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__x.param(param_type(__mean));
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType>
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     void
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     binomial_distribution<_IntType>::param_type::
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     _M_initialize()
1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const double __p12 = _M_p <= 0.5 ? _M_p : 1.0 - _M_p;
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_easy = true;
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** #if _GLIBCXX_USE_C99_MATH_TR1
1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (_M_t * __p12 >= 8)
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_easy = false;
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  const double __np = std::floor(_M_t * __p12);
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 506


1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  const double __pa = __np / _M_t;
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  const double __1p = 1 - __pa;
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  const double __pi_4 = 0.7853981633974483096156608458198757L;
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  const double __d1x =
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    std::sqrt(__np * __1p * std::log(32 * __np
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 					     / (81 * __pi_4 * __1p)));
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_d1 = std::round(std::max<double>(1.0, __d1x));
1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  const double __d2x =
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    std::sqrt(__np * __1p * std::log(32 * _M_t * __1p
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 					     / (__pi_4 * __pa)));
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_d2 = std::round(std::max<double>(1.0, __d2x));
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  // sqrt(pi / 2)
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  const double __spi_2 = 1.2533141373155002512078826424055226L;
1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_s1 = std::sqrt(__np * __1p) * (1 + _M_d1 / (4 * __np));
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_s2 = std::sqrt(__np * __1p) * (1 + _M_d2 / (4 * _M_t * __1p));
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_c = 2 * _M_d1 / __np;
1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_a1 = std::exp(_M_c) * _M_s1 * __spi_2;
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  const double __a12 = _M_a1 + _M_s2 * __spi_2;
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  const double __s1s = _M_s1 * _M_s1;
1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_a123 = __a12 + (std::exp(_M_d1 / (_M_t * __1p))
1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			     * 2 * __s1s / _M_d1
1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			     * std::exp(-_M_d1 * _M_d1 / (2 * __s1s)));
1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  const double __s2s = _M_s2 * _M_s2;
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_s = (_M_a123 + 2 * __s2s / _M_d2
1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  * std::exp(-_M_d2 * _M_d2 / (2 * __s2s)));
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_lf = (std::lgamma(__np + 1)
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		   + std::lgamma(_M_t - __np + 1));
1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_lp1p = std::log(__pa / __1p);
1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_q = -std::log(1 - (__p12 - __pa) / __1p);
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       else
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** #endif
1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_q = -std::log(1 - __p12);
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType>
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _UniformRandomNumberGenerator>
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       typename binomial_distribution<_IntType>::result_type
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       binomial_distribution<_IntType>::
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_waiting(_UniformRandomNumberGenerator& __urng,
1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		 _IntType __t, double __q)
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_IntType __x = 0;
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	double __sum = 0.0;
1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, double>
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __aurng(__urng);
1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	do
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    if (__t == __x)
1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      return __x;
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __e = -std::log(1.0 - __aurng());
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __sum += __e / (__t - __x);
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __x += 1;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 507


1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__sum <= __q);
1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	return __x - 1;
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   /**
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * A rejection algorithm when t * p >= 8 and a simple waiting time
1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * method - the second in the referenced book - otherwise.
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * NB: The former is available only if _GLIBCXX_USE_C99_MATH_TR1
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * is defined.
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    *
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * Reference:
1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * Devroye, L. Non-Uniform Random Variates Generation. Springer-Verlag,
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * New York, 1986, Ch. X, Sect. 4 (+ Errata!).
1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    */
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType>
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _UniformRandomNumberGenerator>
1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       typename binomial_distribution<_IntType>::result_type
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       binomial_distribution<_IntType>::
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		 const param_type& __param)
1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	result_type __ret;
1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const _IntType __t = __param.t();
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const double __p = __param.p();
1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const double __p12 = __p <= 0.5 ? __p : 1.0 - __p;
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, double>
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __aurng(__urng);
1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** #if _GLIBCXX_USE_C99_MATH_TR1
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	if (!__param._M_easy)
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    double __x;
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    // See comments above...
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __naf =
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      (1 - std::numeric_limits<double>::epsilon()) / 2;
1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __thr =
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      std::numeric_limits<_IntType>::max() + __naf;
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __np = std::floor(__t * __p12);
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    // sqrt(pi / 2)
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __spi_2 = 1.2533141373155002512078826424055226L;
1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __a1 = __param._M_a1;
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __a12 = __a1 + __param._M_s2 * __spi_2;
1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __a123 = __param._M_a123;
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __s1s = __param._M_s1 * __param._M_s1;
1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __s2s = __param._M_s2 * __param._M_s2;
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    bool __reject;
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    do
1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      {
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		const double __u = __param._M_s * __aurng();
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		double __v;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 508


1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		if (__u <= __a1)
1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  {
1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    const double __n = _M_nd(__urng);
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    const double __y = __param._M_s1 * std::abs(__n);
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    __reject = __y >= __param._M_d1;
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    if (!__reject)
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      {
1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			const double __e = -std::log(1.0 - __aurng());
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			__x = std::floor(__y);
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			__v = -__e - __n * __n / 2 + __param._M_c;
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      }
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  }
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		else if (__u <= __a12)
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  {
1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    const double __n = _M_nd(__urng);
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    const double __y = __param._M_s2 * std::abs(__n);
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    __reject = __y >= __param._M_d2;
1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    if (!__reject)
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      {
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			const double __e = -std::log(1.0 - __aurng());
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			__x = std::floor(-__y);
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			__v = -__e - __n * __n / 2;
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      }
1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  }
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		else if (__u <= __a123)
1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  {
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    const double __e1 = -std::log(1.0 - __aurng());
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    const double __e2 = -std::log(1.0 - __aurng());
1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    const double __y = __param._M_d1
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 				     + 2 * __s1s * __e1 / __param._M_d1;
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    __x = std::floor(__y);
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    __v = (-__e2 + __param._M_d1 * (1 / (__t - __np)
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 						    -__y / (2 * __s1s)));
1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    __reject = false;
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  }
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		else
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  {
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    const double __e1 = -std::log(1.0 - __aurng());
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    const double __e2 = -std::log(1.0 - __aurng());
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    const double __y = __param._M_d2
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 				     + 2 * __s2s * __e1 / __param._M_d2;
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    __x = std::floor(-__y);
1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    __v = -__e2 - __param._M_d2 * __y / (2 * __s2s);
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    __reject = false;
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  }
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__reject = __reject || __x < -__np || __x > __t - __np;
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		if (!__reject)
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  {
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    const double __lfx =
1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      std::lgamma(__np + __x + 1)
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      + std::lgamma(__t - (__np + __x) + 1);
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    __reject = __v > __param._M_lf - __lfx
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			     + __x * __param._M_lp1p;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 509


1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  }
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__reject |= __x + __np >= __thr;
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      }
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    while (__reject);
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __x += __np + __naf;
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const _IntType __z = _M_waiting(__urng, __t - _IntType(__x),
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 					    __param._M_q);
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __ret = _IntType(__x) + __z;
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	else
1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** #endif
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __ret = _M_waiting(__urng, __t, __param._M_q);
1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	if (__p12 != __p)
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __ret = __t - __ret;
1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	return __ret;
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
1638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType>
1640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _ForwardIterator,
1641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _UniformRandomNumberGenerator>
1642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       void
1643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       binomial_distribution<_IntType>::
1644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
1645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
1646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      const param_type& __param)
1647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
1648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
1649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	// We could duplicate everything from operator()...
1650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__f != __t)
1651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  *__f++ = this->operator()(__urng, __param);
1652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
1653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType,
1655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   typename _CharT, typename _Traits>
1656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
1657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const binomial_distribution<_IntType>& __x)
1659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
1660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
1661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
1663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
1664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const std::streamsize __precision = __os.precision();
1665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __space = __os.widen(' ');
1666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
1667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__space);
1668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(std::numeric_limits<double>::max_digits10);
1669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __x.t() << __space << __x.p()
1671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   << __space << __x._M_nd;
1672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
1674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 510


1675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(__precision);
1676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
1677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
1678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType,
1680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   typename _CharT, typename _Traits>
1681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
1682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
1683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       binomial_distribution<_IntType>& __x)
1684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
1685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using param_type = typename binomial_distribution<_IntType>::param_type;
1686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
1687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
1689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
1690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _IntType __t;
1692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       double __p;
1693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__is >> __t >> __p >> __x._M_nd)
1694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__x.param(param_type(__t, __p));
1695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
1697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
1698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
1699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
1702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _ForwardIterator,
1703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _UniformRandomNumberGenerator>
1704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       void
1705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       std::exponential_distribution<_RealType>::
1706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
1707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
1708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      const param_type& __p)
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
1710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
1712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __aurng(__urng);
1713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__f != __t)
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  *__f++ = -std::log(result_type(1) - __aurng()) / __p.lambda();
1715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
1718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const exponential_distribution<_RealType>& __x)
1721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
1722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
1725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const std::streamsize __precision = __os.precision();
1727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__os.widen(' '));
1729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
1730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __x.lambda();
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 511


1732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
1734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
1735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(__precision);
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
1737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
1738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
1740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
1741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
1742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       exponential_distribution<_RealType>& __x)
1743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
1744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using param_type
1745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	= typename exponential_distribution<_RealType>::param_type;
1746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
1747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
1750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _RealType __lambda;
1752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__is >> __lambda)
1753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__x.param(param_type(__lambda));
1754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
1757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   /**
1761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * Polar method due to Marsaglia.
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    *
1763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * Devroye, L. Non-Uniform Random Variates Generation. Springer-Verlag,
1764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * New York, 1986, Ch. V, Sect. 4.4.
1765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    */
1766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
1767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _UniformRandomNumberGenerator>
1768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       typename normal_distribution<_RealType>::result_type
1769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       normal_distribution<_RealType>::
1770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
1771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		 const param_type& __param)
1772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
1773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	result_type __ret;
1774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
1775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __aurng(__urng);
1776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	if (_M_saved_available)
1778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
1779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _M_saved_available = false;
1780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __ret = _M_saved;
1781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
1782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	else
1783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
1784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    result_type __x, __y, __r2;
1785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    do
1786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      {
1787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__x = result_type(2.0) * __aurng() - 1.0;
1788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__y = result_type(2.0) * __aurng() - 1.0;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 512


1789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__r2 = __x * __x + __y * __y;
1790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      }
1791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    while (__r2 > 1.0 || __r2 == 0.0);
1792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const result_type __mult = std::sqrt(-2 * std::log(__r2) / __r2);
1794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _M_saved = __x * __mult;
1795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _M_saved_available = true;
1796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __ret = __y * __mult;
1797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
1798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__ret = __ret * __param.stddev() + __param.mean();
1800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	return __ret;
1801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
1802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
1804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _ForwardIterator,
1805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _UniformRandomNumberGenerator>
1806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       void
1807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       normal_distribution<_RealType>::
1808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
1809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
1810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      const param_type& __param)
1811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
1812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
1813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	if (__f == __t)
1815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  return;
1816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	if (_M_saved_available)
1818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
1819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _M_saved_available = false;
1820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    *__f++ = _M_saved * __param.stddev() + __param.mean();
1821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    if (__f == __t)
1823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      return;
1824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
1825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
1827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __aurng(__urng);
1828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__f + 1 < __t)
1830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
1831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    result_type __x, __y, __r2;
1832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    do
1833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      {
1834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__x = result_type(2.0) * __aurng() - 1.0;
1835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__y = result_type(2.0) * __aurng() - 1.0;
1836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__r2 = __x * __x + __y * __y;
1837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      }
1838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    while (__r2 > 1.0 || __r2 == 0.0);
1839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const result_type __mult = std::sqrt(-2 * std::log(__r2) / __r2);
1841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    *__f++ = __y * __mult * __param.stddev() + __param.mean();
1842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    *__f++ = __x * __mult * __param.stddev() + __param.mean();
1843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
1844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	if (__f != __t)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 513


1846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
1847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    result_type __x, __y, __r2;
1848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    do
1849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      {
1850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__x = result_type(2.0) * __aurng() - 1.0;
1851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__y = result_type(2.0) * __aurng() - 1.0;
1852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__r2 = __x * __x + __y * __y;
1853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      }
1854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    while (__r2 > 1.0 || __r2 == 0.0);
1855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const result_type __mult = std::sqrt(-2 * std::log(__r2) / __r2);
1857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _M_saved = __x * __mult;
1858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _M_saved_available = true;
1859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    *__f = __y * __mult * __param.stddev() + __param.mean();
1860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
1861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
1862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
1864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     bool
1865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator==(const std::normal_distribution<_RealType>& __d1,
1866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const std::normal_distribution<_RealType>& __d2)
1867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
1868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__d1._M_param == __d2._M_param
1869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  && __d1._M_saved_available == __d2._M_saved_available)
1870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
1871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  if (__d1._M_saved_available
1872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      && __d1._M_saved == __d2._M_saved)
1873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    return true;
1874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  else if(!__d1._M_saved_available)
1875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    return true;
1876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  else
1877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    return false;
1878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
1879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       else
1880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	return false;
1881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
1882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
1884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
1885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const normal_distribution<_RealType>& __x)
1887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
1888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
1889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
1891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
1892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const std::streamsize __precision = __os.precision();
1893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __space = __os.widen(' ');
1894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
1895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__space);
1896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
1897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __x.mean() << __space << __x.stddev()
1899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   << __space << __x._M_saved_available;
1900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__x._M_saved_available)
1901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__os << __space << __x._M_saved;
1902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 514


1903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
1904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
1905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(__precision);
1906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
1907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
1908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
1910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
1911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
1912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       normal_distribution<_RealType>& __x)
1913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
1914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using param_type = typename normal_distribution<_RealType>::param_type;
1915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
1916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
1918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
1919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       double __mean, __stddev;
1921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       bool __saved_avail;
1922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__is >> __mean >> __stddev >> __saved_avail)
1923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
1924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  if (__saved_avail && (__is >> __x._M_saved))
1925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    {
1926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __x._M_saved_available = __saved_avail;
1927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __x.param(param_type(__mean, __stddev));
1928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    }
1929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
1930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
1932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
1933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
1934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
1937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _ForwardIterator,
1938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _UniformRandomNumberGenerator>
1939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       void
1940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       lognormal_distribution<_RealType>::
1941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
1942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
1943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      const param_type& __p)
1944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
1945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
1946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  while (__f != __t)
1947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    *__f++ = std::exp(__p.s() * _M_nd(__urng) + __p.m());
1948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
1949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
1951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
1952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const lognormal_distribution<_RealType>& __x)
1954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
1955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
1956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
1958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
1959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const std::streamsize __precision = __os.precision();
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 515


1960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __space = __os.widen(' ');
1961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
1962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__space);
1963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
1964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __x.m() << __space << __x.s()
1966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   << __space << __x._M_nd;
1967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
1969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
1970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(__precision);
1971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
1972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
1973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
1975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
1976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
1977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       lognormal_distribution<_RealType>& __x)
1978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
1979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using param_type
1980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	= typename lognormal_distribution<_RealType>::param_type;
1981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
1982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
1984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
1985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _RealType __m, __s;
1987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__is >> __m >> __s >> __x._M_nd)
1988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__x.param(param_type(__m, __s));
1989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
1991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
1992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
1993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
1994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
1995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _ForwardIterator,
1996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _UniformRandomNumberGenerator>
1997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       void
1998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       std::chi_squared_distribution<_RealType>::
1999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      _UniformRandomNumberGenerator& __urng)
2001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
2002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__f != __t)
2004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  *__f++ = 2 * _M_gd(__urng);
2005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
2006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
2008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _ForwardIterator,
2009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _UniformRandomNumberGenerator>
2010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       void
2011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       std::chi_squared_distribution<_RealType>::
2012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
2014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      const typename
2015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      std::gamma_distribution<result_type>::param_type& __p)
2016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 516


2017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__f != __t)
2019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  *__f++ = 2 * _M_gd(__urng, __p);
2020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
2021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
2024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
2025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const chi_squared_distribution<_RealType>& __x)
2026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
2027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
2028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
2030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
2031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const std::streamsize __precision = __os.precision();
2032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __space = __os.widen(' ');
2033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
2034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__space);
2035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
2036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __x.n() << __space << __x._M_gd;
2038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
2040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
2041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(__precision);
2042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
2043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
2044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
2047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
2048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       chi_squared_distribution<_RealType>& __x)
2049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
2050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using param_type
2051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	= typename chi_squared_distribution<_RealType>::param_type;
2052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
2053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
2055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
2056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _RealType __n;
2058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__is >> __n >> __x._M_gd)
2059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__x.param(param_type(__n));
2060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
2062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
2063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
2064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
2067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _UniformRandomNumberGenerator>
2068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       typename cauchy_distribution<_RealType>::result_type
2069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       cauchy_distribution<_RealType>::
2070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
2071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		 const param_type& __p)
2072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
2073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 517


2074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __aurng(__urng);
2075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_RealType __u;
2076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	do
2077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __u = __aurng();
2078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__u == 0.5);
2079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const _RealType __pi = 3.1415926535897932384626433832795029L;
2081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	return __p.a() + __p.b() * std::tan(__pi * __u);
2082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
2083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
2085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _ForwardIterator,
2086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _UniformRandomNumberGenerator>
2087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       void
2088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       cauchy_distribution<_RealType>::
2089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
2091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      const param_type& __p)
2092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
2093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const _RealType __pi = 3.1415926535897932384626433832795029L;
2095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
2096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __aurng(__urng);
2097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__f != __t)
2098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
2099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _RealType __u;
2100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    do
2101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __u = __aurng();
2102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    while (__u == 0.5);
2103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    *__f++ = __p.a() + __p.b() * std::tan(__pi * __u);
2105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
2106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
2107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
2110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
2111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const cauchy_distribution<_RealType>& __x)
2112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
2113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
2114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
2116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
2117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const std::streamsize __precision = __os.precision();
2118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __space = __os.widen(' ');
2119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
2120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__space);
2121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
2122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __x.a() << __space << __x.b();
2124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
2126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
2127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(__precision);
2128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
2129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
2130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 518


2131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
2133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
2134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       cauchy_distribution<_RealType>& __x)
2135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
2136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using param_type = typename cauchy_distribution<_RealType>::param_type;
2137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
2138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
2140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
2141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _RealType __a, __b;
2143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__is >> __a >> __b)
2144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__x.param(param_type(__a, __b));
2145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
2147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
2148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
2149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
2152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _ForwardIterator,
2153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _UniformRandomNumberGenerator>
2154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       void
2155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       std::fisher_f_distribution<_RealType>::
2156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      _UniformRandomNumberGenerator& __urng)
2158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
2159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__f != __t)
2161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  *__f++ = ((_M_gd_x(__urng) * n()) / (_M_gd_y(__urng) * m()));
2162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
2163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
2165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _ForwardIterator,
2166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _UniformRandomNumberGenerator>
2167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       void
2168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       std::fisher_f_distribution<_RealType>::
2169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
2171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      const param_type& __p)
2172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
2173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	typedef typename std::gamma_distribution<result_type>::param_type
2175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  param_type;
2176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	param_type __p1(__p.m() / 2);
2177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	param_type __p2(__p.n() / 2);
2178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__f != __t)
2179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  *__f++ = ((_M_gd_x(__urng, __p1) * n())
2180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    / (_M_gd_y(__urng, __p2) * m()));
2181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
2182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
2185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
2186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const fisher_f_distribution<_RealType>& __x)
2187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 519


2188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
2189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
2191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
2192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const std::streamsize __precision = __os.precision();
2193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __space = __os.widen(' ');
2194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
2195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__space);
2196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
2197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __x.m() << __space << __x.n()
2199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   << __space << __x._M_gd_x << __space << __x._M_gd_y;
2200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
2202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
2203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(__precision);
2204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
2205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
2206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
2209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
2210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       fisher_f_distribution<_RealType>& __x)
2211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
2212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using param_type
2213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	= typename fisher_f_distribution<_RealType>::param_type;
2214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
2215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
2217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
2218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _RealType __m, __n;
2220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__is >> __m >> __n >> __x._M_gd_x >> __x._M_gd_y)
2221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__x.param(param_type(__m, __n));
2222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
2224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
2225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
2226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
2229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _ForwardIterator,
2230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _UniformRandomNumberGenerator>
2231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       void
2232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       std::student_t_distribution<_RealType>::
2233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      _UniformRandomNumberGenerator& __urng)
2235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
2236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__f != __t)
2238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  *__f++ = _M_nd(__urng) * std::sqrt(n() / _M_gd(__urng));
2239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
2240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
2242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _ForwardIterator,
2243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _UniformRandomNumberGenerator>
2244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       void
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 520


2245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       std::student_t_distribution<_RealType>::
2246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
2248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      const param_type& __p)
2249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
2250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	typename std::gamma_distribution<result_type>::param_type
2252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __p2(__p.n() / 2, 2);
2253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__f != __t)
2254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  *__f++ =  _M_nd(__urng) * std::sqrt(__p.n() / _M_gd(__urng, __p2));
2255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
2256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
2259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
2260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const student_t_distribution<_RealType>& __x)
2261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
2262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
2263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
2265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
2266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const std::streamsize __precision = __os.precision();
2267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __space = __os.widen(' ');
2268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
2269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__space);
2270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
2271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __x.n() << __space << __x._M_nd << __space << __x._M_gd;
2273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
2275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
2276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(__precision);
2277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
2278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
2279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
2282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
2283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       student_t_distribution<_RealType>& __x)
2284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
2285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using param_type
2286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	= typename student_t_distribution<_RealType>::param_type;
2287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
2288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
2290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
2291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _RealType __n;
2293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__is >> __n >> __x._M_nd >> __x._M_gd)
2294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__x.param(param_type(__n));
2295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
2297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
2298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
2299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 521


2302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     void
2303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     gamma_distribution<_RealType>::param_type::
2304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     _M_initialize()
2305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
2306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_malpha = _M_alpha < 1.0 ? _M_alpha + _RealType(1.0) : _M_alpha;
2307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _RealType __a1 = _M_malpha - _RealType(1.0) / _RealType(3.0);
2309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_a2 = _RealType(1.0) / std::sqrt(_RealType(9.0) * __a1);
2310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
2311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   /**
2313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * Marsaglia, G. and Tsang, W. W.
2314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * "A Simple Method for Generating Gamma Variables"
2315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    * ACM Transactions on Mathematical Software, 26, 3, 363-372, 2000.
2316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****    */
2317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
2318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _UniformRandomNumberGenerator>
2319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       typename gamma_distribution<_RealType>::result_type
2320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       gamma_distribution<_RealType>::
2321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
2322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		 const param_type& __param)
2323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
2324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
2325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __aurng(__urng);
2326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	result_type __u, __v, __n;
2328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const result_type __a1 = (__param._M_malpha
2329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 				  - _RealType(1.0) / _RealType(3.0));
2330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	do
2332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
2333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    do
2334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      {
2335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__n = _M_nd(__urng);
2336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__v = result_type(1.0) + __param._M_a2 * __n; 
2337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      }
2338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    while (__v <= 0.0);
2339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __v = __v * __v * __v;
2341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __u = __aurng();
2342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
2343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__u > result_type(1.0) - 0.0331 * __n * __n * __n * __n
2344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       && (std::log(__u) > (0.5 * __n * __n + __a1
2345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 				    * (1.0 - __v + std::log(__v)))));
2346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	if (__param.alpha() == __param._M_malpha)
2348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  return __a1 * __v * __param.beta();
2349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	else
2350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
2351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    do
2352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      __u = __aurng();
2353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    while (__u == 0.0);
2354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    
2355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    return (std::pow(__u, result_type(1.0) / __param.alpha())
2356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    * __a1 * __v * __param.beta());
2357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
2358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 522


2359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
2361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _ForwardIterator,
2362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _UniformRandomNumberGenerator>
2363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       void
2364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       gamma_distribution<_RealType>::
2365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
2367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      const param_type& __param)
2368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
2369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
2371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __aurng(__urng);
2372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	result_type __u, __v, __n;
2374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const result_type __a1 = (__param._M_malpha
2375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 				  - _RealType(1.0) / _RealType(3.0));
2376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	if (__param.alpha() == __param._M_malpha)
2378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  while (__f != __t)
2379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    {
2380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      do
2381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		{
2382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  do
2383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    {
2384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      __n = _M_nd(__urng);
2385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      __v = result_type(1.0) + __param._M_a2 * __n;
2386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    }
2387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  while (__v <= 0.0);
2388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  __v = __v * __v * __v;
2390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  __u = __aurng();
2391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		}
2392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      while (__u > result_type(1.0) - 0.0331 * __n * __n * __n * __n
2393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		     && (std::log(__u) > (0.5 * __n * __n + __a1
2394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 					  * (1.0 - __v + std::log(__v)))));
2395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      *__f++ = __a1 * __v * __param.beta();
2397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    }
2398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	else
2399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  while (__f != __t)
2400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    {
2401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      do
2402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		{
2403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  do
2404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    {
2405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      __n = _M_nd(__urng);
2406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      __v = result_type(1.0) + __param._M_a2 * __n;
2407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    }
2408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  while (__v <= 0.0);
2409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  __v = __v * __v * __v;
2411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  __u = __aurng();
2412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		}
2413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      while (__u > result_type(1.0) - 0.0331 * __n * __n * __n * __n
2414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		     && (std::log(__u) > (0.5 * __n * __n + __a1
2415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 					  * (1.0 - __v + std::log(__v)))));
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 523


2416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      do
2418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		__u = __aurng();
2419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      while (__u == 0.0);
2420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      *__f++ = (std::pow(__u, result_type(1.0) / __param.alpha())
2422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			* __a1 * __v * __param.beta());
2423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    }
2424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
2425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
2428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
2429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const gamma_distribution<_RealType>& __x)
2430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
2431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
2432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
2434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
2435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const std::streamsize __precision = __os.precision();
2436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __space = __os.widen(' ');
2437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
2438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__space);
2439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
2440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __x.alpha() << __space << __x.beta()
2442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   << __space << __x._M_nd;
2443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
2445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
2446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(__precision);
2447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
2448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
2449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
2452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
2453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       gamma_distribution<_RealType>& __x)
2454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
2455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using param_type = typename gamma_distribution<_RealType>::param_type;
2456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
2457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
2459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
2460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _RealType __alpha_val, __beta_val;
2462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__is >> __alpha_val >> __beta_val >> __x._M_nd)
2463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__x.param(param_type(__alpha_val, __beta_val));
2464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
2466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
2467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
2468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
2471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _UniformRandomNumberGenerator>
2472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       typename weibull_distribution<_RealType>::result_type
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 524


2473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       weibull_distribution<_RealType>::
2474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
2475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		 const param_type& __p)
2476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
2477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
2478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __aurng(__urng);
2479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	return __p.b() * std::pow(-std::log(result_type(1) - __aurng()),
2480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 				  result_type(1) / __p.a());
2481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
2482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
2484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _ForwardIterator,
2485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _UniformRandomNumberGenerator>
2486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       void
2487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       weibull_distribution<_RealType>::
2488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
2490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      const param_type& __p)
2491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
2492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
2494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __aurng(__urng);
2495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	auto __inv_a = result_type(1) / __p.a();
2496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__f != __t)
2498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  *__f++ = __p.b() * std::pow(-std::log(result_type(1) - __aurng()),
2499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 				      __inv_a);
2500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
2501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
2504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
2505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const weibull_distribution<_RealType>& __x)
2506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
2507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
2508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
2510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
2511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const std::streamsize __precision = __os.precision();
2512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __space = __os.widen(' ');
2513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
2514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__space);
2515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
2516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __x.a() << __space << __x.b();
2518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
2520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
2521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(__precision);
2522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
2523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
2524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
2527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
2528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       weibull_distribution<_RealType>& __x)
2529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 525


2530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using param_type = typename weibull_distribution<_RealType>::param_type;
2531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
2532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
2534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
2535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _RealType __a, __b;
2537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__is >> __a >> __b)
2538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__x.param(param_type(__a, __b));
2539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
2541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
2542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
2543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
2546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _UniformRandomNumberGenerator>
2547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       typename extreme_value_distribution<_RealType>::result_type
2548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       extreme_value_distribution<_RealType>::
2549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
2550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		 const param_type& __p)
2551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
2552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
2553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __aurng(__urng);
2554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	return __p.a() - __p.b() * std::log(-std::log(result_type(1)
2555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 						      - __aurng()));
2556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
2557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
2559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _ForwardIterator,
2560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _UniformRandomNumberGenerator>
2561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       void
2562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       extreme_value_distribution<_RealType>::
2563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
2565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      const param_type& __p)
2566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
2567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
2569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __aurng(__urng);
2570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__f != __t)
2572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  *__f++ = __p.a() - __p.b() * std::log(-std::log(result_type(1)
2573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 							  - __aurng()));
2574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
2575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
2578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
2579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const extreme_value_distribution<_RealType>& __x)
2580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
2581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
2582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
2584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
2585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const std::streamsize __precision = __os.precision();
2586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __space = __os.widen(' ');
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 526


2587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
2588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__space);
2589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
2590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __x.a() << __space << __x.b();
2592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
2594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
2595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(__precision);
2596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
2597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
2598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
2601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
2602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       extreme_value_distribution<_RealType>& __x)
2603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
2604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using param_type
2605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	= typename extreme_value_distribution<_RealType>::param_type;
2606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
2607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
2609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
2610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _RealType __a, __b;
2612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__is >> __a >> __b)
2613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__x.param(param_type(__a, __b));
2614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
2616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
2617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
2618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType>
2621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     void
2622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     discrete_distribution<_IntType>::param_type::
2623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     _M_initialize()
2624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
2625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (_M_prob.size() < 2)
2626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
2627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_prob.clear();
2628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  return;
2629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
2630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const double __sum = std::accumulate(_M_prob.begin(),
2632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 					   _M_prob.end(), 0.0);
2633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       // Now normalize the probabilites.
2634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __detail::__normalize(_M_prob.begin(), _M_prob.end(), _M_prob.begin(),
2635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __sum);
2636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       // Accumulate partial sums.
2637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_cp.reserve(_M_prob.size());
2638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       std::partial_sum(_M_prob.begin(), _M_prob.end(),
2639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       std::back_inserter(_M_cp));
2640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       // Make sure the last cumulative probability is one.
2641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_cp[_M_cp.size() - 1] = 1.0;
2642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
2643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 527


2644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType>
2645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _Func>
2646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       discrete_distribution<_IntType>::param_type::
2647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       param_type(size_t __nw, double __xmin, double __xmax, _Func __fw)
2648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       : _M_prob(), _M_cp()
2649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
2650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const size_t __n = __nw == 0 ? 1 : __nw;
2651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const double __delta = (__xmax - __xmin) / __n;
2652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_prob.reserve(__n);
2654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	for (size_t __k = 0; __k < __nw; ++__k)
2655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_prob.push_back(__fw(__xmin + __k * __delta + 0.5 * __delta));
2656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_initialize();
2658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
2659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType>
2661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _UniformRandomNumberGenerator>
2662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       typename discrete_distribution<_IntType>::result_type
2663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       discrete_distribution<_IntType>::
2664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
2665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		 const param_type& __param)
2666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
2667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	if (__param._M_cp.empty())
2668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  return result_type(0);
2669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, double>
2671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __aurng(__urng);
2672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const double __p = __aurng();
2674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	auto __pos = std::lower_bound(__param._M_cp.begin(),
2675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 				      __param._M_cp.end(), __p);
2676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	return __pos - __param._M_cp.begin();
2678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
2679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType>
2681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _ForwardIterator,
2682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _UniformRandomNumberGenerator>
2683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       void
2684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       discrete_distribution<_IntType>::
2685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
2687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      const param_type& __param)
2688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
2689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	if (__param._M_cp.empty())
2692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
2693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    while (__f != __t)
2694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      *__f++ = result_type(0);
2695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    return;
2696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
2697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, double>
2699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __aurng(__urng);
2700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 528


2701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__f != __t)
2702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
2703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __p = __aurng();
2704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    auto __pos = std::lower_bound(__param._M_cp.begin(),
2705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 					  __param._M_cp.end(), __p);
2706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    *__f++ = __pos - __param._M_cp.begin();
2708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
2709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
2710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType, typename _CharT, typename _Traits>
2712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
2713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
2714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const discrete_distribution<_IntType>& __x)
2715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
2716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
2717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
2719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
2720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const std::streamsize __precision = __os.precision();
2721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __space = __os.widen(' ');
2722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
2723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__space);
2724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(std::numeric_limits<double>::max_digits10);
2725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       std::vector<double> __prob = __x.probabilities();
2727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __prob.size();
2728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (auto __dit = __prob.begin(); __dit != __prob.end(); ++__dit)
2729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__os << __space << *__dit;
2730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
2732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
2733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(__precision);
2734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
2735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
2736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** namespace __detail
2738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** {
2739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _ValT, typename _CharT, typename _Traits>
2740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     basic_istream<_CharT, _Traits>&
2741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     __extract_params(basic_istream<_CharT, _Traits>& __is,
2742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		     vector<_ValT>& __vals, size_t __n)
2743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
2744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __vals.reserve(__n);
2745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       while (__n--)
2746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
2747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _ValT __val;
2748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  if (__is >> __val)
2749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __vals.push_back(__val);
2750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  else
2751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    break;
2752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
2753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
2754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
2755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** } // namespace __detail
2756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType, typename _CharT, typename _Traits>
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 529


2758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
2759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
2760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       discrete_distribution<_IntType>& __x)
2761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
2762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
2763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
2765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
2766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       size_t __n;
2768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__is >> __n)
2769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
2770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  std::vector<double> __prob_vec;
2771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  if (__detail::__extract_params(__is, __prob_vec, __n))
2772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __x.param({__prob_vec.begin(), __prob_vec.end()});
2773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
2774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
2776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
2777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
2778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
2781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     void
2782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     piecewise_constant_distribution<_RealType>::param_type::
2783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     _M_initialize()
2784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
2785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (_M_int.size() < 2
2786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  || (_M_int.size() == 2
2787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      && _M_int[0] == _RealType(0)
2788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      && _M_int[1] == _RealType(1)))
2789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
2790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_int.clear();
2791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_den.clear();
2792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  return;
2793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
2794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const double __sum = std::accumulate(_M_den.begin(),
2796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 					   _M_den.end(), 0.0);
2797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __detail::__normalize(_M_den.begin(), _M_den.end(), _M_den.begin(),
2799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __sum);
2800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_cp.reserve(_M_den.size());
2802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       std::partial_sum(_M_den.begin(), _M_den.end(),
2803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       std::back_inserter(_M_cp));
2804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       // Make sure the last cumulative probability is one.
2806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_cp[_M_cp.size() - 1] = 1.0;
2807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (size_t __k = 0; __k < _M_den.size(); ++__k)
2809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_den[__k] /= _M_int[__k + 1] - _M_int[__k];
2810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
2811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
2813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _InputIteratorB, typename _InputIteratorW>
2814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       piecewise_constant_distribution<_RealType>::param_type::
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 530


2815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       param_type(_InputIteratorB __bbegin,
2816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		 _InputIteratorB __bend,
2817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		 _InputIteratorW __wbegin)
2818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       : _M_int(), _M_den(), _M_cp()
2819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
2820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	if (__bbegin != __bend)
2821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
2822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    for (;;)
2823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      {
2824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		_M_int.push_back(*__bbegin);
2825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		++__bbegin;
2826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		if (__bbegin == __bend)
2827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  break;
2828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		_M_den.push_back(*__wbegin);
2830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		++__wbegin;
2831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      }
2832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
2833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_initialize();
2835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
2836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
2838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _Func>
2839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       piecewise_constant_distribution<_RealType>::param_type::
2840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       param_type(initializer_list<_RealType> __bl, _Func __fw)
2841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       : _M_int(), _M_den(), _M_cp()
2842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
2843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_int.reserve(__bl.size());
2844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	for (auto __biter = __bl.begin(); __biter != __bl.end(); ++__biter)
2845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_int.push_back(*__biter);
2846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_den.reserve(_M_int.size() - 1);
2848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	for (size_t __k = 0; __k < _M_int.size() - 1; ++__k)
2849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_den.push_back(__fw(0.5 * (_M_int[__k + 1] + _M_int[__k])));
2850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_initialize();
2852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
2853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
2855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _Func>
2856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       piecewise_constant_distribution<_RealType>::param_type::
2857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       param_type(size_t __nw, _RealType __xmin, _RealType __xmax, _Func __fw)
2858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       : _M_int(), _M_den(), _M_cp()
2859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
2860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const size_t __n = __nw == 0 ? 1 : __nw;
2861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const _RealType __delta = (__xmax - __xmin) / __n;
2862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_int.reserve(__n + 1);
2864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	for (size_t __k = 0; __k <= __nw; ++__k)
2865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_int.push_back(__xmin + __k * __delta);
2866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_den.reserve(__n);
2868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	for (size_t __k = 0; __k < __nw; ++__k)
2869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_den.push_back(__fw(_M_int[__k] + 0.5 * __delta));
2870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_initialize();
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 531


2872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
2873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
2875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _UniformRandomNumberGenerator>
2876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       typename piecewise_constant_distribution<_RealType>::result_type
2877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       piecewise_constant_distribution<_RealType>::
2878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
2879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		 const param_type& __param)
2880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
2881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, double>
2882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __aurng(__urng);
2883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const double __p = __aurng();
2885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	if (__param._M_cp.empty())
2886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  return __p;
2887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	auto __pos = std::lower_bound(__param._M_cp.begin(),
2889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 				      __param._M_cp.end(), __p);
2890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const size_t __i = __pos - __param._M_cp.begin();
2891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const double __pref = __i > 0 ? __param._M_cp[__i - 1] : 0.0;
2893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	return __param._M_int[__i] + (__p - __pref) / __param._M_den[__i];
2895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
2896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
2898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _ForwardIterator,
2899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _UniformRandomNumberGenerator>
2900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       void
2901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       piecewise_constant_distribution<_RealType>::
2902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
2904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      const param_type& __param)
2905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
2906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, double>
2908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __aurng(__urng);
2909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	if (__param._M_cp.empty())
2911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
2912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    while (__f != __t)
2913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      *__f++ = __aurng();
2914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    return;
2915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
2916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__f != __t)
2918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
2919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __p = __aurng();
2920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    auto __pos = std::lower_bound(__param._M_cp.begin(),
2922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 					  __param._M_cp.end(), __p);
2923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const size_t __i = __pos - __param._M_cp.begin();
2924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __pref = __i > 0 ? __param._M_cp[__i - 1] : 0.0;
2926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    *__f++ = (__param._M_int[__i]
2928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      + (__p - __pref) / __param._M_den[__i]);
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 532


2929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
2930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
2931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
2934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
2935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const piecewise_constant_distribution<_RealType>& __x)
2936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
2937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
2938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
2940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
2941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const std::streamsize __precision = __os.precision();
2942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __space = __os.widen(' ');
2943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
2944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__space);
2945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
2946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       std::vector<_RealType> __int = __x.intervals();
2948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __int.size() - 1;
2949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (auto __xit = __int.begin(); __xit != __int.end(); ++__xit)
2951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__os << __space << *__xit;
2952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       std::vector<double> __den = __x.densities();
2954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (auto __dit = __den.begin(); __dit != __den.end(); ++__dit)
2955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__os << __space << *__dit;
2956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
2958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
2959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(__precision);
2960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
2961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
2962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
2965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
2966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       piecewise_constant_distribution<_RealType>& __x)
2967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
2968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
2969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
2971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
2972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       size_t __n;
2974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__is >> __n)
2975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
2976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  std::vector<_RealType> __int_vec;
2977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  if (__detail::__extract_params(__is, __int_vec, __n + 1))
2978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    {
2979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      std::vector<double> __den_vec;
2980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      if (__detail::__extract_params(__is, __den_vec, __n))
2981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		{
2982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  __x.param({ __int_vec.begin(), __int_vec.end(),
2983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			      __den_vec.begin() });
2984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		}
2985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    }
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 533


2986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
2987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
2989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
2990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
2991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
2993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
2994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     void
2995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     piecewise_linear_distribution<_RealType>::param_type::
2996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     _M_initialize()
2997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
2998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (_M_int.size() < 2
2999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  || (_M_int.size() == 2
3000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      && _M_int[0] == _RealType(0)
3001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      && _M_int[1] == _RealType(1)
3002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      && _M_den[0] == _M_den[1]))
3003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
3004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_int.clear();
3005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_den.clear();
3006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  return;
3007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
3008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       double __sum = 0.0;
3010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_cp.reserve(_M_int.size() - 1);
3011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_m.reserve(_M_int.size() - 1);
3012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (size_t __k = 0; __k < _M_int.size() - 1; ++__k)
3013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
3014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  const _RealType __delta = _M_int[__k + 1] - _M_int[__k];
3015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __sum += 0.5 * (_M_den[__k + 1] + _M_den[__k]) * __delta;
3016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_cp.push_back(__sum);
3017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_m.push_back((_M_den[__k + 1] - _M_den[__k]) / __delta);
3018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
3019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       //  Now normalize the densities...
3021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __detail::__normalize(_M_den.begin(), _M_den.end(), _M_den.begin(),
3022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __sum);
3023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       //  ... and partial sums... 
3024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __detail::__normalize(_M_cp.begin(), _M_cp.end(), _M_cp.begin(), __sum);
3025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       //  ... and slopes.
3026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __detail::__normalize(_M_m.begin(), _M_m.end(), _M_m.begin(), __sum);
3027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       //  Make sure the last cumulative probablility is one.
3029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_cp[_M_cp.size() - 1] = 1.0;
3030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****      }
3031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
3033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _InputIteratorB, typename _InputIteratorW>
3034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       piecewise_linear_distribution<_RealType>::param_type::
3035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       param_type(_InputIteratorB __bbegin,
3036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		 _InputIteratorB __bend,
3037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		 _InputIteratorW __wbegin)
3038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       : _M_int(), _M_den(), _M_cp(), _M_m()
3039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
3040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	for (; __bbegin != __bend; ++__bbegin, ++__wbegin)
3041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
3042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _M_int.push_back(*__bbegin);
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 534


3043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _M_den.push_back(*__wbegin);
3044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
3045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_initialize();
3047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
3048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
3050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _Func>
3051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       piecewise_linear_distribution<_RealType>::param_type::
3052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       param_type(initializer_list<_RealType> __bl, _Func __fw)
3053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       : _M_int(), _M_den(), _M_cp(), _M_m()
3054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
3055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_int.reserve(__bl.size());
3056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_den.reserve(__bl.size());
3057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	for (auto __biter = __bl.begin(); __biter != __bl.end(); ++__biter)
3058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
3059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _M_int.push_back(*__biter);
3060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _M_den.push_back(__fw(*__biter));
3061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
3062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_initialize();
3064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
3065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
3067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _Func>
3068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       piecewise_linear_distribution<_RealType>::param_type::
3069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       param_type(size_t __nw, _RealType __xmin, _RealType __xmax, _Func __fw)
3070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       : _M_int(), _M_den(), _M_cp(), _M_m()
3071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
3072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const size_t __n = __nw == 0 ? 1 : __nw;
3073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const _RealType __delta = (__xmax - __xmin) / __n;
3074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_int.reserve(__n + 1);
3076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_den.reserve(__n + 1);
3077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	for (size_t __k = 0; __k <= __nw; ++__k)
3078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
3079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _M_int.push_back(__xmin + __k * __delta);
3080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    _M_den.push_back(__fw(_M_int[__k] + __delta));
3081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  }
3082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_initialize();
3084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
3085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
3087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _UniformRandomNumberGenerator>
3088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       typename piecewise_linear_distribution<_RealType>::result_type
3089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       piecewise_linear_distribution<_RealType>::
3090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
3091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		 const param_type& __param)
3092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
3093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, double>
3094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __aurng(__urng);
3095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const double __p = __aurng();
3097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	if (__param._M_cp.empty())
3098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  return __p;
3099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 535


3100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	auto __pos = std::lower_bound(__param._M_cp.begin(),
3101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 				      __param._M_cp.end(), __p);
3102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const size_t __i = __pos - __param._M_cp.begin();
3103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const double __pref = __i > 0 ? __param._M_cp[__i - 1] : 0.0;
3105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const double __a = 0.5 * __param._M_m[__i];
3107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const double __b = __param._M_den[__i];
3108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	const double __cm = __p - __pref;
3109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_RealType __x = __param._M_int[__i];
3111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	if (__a == 0)
3112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __x += __cm / __b;
3113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	else
3114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  {
3115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    const double __d = __b * __b + 4.0 * __a * __cm;
3116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __x += 0.5 * (std::sqrt(__d) - __b) / __a;
3117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****           }
3118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****         return __x;
3120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
3121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType>
3123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     template<typename _ForwardIterator,
3124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	     typename _UniformRandomNumberGenerator>
3125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       void
3126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       piecewise_linear_distribution<_RealType>::
3127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
3128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
3129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		      const param_type& __param)
3130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       {
3131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	// We could duplicate everything from operator()...
3133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	while (__f != __t)
3134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  *__f++ = this->operator()(__urng, __param);
3135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       }
3136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
3138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_ostream<_CharT, _Traits>&
3139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
3140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       const piecewise_linear_distribution<_RealType>& __x)
3141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
3142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;
3143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
3145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __fill = __os.fill();
3146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const std::streamsize __precision = __os.precision();
3147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _CharT __space = __os.widen(' ');
3148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
3149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__space);
3150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
3151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       std::vector<_RealType> __int = __x.intervals();
3153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os << __int.size() - 1;
3154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (auto __xit = __int.begin(); __xit != __int.end(); ++__xit)
3156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__os << __space << *__xit;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 536


3157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       std::vector<double> __den = __x.densities();
3159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (auto __dit = __den.begin(); __dit != __den.end(); ++__dit)
3160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	__os << __space << *__dit;
3161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.flags(__flags);
3163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.fill(__fill);
3164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __os.precision(__precision);
3165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __os;
3166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
3167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
3169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     std::basic_istream<_CharT, _Traits>&
3170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
3171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	       piecewise_linear_distribution<_RealType>& __x)
3172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
3173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;
3174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
3176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
3177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       size_t __n;
3179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__is >> __n)
3180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
3181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  vector<_RealType> __int_vec;
3182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  if (__detail::__extract_params(__is, __int_vec, __n + 1))
3183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    {
3184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      vector<double> __den_vec;
3185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	      if (__detail::__extract_params(__is, __den_vec, __n + 1))
3186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		{
3187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		  __x.param({ __int_vec.begin(), __int_vec.end(),
3188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			      __den_vec.begin() });
3189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		}
3190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    }
3191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
3192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __is.flags(__flags);
3193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __is;
3194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
3195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _IntType>
3198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     seed_seq::seed_seq(std::initializer_list<_IntType> __il)
3199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
3200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (auto __iter = __il.begin(); __iter != __il.end(); ++__iter)
3201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_v.push_back(__detail::__mod<result_type,
3202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       __detail::_Shift<result_type, 32>::__value>(*__iter));
3203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
3204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _InputIterator>
3206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     seed_seq::seed_seq(_InputIterator __begin, _InputIterator __end)
3207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
3208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (_InputIterator __iter = __begin; __iter != __end; ++__iter)
3209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_v.push_back(__detail::__mod<result_type,
3210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       __detail::_Shift<result_type, 32>::__value>(*__iter));
3211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
3212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RandomAccessIterator>
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 537


3214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     void
3215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     seed_seq::generate(_RandomAccessIterator __begin,
3216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       _RandomAccessIterator __end)
3217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
3218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
3219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****         _Type;
3220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__begin == __end)
3222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	return;
3223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       std::fill(__begin, __end, _Type(0x8b8b8b8bu));
3225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const size_t __n = __end - __begin;
3227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const size_t __s = _M_v.size();
3228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const size_t __t = (__n >= 623) ? 11
3229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       : (__n >=  68) ? 7
3230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       : (__n >=  39) ? 5
3231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       : (__n >=   7) ? 3
3232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       : (__n - 1) / 2;
3233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const size_t __p = (__n - __t) / 2;
3234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const size_t __q = __p + __t;
3235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const size_t __m = std::max(size_t(__s + 1), __n);
3236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (size_t __k = 0; __k < __m; ++__k)
3238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
3239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _Type __arg = (__begin[__k % __n]
3240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			 ^ __begin[(__k + __p) % __n]
3241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			 ^ __begin[(__k - 1) % __n]);
3242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _Type __r1 = __arg ^ (__arg >> 27);
3243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __r1 = __detail::__mod<_Type,
3244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    __detail::_Shift<_Type, 32>::__value>(1664525u * __r1);
3245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _Type __r2 = __r1;
3246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  if (__k == 0)
3247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __r2 += __s;
3248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  else if (__k <= __s)
3249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __r2 += __k % __n + _M_v[__k - 1];
3250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  else
3251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    __r2 += __k % __n;
3252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __r2 = __detail::__mod<_Type,
3253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	           __detail::_Shift<_Type, 32>::__value>(__r2);
3254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __begin[(__k + __p) % __n] += __r1;
3255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __begin[(__k + __q) % __n] += __r2;
3256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __begin[__k % __n] = __r2;
3257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
3258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (size_t __k = __m; __k < __m + __n; ++__k)
3260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
3261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _Type __arg = (__begin[__k % __n]
3262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			 + __begin[(__k + __p) % __n]
3263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			 + __begin[(__k - 1) % __n]);
3264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _Type __r3 = __arg ^ (__arg >> 27);
3265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __r3 = __detail::__mod<_Type,
3266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		   __detail::_Shift<_Type, 32>::__value>(1566083941u * __r3);
3267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _Type __r4 = __r3 - __k % __n;
3268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __r4 = __detail::__mod<_Type,
3269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	           __detail::_Shift<_Type, 32>::__value>(__r4);
3270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __begin[(__k + __p) % __n] ^= __r3;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 538


3271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __begin[(__k + __q) % __n] ^= __r4;
3272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __begin[__k % __n] = __r4;
3273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
3274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
3275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****   template<typename _RealType, size_t __bits,
3277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	   typename _UniformRandomNumberGenerator>
3278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     _RealType
3279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     generate_canonical(_UniformRandomNumberGenerator& __urng)
 12201              		.loc 33 3279 5
 12202              		.cfi_startproc
 12203              		@ args = 0, pretend = 0, frame = 48
 12204              		@ frame_needed = 1, uses_anonymous_args = 0
 12205 0000 90B5     		push	{r4, r7, lr}
 12206              		.cfi_def_cfa_offset 12
 12207              		.cfi_offset 4, -12
 12208              		.cfi_offset 7, -8
 12209              		.cfi_offset 14, -4
 12210 0002 8DB0     		sub	sp, sp, #52
 12211              		.cfi_def_cfa_offset 64
 12212 0004 00AF     		add	r7, sp, #0
 12213              		.cfi_def_cfa_register 7
 12214 0006 7860     		str	r0, [r7, #4]
3280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     {
3281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       static_assert(std::is_floating_point<_RealType>::value,
3282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		    "template argument must be a floating point type");
3283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
3284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const size_t __b
 12215              		.loc 33 3284 20
 12216 0008 1823     		movs	r3, #24
 12217 000a FB61     		str	r3, [r7, #28]
3285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	= std::min(static_cast<size_t>(std::numeric_limits<_RealType>::digits),
3286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****                    __bits);
3287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const long double __r = static_cast<long double>(__urng.max())
 12218              		.loc 33 3287 25
 12219 000c 4FF00002 		mov	r2, #0
 12220 0010 2C4B     		ldr	r3, .L507
 12221 0012 C7E90423 		strd	r2, [r7, #16]
3288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    - static_cast<long double>(__urng.min()) + 1.0L;
3289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const size_t __log2r = std::log(__r) / std::log(2.0L);
 12222              		.loc 33 3289 20
 12223 0016 2023     		movs	r3, #32
 12224 0018 FB60     		str	r3, [r7, #12]
3290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const size_t __m = std::max<size_t>(1UL,
 12225              		.loc 33 3290 20
 12226 001a 0123     		movs	r3, #1
 12227 001c BB60     		str	r3, [r7, #8]
3291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 					  (__b + __log2r - 1UL) / __log2r);
3292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _RealType __ret;
3293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _RealType __sum = _RealType(0);
 12228              		.loc 33 3293 17
 12229 001e 4FF00003 		mov	r3, #0
 12230 0022 BB62     		str	r3, [r7, #40]	@ float
3294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _RealType __tmp = _RealType(1);
 12231              		.loc 33 3294 17
 12232 0024 4FF07E53 		mov	r3, #1065353216
 12233 0028 7B62     		str	r3, [r7, #36]	@ float
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 539


 12234              	.LBB81:
3295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (size_t __k = __m; __k != 0; --__k)
 12235              		.loc 33 3295 19
 12236 002a 0123     		movs	r3, #1
 12237 002c 3B62     		str	r3, [r7, #32]
 12238              	.L504:
 12239              		.loc 33 3295 34 discriminator 3
 12240 002e 3B6A     		ldr	r3, [r7, #32]
 12241 0030 002B     		cmp	r3, #0
 12242 0032 21D0     		beq	.L503
3296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
3297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __sum += _RealType(__urng() - __urng.min()) * __tmp;
 12243              		.loc 33 3297 29 discriminator 2
 12244 0034 7868     		ldr	r0, [r7, #4]
 12245 0036 FFF7FEFF 		bl	_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636
 12246 003a 0446     		mov	r4, r0
 12247              		.loc 33 3297 44 discriminator 2
 12248 003c FFF7FEFF 		bl	_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636
 12249 0040 0346     		mov	r3, r0
 12250              		.loc 33 3297 32 discriminator 2
 12251 0042 E31A     		subs	r3, r4, r3
 12252              		.loc 33 3297 13 discriminator 2
 12253 0044 07EE903A 		vmov	s15, r3	@ int
 12254 0048 B8EE677A 		vcvt.f32.u32	s14, s15
 12255              		.loc 33 3297 48 discriminator 2
 12256 004c D7ED097A 		vldr.32	s15, [r7, #36]
 12257 0050 67EE277A 		vmul.f32	s15, s14, s15
 12258              		.loc 33 3297 10 discriminator 2
 12259 0054 97ED0A7A 		vldr.32	s14, [r7, #40]
 12260 0058 77EE277A 		vadd.f32	s15, s14, s15
 12261 005c C7ED0A7A 		vstr.32	s15, [r7, #40]
3298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __tmp *= __r;
 12262              		.loc 33 3298 10 discriminator 2
 12263 0060 D7ED097A 		vldr.32	s15, [r7, #36]
 12264 0064 9FED187A 		vldr.32	s14, .L507+4
 12265 0068 67EE877A 		vmul.f32	s15, s15, s14
 12266 006c C7ED097A 		vstr.32	s15, [r7, #36]
3295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       for (size_t __k = __m; __k != 0; --__k)
 12267              		.loc 33 3295 7 discriminator 2
 12268 0070 3B6A     		ldr	r3, [r7, #32]
 12269 0072 013B     		subs	r3, r3, #1
 12270 0074 3B62     		str	r3, [r7, #32]
 12271 0076 DAE7     		b	.L504
 12272              	.L503:
 12273              	.LBE81:
3299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
3300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __ret = __sum / __tmp;
 12274              		.loc 33 3300 13
 12275 0078 D7ED0A6A 		vldr.32	s13, [r7, #40]
 12276 007c 97ED097A 		vldr.32	s14, [r7, #36]
 12277 0080 C6EE877A 		vdiv.f32	s15, s13, s14
 12278 0084 C7ED0B7A 		vstr.32	s15, [r7, #44]
3301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       if (__builtin_expect(__ret >= _RealType(1), 0))
 12279              		.loc 33 3301 34
 12280 0088 D7ED0B7A 		vldr.32	s15, [r7, #44]
 12281 008c B7EE007A 		vmov.f32	s14, #1.0e+0
 12282 0090 F4EEC77A 		vcmpe.f32	s15, s14
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 540


 12283 0094 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12284 0098 ACBF     		ite	ge
 12285 009a 0123     		movge	r3, #1
 12286 009c 0023     		movlt	r3, #0
 12287 009e DBB2     		uxtb	r3, r3
 12288              		.loc 33 3301 7
 12289 00a0 002B     		cmp	r3, #0
 12290 00a2 07D0     		beq	.L505
3302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
3303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** #if _GLIBCXX_USE_C99_MATH_TR1
3304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __ret = std::nextafter(_RealType(1), _RealType(0));
 12291              		.loc 33 3304 26
 12292 00a4 DFED090A 		vldr.32	s1, .L507+8
 12293 00a8 B7EE000A 		vmov.f32	s0, #1.0e+0
 12294 00ac FFF7FEFF 		bl	_ZSt9nextafterff
 12295 00b0 87ED0B0A 		vstr.32	s0, [r7, #44]
 12296              	.L505:
3305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** #else
3306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  __ret = _RealType(1)
3307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	    - std::numeric_limits<_RealType>::epsilon() / _RealType(2);
3308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** #endif
3309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
3310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       return __ret;
 12297              		.loc 33 3310 14
 12298 00b4 FB6A     		ldr	r3, [r7, #44]	@ float
 12299 00b6 07EE903A 		vmov	s15, r3
3311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 12300              		.loc 33 3311 5
 12301 00ba B0EE670A 		vmov.f32	s0, s15
 12302 00be 3437     		adds	r7, r7, #52
 12303              		.cfi_def_cfa_offset 12
 12304 00c0 BD46     		mov	sp, r7
 12305              		.cfi_def_cfa_register 13
 12306              		@ sp needed
 12307 00c2 90BD     		pop	{r4, r7, pc}
 12308              	.L508:
 12309              		.align	2
 12310              	.L507:
 12311 00c4 0000F041 		.word	1106247680
 12312 00c8 0000804F 		.word	1333788672
 12313 00cc 00000000 		.word	0
 12314              		.cfi_endproc
 12315              	.LFE5754:
 12317              		.section	.text._ZN9__gnu_cxx13new_allocatorIdE9constructIdJRKdEEEvPT_DpOT0_,"axG",%progbits,_ZN9__
 12318              		.align	1
 12319              		.weak	_ZN9__gnu_cxx13new_allocatorIdE9constructIdJRKdEEEvPT_DpOT0_
 12320              		.syntax unified
 12321              		.thumb
 12322              		.thumb_func
 12323              		.fpu fpv5-d16
 12325              	_ZN9__gnu_cxx13new_allocatorIdE9constructIdJRKdEEEvPT_DpOT0_:
 12326              	.LFB5787:
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       size_type
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return _M_max_size(); }
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 541


 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up, typename... _Args>
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	void
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	construct(_Up* __p, _Args&&... __args)
 12327              		.loc 30 148 2
 12328              		.cfi_startproc
 12329              		@ args = 0, pretend = 0, frame = 16
 12330              		@ frame_needed = 1, uses_anonymous_args = 0
 12331 0000 B0B5     		push	{r4, r5, r7, lr}
 12332              		.cfi_def_cfa_offset 16
 12333              		.cfi_offset 4, -16
 12334              		.cfi_offset 5, -12
 12335              		.cfi_offset 7, -8
 12336              		.cfi_offset 14, -4
 12337 0002 84B0     		sub	sp, sp, #16
 12338              		.cfi_def_cfa_offset 32
 12339 0004 00AF     		add	r7, sp, #0
 12340              		.cfi_def_cfa_register 7
 12341 0006 F860     		str	r0, [r7, #12]
 12342 0008 B960     		str	r1, [r7, #8]
 12343 000a 7A60     		str	r2, [r7, #4]
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 12344              		.loc 30 150 46
 12345 000c 7868     		ldr	r0, [r7, #4]
 12346 000e FFF7FEFF 		bl	_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE
 12347 0012 0346     		mov	r3, r0
 12348              		.loc 30 150 4
 12349 0014 D3E90045 		ldrd	r4, [r3]
 12350              		.loc 30 150 10
 12351 0018 BB68     		ldr	r3, [r7, #8]
 12352              		.loc 30 150 4
 12353 001a 1946     		mov	r1, r3
 12354 001c 0820     		movs	r0, #8
 12355 001e FFF7FEFF 		bl	_ZnwjPv
 12356 0022 0346     		mov	r3, r0
 12357 0024 C3E90045 		strd	r4, [r3]
 12358              		.loc 30 150 60
 12359 0028 00BF     		nop
 12360 002a 1037     		adds	r7, r7, #16
 12361              		.cfi_def_cfa_offset 16
 12362 002c BD46     		mov	sp, r7
 12363              		.cfi_def_cfa_register 13
 12364              		@ sp needed
 12365 002e B0BD     		pop	{r4, r5, r7, pc}
 12366              		.cfi_endproc
 12367              	.LFE5787:
 12369              		.section	.text._ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_,"axG",%progbits,_ZN9__gnu_cxx13new_
 12370              		.align	1
 12371              		.weak	_ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_
 12372              		.syntax unified
 12373              		.thumb
 12374              		.thumb_func
 12375              		.fpu fpv5-d16
 12377              	_ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_:
 12378              	.LFB5788:
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 542


 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	void
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	destroy(_Up* __p)
 12379              		.loc 30 154 2
 12380              		.cfi_startproc
 12381              		@ args = 0, pretend = 0, frame = 8
 12382              		@ frame_needed = 1, uses_anonymous_args = 0
 12383              		@ link register save eliminated.
 12384 0000 80B4     		push	{r7}
 12385              		.cfi_def_cfa_offset 4
 12386              		.cfi_offset 7, -4
 12387 0002 83B0     		sub	sp, sp, #12
 12388              		.cfi_def_cfa_offset 16
 12389 0004 00AF     		add	r7, sp, #0
 12390              		.cfi_def_cfa_register 7
 12391 0006 7860     		str	r0, [r7, #4]
 12392 0008 3960     		str	r1, [r7]
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_destructible<_Up>::value)
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ __p->~_Up(); }
 12393              		.loc 30 156 17
 12394 000a 00BF     		nop
 12395 000c 0C37     		adds	r7, r7, #12
 12396              		.cfi_def_cfa_offset 4
 12397 000e BD46     		mov	sp, r7
 12398              		.cfi_def_cfa_register 13
 12399              		@ sp needed
 12400 0010 5DF8047B 		ldr	r7, [sp], #4
 12401              		.cfi_restore 7
 12402              		.cfi_def_cfa_offset 0
 12403 0014 7047     		bx	lr
 12404              		.cfi_endproc
 12405              	.LFE5788:
 12407              		.section	.text._ZSt4moveIRPdEONSt16remove_referenceIT_E4typeEOS3_,"axG",%progbits,_ZSt4moveIRPdEON
 12408              		.align	1
 12409              		.weak	_ZSt4moveIRPdEONSt16remove_referenceIT_E4typeEOS3_
 12410              		.syntax unified
 12411              		.thumb
 12412              		.thumb_func
 12413              		.fpu fpv5-d16
 12415              	_ZSt4moveIRPdEONSt16remove_referenceIT_E4typeEOS3_:
 12416              	.LFB5789:
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Forward an rvalue.
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to the specified type.
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  This function is used to implement "perfect forwarding".
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr _Tp&&
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     {
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 		    " substituting _Tp is an lvalue reference type");
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       return static_cast<_Tp&&>(__t);
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     }
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 543


  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Convert a value to an rvalue.
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __t  A thing of arbitrary type.
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to an rvalue-reference to allow moving it.
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   */
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr typename std::remove_reference<_Tp>::type&&
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     move(_Tp&& __t) noexcept
 12417              		.loc 37 101 5
 12418              		.cfi_startproc
 12419              		@ args = 0, pretend = 0, frame = 8
 12420              		@ frame_needed = 1, uses_anonymous_args = 0
 12421              		@ link register save eliminated.
 12422 0000 80B4     		push	{r7}
 12423              		.cfi_def_cfa_offset 4
 12424              		.cfi_offset 7, -4
 12425 0002 83B0     		sub	sp, sp, #12
 12426              		.cfi_def_cfa_offset 16
 12427 0004 00AF     		add	r7, sp, #0
 12428              		.cfi_def_cfa_register 7
 12429 0006 7860     		str	r0, [r7, #4]
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 12430              		.loc 37 102 74
 12431 0008 7B68     		ldr	r3, [r7, #4]
 12432              		.loc 37 102 77
 12433 000a 1846     		mov	r0, r3
 12434 000c 0C37     		adds	r7, r7, #12
 12435              		.cfi_def_cfa_offset 4
 12436 000e BD46     		mov	sp, r7
 12437              		.cfi_def_cfa_register 13
 12438              		@ sp needed
 12439 0010 5DF8047B 		ldr	r7, [sp], #4
 12440              		.cfi_restore 7
 12441              		.cfi_def_cfa_offset 0
 12442 0014 7047     		bx	lr
 12443              		.cfi_endproc
 12444              	.LFE5789:
 12446              		.section	.text._ZNSt13move_iteratorIPdEC2ES0_,"axG",%progbits,_ZNSt13move_iteratorIPdEC5ES0_,comda
 12447              		.align	1
 12448              		.weak	_ZNSt13move_iteratorIPdEC2ES0_
 12449              		.syntax unified
 12450              		.thumb
 12451              		.thumb_func
 12452              		.fpu fpv5-d16
 12454              	_ZNSt13move_iteratorIPdEC2ES0_:
 12455              	.LFB5791:
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(std::move(__i)) { }
 12456              		.loc 35 1326 7
 12457              		.cfi_startproc
 12458              		@ args = 0, pretend = 0, frame = 8
 12459              		@ frame_needed = 1, uses_anonymous_args = 0
 12460 0000 80B5     		push	{r7, lr}
 12461              		.cfi_def_cfa_offset 8
 12462              		.cfi_offset 7, -8
 12463              		.cfi_offset 14, -4
 12464 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 544


 12465              		.cfi_def_cfa_offset 16
 12466 0004 00AF     		add	r7, sp, #0
 12467              		.cfi_def_cfa_register 7
 12468 0006 7860     		str	r0, [r7, #4]
 12469 0008 3960     		str	r1, [r7]
 12470              	.LBB82:
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 12471              		.loc 35 1327 29
 12472 000a 3B46     		mov	r3, r7
 12473 000c 1846     		mov	r0, r3
 12474 000e FFF7FEFF 		bl	_ZSt4moveIRPdEONSt16remove_referenceIT_E4typeEOS3_
 12475 0012 0346     		mov	r3, r0
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 12476              		.loc 35 1327 34
 12477 0014 1A68     		ldr	r2, [r3]
 12478 0016 7B68     		ldr	r3, [r7, #4]
 12479 0018 1A60     		str	r2, [r3]
 12480              	.LBE82:
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 12481              		.loc 35 1327 38
 12482 001a 7B68     		ldr	r3, [r7, #4]
 12483 001c 1846     		mov	r0, r3
 12484 001e 0837     		adds	r7, r7, #8
 12485              		.cfi_def_cfa_offset 8
 12486 0020 BD46     		mov	sp, r7
 12487              		.cfi_def_cfa_register 13
 12488              		@ sp needed
 12489 0022 80BD     		pop	{r7, pc}
 12490              		.cfi_endproc
 12491              	.LFE5791:
 12493              		.weak	_ZNSt13move_iteratorIPdEC1ES0_
 12494              		.thumb_set _ZNSt13move_iteratorIPdEC1ES0_,_ZNSt13move_iteratorIPdEC2ES0_
 12495              		.section	.text._ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_,"axG",%progbits,_ZSt1
 12496              		.align	1
 12497              		.weak	_ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_
 12498              		.syntax unified
 12499              		.thumb
 12500              		.thumb_func
 12501              		.fpu fpv5-d16
 12503              	_ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_:
 12504              	.LFB5793:
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 12505              		.loc 36 125 5
 12506              		.cfi_startproc
 12507              		@ args = 0, pretend = 0, frame = 24
 12508              		@ frame_needed = 1, uses_anonymous_args = 0
 12509 0000 80B5     		push	{r7, lr}
 12510              		.cfi_def_cfa_offset 8
 12511              		.cfi_offset 7, -8
 12512              		.cfi_offset 14, -4
 12513 0002 86B0     		sub	sp, sp, #24
 12514              		.cfi_def_cfa_offset 32
 12515 0004 00AF     		add	r7, sp, #0
 12516              		.cfi_def_cfa_register 7
 12517 0006 F860     		str	r0, [r7, #12]
 12518 0008 B960     		str	r1, [r7, #8]
 12519 000a 7A60     		str	r2, [r7, #4]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 545


 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 12520              		.loc 36 144 18
 12521 000c 0123     		movs	r3, #1
 12522 000e FB75     		strb	r3, [r7, #23]
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 12523              		.loc 36 150 15
 12524 0010 7A68     		ldr	r2, [r7, #4]
 12525 0012 B968     		ldr	r1, [r7, #8]
 12526 0014 F868     		ldr	r0, [r7, #12]
 12527 0016 FFF7FEFF 		bl	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_
 12528 001a 0346     		mov	r3, r0
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 12529              		.loc 36 151 5
 12530 001c 1846     		mov	r0, r3
 12531 001e 1837     		adds	r7, r7, #24
 12532              		.cfi_def_cfa_offset 8
 12533 0020 BD46     		mov	sp, r7
 12534              		.cfi_def_cfa_register 13
 12535              		@ sp needed
 12536 0022 80BD     		pop	{r7, pc}
 12537              		.cfi_endproc
 12538              	.LFE5793:
 12540              		.section	.text._ZSt12__niter_baseIPdET_S1_,"axG",%progbits,_ZSt12__niter_baseIPdET_S1_,comdat
 12541              		.align	1
 12542              		.weak	_ZSt12__niter_baseIPdET_S1_
 12543              		.syntax unified
 12544              		.thumb
 12545              		.thumb_func
 12546              		.fpu fpv5-d16
 12548              	_ZSt12__niter_baseIPdET_S1_:
 12549              	.LFB5795:
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 12550              		.loc 4 313 5
 12551              		.cfi_startproc
 12552              		@ args = 0, pretend = 0, frame = 8
 12553              		@ frame_needed = 1, uses_anonymous_args = 0
 12554              		@ link register save eliminated.
 12555 0000 80B4     		push	{r7}
 12556              		.cfi_def_cfa_offset 4
 12557              		.cfi_offset 7, -4
 12558 0002 83B0     		sub	sp, sp, #12
 12559              		.cfi_def_cfa_offset 16
 12560 0004 00AF     		add	r7, sp, #0
 12561              		.cfi_def_cfa_register 7
 12562 0006 7860     		str	r0, [r7, #4]
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 12563              		.loc 4 315 14
 12564 0008 7B68     		ldr	r3, [r7, #4]
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 12565              		.loc 4 315 20
 12566 000a 1846     		mov	r0, r3
 12567 000c 0C37     		adds	r7, r7, #12
 12568              		.cfi_def_cfa_offset 4
 12569 000e BD46     		mov	sp, r7
 12570              		.cfi_def_cfa_register 13
 12571              		@ sp needed
 12572 0010 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 546


 12573              		.cfi_restore 7
 12574              		.cfi_def_cfa_offset 0
 12575 0014 7047     		bx	lr
 12576              		.cfi_endproc
 12577              	.LFE5795:
 12579              		.section	.text._ZSt23__copy_move_backward_a1ILb1EPdS0_ET1_T0_S2_S1_,"axG",%progbits,_ZSt23__copy_m
 12580              		.align	1
 12581              		.weak	_ZSt23__copy_move_backward_a1ILb1EPdS0_ET1_T0_S2_S1_
 12582              		.syntax unified
 12583              		.thumb
 12584              		.thumb_func
 12585              		.fpu fpv5-d16
 12587              	_ZSt23__copy_move_backward_a1ILb1EPdS0_ET1_T0_S2_S1_:
 12588              	.LFB5796:
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
 12589              		.loc 4 717 5
 12590              		.cfi_startproc
 12591              		@ args = 0, pretend = 0, frame = 16
 12592              		@ frame_needed = 1, uses_anonymous_args = 0
 12593 0000 80B5     		push	{r7, lr}
 12594              		.cfi_def_cfa_offset 8
 12595              		.cfi_offset 7, -8
 12596              		.cfi_offset 14, -4
 12597 0002 84B0     		sub	sp, sp, #16
 12598              		.cfi_def_cfa_offset 24
 12599 0004 00AF     		add	r7, sp, #0
 12600              		.cfi_def_cfa_register 7
 12601 0006 F860     		str	r0, [r7, #12]
 12602 0008 B960     		str	r1, [r7, #8]
 12603 000a 7A60     		str	r2, [r7, #4]
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 12604              		.loc 4 718 51
 12605 000c 7A68     		ldr	r2, [r7, #4]
 12606 000e B968     		ldr	r1, [r7, #8]
 12607 0010 F868     		ldr	r0, [r7, #12]
 12608 0012 FFF7FEFF 		bl	_ZSt23__copy_move_backward_a2ILb1EPdS0_ET1_T0_S2_S1_
 12609 0016 0346     		mov	r3, r0
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 12610              		.loc 4 718 80
 12611 0018 1846     		mov	r0, r3
 12612 001a 1037     		adds	r7, r7, #16
 12613              		.cfi_def_cfa_offset 8
 12614 001c BD46     		mov	sp, r7
 12615              		.cfi_def_cfa_register 13
 12616              		@ sp needed
 12617 001e 80BD     		pop	{r7, pc}
 12618              		.cfi_endproc
 12619              	.LFE5796:
 12621              		.section	.text._ZSt12__niter_wrapIPdET_RKS1_S1_,"axG",%progbits,_ZSt12__niter_wrapIPdET_RKS1_S1_,c
 12622              		.align	1
 12623              		.weak	_ZSt12__niter_wrapIPdET_RKS1_S1_
 12624              		.syntax unified
 12625              		.thumb
 12626              		.thumb_func
 12627              		.fpu fpv5-d16
 12629              	_ZSt12__niter_wrapIPdET_RKS1_S1_:
 12630              	.LFB5797:
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 547


 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __res; }
 12631              		.loc 4 330 5
 12632              		.cfi_startproc
 12633              		@ args = 0, pretend = 0, frame = 8
 12634              		@ frame_needed = 1, uses_anonymous_args = 0
 12635              		@ link register save eliminated.
 12636 0000 80B4     		push	{r7}
 12637              		.cfi_def_cfa_offset 4
 12638              		.cfi_offset 7, -4
 12639 0002 83B0     		sub	sp, sp, #12
 12640              		.cfi_def_cfa_offset 16
 12641 0004 00AF     		add	r7, sp, #0
 12642              		.cfi_def_cfa_register 7
 12643 0006 7860     		str	r0, [r7, #4]
 12644 0008 3960     		str	r1, [r7]
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 12645              		.loc 4 331 14
 12646 000a 3B68     		ldr	r3, [r7]
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 12647              		.loc 4 331 21
 12648 000c 1846     		mov	r0, r3
 12649 000e 0C37     		adds	r7, r7, #12
 12650              		.cfi_def_cfa_offset 4
 12651 0010 BD46     		mov	sp, r7
 12652              		.cfi_def_cfa_register 13
 12653              		@ sp needed
 12654 0012 5DF8047B 		ldr	r7, [sp], #4
 12655              		.cfi_restore 7
 12656              		.cfi_def_cfa_offset 0
 12657 0016 7047     		bx	lr
 12658              		.cfi_endproc
 12659              	.LFE5797:
 12661              		.section	.text._ZSt9__fill_a1IPddEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__ty
 12662              		.align	1
 12663              		.weak	_ZSt9__fill_a1IPddEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_R
 12664              		.syntax unified
 12665              		.thumb
 12666              		.thumb_func
 12667              		.fpu fpv5-d16
 12669              	_ZSt9__fill_a1IPddEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_:
 12670              	.LFB5798:
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      const _Tp& __value)
 12671              		.loc 4 868 5
 12672              		.cfi_startproc
 12673              		@ args = 0, pretend = 0, frame = 24
 12674              		@ frame_needed = 1, uses_anonymous_args = 0
 12675              		@ link register save eliminated.
 12676 0000 80B4     		push	{r7}
 12677              		.cfi_def_cfa_offset 4
 12678              		.cfi_offset 7, -4
 12679 0002 87B0     		sub	sp, sp, #28
 12680              		.cfi_def_cfa_offset 32
 12681 0004 00AF     		add	r7, sp, #0
 12682              		.cfi_def_cfa_register 7
 12683 0006 F860     		str	r0, [r7, #12]
 12684 0008 B960     		str	r1, [r7, #8]
 12685 000a 7A60     		str	r2, [r7, #4]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 548


 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __first != __last; ++__first)
 12686              		.loc 4 871 17
 12687 000c 7B68     		ldr	r3, [r7, #4]
 12688 000e D3E90023 		ldrd	r2, [r3]
 12689 0012 C7E90423 		strd	r2, [r7, #16]
 12690              	.L525:
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	*__first = __tmp;
 12691              		.loc 4 872 22 discriminator 2
 12692 0016 FA68     		ldr	r2, [r7, #12]
 12693 0018 BB68     		ldr	r3, [r7, #8]
 12694 001a 9A42     		cmp	r2, r3
 12695 001c 08D0     		beq	.L526
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 12696              		.loc 4 873 11 discriminator 1
 12697 001e F968     		ldr	r1, [r7, #12]
 12698 0020 D7E90423 		ldrd	r2, [r7, #16]
 12699 0024 C1E90023 		strd	r2, [r1]
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	*__first = __tmp;
 12700              		.loc 4 872 7 discriminator 1
 12701 0028 FB68     		ldr	r3, [r7, #12]
 12702 002a 0833     		adds	r3, r3, #8
 12703 002c FB60     		str	r3, [r7, #12]
 12704 002e F2E7     		b	.L525
 12705              	.L526:
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 12706              		.loc 4 874 5
 12707 0030 00BF     		nop
 12708 0032 1C37     		adds	r7, r7, #28
 12709              		.cfi_def_cfa_offset 4
 12710 0034 BD46     		mov	sp, r7
 12711              		.cfi_def_cfa_register 13
 12712              		@ sp needed
 12713 0036 5DF8047B 		ldr	r7, [sp], #4
 12714              		.cfi_restore 7
 12715              		.cfi_def_cfa_offset 0
 12716 003a 7047     		bx	lr
 12717              		.cfi_endproc
 12718              	.LFE5798:
 12720              		.section	.text._ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPdjdEET_S3_T0_RKT1_,"axG",%pro
 12721              		.align	1
 12722              		.weak	_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPdjdEET_S3_T0_RKT1_
 12723              		.syntax unified
 12724              		.thumb
 12725              		.thumb_func
 12726              		.fpu fpv5-d16
 12728              	_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPdjdEET_S3_T0_RKT1_:
 12729              	.LFB5799:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 12730              		.loc 36 252 9
 12731              		.cfi_startproc
 12732              		@ args = 0, pretend = 0, frame = 16
 12733              		@ frame_needed = 1, uses_anonymous_args = 0
 12734 0000 80B5     		push	{r7, lr}
 12735              		.cfi_def_cfa_offset 8
 12736              		.cfi_offset 7, -8
 12737              		.cfi_offset 14, -4
 12738 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 549


 12739              		.cfi_def_cfa_offset 24
 12740 0004 00AF     		add	r7, sp, #0
 12741              		.cfi_def_cfa_register 7
 12742 0006 F860     		str	r0, [r7, #12]
 12743 0008 B960     		str	r1, [r7, #8]
 12744 000a 7A60     		str	r2, [r7, #4]
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 12745              		.loc 36 254 29
 12746 000c 7A68     		ldr	r2, [r7, #4]
 12747 000e B968     		ldr	r1, [r7, #8]
 12748 0010 F868     		ldr	r0, [r7, #12]
 12749 0012 FFF7FEFF 		bl	_ZSt6fill_nIPdjdET_S1_T0_RKT1_
 12750 0016 0346     		mov	r3, r0
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 12751              		.loc 36 254 50
 12752 0018 1846     		mov	r0, r3
 12753 001a 1037     		adds	r7, r7, #16
 12754              		.cfi_def_cfa_offset 8
 12755 001c BD46     		mov	sp, r7
 12756              		.cfi_def_cfa_register 13
 12757              		@ sp needed
 12758 001e 80BD     		pop	{r7, pc}
 12759              		.cfi_endproc
 12760              	.LFE5799:
 12762              		.section	.text._ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_,"axG",%progbits,_ZNSt6vectorIdSaIdEE11_S_ma
 12763              		.align	1
 12764              		.weak	_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_
 12765              		.syntax unified
 12766              		.thumb
 12767              		.thumb_func
 12768              		.fpu fpv5-d16
 12770              	_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_:
 12771              	.LFB5800:
1776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 12772              		.loc 23 1776 7
 12773              		.cfi_startproc
 12774              		@ args = 0, pretend = 0, frame = 16
 12775              		@ frame_needed = 1, uses_anonymous_args = 0
 12776 0000 80B5     		push	{r7, lr}
 12777              		.cfi_def_cfa_offset 8
 12778              		.cfi_offset 7, -8
 12779              		.cfi_offset 14, -4
 12780 0002 84B0     		sub	sp, sp, #16
 12781              		.cfi_def_cfa_offset 24
 12782 0004 00AF     		add	r7, sp, #0
 12783              		.cfi_def_cfa_register 7
 12784 0006 7860     		str	r0, [r7, #4]
1781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
 12785              		.loc 23 1781 15
 12786 0008 6FF07043 		mvn	r3, #-268435456
 12787 000c FB60     		str	r3, [r7, #12]
1783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (std::min)(__diffmax, __allocmax);
 12788              		.loc 23 1783 51
 12789 000e 7868     		ldr	r0, [r7, #4]
 12790 0010 FFF7FEFF 		bl	_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_
 12791 0014 0346     		mov	r3, r0
1783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (std::min)(__diffmax, __allocmax);
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 550


 12792              		.loc 23 1783 15
 12793 0016 BB60     		str	r3, [r7, #8]
1784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 12794              		.loc 23 1784 41
 12795 0018 07F10802 		add	r2, r7, #8
 12796 001c 07F10C03 		add	r3, r7, #12
 12797 0020 1146     		mov	r1, r2
 12798 0022 1846     		mov	r0, r3
 12799 0024 FFF7FEFF 		bl	_ZSt3minIjERKT_S2_S2_
 12800 0028 0346     		mov	r3, r0
 12801 002a 1B68     		ldr	r3, [r3]
1785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 12802              		.loc 23 1785 7
 12803 002c 1846     		mov	r0, r3
 12804 002e 1037     		adds	r7, r7, #16
 12805              		.cfi_def_cfa_offset 8
 12806 0030 BD46     		mov	sp, r7
 12807              		.cfi_def_cfa_register 13
 12808              		@ sp needed
 12809 0032 80BD     		pop	{r7, pc}
 12810              		.cfi_endproc
 12811              	.LFE5800:
 12813              		.section	.text._ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv,"axG",%progbits,_ZNKSt12_Vector
 12814              		.align	1
 12815              		.weak	_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
 12816              		.syntax unified
 12817              		.thumb
 12818              		.thumb_func
 12819              		.fpu fpv5-d16
 12821              	_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv:
 12822              	.LFB5801:
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 12823              		.loc 23 280 7
 12824              		.cfi_startproc
 12825              		@ args = 0, pretend = 0, frame = 8
 12826              		@ frame_needed = 1, uses_anonymous_args = 0
 12827              		@ link register save eliminated.
 12828 0000 80B4     		push	{r7}
 12829              		.cfi_def_cfa_offset 4
 12830              		.cfi_offset 7, -4
 12831 0002 83B0     		sub	sp, sp, #12
 12832              		.cfi_def_cfa_offset 16
 12833 0004 00AF     		add	r7, sp, #0
 12834              		.cfi_def_cfa_register 7
 12835 0006 7860     		str	r0, [r7, #4]
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 12836              		.loc 23 281 22
 12837 0008 7B68     		ldr	r3, [r7, #4]
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 12838              		.loc 23 281 31
 12839 000a 1846     		mov	r0, r3
 12840 000c 0C37     		adds	r7, r7, #12
 12841              		.cfi_def_cfa_offset 4
 12842 000e BD46     		mov	sp, r7
 12843              		.cfi_def_cfa_register 13
 12844              		@ sp needed
 12845 0010 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 551


 12846              		.cfi_restore 7
 12847              		.cfi_def_cfa_offset 0
 12848 0014 7047     		bx	lr
 12849              		.cfi_endproc
 12850              	.LFE5801:
 12852              		.section	.text._ZN9__gnu_cxx13new_allocatorIdE8allocateEjPKv,"axG",%progbits,_ZN9__gnu_cxx13new_al
 12853              		.align	1
 12854              		.weak	_ZN9__gnu_cxx13new_allocatorIdE8allocateEjPKv
 12855              		.syntax unified
 12856              		.thumb
 12857              		.thumb_func
 12858              		.fpu fpv5-d16
 12860              	_ZN9__gnu_cxx13new_allocatorIdE8allocateEjPKv:
 12861              	.LFB5802:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 12862              		.loc 30 103 7
 12863              		.cfi_startproc
 12864              		@ args = 0, pretend = 0, frame = 16
 12865              		@ frame_needed = 1, uses_anonymous_args = 0
 12866 0000 80B5     		push	{r7, lr}
 12867              		.cfi_def_cfa_offset 8
 12868              		.cfi_offset 7, -8
 12869              		.cfi_offset 14, -4
 12870 0002 84B0     		sub	sp, sp, #16
 12871              		.cfi_def_cfa_offset 24
 12872 0004 00AF     		add	r7, sp, #0
 12873              		.cfi_def_cfa_register 7
 12874 0006 F860     		str	r0, [r7, #12]
 12875 0008 B960     		str	r1, [r7, #8]
 12876 000a 7A60     		str	r2, [r7, #4]
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 12877              		.loc 30 105 29
 12878 000c F868     		ldr	r0, [r7, #12]
 12879 000e FFF7FEFF 		bl	_ZNK9__gnu_cxx13new_allocatorIdE11_M_max_sizeEv
 12880 0012 0246     		mov	r2, r0
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 12881              		.loc 30 105 10
 12882 0014 BB68     		ldr	r3, [r7, #8]
 12883 0016 9342     		cmp	r3, r2
 12884 0018 8CBF     		ite	hi
 12885 001a 0123     		movhi	r3, #1
 12886 001c 0023     		movls	r3, #0
 12887 001e DBB2     		uxtb	r3, r3
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 12888              		.loc 30 105 2
 12889 0020 002B     		cmp	r3, #0
 12890 0022 01D0     		beq	.L534
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12891              		.loc 30 106 26
 12892 0024 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 12893              	.L534:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 12894              		.loc 30 115 41
 12895 0028 BB68     		ldr	r3, [r7, #8]
 12896 002a DB00     		lsls	r3, r3, #3
 12897 002c 1846     		mov	r0, r3
 12898 002e FFF7FEFF 		bl	_Znwj
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 552


 12899 0032 0346     		mov	r3, r0
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12900              		.loc 30 116 7
 12901 0034 1846     		mov	r0, r3
 12902 0036 1037     		adds	r7, r7, #16
 12903              		.cfi_def_cfa_offset 8
 12904 0038 BD46     		mov	sp, r7
 12905              		.cfi_def_cfa_register 13
 12906              		@ sp needed
 12907 003a 80BD     		pop	{r7, pc}
 12908              		.cfi_endproc
 12909              	.LFE5802:
 12911              		.section	.text._ZSt12__miter_baseISt13_Bit_iteratorET_S1_,"axG",%progbits,_ZSt12__miter_baseISt13_
 12912              		.align	1
 12913              		.weak	_ZSt12__miter_baseISt13_Bit_iteratorET_S1_
 12914              		.syntax unified
 12915              		.thumb
 12916              		.thumb_func
 12917              		.fpu fpv5-d16
 12919              	_ZSt12__miter_baseISt13_Bit_iteratorET_S1_:
 12920              	.LFB5803:
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     { return __it; }
 12921              		.loc 38 544 5
 12922              		.cfi_startproc
 12923              		@ args = 0, pretend = 0, frame = 16
 12924              		@ frame_needed = 1, uses_anonymous_args = 0
 12925              		@ link register save eliminated.
 12926 0000 80B4     		push	{r7}
 12927              		.cfi_def_cfa_offset 4
 12928              		.cfi_offset 7, -4
 12929 0002 85B0     		sub	sp, sp, #20
 12930              		.cfi_def_cfa_offset 24
 12931 0004 00AF     		add	r7, sp, #0
 12932              		.cfi_def_cfa_register 7
 12933 0006 F860     		str	r0, [r7, #12]
 12934 0008 3B1D     		adds	r3, r7, #4
 12935 000a 83E80600 		stm	r3, {r1, r2}
 12936              		.loc 38 545 14
 12937 000e FB68     		ldr	r3, [r7, #12]
 12938 0010 1A46     		mov	r2, r3
 12939 0012 3B1D     		adds	r3, r7, #4
 12940 0014 93E80300 		ldm	r3, {r0, r1}
 12941 0018 82E80300 		stm	r2, {r0, r1}
 12942              		.loc 38 545 20
 12943 001c F868     		ldr	r0, [r7, #12]
 12944 001e 1437     		adds	r7, r7, #20
 12945              		.cfi_def_cfa_offset 4
 12946 0020 BD46     		mov	sp, r7
 12947              		.cfi_def_cfa_register 13
 12948              		@ sp needed
 12949 0022 5DF8047B 		ldr	r7, [sp], #4
 12950              		.cfi_restore 7
 12951              		.cfi_def_cfa_offset 0
 12952 0026 7047     		bx	lr
 12953              		.cfi_endproc
 12954              	.LFE5803:
 12956              		.section	.text._ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,"axG",%progbits,
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 553


 12957              		.align	1
 12958              		.weak	_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
 12959              		.syntax unified
 12960              		.thumb
 12961              		.thumb_func
 12962              		.fpu fpv5-d16
 12964              	_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:
 12965              	.LFB5804:
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 12966              		.loc 4 745 5
 12967              		.cfi_startproc
 12968              		@ args = 20, pretend = 8, frame = 48
 12969              		@ frame_needed = 1, uses_anonymous_args = 0
 12970 0000 82B0     		sub	sp, sp, #8
 12971              		.cfi_def_cfa_offset 8
 12972 0002 90B5     		push	{r4, r7, lr}
 12973              		.cfi_def_cfa_offset 20
 12974              		.cfi_offset 4, -20
 12975              		.cfi_offset 7, -16
 12976              		.cfi_offset 14, -12
 12977 0004 91B0     		sub	sp, sp, #68
 12978              		.cfi_def_cfa_offset 88
 12979 0006 04AF     		add	r7, sp, #16
 12980              		.cfi_def_cfa 7, 72
 12981 0008 F860     		str	r0, [r7, #12]
 12982 000a 381D     		adds	r0, r7, #4
 12983 000c 80E80600 		stm	r0, {r1, r2}
 12984 0010 7B64     		str	r3, [r7, #68]
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		std::__copy_move_backward_a1<_IsMove>
 12985              		.loc 4 747 31
 12986 0012 07F11000 		add	r0, r7, #16
 12987 0016 3B1D     		adds	r3, r7, #4
 12988 0018 93E80600 		ldm	r3, {r1, r2}
 12989 001c FFF7FEFF 		bl	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_
 12990 0020 07F11800 		add	r0, r7, #24
 12991 0024 07F14403 		add	r3, r7, #68
 12992 0028 93E80600 		ldm	r3, {r1, r2}
 12993 002c FFF7FEFF 		bl	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_
 12994 0030 07F12000 		add	r0, r7, #32
 12995 0034 07F14C03 		add	r3, r7, #76
 12996 0038 93E80600 		ldm	r3, {r1, r2}
 12997 003c FFF7FEFF 		bl	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_
 12998 0040 07F12804 		add	r4, r7, #40
 12999 0044 01AA     		add	r2, sp, #4
 13000 0046 07F12003 		add	r3, r7, #32
 13001 004a 93E80300 		ldm	r3, {r0, r1}
 13002 004e 82E80300 		stm	r2, {r0, r1}
 13003 0052 FB69     		ldr	r3, [r7, #28]
 13004 0054 0093     		str	r3, [sp]
 13005 0056 BB69     		ldr	r3, [r7, #24]
 13006 0058 07F11002 		add	r2, r7, #16
 13007 005c 06CA     		ldm	r2, {r1, r2}
 13008 005e 2046     		mov	r0, r4
 13009 0060 FFF7FEFF 		bl	_ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
 13010 0064 F868     		ldr	r0, [r7, #12]
 13011 0066 07F14C01 		add	r1, r7, #76
 13012 006a 07F12803 		add	r3, r7, #40
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 554


 13013 006e 0CCB     		ldm	r3, {r2, r3}
 13014 0070 FFF7FEFF 		bl	_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 13015              		.loc 4 750 34
 13016 0074 00BF     		nop
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 13017              		.loc 4 751 5
 13018 0076 F868     		ldr	r0, [r7, #12]
 13019 0078 3437     		adds	r7, r7, #52
 13020              		.cfi_def_cfa_offset 20
 13021 007a BD46     		mov	sp, r7
 13022              		.cfi_def_cfa_register 13
 13023              		@ sp needed
 13024 007c BDE89040 		pop	{r4, r7, lr}
 13025              		.cfi_restore 14
 13026              		.cfi_restore 7
 13027              		.cfi_restore 4
 13028              		.cfi_def_cfa_offset 8
 13029 0080 02B0     		add	sp, sp, #8
 13030              		.cfi_def_cfa_offset 0
 13031 0082 7047     		bx	lr
 13032              		.cfi_endproc
 13033              	.LFE5804:
 13035              		.section	.text._ZNKSt6vectorIbSaIbEE8max_sizeEv,"axG",%progbits,_ZNKSt6vectorIbSaIbEE8max_sizeEv,c
 13036              		.align	1
 13037              		.weak	_ZNKSt6vectorIbSaIbEE8max_sizeEv
 13038              		.syntax unified
 13039              		.thumb
 13040              		.thumb_func
 13041              		.fpu fpv5-d16
 13043              	_ZNKSt6vectorIbSaIbEE8max_sizeEv:
 13044              	.LFB5806:
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 13045              		.loc 6 888 7
 13046              		.cfi_startproc
 13047              		@ args = 0, pretend = 0, frame = 16
 13048              		@ frame_needed = 1, uses_anonymous_args = 0
 13049 0000 80B5     		push	{r7, lr}
 13050              		.cfi_def_cfa_offset 8
 13051              		.cfi_offset 7, -8
 13052              		.cfi_offset 14, -4
 13053 0002 84B0     		sub	sp, sp, #16
 13054              		.cfi_def_cfa_offset 24
 13055 0004 00AF     		add	r7, sp, #0
 13056              		.cfi_def_cfa_register 7
 13057 0006 7860     		str	r0, [r7, #4]
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __gnu_cxx::__numeric_traits<difference_type>::__max
 13058              		.loc 6 890 18
 13059 0008 0B4B     		ldr	r3, .L544
 13060 000a FB60     		str	r3, [r7, #12]
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return (__asize <= __isize / int(_S_word_bit)
 13061              		.loc 6 894 54
 13062 000c 7B68     		ldr	r3, [r7, #4]
 13063 000e 1846     		mov	r0, r3
 13064 0010 FFF7FEFF 		bl	_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv
 13065 0014 0346     		mov	r3, r0
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return (__asize <= __isize / int(_S_word_bit)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 555


 13066              		.loc 6 894 33
 13067 0016 1846     		mov	r0, r3
 13068 0018 FFF7FEFF 		bl	_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_
 13069 001c B860     		str	r0, [r7, #8]
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 13070              		.loc 6 896 3
 13071 001e BB68     		ldr	r3, [r7, #8]
 13072 0020 B3F1806F 		cmp	r3, #67108864
 13073 0024 02D2     		bcs	.L541
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 13074              		.loc 6 896 3 is_stmt 0 discriminator 1
 13075 0026 BB68     		ldr	r3, [r7, #8]
 13076 0028 5B01     		lsls	r3, r3, #5
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 13077              		.loc 6 896 41 is_stmt 1 discriminator 1
 13078 002a 00E0     		b	.L543
 13079              	.L541:
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 13080              		.loc 6 896 3 discriminator 2
 13081 002c 024B     		ldr	r3, .L544
 13082              	.L543:
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 13083              		.loc 6 897 7 discriminator 5
 13084 002e 1846     		mov	r0, r3
 13085 0030 1037     		adds	r7, r7, #16
 13086              		.cfi_def_cfa_offset 8
 13087 0032 BD46     		mov	sp, r7
 13088              		.cfi_def_cfa_register 13
 13089              		@ sp needed
 13090 0034 80BD     		pop	{r7, pc}
 13091              	.L545:
 13092 0036 00BF     		.align	2
 13093              	.L544:
 13094 0038 E0FFFF7F 		.word	2147483616
 13095              		.cfi_endproc
 13096              	.LFE5806:
 13098              		.section	.text._ZNSt16allocator_traitsISaImEE8allocateERS0_j,"axG",%progbits,_ZNSt16allocator_trai
 13099              		.align	1
 13100              		.weak	_ZNSt16allocator_traitsISaImEE8allocateERS0_j
 13101              		.syntax unified
 13102              		.thumb
 13103              		.thumb_func
 13104              		.fpu fpv5-d16
 13106              	_ZNSt16allocator_traitsISaImEE8allocateERS0_j:
 13107              	.LFB5807:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 13108              		.loc 31 459 7
 13109              		.cfi_startproc
 13110              		@ args = 0, pretend = 0, frame = 8
 13111              		@ frame_needed = 1, uses_anonymous_args = 0
 13112 0000 80B5     		push	{r7, lr}
 13113              		.cfi_def_cfa_offset 8
 13114              		.cfi_offset 7, -8
 13115              		.cfi_offset 14, -4
 13116 0002 82B0     		sub	sp, sp, #8
 13117              		.cfi_def_cfa_offset 16
 13118 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 556


 13119              		.cfi_def_cfa_register 7
 13120 0006 7860     		str	r0, [r7, #4]
 13121 0008 3960     		str	r1, [r7]
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 13122              		.loc 31 460 28
 13123 000a 0022     		movs	r2, #0
 13124 000c 3968     		ldr	r1, [r7]
 13125 000e 7868     		ldr	r0, [r7, #4]
 13126 0010 FFF7FEFF 		bl	_ZN9__gnu_cxx13new_allocatorImE8allocateEjPKv
 13127 0014 0346     		mov	r3, r0
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 13128              		.loc 31 460 35
 13129 0016 1846     		mov	r0, r3
 13130 0018 0837     		adds	r7, r7, #8
 13131              		.cfi_def_cfa_offset 8
 13132 001a BD46     		mov	sp, r7
 13133              		.cfi_def_cfa_register 13
 13134              		@ sp needed
 13135 001c 80BD     		pop	{r7, pc}
 13136              		.cfi_endproc
 13137              	.LFE5807:
 13139              		.section	.text._ZSt4copyIPmS0_ET0_T_S2_S1_,"axG",%progbits,_ZSt4copyIPmS0_ET0_T_S2_S1_,comdat
 13140              		.align	1
 13141              		.weak	_ZSt4copyIPmS0_ET0_T_S2_S1_
 13142              		.syntax unified
 13143              		.thumb
 13144              		.thumb_func
 13145              		.fpu fpv5-d16
 13147              	_ZSt4copyIPmS0_ET0_T_S2_S1_:
 13148              	.LFB5808:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 13149              		.loc 4 560 5
 13150              		.cfi_startproc
 13151              		@ args = 0, pretend = 0, frame = 16
 13152              		@ frame_needed = 1, uses_anonymous_args = 0
 13153 0000 90B5     		push	{r4, r7, lr}
 13154              		.cfi_def_cfa_offset 12
 13155              		.cfi_offset 4, -12
 13156              		.cfi_offset 7, -8
 13157              		.cfi_offset 14, -4
 13158 0002 85B0     		sub	sp, sp, #20
 13159              		.cfi_def_cfa_offset 32
 13160 0004 00AF     		add	r7, sp, #0
 13161              		.cfi_def_cfa_register 7
 13162 0006 F860     		str	r0, [r7, #12]
 13163 0008 B960     		str	r1, [r7, #8]
 13164 000a 7A60     		str	r2, [r7, #4]
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 13165              		.loc 4 569 7
 13166 000c F868     		ldr	r0, [r7, #12]
 13167 000e FFF7FEFF 		bl	_ZSt12__miter_baseIPmET_S1_
 13168 0012 0446     		mov	r4, r0
 13169 0014 B868     		ldr	r0, [r7, #8]
 13170 0016 FFF7FEFF 		bl	_ZSt12__miter_baseIPmET_S1_
 13171 001a 0346     		mov	r3, r0
 13172 001c 7A68     		ldr	r2, [r7, #4]
 13173 001e 1946     		mov	r1, r3
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 557


 13174 0020 2046     		mov	r0, r4
 13175 0022 FFF7FEFF 		bl	_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_
 13176 0026 0346     		mov	r3, r0
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 13177              		.loc 4 570 5
 13178 0028 1846     		mov	r0, r3
 13179 002a 1437     		adds	r7, r7, #20
 13180              		.cfi_def_cfa_offset 12
 13181 002c BD46     		mov	sp, r7
 13182              		.cfi_def_cfa_register 13
 13183              		@ sp needed
 13184 002e 90BD     		pop	{r4, r7, pc}
 13185              		.cfi_endproc
 13186              	.LFE5808:
 13188              		.section	.text._ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_,"axG",%progbits,_ZSt
 13189              		.align	1
 13190              		.weak	_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_
 13191              		.syntax unified
 13192              		.thumb
 13193              		.thumb_func
 13194              		.fpu fpv5-d16
 13196              	_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_:
 13197              	.LFB5809:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 13198              		.loc 4 560 5
 13199              		.cfi_startproc
 13200              		@ args = 20, pretend = 8, frame = 32
 13201              		@ frame_needed = 1, uses_anonymous_args = 0
 13202 0000 82B0     		sub	sp, sp, #8
 13203              		.cfi_def_cfa_offset 8
 13204 0002 90B5     		push	{r4, r7, lr}
 13205              		.cfi_def_cfa_offset 20
 13206              		.cfi_offset 4, -20
 13207              		.cfi_offset 7, -16
 13208              		.cfi_offset 14, -12
 13209 0004 8DB0     		sub	sp, sp, #52
 13210              		.cfi_def_cfa_offset 72
 13211 0006 04AF     		add	r7, sp, #16
 13212              		.cfi_def_cfa 7, 56
 13213 0008 F860     		str	r0, [r7, #12]
 13214 000a 381D     		adds	r0, r7, #4
 13215 000c 80E80600 		stm	r0, {r1, r2}
 13216 0010 7B63     		str	r3, [r7, #52]
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 13217              		.loc 4 569 7
 13218 0012 07F11000 		add	r0, r7, #16
 13219 0016 3B1D     		adds	r3, r7, #4
 13220 0018 93E80600 		ldm	r3, {r1, r2}
 13221 001c FFF7FEFF 		bl	_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_
 13222 0020 07F11800 		add	r0, r7, #24
 13223 0024 07F13403 		add	r3, r7, #52
 13224 0028 93E80600 		ldm	r3, {r1, r2}
 13225 002c FFF7FEFF 		bl	_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_
 13226 0030 FC68     		ldr	r4, [r7, #12]
 13227 0032 01AA     		add	r2, sp, #4
 13228 0034 07F13C03 		add	r3, r7, #60
 13229 0038 93E80300 		ldm	r3, {r0, r1}
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 558


 13230 003c 82E80300 		stm	r2, {r0, r1}
 13231 0040 FB69     		ldr	r3, [r7, #28]
 13232 0042 0093     		str	r3, [sp]
 13233 0044 BB69     		ldr	r3, [r7, #24]
 13234 0046 07F11002 		add	r2, r7, #16
 13235 004a 06CA     		ldm	r2, {r1, r2}
 13236 004c 2046     		mov	r0, r4
 13237 004e FFF7FEFF 		bl	_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 13238              		.loc 4 569 71
 13239 0052 00BF     		nop
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 13240              		.loc 4 570 5
 13241 0054 F868     		ldr	r0, [r7, #12]
 13242 0056 2437     		adds	r7, r7, #36
 13243              		.cfi_def_cfa_offset 20
 13244 0058 BD46     		mov	sp, r7
 13245              		.cfi_def_cfa_register 13
 13246              		@ sp needed
 13247 005a BDE89040 		pop	{r4, r7, lr}
 13248              		.cfi_restore 14
 13249              		.cfi_restore 7
 13250              		.cfi_restore 4
 13251              		.cfi_def_cfa_offset 8
 13252 005e 02B0     		add	sp, sp, #8
 13253              		.cfi_def_cfa_offset 0
 13254 0060 7047     		bx	lr
 13255              		.cfi_endproc
 13256              	.LFE5809:
 13258              		.section	.text._ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,"axG",%progbits,_ZSt13__c
 13259              		.align	1
 13260              		.weak	_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
 13261              		.syntax unified
 13262              		.thumb
 13263              		.thumb_func
 13264              		.fpu fpv5-d16
 13266              	_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:
 13267              	.LFB5810:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 13268              		.loc 4 511 5
 13269              		.cfi_startproc
 13270              		@ args = 20, pretend = 8, frame = 48
 13271              		@ frame_needed = 1, uses_anonymous_args = 0
 13272 0000 82B0     		sub	sp, sp, #8
 13273              		.cfi_def_cfa_offset 8
 13274 0002 90B5     		push	{r4, r7, lr}
 13275              		.cfi_def_cfa_offset 20
 13276              		.cfi_offset 4, -20
 13277              		.cfi_offset 7, -16
 13278              		.cfi_offset 14, -12
 13279 0004 91B0     		sub	sp, sp, #68
 13280              		.cfi_def_cfa_offset 88
 13281 0006 04AF     		add	r7, sp, #16
 13282              		.cfi_def_cfa 7, 72
 13283 0008 F860     		str	r0, [r7, #12]
 13284 000a 381D     		adds	r0, r7, #4
 13285 000c 80E80600 		stm	r0, {r1, r2}
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 559


 13286 0010 7B64     		str	r3, [r7, #68]
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
 13287              		.loc 4 513 31
 13288 0012 07F11000 		add	r0, r7, #16
 13289 0016 3B1D     		adds	r3, r7, #4
 13290 0018 93E80600 		ldm	r3, {r1, r2}
 13291 001c FFF7FEFF 		bl	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_
 13292 0020 07F11800 		add	r0, r7, #24
 13293 0024 07F14403 		add	r3, r7, #68
 13294 0028 93E80600 		ldm	r3, {r1, r2}
 13295 002c FFF7FEFF 		bl	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_
 13296 0030 07F12000 		add	r0, r7, #32
 13297 0034 07F14C03 		add	r3, r7, #76
 13298 0038 93E80600 		ldm	r3, {r1, r2}
 13299 003c FFF7FEFF 		bl	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_
 13300 0040 07F12804 		add	r4, r7, #40
 13301 0044 01AA     		add	r2, sp, #4
 13302 0046 07F12003 		add	r3, r7, #32
 13303 004a 93E80300 		ldm	r3, {r0, r1}
 13304 004e 82E80300 		stm	r2, {r0, r1}
 13305 0052 FB69     		ldr	r3, [r7, #28]
 13306 0054 0093     		str	r3, [sp]
 13307 0056 BB69     		ldr	r3, [r7, #24]
 13308 0058 07F11002 		add	r2, r7, #16
 13309 005c 06CA     		ldm	r2, {r1, r2}
 13310 005e 2046     		mov	r0, r4
 13311 0060 FFF7FEFF 		bl	_ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
 13312 0064 F868     		ldr	r0, [r7, #12]
 13313 0066 07F14C01 		add	r1, r7, #76
 13314 006a 07F12803 		add	r3, r7, #40
 13315 006e 0CCB     		ldm	r3, {r2, r3}
 13316 0070 FFF7FEFF 		bl	_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 13317              		.loc 4 516 39
 13318 0074 00BF     		nop
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 13319              		.loc 4 517 5
 13320 0076 F868     		ldr	r0, [r7, #12]
 13321 0078 3437     		adds	r7, r7, #52
 13322              		.cfi_def_cfa_offset 20
 13323 007a BD46     		mov	sp, r7
 13324              		.cfi_def_cfa_register 13
 13325              		@ sp needed
 13326 007c BDE89040 		pop	{r4, r7, lr}
 13327              		.cfi_restore 14
 13328              		.cfi_restore 7
 13329              		.cfi_restore 4
 13330              		.cfi_def_cfa_offset 8
 13331 0080 02B0     		add	sp, sp, #8
 13332              		.cfi_def_cfa_offset 0
 13333 0082 7047     		bx	lr
 13334              		.cfi_endproc
 13335              	.LFE5810:
 13337              		.section	.text._ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj429496729
 13338              		.align	1
 13339              		.weak	_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2
 13340              		.syntax unified
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 560


 13341              		.thumb
 13342              		.thumb_func
 13343              		.fpu fpv5-d16
 13345              	_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj26369286
 13346              	.LFB5811:
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 13347              		.loc 33 450 5
 13348              		.cfi_startproc
 13349              		@ args = 0, pretend = 0, frame = 16
 13350              		@ frame_needed = 1, uses_anonymous_args = 0
 13351 0000 80B5     		push	{r7, lr}
 13352              		.cfi_def_cfa_offset 8
 13353              		.cfi_offset 7, -8
 13354              		.cfi_offset 14, -4
 13355 0002 84B0     		sub	sp, sp, #16
 13356              		.cfi_def_cfa_offset 24
 13357 0004 00AF     		add	r7, sp, #0
 13358              		.cfi_def_cfa_register 7
 13359 0006 7860     		str	r0, [r7, #4]
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_gen_rand();
 13360              		.loc 33 455 11
 13361 0008 7B68     		ldr	r3, [r7, #4]
 13362 000a D3F8C039 		ldr	r3, [r3, #2496]
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	_M_gen_rand();
 13363              		.loc 33 455 7
 13364 000e B3F51C7F 		cmp	r3, #624
 13365 0012 02D3     		bcc	.L555
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 13366              		.loc 33 456 13
 13367 0014 7868     		ldr	r0, [r7, #4]
 13368 0016 FFF7FEFF 		bl	_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636
 13369              	.L555:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z >> __u) & __d;
 13370              		.loc 33 459 30
 13371 001a 7B68     		ldr	r3, [r7, #4]
 13372 001c D3F8C039 		ldr	r3, [r3, #2496]
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z >> __u) & __d;
 13373              		.loc 33 459 29
 13374 0020 591C     		adds	r1, r3, #1
 13375 0022 7A68     		ldr	r2, [r7, #4]
 13376 0024 C2F8C019 		str	r1, [r2, #2496]
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z >> __u) & __d;
 13377              		.loc 33 459 19
 13378 0028 7A68     		ldr	r2, [r7, #4]
 13379 002a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 13380 002e FB60     		str	r3, [r7, #12]
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z << __s) & __b;
 13381              		.loc 33 460 19
 13382 0030 FB68     		ldr	r3, [r7, #12]
 13383 0032 DB0A     		lsrs	r3, r3, #11
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z << __s) & __b;
 13384              		.loc 33 460 11
 13385 0034 FA68     		ldr	r2, [r7, #12]
 13386 0036 5340     		eors	r3, r3, r2
 13387 0038 FB60     		str	r3, [r7, #12]
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z << __t) & __c;
 13388              		.loc 33 461 19
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 561


 13389 003a FB68     		ldr	r3, [r7, #12]
 13390 003c DA01     		lsls	r2, r3, #7
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z << __t) & __c;
 13391              		.loc 33 461 27
 13392 003e 0B4B     		ldr	r3, .L557
 13393 0040 1340     		ands	r3, r3, r2
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z << __t) & __c;
 13394              		.loc 33 461 11
 13395 0042 FA68     		ldr	r2, [r7, #12]
 13396 0044 5340     		eors	r3, r3, r2
 13397 0046 FB60     		str	r3, [r7, #12]
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z >> __l);
 13398              		.loc 33 462 19
 13399 0048 FB68     		ldr	r3, [r7, #12]
 13400 004a DA03     		lsls	r2, r3, #15
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z >> __l);
 13401              		.loc 33 462 27
 13402 004c 084B     		ldr	r3, .L557+4
 13403 004e 1340     		ands	r3, r3, r2
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       __z ^= (__z >> __l);
 13404              		.loc 33 462 11
 13405 0050 FA68     		ldr	r2, [r7, #12]
 13406 0052 5340     		eors	r3, r3, r2
 13407 0054 FB60     		str	r3, [r7, #12]
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 13408              		.loc 33 463 19
 13409 0056 FB68     		ldr	r3, [r7, #12]
 13410 0058 9B0C     		lsrs	r3, r3, #18
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 13411              		.loc 33 463 11
 13412 005a FA68     		ldr	r2, [r7, #12]
 13413 005c 5340     		eors	r3, r3, r2
 13414 005e FB60     		str	r3, [r7, #12]
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 13415              		.loc 33 465 14
 13416 0060 FB68     		ldr	r3, [r7, #12]
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 13417              		.loc 33 466 5
 13418 0062 1846     		mov	r0, r3
 13419 0064 1037     		adds	r7, r7, #16
 13420              		.cfi_def_cfa_offset 8
 13421 0066 BD46     		mov	sp, r7
 13422              		.cfi_def_cfa_register 13
 13423              		@ sp needed
 13424 0068 80BD     		pop	{r7, pc}
 13425              	.L558:
 13426 006a 00BF     		.align	2
 13427              	.L557:
 13428 006c 80562C9D 		.word	-1658038656
 13429 0070 0000C6EF 		.word	-272236544
 13430              		.cfi_endproc
 13431              	.LFE5811:
 13433              		.section	.text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_
 13434              		.align	1
 13435              		.weak	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_
 13436              		.syntax unified
 13437              		.thumb
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 562


 13438              		.thumb_func
 13439              		.fpu fpv5-d16
 13441              	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_:
 13442              	.LFB5839:
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 13443              		.loc 36 107 9
 13444              		.cfi_startproc
 13445              		@ args = 0, pretend = 0, frame = 16
 13446              		@ frame_needed = 1, uses_anonymous_args = 0
 13447 0000 80B5     		push	{r7, lr}
 13448              		.cfi_def_cfa_offset 8
 13449              		.cfi_offset 7, -8
 13450              		.cfi_offset 14, -4
 13451 0002 84B0     		sub	sp, sp, #16
 13452              		.cfi_def_cfa_offset 24
 13453 0004 00AF     		add	r7, sp, #0
 13454              		.cfi_def_cfa_register 7
 13455 0006 F860     		str	r0, [r7, #12]
 13456 0008 B960     		str	r1, [r7, #8]
 13457 000a 7A60     		str	r2, [r7, #4]
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 13458              		.loc 36 109 27
 13459 000c 7A68     		ldr	r2, [r7, #4]
 13460 000e B968     		ldr	r1, [r7, #8]
 13461 0010 F868     		ldr	r0, [r7, #12]
 13462 0012 FFF7FEFF 		bl	_ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_
 13463 0016 0346     		mov	r3, r0
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 13464              		.loc 36 109 56
 13465 0018 1846     		mov	r0, r3
 13466 001a 1037     		adds	r7, r7, #16
 13467              		.cfi_def_cfa_offset 8
 13468 001c BD46     		mov	sp, r7
 13469              		.cfi_def_cfa_register 13
 13470              		@ sp needed
 13471 001e 80BD     		pop	{r7, pc}
 13472              		.cfi_endproc
 13473              	.LFE5839:
 13475              		.section	.text._ZSt23__copy_move_backward_a2ILb1EPdS0_ET1_T0_S2_S1_,"axG",%progbits,_ZSt23__copy_m
 13476              		.align	1
 13477              		.weak	_ZSt23__copy_move_backward_a2ILb1EPdS0_ET1_T0_S2_S1_
 13478              		.syntax unified
 13479              		.thumb
 13480              		.thumb_func
 13481              		.fpu fpv5-d16
 13483              	_ZSt23__copy_move_backward_a2ILb1EPdS0_ET1_T0_S2_S1_:
 13484              	.LFB5840:
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 13485              		.loc 4 699 5
 13486              		.cfi_startproc
 13487              		@ args = 0, pretend = 0, frame = 16
 13488              		@ frame_needed = 1, uses_anonymous_args = 0
 13489 0000 80B5     		push	{r7, lr}
 13490              		.cfi_def_cfa_offset 8
 13491              		.cfi_offset 7, -8
 13492              		.cfi_offset 14, -4
 13493 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 563


 13494              		.cfi_def_cfa_offset 24
 13495 0004 00AF     		add	r7, sp, #0
 13496              		.cfi_def_cfa_register 7
 13497 0006 F860     		str	r0, [r7, #12]
 13498 0008 B960     		str	r1, [r7, #8]
 13499 000a 7A60     		str	r2, [r7, #4]
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 								 __last,
 13500              		.loc 4 709 37
 13501 000c 7A68     		ldr	r2, [r7, #4]
 13502 000e B968     		ldr	r1, [r7, #8]
 13503 0010 F868     		ldr	r0, [r7, #12]
 13504 0012 FFF7FEFF 		bl	_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIdEEPT_PKS3_S
 13505 0016 0346     		mov	r3, r0
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 13506              		.loc 4 712 5
 13507 0018 1846     		mov	r0, r3
 13508 001a 1037     		adds	r7, r7, #16
 13509              		.cfi_def_cfa_offset 8
 13510 001c BD46     		mov	sp, r7
 13511              		.cfi_def_cfa_register 13
 13512              		@ sp needed
 13513 001e 80BD     		pop	{r7, pc}
 13514              		.cfi_endproc
 13515              	.LFE5840:
 13517              		.section	.text._ZSt6fill_nIPdjdET_S1_T0_RKT1_,"axG",%progbits,_ZSt6fill_nIPdjdET_S1_T0_RKT1_,comda
 13518              		.align	1
 13519              		.weak	_ZSt6fill_nIPdjdET_S1_T0_RKT1_
 13520              		.syntax unified
 13521              		.thumb
 13522              		.thumb_func
 13523              		.fpu fpv5-d16
 13525              	_ZSt6fill_nIPdjdET_S1_T0_RKT1_:
 13526              	.LFB5841:
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR long
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(long __n) { return __n; }
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR unsigned long
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(unsigned long __n) { return __n; }
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR long long
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(long long __n) { return __n; }
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR unsigned long long
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(unsigned long long __n) { return __n; }
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if defined(__GLIBCXX_TYPE_INT_N_0)
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_0
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(__GLIBCXX_TYPE_INT_N_0 __n) { return __n; }
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR unsigned __GLIBCXX_TYPE_INT_N_0
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(unsigned __GLIBCXX_TYPE_INT_N_0 __n) { return __n; }
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if defined(__GLIBCXX_TYPE_INT_N_1)
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_1
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(__GLIBCXX_TYPE_INT_N_1 __n) { return __n; }
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR unsigned __GLIBCXX_TYPE_INT_N_1
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(unsigned __GLIBCXX_TYPE_INT_N_1 __n) { return __n; }
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if defined(__GLIBCXX_TYPE_INT_N_2)
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_2
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(__GLIBCXX_TYPE_INT_N_2 __n) { return __n; }
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 564


 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR unsigned __GLIBCXX_TYPE_INT_N_2
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(unsigned __GLIBCXX_TYPE_INT_N_2 __n) { return __n; }
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if defined(__GLIBCXX_TYPE_INT_N_3)
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR unsigned __GLIBCXX_TYPE_INT_N_3
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(__GLIBCXX_TYPE_INT_N_3 __n) { return __n; }
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_3
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(unsigned __GLIBCXX_TYPE_INT_N_3 __n) { return __n; }
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR long long
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(float __n) { return __n; }
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR long long
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(double __n) { return __n; }
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR long long
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(long double __n) { return __n; }
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if !defined(__STRICT_ANSI__) && defined(_GLIBCXX_USE_FLOAT128)
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR long long
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(__float128 __n) { return __n; }
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline typename
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_n_a1(_OutputIterator __first, _Size __n, const _Tp& __value)
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __n > 0; --__n, (void) ++__first)
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	*__first = __value;
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __first;
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline typename
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_n_a1(_OutputIterator __first, _Size __n, const _Tp& __value)
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       const _Tp __tmp = __value;
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __n > 0; --__n, (void) ++__first)
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	*__first = __tmp;
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __first;
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Ite, typename _Seq, typename _Cat, typename _Size,
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Tp>
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_n_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>& __first,
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	       _Size __n, const _Tp& __value,
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	       std::input_iterator_tag);
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OutputIterator
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	       std::output_iterator_tag)
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 565


1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       static_assert(is_integral<_Size>{}, "fill_n must pass integral size");
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __fill_n_a1(__first, __n, __value);
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OutputIterator
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	       std::input_iterator_tag)
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       static_assert(is_integral<_Size>{}, "fill_n must pass integral size");
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __fill_n_a1(__first, __n, __value);
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OutputIterator
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	       std::random_access_iterator_tag)
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       static_assert(is_integral<_Size>{}, "fill_n must pass integral size");
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__n <= 0)
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __first;
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_can_increment(__first, __n);
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       std::__fill_a(__first, __first + __n, __value);
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __first + __n;
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Fills the range [first,first+n) with copies of value.
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  An output iterator.
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __n      The count of copies to perform.
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The iterator at first+n.
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  to @c memset or @c wmemset.
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  If @p __n is negative, the function does nothing.
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // DR 865. More algorithms that throw away information
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // DR 426. search_n(), fill_n(), and generate_n() with negative n
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _OI, typename _Size, typename _Tp>
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     fill_n(_OI __first, _Size __n, const _Tp& __value)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 566


 13527              		.loc 4 1089 5
 13528              		.cfi_startproc
 13529              		@ args = 0, pretend = 0, frame = 16
 13530              		@ frame_needed = 1, uses_anonymous_args = 0
 13531 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 13532              		.cfi_def_cfa_offset 20
 13533              		.cfi_offset 4, -20
 13534              		.cfi_offset 5, -16
 13535              		.cfi_offset 6, -12
 13536              		.cfi_offset 7, -8
 13537              		.cfi_offset 14, -4
 13538 0002 85B0     		sub	sp, sp, #20
 13539              		.cfi_def_cfa_offset 40
 13540 0004 00AF     		add	r7, sp, #0
 13541              		.cfi_def_cfa_register 7
 13542 0006 F860     		str	r0, [r7, #12]
 13543 0008 B960     		str	r1, [r7, #8]
 13544 000a 7A60     		str	r2, [r7, #4]
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI, _Tp>)
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
 13545              		.loc 4 1094 29
 13546 000c FC68     		ldr	r4, [r7, #12]
 13547 000e B868     		ldr	r0, [r7, #8]
 13548 0010 FFF7FEFF 		bl	_ZSt17__size_to_integerj
 13549 0014 0546     		mov	r5, r0
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			       std::__iterator_category(__first));
 13550              		.loc 4 1095 35
 13551 0016 07F10C03 		add	r3, r7, #12
 13552 001a 1846     		mov	r0, r3
 13553 001c FFF7FEFF 		bl	_ZSt19__iterator_categoryIPdENSt15iterator_traitsIT_E17iterator_categoryERKS2_
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			       std::__iterator_category(__first));
 13554              		.loc 4 1094 29
 13555 0020 3346     		mov	r3, r6
 13556 0022 7A68     		ldr	r2, [r7, #4]
 13557 0024 2946     		mov	r1, r5
 13558 0026 2046     		mov	r0, r4
 13559 0028 FFF7FEFF 		bl	_ZSt10__fill_n_aIPdjdET_S1_T0_RKT1_St26random_access_iterator_tag
 13560 002c 0346     		mov	r3, r0
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 13561              		.loc 4 1096 5
 13562 002e 1846     		mov	r0, r3
 13563 0030 1437     		adds	r7, r7, #20
 13564              		.cfi_def_cfa_offset 20
 13565 0032 BD46     		mov	sp, r7
 13566              		.cfi_def_cfa_register 13
 13567              		@ sp needed
 13568 0034 F0BD     		pop	{r4, r5, r6, r7, pc}
 13569              		.cfi_endproc
 13570              	.LFE5841:
 13572              		.section	.text._ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_,"axG",%progbits,_ZNSt16allocator_trai
 13573              		.align	1
 13574              		.weak	_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_
 13575              		.syntax unified
 13576              		.thumb
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 567


 13577              		.thumb_func
 13578              		.fpu fpv5-d16
 13580              	_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_:
 13581              	.LFB5842:
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 13582              		.loc 31 543 7
 13583              		.cfi_startproc
 13584              		@ args = 0, pretend = 0, frame = 8
 13585              		@ frame_needed = 1, uses_anonymous_args = 0
 13586 0000 80B5     		push	{r7, lr}
 13587              		.cfi_def_cfa_offset 8
 13588              		.cfi_offset 7, -8
 13589              		.cfi_offset 14, -4
 13590 0002 82B0     		sub	sp, sp, #8
 13591              		.cfi_def_cfa_offset 16
 13592 0004 00AF     		add	r7, sp, #0
 13593              		.cfi_def_cfa_register 7
 13594 0006 7860     		str	r0, [r7, #4]
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 13595              		.loc 31 546 21
 13596 0008 7868     		ldr	r0, [r7, #4]
 13597 000a FFF7FEFF 		bl	_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv
 13598 000e 0346     		mov	r3, r0
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 13599              		.loc 31 550 7
 13600 0010 1846     		mov	r0, r3
 13601 0012 0837     		adds	r7, r7, #8
 13602              		.cfi_def_cfa_offset 8
 13603 0014 BD46     		mov	sp, r7
 13604              		.cfi_def_cfa_register 13
 13605              		@ sp needed
 13606 0016 80BD     		pop	{r7, pc}
 13607              		.cfi_endproc
 13608              	.LFE5842:
 13610              		.section	.text._ZNK9__gnu_cxx13new_allocatorIdE11_M_max_sizeEv,"axG",%progbits,_ZNK9__gnu_cxx13new
 13611              		.align	1
 13612              		.weak	_ZNK9__gnu_cxx13new_allocatorIdE11_M_max_sizeEv
 13613              		.syntax unified
 13614              		.thumb
 13615              		.thumb_func
 13616              		.fpu fpv5-d16
 13618              	_ZNK9__gnu_cxx13new_allocatorIdE11_M_max_sizeEv:
 13619              	.LFB5843:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #else
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // 402. wrong new expression in [some_] allocator::construct
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       void
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       construct(pointer __p, const _Tp& __val)
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { ::new((void *)__p) _Tp(__val); }
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       void
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       destroy(pointer __p) { __p->~_Tp(); }
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif // ! C++20
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up>
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	friend _GLIBCXX20_CONSTEXPR bool
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 568


 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	operator==(const new_allocator&, const new_allocator<_Up>&)
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	_GLIBCXX_NOTHROW
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ return true; }
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_impl_three_way_comparison < 201907L
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up>
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	friend _GLIBCXX20_CONSTEXPR bool
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	operator!=(const new_allocator&, const new_allocator<_Up>&)
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	_GLIBCXX_NOTHROW
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ return false; }
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     private:
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX_CONSTEXPR size_type
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _M_max_size() const _GLIBCXX_USE_NOEXCEPT
 13620              		.loc 30 185 7
 13621              		.cfi_startproc
 13622              		@ args = 0, pretend = 0, frame = 8
 13623              		@ frame_needed = 1, uses_anonymous_args = 0
 13624              		@ link register save eliminated.
 13625 0000 80B4     		push	{r7}
 13626              		.cfi_def_cfa_offset 4
 13627              		.cfi_offset 7, -4
 13628 0002 83B0     		sub	sp, sp, #12
 13629              		.cfi_def_cfa_offset 16
 13630 0004 00AF     		add	r7, sp, #0
 13631              		.cfi_def_cfa_register 7
 13632 0006 7860     		str	r0, [r7, #4]
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __PTRDIFF_MAX__ < __SIZE_MAX__
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 13633              		.loc 30 188 50
 13634 0008 6FF07043 		mvn	r3, #-268435456
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #else
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	return std::size_t(-1) / sizeof(_Tp);
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 13635              		.loc 30 192 7
 13636 000c 1846     		mov	r0, r3
 13637 000e 0C37     		adds	r7, r7, #12
 13638              		.cfi_def_cfa_offset 4
 13639 0010 BD46     		mov	sp, r7
 13640              		.cfi_def_cfa_register 13
 13641              		@ sp needed
 13642 0012 5DF8047B 		ldr	r7, [sp], #4
 13643              		.cfi_restore 7
 13644              		.cfi_def_cfa_offset 0
 13645 0016 7047     		bx	lr
 13646              		.cfi_endproc
 13647              	.LFE5843:
 13649              		.section	.text._ZSt12__niter_baseISt13_Bit_iteratorET_S1_,"axG",%progbits,_ZSt12__niter_baseISt13_
 13650              		.align	1
 13651              		.weak	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_
 13652              		.syntax unified
 13653              		.thumb
 13654              		.thumb_func
 13655              		.fpu fpv5-d16
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 569


 13657              	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_:
 13658              	.LFB5844:
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 13659              		.loc 4 313 5
 13660              		.cfi_startproc
 13661              		@ args = 0, pretend = 0, frame = 16
 13662              		@ frame_needed = 1, uses_anonymous_args = 0
 13663              		@ link register save eliminated.
 13664 0000 80B4     		push	{r7}
 13665              		.cfi_def_cfa_offset 4
 13666              		.cfi_offset 7, -4
 13667 0002 85B0     		sub	sp, sp, #20
 13668              		.cfi_def_cfa_offset 24
 13669 0004 00AF     		add	r7, sp, #0
 13670              		.cfi_def_cfa_register 7
 13671 0006 F860     		str	r0, [r7, #12]
 13672 0008 3B1D     		adds	r3, r7, #4
 13673 000a 83E80600 		stm	r3, {r1, r2}
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 13674              		.loc 4 315 14
 13675 000e FB68     		ldr	r3, [r7, #12]
 13676 0010 1A46     		mov	r2, r3
 13677 0012 3B1D     		adds	r3, r7, #4
 13678 0014 93E80300 		ldm	r3, {r0, r1}
 13679 0018 82E80300 		stm	r2, {r0, r1}
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 13680              		.loc 4 315 20
 13681 001c F868     		ldr	r0, [r7, #12]
 13682 001e 1437     		adds	r7, r7, #20
 13683              		.cfi_def_cfa_offset 4
 13684 0020 BD46     		mov	sp, r7
 13685              		.cfi_def_cfa_register 13
 13686              		@ sp needed
 13687 0022 5DF8047B 		ldr	r7, [sp], #4
 13688              		.cfi_restore 7
 13689              		.cfi_def_cfa_offset 0
 13690 0026 7047     		bx	lr
 13691              		.cfi_endproc
 13692              	.LFE5844:
 13694              		.section	.text._ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,"axG",%progbits
 13695              		.align	1
 13696              		.weak	_ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
 13697              		.syntax unified
 13698              		.thumb
 13699              		.thumb_func
 13700              		.fpu fpv5-d16
 13702              	_ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:
 13703              	.LFB5845:
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
 13704              		.loc 4 717 5
 13705              		.cfi_startproc
 13706              		@ args = 20, pretend = 8, frame = 16
 13707              		@ frame_needed = 1, uses_anonymous_args = 0
 13708 0000 82B0     		sub	sp, sp, #8
 13709              		.cfi_def_cfa_offset 8
 13710 0002 90B5     		push	{r4, r7, lr}
 13711              		.cfi_def_cfa_offset 20
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 570


 13712              		.cfi_offset 4, -20
 13713              		.cfi_offset 7, -16
 13714              		.cfi_offset 14, -12
 13715 0004 89B0     		sub	sp, sp, #36
 13716              		.cfi_def_cfa_offset 56
 13717 0006 04AF     		add	r7, sp, #16
 13718              		.cfi_def_cfa 7, 40
 13719 0008 F860     		str	r0, [r7, #12]
 13720 000a 381D     		adds	r0, r7, #4
 13721 000c 80E80600 		stm	r0, {r1, r2}
 13722 0010 7B62     		str	r3, [r7, #36]
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 13723              		.loc 4 718 51
 13724 0012 FC68     		ldr	r4, [r7, #12]
 13725 0014 01AA     		add	r2, sp, #4
 13726 0016 07F12C03 		add	r3, r7, #44
 13727 001a 93E80300 		ldm	r3, {r0, r1}
 13728 001e 82E80300 		stm	r2, {r0, r1}
 13729 0022 BB6A     		ldr	r3, [r7, #40]
 13730 0024 0093     		str	r3, [sp]
 13731 0026 7B6A     		ldr	r3, [r7, #36]
 13732 0028 3A1D     		adds	r2, r7, #4
 13733 002a 06CA     		ldm	r2, {r1, r2}
 13734 002c 2046     		mov	r0, r4
 13735 002e FFF7FEFF 		bl	_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 13736              		.loc 4 718 77
 13737 0032 00BF     		nop
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 13738              		.loc 4 718 80
 13739 0034 F868     		ldr	r0, [r7, #12]
 13740 0036 1437     		adds	r7, r7, #20
 13741              		.cfi_def_cfa_offset 20
 13742 0038 BD46     		mov	sp, r7
 13743              		.cfi_def_cfa_register 13
 13744              		@ sp needed
 13745 003a BDE89040 		pop	{r4, r7, lr}
 13746              		.cfi_restore 14
 13747              		.cfi_restore 7
 13748              		.cfi_restore 4
 13749              		.cfi_def_cfa_offset 8
 13750 003e 02B0     		add	sp, sp, #8
 13751              		.cfi_def_cfa_offset 0
 13752 0040 7047     		bx	lr
 13753              		.cfi_endproc
 13754              	.LFE5845:
 13756              		.section	.text._ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_,"axG",%progbits,_ZSt12__niter_wrapI
 13757              		.align	1
 13758              		.weak	_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_
 13759              		.syntax unified
 13760              		.thumb
 13761              		.thumb_func
 13762              		.fpu fpv5-d16
 13764              	_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_:
 13765              	.LFB5846:
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __res; }
 13766              		.loc 4 330 5
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 571


 13767              		.cfi_startproc
 13768              		@ args = 0, pretend = 0, frame = 16
 13769              		@ frame_needed = 1, uses_anonymous_args = 0
 13770              		@ link register save eliminated.
 13771 0000 80B4     		push	{r7}
 13772              		.cfi_def_cfa_offset 4
 13773              		.cfi_offset 7, -4
 13774 0002 85B0     		sub	sp, sp, #20
 13775              		.cfi_def_cfa_offset 24
 13776 0004 00AF     		add	r7, sp, #0
 13777              		.cfi_def_cfa_register 7
 13778 0006 F860     		str	r0, [r7, #12]
 13779 0008 B960     		str	r1, [r7, #8]
 13780 000a 3946     		mov	r1, r7
 13781 000c 81E80C00 		stm	r1, {r2, r3}
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 13782              		.loc 4 331 14
 13783 0010 FB68     		ldr	r3, [r7, #12]
 13784 0012 1A46     		mov	r2, r3
 13785 0014 3B46     		mov	r3, r7
 13786 0016 93E80300 		ldm	r3, {r0, r1}
 13787 001a 82E80300 		stm	r2, {r0, r1}
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 13788              		.loc 4 331 21
 13789 001e F868     		ldr	r0, [r7, #12]
 13790 0020 1437     		adds	r7, r7, #20
 13791              		.cfi_def_cfa_offset 4
 13792 0022 BD46     		mov	sp, r7
 13793              		.cfi_def_cfa_register 13
 13794              		@ sp needed
 13795 0024 5DF8047B 		ldr	r7, [sp], #4
 13796              		.cfi_restore 7
 13797              		.cfi_def_cfa_offset 0
 13798 0028 7047     		bx	lr
 13799              		.cfi_endproc
 13800              	.LFE5846:
 13802              		.section	.text._ZNSt16allocator_traitsISaImEE8max_sizeERKS0_,"axG",%progbits,_ZNSt16allocator_trai
 13803              		.align	1
 13804              		.weak	_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_
 13805              		.syntax unified
 13806              		.thumb
 13807              		.thumb_func
 13808              		.fpu fpv5-d16
 13810              	_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_:
 13811              	.LFB5847:
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 13812              		.loc 31 543 7
 13813              		.cfi_startproc
 13814              		@ args = 0, pretend = 0, frame = 8
 13815              		@ frame_needed = 1, uses_anonymous_args = 0
 13816 0000 80B5     		push	{r7, lr}
 13817              		.cfi_def_cfa_offset 8
 13818              		.cfi_offset 7, -8
 13819              		.cfi_offset 14, -4
 13820 0002 82B0     		sub	sp, sp, #8
 13821              		.cfi_def_cfa_offset 16
 13822 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 572


 13823              		.cfi_def_cfa_register 7
 13824 0006 7860     		str	r0, [r7, #4]
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 13825              		.loc 31 546 21
 13826 0008 7868     		ldr	r0, [r7, #4]
 13827 000a FFF7FEFF 		bl	_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv
 13828 000e 0346     		mov	r3, r0
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 13829              		.loc 31 550 7
 13830 0010 1846     		mov	r0, r3
 13831 0012 0837     		adds	r7, r7, #8
 13832              		.cfi_def_cfa_offset 8
 13833 0014 BD46     		mov	sp, r7
 13834              		.cfi_def_cfa_register 13
 13835              		@ sp needed
 13836 0016 80BD     		pop	{r7, pc}
 13837              		.cfi_endproc
 13838              	.LFE5847:
 13840              		.section	.text._ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv,"axG",%progbits,_ZNKSt13_Bvect
 13841              		.align	1
 13842              		.weak	_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv
 13843              		.syntax unified
 13844              		.thumb
 13845              		.thumb_func
 13846              		.fpu fpv5-d16
 13848              	_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv:
 13849              	.LFB5848:
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl; }
 13850              		.loc 6 529 7
 13851              		.cfi_startproc
 13852              		@ args = 0, pretend = 0, frame = 8
 13853              		@ frame_needed = 1, uses_anonymous_args = 0
 13854              		@ link register save eliminated.
 13855 0000 80B4     		push	{r7}
 13856              		.cfi_def_cfa_offset 4
 13857              		.cfi_offset 7, -4
 13858 0002 83B0     		sub	sp, sp, #12
 13859              		.cfi_def_cfa_offset 16
 13860 0004 00AF     		add	r7, sp, #0
 13861              		.cfi_def_cfa_register 7
 13862 0006 7860     		str	r0, [r7, #4]
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 13863              		.loc 6 530 22
 13864 0008 7B68     		ldr	r3, [r7, #4]
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 13865              		.loc 6 530 31
 13866 000a 1846     		mov	r0, r3
 13867 000c 0C37     		adds	r7, r7, #12
 13868              		.cfi_def_cfa_offset 4
 13869 000e BD46     		mov	sp, r7
 13870              		.cfi_def_cfa_register 13
 13871              		@ sp needed
 13872 0010 5DF8047B 		ldr	r7, [sp], #4
 13873              		.cfi_restore 7
 13874              		.cfi_def_cfa_offset 0
 13875 0014 7047     		bx	lr
 13876              		.cfi_endproc
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 573


 13877              	.LFE5848:
 13879              		.section	.text._ZN9__gnu_cxx13new_allocatorImE8allocateEjPKv,"axG",%progbits,_ZN9__gnu_cxx13new_al
 13880              		.align	1
 13881              		.weak	_ZN9__gnu_cxx13new_allocatorImE8allocateEjPKv
 13882              		.syntax unified
 13883              		.thumb
 13884              		.thumb_func
 13885              		.fpu fpv5-d16
 13887              	_ZN9__gnu_cxx13new_allocatorImE8allocateEjPKv:
 13888              	.LFB5849:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 13889              		.loc 30 103 7
 13890              		.cfi_startproc
 13891              		@ args = 0, pretend = 0, frame = 16
 13892              		@ frame_needed = 1, uses_anonymous_args = 0
 13893 0000 80B5     		push	{r7, lr}
 13894              		.cfi_def_cfa_offset 8
 13895              		.cfi_offset 7, -8
 13896              		.cfi_offset 14, -4
 13897 0002 84B0     		sub	sp, sp, #16
 13898              		.cfi_def_cfa_offset 24
 13899 0004 00AF     		add	r7, sp, #0
 13900              		.cfi_def_cfa_register 7
 13901 0006 F860     		str	r0, [r7, #12]
 13902 0008 B960     		str	r1, [r7, #8]
 13903 000a 7A60     		str	r2, [r7, #4]
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 13904              		.loc 30 105 29
 13905 000c F868     		ldr	r0, [r7, #12]
 13906 000e FFF7FEFF 		bl	_ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv
 13907 0012 0246     		mov	r2, r0
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 13908              		.loc 30 105 10
 13909 0014 BB68     		ldr	r3, [r7, #8]
 13910 0016 9342     		cmp	r3, r2
 13911 0018 8CBF     		ite	hi
 13912 001a 0123     		movhi	r3, #1
 13913 001c 0023     		movls	r3, #0
 13914 001e DBB2     		uxtb	r3, r3
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 13915              		.loc 30 105 2
 13916 0020 002B     		cmp	r3, #0
 13917 0022 01D0     		beq	.L580
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13918              		.loc 30 106 26
 13919 0024 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 13920              	.L580:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 13921              		.loc 30 115 41
 13922 0028 BB68     		ldr	r3, [r7, #8]
 13923 002a 9B00     		lsls	r3, r3, #2
 13924 002c 1846     		mov	r0, r3
 13925 002e FFF7FEFF 		bl	_Znwj
 13926 0032 0346     		mov	r3, r0
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13927              		.loc 30 116 7
 13928 0034 1846     		mov	r0, r3
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 574


 13929 0036 1037     		adds	r7, r7, #16
 13930              		.cfi_def_cfa_offset 8
 13931 0038 BD46     		mov	sp, r7
 13932              		.cfi_def_cfa_register 13
 13933              		@ sp needed
 13934 003a 80BD     		pop	{r7, pc}
 13935              		.cfi_endproc
 13936              	.LFE5849:
 13938              		.section	.text._ZSt12__miter_baseIPmET_S1_,"axG",%progbits,_ZSt12__miter_baseIPmET_S1_,comdat
 13939              		.align	1
 13940              		.weak	_ZSt12__miter_baseIPmET_S1_
 13941              		.syntax unified
 13942              		.thumb
 13943              		.thumb_func
 13944              		.fpu fpv5-d16
 13946              	_ZSt12__miter_baseIPmET_S1_:
 13947              	.LFB5850:
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     { return __it; }
 13948              		.loc 38 544 5
 13949              		.cfi_startproc
 13950              		@ args = 0, pretend = 0, frame = 8
 13951              		@ frame_needed = 1, uses_anonymous_args = 0
 13952              		@ link register save eliminated.
 13953 0000 80B4     		push	{r7}
 13954              		.cfi_def_cfa_offset 4
 13955              		.cfi_offset 7, -4
 13956 0002 83B0     		sub	sp, sp, #12
 13957              		.cfi_def_cfa_offset 16
 13958 0004 00AF     		add	r7, sp, #0
 13959              		.cfi_def_cfa_register 7
 13960 0006 7860     		str	r0, [r7, #4]
 13961              		.loc 38 545 14
 13962 0008 7B68     		ldr	r3, [r7, #4]
 13963              		.loc 38 545 20
 13964 000a 1846     		mov	r0, r3
 13965 000c 0C37     		adds	r7, r7, #12
 13966              		.cfi_def_cfa_offset 4
 13967 000e BD46     		mov	sp, r7
 13968              		.cfi_def_cfa_register 13
 13969              		@ sp needed
 13970 0010 5DF8047B 		ldr	r7, [sp], #4
 13971              		.cfi_restore 7
 13972              		.cfi_def_cfa_offset 0
 13973 0014 7047     		bx	lr
 13974              		.cfi_endproc
 13975              	.LFE5850:
 13977              		.section	.text._ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_,"axG",%progbits,_ZSt13__copy_move_aILb0E
 13978              		.align	1
 13979              		.weak	_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_
 13980              		.syntax unified
 13981              		.thumb
 13982              		.thumb_func
 13983              		.fpu fpv5-d16
 13985              	_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_:
 13986              	.LFB5851:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 13987              		.loc 4 511 5
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 575


 13988              		.cfi_startproc
 13989              		@ args = 0, pretend = 0, frame = 16
 13990              		@ frame_needed = 1, uses_anonymous_args = 0
 13991 0000 B0B5     		push	{r4, r5, r7, lr}
 13992              		.cfi_def_cfa_offset 16
 13993              		.cfi_offset 4, -16
 13994              		.cfi_offset 5, -12
 13995              		.cfi_offset 7, -8
 13996              		.cfi_offset 14, -4
 13997 0002 84B0     		sub	sp, sp, #16
 13998              		.cfi_def_cfa_offset 32
 13999 0004 00AF     		add	r7, sp, #0
 14000              		.cfi_def_cfa_register 7
 14001 0006 F860     		str	r0, [r7, #12]
 14002 0008 B960     		str	r1, [r7, #8]
 14003 000a 7A60     		str	r2, [r7, #4]
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
 14004              		.loc 4 513 31
 14005 000c F868     		ldr	r0, [r7, #12]
 14006 000e FFF7FEFF 		bl	_ZSt12__niter_baseIPmET_S1_
 14007 0012 0446     		mov	r4, r0
 14008 0014 B868     		ldr	r0, [r7, #8]
 14009 0016 FFF7FEFF 		bl	_ZSt12__niter_baseIPmET_S1_
 14010 001a 0546     		mov	r5, r0
 14011 001c 7B68     		ldr	r3, [r7, #4]
 14012 001e 1846     		mov	r0, r3
 14013 0020 FFF7FEFF 		bl	_ZSt12__niter_baseIPmET_S1_
 14014 0024 0346     		mov	r3, r0
 14015 0026 1A46     		mov	r2, r3
 14016 0028 2946     		mov	r1, r5
 14017 002a 2046     		mov	r0, r4
 14018 002c FFF7FEFF 		bl	_ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_
 14019 0030 0246     		mov	r2, r0
 14020 0032 3B1D     		adds	r3, r7, #4
 14021 0034 1146     		mov	r1, r2
 14022 0036 1846     		mov	r0, r3
 14023 0038 FFF7FEFF 		bl	_ZSt12__niter_wrapIPmET_RKS1_S1_
 14024 003c 0346     		mov	r3, r0
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 14025              		.loc 4 517 5
 14026 003e 1846     		mov	r0, r3
 14027 0040 1037     		adds	r7, r7, #16
 14028              		.cfi_def_cfa_offset 16
 14029 0042 BD46     		mov	sp, r7
 14030              		.cfi_def_cfa_register 13
 14031              		@ sp needed
 14032 0044 B0BD     		pop	{r4, r5, r7, pc}
 14033              		.cfi_endproc
 14034              	.LFE5851:
 14036              		.section	.text._ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_,"axG",%progbits,_ZSt12__miter_base
 14037              		.align	1
 14038              		.weak	_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_
 14039              		.syntax unified
 14040              		.thumb
 14041              		.thumb_func
 14042              		.fpu fpv5-d16
 14044              	_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_:
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 576


 14045              	.LFB5853:
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\cpp_type_traits.h ****     { return __it; }
 14046              		.loc 38 544 5
 14047              		.cfi_startproc
 14048              		@ args = 0, pretend = 0, frame = 16
 14049              		@ frame_needed = 1, uses_anonymous_args = 0
 14050              		@ link register save eliminated.
 14051 0000 80B4     		push	{r7}
 14052              		.cfi_def_cfa_offset 4
 14053              		.cfi_offset 7, -4
 14054 0002 85B0     		sub	sp, sp, #20
 14055              		.cfi_def_cfa_offset 24
 14056 0004 00AF     		add	r7, sp, #0
 14057              		.cfi_def_cfa_register 7
 14058 0006 F860     		str	r0, [r7, #12]
 14059 0008 3B1D     		adds	r3, r7, #4
 14060 000a 83E80600 		stm	r3, {r1, r2}
 14061              		.loc 38 545 14
 14062 000e FB68     		ldr	r3, [r7, #12]
 14063 0010 1A46     		mov	r2, r3
 14064 0012 3B1D     		adds	r3, r7, #4
 14065 0014 93E80300 		ldm	r3, {r0, r1}
 14066 0018 82E80300 		stm	r2, {r0, r1}
 14067              		.loc 38 545 20
 14068 001c F868     		ldr	r0, [r7, #12]
 14069 001e 1437     		adds	r7, r7, #20
 14070              		.cfi_def_cfa_offset 4
 14071 0020 BD46     		mov	sp, r7
 14072              		.cfi_def_cfa_register 13
 14073              		@ sp needed
 14074 0022 5DF8047B 		ldr	r7, [sp], #4
 14075              		.cfi_restore 7
 14076              		.cfi_def_cfa_offset 0
 14077 0026 7047     		bx	lr
 14078              		.cfi_endproc
 14079              	.LFE5853:
 14081              		.section	.text._ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_,"axG"
 14082              		.align	1
 14083              		.weak	_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
 14084              		.syntax unified
 14085              		.thumb
 14086              		.thumb_func
 14087              		.fpu fpv5-d16
 14089              	_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_:
 14090              	.LFB5854:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 14091              		.loc 4 511 5
 14092              		.cfi_startproc
 14093              		@ args = 20, pretend = 8, frame = 48
 14094              		@ frame_needed = 1, uses_anonymous_args = 0
 14095 0000 82B0     		sub	sp, sp, #8
 14096              		.cfi_def_cfa_offset 8
 14097 0002 90B5     		push	{r4, r7, lr}
 14098              		.cfi_def_cfa_offset 20
 14099              		.cfi_offset 4, -20
 14100              		.cfi_offset 7, -16
 14101              		.cfi_offset 14, -12
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 577


 14102 0004 91B0     		sub	sp, sp, #68
 14103              		.cfi_def_cfa_offset 88
 14104 0006 04AF     		add	r7, sp, #16
 14105              		.cfi_def_cfa 7, 72
 14106 0008 F860     		str	r0, [r7, #12]
 14107 000a 381D     		adds	r0, r7, #4
 14108 000c 80E80600 		stm	r0, {r1, r2}
 14109 0010 7B64     		str	r3, [r7, #68]
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
 14110              		.loc 4 513 31
 14111 0012 07F11000 		add	r0, r7, #16
 14112 0016 3B1D     		adds	r3, r7, #4
 14113 0018 93E80600 		ldm	r3, {r1, r2}
 14114 001c FFF7FEFF 		bl	_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_
 14115 0020 07F11800 		add	r0, r7, #24
 14116 0024 07F14403 		add	r3, r7, #68
 14117 0028 93E80600 		ldm	r3, {r1, r2}
 14118 002c FFF7FEFF 		bl	_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_
 14119 0030 07F12000 		add	r0, r7, #32
 14120 0034 07F14C03 		add	r3, r7, #76
 14121 0038 93E80600 		ldm	r3, {r1, r2}
 14122 003c FFF7FEFF 		bl	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_
 14123 0040 07F12804 		add	r4, r7, #40
 14124 0044 01AA     		add	r2, sp, #4
 14125 0046 07F12003 		add	r3, r7, #32
 14126 004a 93E80300 		ldm	r3, {r0, r1}
 14127 004e 82E80300 		stm	r2, {r0, r1}
 14128 0052 FB69     		ldr	r3, [r7, #28]
 14129 0054 0093     		str	r3, [sp]
 14130 0056 BB69     		ldr	r3, [r7, #24]
 14131 0058 07F11002 		add	r2, r7, #16
 14132 005c 06CA     		ldm	r2, {r1, r2}
 14133 005e 2046     		mov	r0, r4
 14134 0060 FFF7FEFF 		bl	_ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
 14135 0064 F868     		ldr	r0, [r7, #12]
 14136 0066 07F14C01 		add	r1, r7, #76
 14137 006a 07F12803 		add	r3, r7, #40
 14138 006e 0CCB     		ldm	r3, {r2, r3}
 14139 0070 FFF7FEFF 		bl	_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 14140              		.loc 4 516 39
 14141 0074 00BF     		nop
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 14142              		.loc 4 517 5
 14143 0076 F868     		ldr	r0, [r7, #12]
 14144 0078 3437     		adds	r7, r7, #52
 14145              		.cfi_def_cfa_offset 20
 14146 007a BD46     		mov	sp, r7
 14147              		.cfi_def_cfa_register 13
 14148              		@ sp needed
 14149 007c BDE89040 		pop	{r4, r7, lr}
 14150              		.cfi_restore 14
 14151              		.cfi_restore 7
 14152              		.cfi_restore 4
 14153              		.cfi_def_cfa_offset 8
 14154 0080 02B0     		add	sp, sp, #8
 14155              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 578


 14156 0082 7047     		bx	lr
 14157              		.cfi_endproc
 14158              	.LFE5854:
 14160              		.section	.text._ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,"axG",%progbits,_ZSt14__
 14161              		.align	1
 14162              		.weak	_ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
 14163              		.syntax unified
 14164              		.thumb
 14165              		.thumb_func
 14166              		.fpu fpv5-d16
 14168              	_ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:
 14169              	.LFB5856:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 14170              		.loc 4 505 5
 14171              		.cfi_startproc
 14172              		@ args = 20, pretend = 8, frame = 16
 14173              		@ frame_needed = 1, uses_anonymous_args = 0
 14174 0000 82B0     		sub	sp, sp, #8
 14175              		.cfi_def_cfa_offset 8
 14176 0002 90B5     		push	{r4, r7, lr}
 14177              		.cfi_def_cfa_offset 20
 14178              		.cfi_offset 4, -20
 14179              		.cfi_offset 7, -16
 14180              		.cfi_offset 14, -12
 14181 0004 89B0     		sub	sp, sp, #36
 14182              		.cfi_def_cfa_offset 56
 14183 0006 04AF     		add	r7, sp, #16
 14184              		.cfi_def_cfa 7, 40
 14185 0008 F860     		str	r0, [r7, #12]
 14186 000a 381D     		adds	r0, r7, #4
 14187 000c 80E80600 		stm	r0, {r1, r2}
 14188 0010 7B62     		str	r3, [r7, #36]
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 14189              		.loc 4 506 42
 14190 0012 FC68     		ldr	r4, [r7, #12]
 14191 0014 01AA     		add	r2, sp, #4
 14192 0016 07F12C03 		add	r3, r7, #44
 14193 001a 93E80300 		ldm	r3, {r0, r1}
 14194 001e 82E80300 		stm	r2, {r0, r1}
 14195 0022 BB6A     		ldr	r3, [r7, #40]
 14196 0024 0093     		str	r3, [sp]
 14197 0026 7B6A     		ldr	r3, [r7, #36]
 14198 0028 3A1D     		adds	r2, r7, #4
 14199 002a 06CA     		ldm	r2, {r1, r2}
 14200 002c 2046     		mov	r0, r4
 14201 002e FFF7FEFF 		bl	_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 14202              		.loc 4 506 68
 14203 0032 00BF     		nop
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 14204              		.loc 4 506 71
 14205 0034 F868     		ldr	r0, [r7, #12]
 14206 0036 1437     		adds	r7, r7, #20
 14207              		.cfi_def_cfa_offset 20
 14208 0038 BD46     		mov	sp, r7
 14209              		.cfi_def_cfa_register 13
 14210              		@ sp needed
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 579


 14211 003a BDE89040 		pop	{r4, r7, lr}
 14212              		.cfi_restore 14
 14213              		.cfi_restore 7
 14214              		.cfi_restore 4
 14215              		.cfi_def_cfa_offset 8
 14216 003e 02B0     		add	sp, sp, #8
 14217              		.cfi_def_cfa_offset 0
 14218 0040 7047     		bx	lr
 14219              		.cfi_endproc
 14220              	.LFE5856:
 14222              		.section	.text._ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj429496729
 14223              		.align	1
 14224              		.weak	_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2
 14225              		.syntax unified
 14226              		.thumb
 14227              		.thumb_func
 14228              		.fpu fpv5-d16
 14230              	_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj26369286
 14231              	.LFB5857:
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 14232              		.loc 33 394 5
 14233              		.cfi_startproc
 14234              		@ args = 0, pretend = 0, frame = 40
 14235              		@ frame_needed = 1, uses_anonymous_args = 0
 14236              		@ link register save eliminated.
 14237 0000 80B4     		push	{r7}
 14238              		.cfi_def_cfa_offset 4
 14239              		.cfi_offset 7, -4
 14240 0002 8BB0     		sub	sp, sp, #44
 14241              		.cfi_def_cfa_offset 48
 14242 0004 00AF     		add	r7, sp, #0
 14243              		.cfi_def_cfa_register 7
 14244 0006 7860     		str	r0, [r7, #4]
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       const _UIntType __lower_mask = ~__upper_mask;
 14245              		.loc 33 398 23
 14246 0008 4FF00043 		mov	r3, #-2147483648
 14247 000c FB61     		str	r3, [r7, #28]
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 14248              		.loc 33 399 23
 14249 000e 6FF00043 		mvn	r3, #-2147483648
 14250 0012 BB61     		str	r3, [r7, #24]
 14251              	.LBB83:
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****         {
 14252              		.loc 33 401 19
 14253 0014 0023     		movs	r3, #0
 14254 0016 7B62     		str	r3, [r7, #36]
 14255              	.L596:
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****         {
 14256              		.loc 33 401 32 discriminator 2
 14257 0018 7B6A     		ldr	r3, [r7, #36]
 14258 001a E22B     		cmp	r3, #226
 14259 001c 29D8     		bhi	.L593
 14260              	.LBB84:
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 14261              		.loc 33 403 26
 14262 001e 7B68     		ldr	r3, [r7, #4]
 14263 0020 7A6A     		ldr	r2, [r7, #36]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 580


 14264 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 14265              		.loc 33 403 32
 14266 0026 03F00042 		and	r2, r3, #-2147483648
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_x[__k] = (_M_x[__k + __m] ^ (__y >> 1)
 14267              		.loc 33 404 19
 14268 002a 7B6A     		ldr	r3, [r7, #36]
 14269 002c 591C     		adds	r1, r3, #1
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_x[__k] = (_M_x[__k + __m] ^ (__y >> 1)
 14270              		.loc 33 404 14
 14271 002e 7B68     		ldr	r3, [r7, #4]
 14272 0030 53F82130 		ldr	r3, [r3, r1, lsl #2]
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_x[__k] = (_M_x[__k + __m] ^ (__y >> 1)
 14273              		.loc 33 404 24
 14274 0034 23F00043 		bic	r3, r3, #-2147483648
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 14275              		.loc 33 403 14
 14276 0038 1343     		orrs	r3, r3, r2
 14277 003a 7B61     		str	r3, [r7, #20]
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 14278              		.loc 33 405 26
 14279 003c 7B6A     		ldr	r3, [r7, #36]
 14280 003e 03F28D12 		addw	r2, r3, #397
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 14281              		.loc 33 405 21
 14282 0042 7B68     		ldr	r3, [r7, #4]
 14283 0044 53F82220 		ldr	r2, [r3, r2, lsl #2]
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 14284              		.loc 33 405 40
 14285 0048 7B69     		ldr	r3, [r7, #20]
 14286 004a 5B08     		lsrs	r3, r3, #1
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 14287              		.loc 33 405 33
 14288 004c 5340     		eors	r3, r3, r2
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****         }
 14289              		.loc 33 406 18
 14290 004e 7A69     		ldr	r2, [r7, #20]
 14291 0050 02F00102 		and	r2, r2, #1
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****         }
 14292              		.loc 33 406 26
 14293 0054 002A     		cmp	r2, #0
 14294 0056 01D0     		beq	.L594
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****         }
 14295              		.loc 33 406 26 is_stmt 0 discriminator 1
 14296 0058 324A     		ldr	r2, .L603
 14297 005a 00E0     		b	.L595
 14298              	.L594:
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****         }
 14299              		.loc 33 406 26 discriminator 2
 14300 005c 0022     		movs	r2, #0
 14301              	.L595:
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****         }
 14302              		.loc 33 406 10 is_stmt 1 discriminator 4
 14303 005e 82EA0301 		eor	r1, r2, r3
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 14304              		.loc 33 405 14 discriminator 4
 14305 0062 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 581


 14306 0064 7A6A     		ldr	r2, [r7, #36]
 14307 0066 43F82210 		str	r1, [r3, r2, lsl #2]
 14308              	.LBE84:
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****         {
 14309              		.loc 33 401 7 discriminator 4
 14310 006a 7B6A     		ldr	r3, [r7, #36]
 14311 006c 0133     		adds	r3, r3, #1
 14312 006e 7B62     		str	r3, [r7, #36]
 14313 0070 D2E7     		b	.L596
 14314              	.L593:
 14315              	.LBE83:
 14316              	.LBB85:
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 14317              		.loc 33 409 19
 14318 0072 E323     		movs	r3, #227
 14319 0074 3B62     		str	r3, [r7, #32]
 14320              	.L600:
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 14321              		.loc 33 409 42 discriminator 2
 14322 0076 3B6A     		ldr	r3, [r7, #32]
 14323 0078 40F26E22 		movw	r2, #622
 14324 007c 9342     		cmp	r3, r2
 14325 007e 29D8     		bhi	.L597
 14326              	.LBB86:
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 14327              		.loc 33 411 26
 14328 0080 7B68     		ldr	r3, [r7, #4]
 14329 0082 3A6A     		ldr	r2, [r7, #32]
 14330 0084 53F82230 		ldr	r3, [r3, r2, lsl #2]
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 14331              		.loc 33 411 32
 14332 0088 03F00042 		and	r2, r3, #-2147483648
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_x[__k] = (_M_x[__k + (__m - __n)] ^ (__y >> 1)
 14333              		.loc 33 412 19
 14334 008c 3B6A     		ldr	r3, [r7, #32]
 14335 008e 591C     		adds	r1, r3, #1
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_x[__k] = (_M_x[__k + (__m - __n)] ^ (__y >> 1)
 14336              		.loc 33 412 14
 14337 0090 7B68     		ldr	r3, [r7, #4]
 14338 0092 53F82130 		ldr	r3, [r3, r1, lsl #2]
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	  _M_x[__k] = (_M_x[__k + (__m - __n)] ^ (__y >> 1)
 14339              		.loc 33 412 24
 14340 0096 23F00043 		bic	r3, r3, #-2147483648
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 14341              		.loc 33 411 14
 14342 009a 1343     		orrs	r3, r3, r2
 14343 009c 3B61     		str	r3, [r7, #16]
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 14344              		.loc 33 413 26
 14345 009e 3B6A     		ldr	r3, [r7, #32]
 14346 00a0 A3F1E302 		sub	r2, r3, #227
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 14347              		.loc 33 413 21
 14348 00a4 7B68     		ldr	r3, [r7, #4]
 14349 00a6 53F82220 		ldr	r2, [r3, r2, lsl #2]
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 14350              		.loc 33 413 48
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 582


 14351 00aa 3B69     		ldr	r3, [r7, #16]
 14352 00ac 5B08     		lsrs	r3, r3, #1
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 14353              		.loc 33 413 41
 14354 00ae 5340     		eors	r3, r3, r2
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
 14355              		.loc 33 414 18
 14356 00b0 3A69     		ldr	r2, [r7, #16]
 14357 00b2 02F00102 		and	r2, r2, #1
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
 14358              		.loc 33 414 26
 14359 00b6 002A     		cmp	r2, #0
 14360 00b8 01D0     		beq	.L598
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
 14361              		.loc 33 414 26 is_stmt 0 discriminator 1
 14362 00ba 1A4A     		ldr	r2, .L603
 14363 00bc 00E0     		b	.L599
 14364              	.L598:
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
 14365              		.loc 33 414 26 discriminator 2
 14366 00be 0022     		movs	r2, #0
 14367              	.L599:
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	}
 14368              		.loc 33 414 10 is_stmt 1 discriminator 4
 14369 00c0 82EA0301 		eor	r1, r2, r3
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 14370              		.loc 33 413 14 discriminator 4
 14371 00c4 7B68     		ldr	r3, [r7, #4]
 14372 00c6 3A6A     		ldr	r2, [r7, #32]
 14373 00c8 43F82210 		str	r1, [r3, r2, lsl #2]
 14374              	.LBE86:
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 	{
 14375              		.loc 33 409 7 discriminator 4
 14376 00cc 3B6A     		ldr	r3, [r7, #32]
 14377 00ce 0133     		adds	r3, r3, #1
 14378 00d0 3B62     		str	r3, [r7, #32]
 14379 00d2 D0E7     		b	.L600
 14380              	.L597:
 14381              	.LBE85:
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       | (_M_x[0] & __lower_mask));
 14382              		.loc 33 417 29
 14383 00d4 7B68     		ldr	r3, [r7, #4]
 14384 00d6 D3F8BC39 		ldr	r3, [r3, #2492]
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       | (_M_x[0] & __lower_mask));
 14385              		.loc 33 417 39
 14386 00da 03F00042 		and	r2, r3, #-2147483648
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_x[__n - 1] = (_M_x[__m - 1] ^ (__y >> 1)
 14387              		.loc 33 418 17
 14388 00de 7B68     		ldr	r3, [r7, #4]
 14389 00e0 1B68     		ldr	r3, [r3]
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_x[__n - 1] = (_M_x[__m - 1] ^ (__y >> 1)
 14390              		.loc 33 418 21
 14391 00e2 23F00043 		bic	r3, r3, #-2147483648
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       | (_M_x[0] & __lower_mask));
 14392              		.loc 33 417 17
 14393 00e6 1343     		orrs	r3, r3, r2
 14394 00e8 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 583


 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 14395              		.loc 33 419 28
 14396 00ea 7B68     		ldr	r3, [r7, #4]
 14397 00ec D3F83026 		ldr	r2, [r3, #1584]
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 14398              		.loc 33 419 45
 14399 00f0 FB68     		ldr	r3, [r7, #12]
 14400 00f2 5B08     		lsrs	r3, r3, #1
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 14401              		.loc 33 419 38
 14402 00f4 5340     		eors	r3, r3, r2
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_p = 0;
 14403              		.loc 33 420 18
 14404 00f6 FA68     		ldr	r2, [r7, #12]
 14405 00f8 02F00102 		and	r2, r2, #1
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_p = 0;
 14406              		.loc 33 420 26
 14407 00fc 002A     		cmp	r2, #0
 14408 00fe 01D0     		beq	.L601
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_p = 0;
 14409              		.loc 33 420 26 is_stmt 0 discriminator 1
 14410 0100 084A     		ldr	r2, .L603
 14411 0102 00E0     		b	.L602
 14412              	.L601:
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_p = 0;
 14413              		.loc 33 420 26 discriminator 2
 14414 0104 0022     		movs	r2, #0
 14415              	.L602:
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****       _M_p = 0;
 14416              		.loc 33 420 10 is_stmt 1 discriminator 4
 14417 0106 5A40     		eors	r2, r2, r3
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 14418              		.loc 33 419 21 discriminator 4
 14419 0108 7B68     		ldr	r3, [r7, #4]
 14420 010a C3F8BC29 		str	r2, [r3, #2492]
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc ****     }
 14421              		.loc 33 421 12 discriminator 4
 14422 010e 7B68     		ldr	r3, [r7, #4]
 14423 0110 0022     		movs	r2, #0
 14424 0112 C3F8C029 		str	r2, [r3, #2496]
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\random.tcc **** 
 14425              		.loc 33 422 5 discriminator 4
 14426 0116 00BF     		nop
 14427 0118 2C37     		adds	r7, r7, #44
 14428              		.cfi_def_cfa_offset 4
 14429 011a BD46     		mov	sp, r7
 14430              		.cfi_def_cfa_register 13
 14431              		@ sp needed
 14432 011c 5DF8047B 		ldr	r7, [sp], #4
 14433              		.cfi_restore 7
 14434              		.cfi_def_cfa_offset 0
 14435 0120 7047     		bx	lr
 14436              	.L604:
 14437 0122 00BF     		.align	2
 14438              	.L603:
 14439 0124 DFB00899 		.word	-1727483681
 14440              		.cfi_endproc
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 584


 14441              	.LFE5857:
 14443              		.section	.text._ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_,"axG",%progbits,_ZSt4copyISt13move_i
 14444              		.align	1
 14445              		.weak	_ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_
 14446              		.syntax unified
 14447              		.thumb
 14448              		.thumb_func
 14449              		.fpu fpv5-d16
 14451              	_ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_:
 14452              	.LFB5869:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 14453              		.loc 4 560 5
 14454              		.cfi_startproc
 14455              		@ args = 0, pretend = 0, frame = 16
 14456              		@ frame_needed = 1, uses_anonymous_args = 0
 14457 0000 90B5     		push	{r4, r7, lr}
 14458              		.cfi_def_cfa_offset 12
 14459              		.cfi_offset 4, -12
 14460              		.cfi_offset 7, -8
 14461              		.cfi_offset 14, -4
 14462 0002 85B0     		sub	sp, sp, #20
 14463              		.cfi_def_cfa_offset 32
 14464 0004 00AF     		add	r7, sp, #0
 14465              		.cfi_def_cfa_register 7
 14466 0006 F860     		str	r0, [r7, #12]
 14467 0008 B960     		str	r1, [r7, #8]
 14468 000a 7A60     		str	r2, [r7, #4]
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 14469              		.loc 4 569 7
 14470 000c F868     		ldr	r0, [r7, #12]
 14471 000e FFF7FEFF 		bl	_ZSt12__miter_baseIPdEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E
 14472 0012 0446     		mov	r4, r0
 14473 0014 B868     		ldr	r0, [r7, #8]
 14474 0016 FFF7FEFF 		bl	_ZSt12__miter_baseIPdEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E
 14475 001a 0346     		mov	r3, r0
 14476 001c 7A68     		ldr	r2, [r7, #4]
 14477 001e 1946     		mov	r1, r3
 14478 0020 2046     		mov	r0, r4
 14479 0022 FFF7FEFF 		bl	_ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_
 14480 0026 0346     		mov	r3, r0
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 14481              		.loc 4 570 5
 14482 0028 1846     		mov	r0, r3
 14483 002a 1437     		adds	r7, r7, #20
 14484              		.cfi_def_cfa_offset 12
 14485 002c BD46     		mov	sp, r7
 14486              		.cfi_def_cfa_register 13
 14487              		@ sp needed
 14488 002e 90BD     		pop	{r4, r7, pc}
 14489              		.cfi_endproc
 14490              	.LFE5869:
 14492              		.section	.text._ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bI
 14493              		.align	1
 14494              		.weak	_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIdEEPT_PKS
 14495              		.syntax unified
 14496              		.thumb
 14497              		.thumb_func
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 585


 14498              		.fpu fpv5-d16
 14500              	_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIdEEPT_PKS3_S6_S4
 14501              	.LFB5870:
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 14502              		.loc 4 680 2
 14503              		.cfi_startproc
 14504              		@ args = 0, pretend = 0, frame = 24
 14505              		@ frame_needed = 1, uses_anonymous_args = 0
 14506 0000 80B5     		push	{r7, lr}
 14507              		.cfi_def_cfa_offset 8
 14508              		.cfi_offset 7, -8
 14509              		.cfi_offset 14, -4
 14510 0002 86B0     		sub	sp, sp, #24
 14511              		.cfi_def_cfa_offset 32
 14512 0004 00AF     		add	r7, sp, #0
 14513              		.cfi_def_cfa_register 7
 14514 0006 F860     		str	r0, [r7, #12]
 14515 0008 B960     		str	r1, [r7, #8]
 14516 000a 7A60     		str	r2, [r7, #4]
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 14517              		.loc 4 689 34
 14518 000c BA68     		ldr	r2, [r7, #8]
 14519 000e FB68     		ldr	r3, [r7, #12]
 14520 0010 D31A     		subs	r3, r2, r3
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 14521              		.loc 4 689 20
 14522 0012 DB10     		asrs	r3, r3, #3
 14523 0014 7B61     		str	r3, [r7, #20]
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 14524              		.loc 4 690 4
 14525 0016 7B69     		ldr	r3, [r7, #20]
 14526 0018 002B     		cmp	r3, #0
 14527 001a 0AD0     		beq	.L608
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result - _Num;
 14528              		.loc 4 691 35
 14529 001c 7B69     		ldr	r3, [r7, #20]
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result - _Num;
 14530              		.loc 4 691 33
 14531 001e DB00     		lsls	r3, r3, #3
 14532 0020 5B42     		rsbs	r3, r3, #0
 14533 0022 7A68     		ldr	r2, [r7, #4]
 14534 0024 D018     		adds	r0, r2, r3
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result - _Num;
 14535              		.loc 4 691 64
 14536 0026 7B69     		ldr	r3, [r7, #20]
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result - _Num;
 14537              		.loc 4 691 23
 14538 0028 DB00     		lsls	r3, r3, #3
 14539 002a 1A46     		mov	r2, r3
 14540 002c F968     		ldr	r1, [r7, #12]
 14541 002e FFF7FEFF 		bl	memmove
 14542              	.L608:
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 14543              		.loc 4 692 22
 14544 0032 7B69     		ldr	r3, [r7, #20]
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 14545              		.loc 4 692 20
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 586


 14546 0034 DB00     		lsls	r3, r3, #3
 14547 0036 5B42     		rsbs	r3, r3, #0
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 14548              		.loc 4 692 22
 14549 0038 7A68     		ldr	r2, [r7, #4]
 14550 003a 1344     		add	r3, r3, r2
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 14551              		.loc 4 693 2
 14552 003c 1846     		mov	r0, r3
 14553 003e 1837     		adds	r7, r7, #24
 14554              		.cfi_def_cfa_offset 8
 14555 0040 BD46     		mov	sp, r7
 14556              		.cfi_def_cfa_register 13
 14557              		@ sp needed
 14558 0042 80BD     		pop	{r7, pc}
 14559              		.cfi_endproc
 14560              	.LFE5870:
 14562              		.section	.text._ZSt19__iterator_categoryIPdENSt15iterator_traitsIT_E17iterator_categoryERKS2_,"axG
 14563              		.align	1
 14564              		.weak	_ZSt19__iterator_categoryIPdENSt15iterator_traitsIT_E17iterator_categoryERKS2_
 14565              		.syntax unified
 14566              		.thumb
 14567              		.thumb_func
 14568              		.fpu fpv5-d16
 14570              	_ZSt19__iterator_categoryIPdENSt15iterator_traitsIT_E17iterator_categoryERKS2_:
 14571              	.LFB5871:
 14572              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterat
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** // Types used in iterator implementation -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  * Permission to use, copy, modify, distribute and sell this software
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 587


  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  * Copyright (c) 1996-1998
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** /** @file bits/stl_iterator_base_types.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  *
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  *  This file contains all of the general iterator-related utility types,
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  *  such as iterator_traits and struct iterator.
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****  */
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** #ifndef _STL_ITERATOR_BASE_TYPES_H
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** #define _STL_ITERATOR_BASE_TYPES_H 1
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** #pragma GCC system_header
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** #include <bits/c++config.h>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** #if __cplusplus >= 201103L
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** # include <type_traits>  // For __void_t, is_convertible
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** #endif
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** #if __cplusplus > 201703L && __cpp_concepts >= 201907L
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** # include <bits/iterator_concepts.h>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** #endif
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** namespace std _GLIBCXX_VISIBILITY(default)
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** {
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   /**
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****    *  @defgroup iterators Iterators
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****    *  Abstractions for uniform iterating through various underlying types.
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   */
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   //@{ 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   /**
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****    *  @defgroup iterator_tags Iterator Tags
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****    *  These are empty types, used to distinguish different iterators.  The
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****    *  distinction is not made by what they contain, but simply by what they
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 588


  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****    *  are.  Different underlying algorithms can then be used based on the
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****    *  different operations supported by different iterator types.
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   */
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   //@{ 
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   ///  Marking input iterators.
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   struct input_iterator_tag { };
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   ///  Marking output iterators.
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   struct output_iterator_tag { };
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   /// Forward iterators support a superset of input iterator operations.
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   struct forward_iterator_tag : public input_iterator_tag { };
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   /// Bidirectional iterators support a superset of forward iterator
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   /// operations.
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   struct bidirectional_iterator_tag : public forward_iterator_tag { };
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   /// Random-access iterators support a superset of bidirectional
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   /// iterator operations.
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   struct random_access_iterator_tag : public bidirectional_iterator_tag { };
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** #if __cplusplus > 201703L
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   /// Contiguous iterators point to objects stored contiguously in memory.
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   struct contiguous_iterator_tag : public random_access_iterator_tag { };
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** #endif
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   //@}
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   /**
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****    *  @brief  Common %iterator class.
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****    *
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****    *  This class does nothing but define nested typedefs.  %Iterator classes
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****    *  can inherit from this class to save some work.  The typedefs are then
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****    *  used in specializations and overloading.
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****    *
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****    *  In particular, there are no default implementations of requirements
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****    *  such as @c operator++ and the like.  (How could there be?)
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   */
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   template<typename _Category, typename _Tp, typename _Distance = ptrdiff_t,
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****            typename _Pointer = _Tp*, typename _Reference = _Tp&>
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     struct iterator
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     {
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       /// One of the @link iterator_tags tag types@endlink.
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef _Category  iterator_category;
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       /// The type "pointed to" by the iterator.
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef _Tp        value_type;
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       /// Distance between iterators is represented as this type.
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef _Distance  difference_type;
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       /// This type represents a pointer-to-value_type.
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef _Pointer   pointer;
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       /// This type represents a reference-to-value_type.
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef _Reference reference;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     };
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   /**
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****    *  @brief  Traits class for iterators.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****    *
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****    *  This class does nothing but define nested typedefs.  The general
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 589


 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****    *  version simply @a forwards the nested typedefs from the Iterator
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****    *  argument.  Specialized versions for pointers and pointers-to-const
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****    *  provide tighter, more correct semantics.
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   */
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   template<typename _Iterator>
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     struct iterator_traits;
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** #if __cplusplus >= 201103L
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   // 2408. SFINAE-friendly common_type/iterator_traits is missing in C++14
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   template<typename _Iterator, typename = __void_t<>>
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     struct __iterator_traits { };
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** #if ! __cpp_lib_concepts
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   template<typename _Iterator>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     struct __iterator_traits<_Iterator,
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 			     __void_t<typename _Iterator::iterator_category,
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 				      typename _Iterator::value_type,
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 				      typename _Iterator::difference_type,
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 				      typename _Iterator::pointer,
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 				      typename _Iterator::reference>>
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     {
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef typename _Iterator::iterator_category iterator_category;
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef typename _Iterator::value_type        value_type;
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef typename _Iterator::difference_type   difference_type;
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef typename _Iterator::pointer           pointer;
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef typename _Iterator::reference         reference;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     };
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** #endif // ! concepts
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   template<typename _Iterator>
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     struct iterator_traits
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     : public __iterator_traits<_Iterator> { };
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** #else // ! C++11
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   template<typename _Iterator>
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     struct iterator_traits
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     {
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef typename _Iterator::iterator_category iterator_category;
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef typename _Iterator::value_type        value_type;
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef typename _Iterator::difference_type   difference_type;
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef typename _Iterator::pointer           pointer;
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef typename _Iterator::reference         reference;
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     };
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** #endif // C++11
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** #if __cplusplus > 201703L
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   /// Partial specialization for object pointer types.
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   template<typename _Tp>
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** #if __cpp_concepts >= 201907L
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     requires is_object_v<_Tp>
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** #endif
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     struct iterator_traits<_Tp*>
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     {
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       using iterator_concept  = contiguous_iterator_tag;
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       using iterator_category = random_access_iterator_tag;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 590


 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       using value_type	      = remove_cv_t<_Tp>;
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       using difference_type   = ptrdiff_t;
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       using pointer	      = _Tp*;
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       using reference	      = _Tp&;
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     };
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** #else
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   /// Partial specialization for pointer types.
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   template<typename _Tp>
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     struct iterator_traits<_Tp*>
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     {
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef random_access_iterator_tag iterator_category;
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef _Tp                         value_type;
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef ptrdiff_t                   difference_type;
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef _Tp*                        pointer;
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef _Tp&                        reference;
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     };
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   /// Partial specialization for const pointer types.
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   template<typename _Tp>
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     struct iterator_traits<const _Tp*>
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     {
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef random_access_iterator_tag iterator_category;
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef _Tp                         value_type;
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef ptrdiff_t                   difference_type;
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef const _Tp*                  pointer;
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****       typedef const _Tp&                  reference;
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     };
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** #endif
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h **** 
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   /**
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****    *  This function is not a part of the C++ standard but is syntactic
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****    *  sugar for internal library use only.
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   */
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****   template<typename _Iter>
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     inline _GLIBCXX_CONSTEXPR
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     typename iterator_traits<_Iter>::iterator_category
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     __iterator_category(const _Iter&)
 14573              		.loc 39 238 5
 14574              		.cfi_startproc
 14575              		@ args = 0, pretend = 0, frame = 8
 14576              		@ frame_needed = 1, uses_anonymous_args = 0
 14577              		@ link register save eliminated.
 14578 0000 80B4     		push	{r7}
 14579              		.cfi_def_cfa_offset 4
 14580              		.cfi_offset 7, -4
 14581 0002 83B0     		sub	sp, sp, #12
 14582              		.cfi_def_cfa_offset 16
 14583 0004 00AF     		add	r7, sp, #0
 14584              		.cfi_def_cfa_register 7
 14585 0006 7860     		str	r0, [r7, #4]
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_types.h ****     { return typename iterator_traits<_Iter>::iterator_category(); }
 14586              		.loc 39 239 65
 14587 0008 00BF     		nop
 14588              		.loc 39 239 68
 14589 000a 1846     		mov	r0, r3
 14590 000c 0C37     		adds	r7, r7, #12
 14591              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 591


 14592 000e BD46     		mov	sp, r7
 14593              		.cfi_def_cfa_register 13
 14594              		@ sp needed
 14595 0010 5DF8047B 		ldr	r7, [sp], #4
 14596              		.cfi_restore 7
 14597              		.cfi_def_cfa_offset 0
 14598 0014 7047     		bx	lr
 14599              		.cfi_endproc
 14600              	.LFE5871:
 14602              		.section	.text._ZSt10__fill_n_aIPdjdET_S1_T0_RKT1_St26random_access_iterator_tag,"axG",%progbits,_
 14603              		.align	1
 14604              		.weak	_ZSt10__fill_n_aIPdjdET_S1_T0_RKT1_St26random_access_iterator_tag
 14605              		.syntax unified
 14606              		.thumb
 14607              		.thumb_func
 14608              		.fpu fpv5-d16
 14610              	_ZSt10__fill_n_aIPdjdET_S1_T0_RKT1_St26random_access_iterator_tag:
 14611              	.LFB5872:
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	       std::random_access_iterator_tag)
 14612              		.loc 4 1054 5
 14613              		.cfi_startproc
 14614              		@ args = 0, pretend = 0, frame = 16
 14615              		@ frame_needed = 1, uses_anonymous_args = 0
 14616 0000 80B5     		push	{r7, lr}
 14617              		.cfi_def_cfa_offset 8
 14618              		.cfi_offset 7, -8
 14619              		.cfi_offset 14, -4
 14620 0002 84B0     		sub	sp, sp, #16
 14621              		.cfi_def_cfa_offset 24
 14622 0004 00AF     		add	r7, sp, #0
 14623              		.cfi_def_cfa_register 7
 14624 0006 F860     		str	r0, [r7, #12]
 14625 0008 B960     		str	r1, [r7, #8]
 14626 000a 7A60     		str	r2, [r7, #4]
 14627 000c 3B70     		strb	r3, [r7]
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __first;
 14628              		.loc 4 1060 7
 14629 000e BB68     		ldr	r3, [r7, #8]
 14630 0010 002B     		cmp	r3, #0
 14631 0012 01D1     		bne	.L613
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 14632              		.loc 4 1061 9
 14633 0014 FB68     		ldr	r3, [r7, #12]
 14634 0016 0CE0     		b	.L614
 14635              	.L613:
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __first + __n;
 14636              		.loc 4 1065 38
 14637 0018 BB68     		ldr	r3, [r7, #8]
 14638 001a DB00     		lsls	r3, r3, #3
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __first + __n;
 14639              		.loc 4 1065 20
 14640 001c FA68     		ldr	r2, [r7, #12]
 14641 001e 1344     		add	r3, r3, r2
 14642 0020 7A68     		ldr	r2, [r7, #4]
 14643 0022 1946     		mov	r1, r3
 14644 0024 F868     		ldr	r0, [r7, #12]
 14645 0026 FFF7FEFF 		bl	_ZSt8__fill_aIPddEvT_S1_RKT0_
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 592


1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 14646              		.loc 4 1066 22
 14647 002a BB68     		ldr	r3, [r7, #8]
 14648 002c DB00     		lsls	r3, r3, #3
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 14649              		.loc 4 1066 24
 14650 002e FA68     		ldr	r2, [r7, #12]
 14651 0030 1344     		add	r3, r3, r2
 14652              	.L614:
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 14653              		.loc 4 1067 5
 14654 0032 1846     		mov	r0, r3
 14655 0034 1037     		adds	r7, r7, #16
 14656              		.cfi_def_cfa_offset 8
 14657 0036 BD46     		mov	sp, r7
 14658              		.cfi_def_cfa_register 13
 14659              		@ sp needed
 14660 0038 80BD     		pop	{r7, pc}
 14661              		.cfi_endproc
 14662              	.LFE5872:
 14664              		.section	.text._ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv,"axG",%progbits,_ZNK9__gnu_cxx13new_all
 14665              		.align	1
 14666              		.weak	_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv
 14667              		.syntax unified
 14668              		.thumb
 14669              		.thumb_func
 14670              		.fpu fpv5-d16
 14672              	_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv:
 14673              	.LFB5873:
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return _M_max_size(); }
 14674              		.loc 30 142 7
 14675              		.cfi_startproc
 14676              		@ args = 0, pretend = 0, frame = 8
 14677              		@ frame_needed = 1, uses_anonymous_args = 0
 14678 0000 80B5     		push	{r7, lr}
 14679              		.cfi_def_cfa_offset 8
 14680              		.cfi_offset 7, -8
 14681              		.cfi_offset 14, -4
 14682 0002 82B0     		sub	sp, sp, #8
 14683              		.cfi_def_cfa_offset 16
 14684 0004 00AF     		add	r7, sp, #0
 14685              		.cfi_def_cfa_register 7
 14686 0006 7860     		str	r0, [r7, #4]
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14687              		.loc 30 143 27
 14688 0008 7868     		ldr	r0, [r7, #4]
 14689 000a FFF7FEFF 		bl	_ZNK9__gnu_cxx13new_allocatorIdE11_M_max_sizeEv
 14690 000e 0346     		mov	r3, r0
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14691              		.loc 30 143 31
 14692 0010 1846     		mov	r0, r3
 14693 0012 0837     		adds	r7, r7, #8
 14694              		.cfi_def_cfa_offset 8
 14695 0014 BD46     		mov	sp, r7
 14696              		.cfi_def_cfa_register 13
 14697              		@ sp needed
 14698 0016 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 593


 14699              		.cfi_endproc
 14700              	.LFE5873:
 14702              		.section	.text._ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,"axG",%progbits
 14703              		.align	1
 14704              		.weak	_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
 14705              		.syntax unified
 14706              		.thumb
 14707              		.thumb_func
 14708              		.fpu fpv5-d16
 14710              	_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:
 14711              	.LFB5874:
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 14712              		.loc 4 699 5
 14713              		.cfi_startproc
 14714              		@ args = 20, pretend = 8, frame = 16
 14715              		@ frame_needed = 1, uses_anonymous_args = 0
 14716 0000 82B0     		sub	sp, sp, #8
 14717              		.cfi_def_cfa_offset 8
 14718 0002 90B5     		push	{r4, r7, lr}
 14719              		.cfi_def_cfa_offset 20
 14720              		.cfi_offset 4, -20
 14721              		.cfi_offset 7, -16
 14722              		.cfi_offset 14, -12
 14723 0004 89B0     		sub	sp, sp, #36
 14724              		.cfi_def_cfa_offset 56
 14725 0006 04AF     		add	r7, sp, #16
 14726              		.cfi_def_cfa 7, 40
 14727 0008 F860     		str	r0, [r7, #12]
 14728 000a 381D     		adds	r0, r7, #4
 14729 000c 80E80600 		stm	r0, {r1, r2}
 14730 0010 7B62     		str	r3, [r7, #36]
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 								 __last,
 14731              		.loc 4 709 37
 14732 0012 FC68     		ldr	r4, [r7, #12]
 14733 0014 01AA     		add	r2, sp, #4
 14734 0016 07F12C03 		add	r3, r7, #44
 14735 001a 93E80300 		ldm	r3, {r0, r1}
 14736 001e 82E80300 		stm	r2, {r0, r1}
 14737 0022 BB6A     		ldr	r3, [r7, #40]
 14738 0024 0093     		str	r3, [sp]
 14739 0026 7B6A     		ldr	r3, [r7, #36]
 14740 0028 3A1D     		adds	r2, r7, #4
 14741 002a 06CA     		ldm	r2, {r1, r2}
 14742 002c 2046     		mov	r0, r4
 14743 002e FFF7FEFF 		bl	_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_ite
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 14744              		.loc 4 711 18
 14745 0032 00BF     		nop
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 14746              		.loc 4 712 5
 14747 0034 F868     		ldr	r0, [r7, #12]
 14748 0036 1437     		adds	r7, r7, #20
 14749              		.cfi_def_cfa_offset 20
 14750 0038 BD46     		mov	sp, r7
 14751              		.cfi_def_cfa_register 13
 14752              		@ sp needed
 14753 003a BDE89040 		pop	{r4, r7, lr}
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 594


 14754              		.cfi_restore 14
 14755              		.cfi_restore 7
 14756              		.cfi_restore 4
 14757              		.cfi_def_cfa_offset 8
 14758 003e 02B0     		add	sp, sp, #8
 14759              		.cfi_def_cfa_offset 0
 14760 0040 7047     		bx	lr
 14761              		.cfi_endproc
 14762              	.LFE5874:
 14764              		.section	.text._ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv,"axG",%progbits,_ZNK9__gnu_cxx13new_all
 14765              		.align	1
 14766              		.weak	_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv
 14767              		.syntax unified
 14768              		.thumb
 14769              		.thumb_func
 14770              		.fpu fpv5-d16
 14772              	_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv:
 14773              	.LFB5875:
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return _M_max_size(); }
 14774              		.loc 30 142 7
 14775              		.cfi_startproc
 14776              		@ args = 0, pretend = 0, frame = 8
 14777              		@ frame_needed = 1, uses_anonymous_args = 0
 14778 0000 80B5     		push	{r7, lr}
 14779              		.cfi_def_cfa_offset 8
 14780              		.cfi_offset 7, -8
 14781              		.cfi_offset 14, -4
 14782 0002 82B0     		sub	sp, sp, #8
 14783              		.cfi_def_cfa_offset 16
 14784 0004 00AF     		add	r7, sp, #0
 14785              		.cfi_def_cfa_register 7
 14786 0006 7860     		str	r0, [r7, #4]
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14787              		.loc 30 143 27
 14788 0008 7868     		ldr	r0, [r7, #4]
 14789 000a FFF7FEFF 		bl	_ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv
 14790 000e 0346     		mov	r3, r0
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14791              		.loc 30 143 31
 14792 0010 1846     		mov	r0, r3
 14793 0012 0837     		adds	r7, r7, #8
 14794              		.cfi_def_cfa_offset 8
 14795 0014 BD46     		mov	sp, r7
 14796              		.cfi_def_cfa_register 13
 14797              		@ sp needed
 14798 0016 80BD     		pop	{r7, pc}
 14799              		.cfi_endproc
 14800              	.LFE5875:
 14802              		.section	.text._ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv,"axG",%progbits,_ZNK9__gnu_cxx13new
 14803              		.align	1
 14804              		.weak	_ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv
 14805              		.syntax unified
 14806              		.thumb
 14807              		.thumb_func
 14808              		.fpu fpv5-d16
 14810              	_ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv:
 14811              	.LFB5876:
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 595


 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 14812              		.loc 30 185 7
 14813              		.cfi_startproc
 14814              		@ args = 0, pretend = 0, frame = 8
 14815              		@ frame_needed = 1, uses_anonymous_args = 0
 14816              		@ link register save eliminated.
 14817 0000 80B4     		push	{r7}
 14818              		.cfi_def_cfa_offset 4
 14819              		.cfi_offset 7, -4
 14820 0002 83B0     		sub	sp, sp, #12
 14821              		.cfi_def_cfa_offset 16
 14822 0004 00AF     		add	r7, sp, #0
 14823              		.cfi_def_cfa_register 7
 14824 0006 7860     		str	r0, [r7, #4]
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #else
 14825              		.loc 30 188 50
 14826 0008 6FF06043 		mvn	r3, #-536870912
 14827              		.loc 30 192 7
 14828 000c 1846     		mov	r0, r3
 14829 000e 0C37     		adds	r7, r7, #12
 14830              		.cfi_def_cfa_offset 4
 14831 0010 BD46     		mov	sp, r7
 14832              		.cfi_def_cfa_register 13
 14833              		@ sp needed
 14834 0012 5DF8047B 		ldr	r7, [sp], #4
 14835              		.cfi_restore 7
 14836              		.cfi_def_cfa_offset 0
 14837 0016 7047     		bx	lr
 14838              		.cfi_endproc
 14839              	.LFE5876:
 14841              		.section	.text._ZSt12__niter_baseIPmET_S1_,"axG",%progbits,_ZSt12__niter_baseIPmET_S1_,comdat
 14842              		.align	1
 14843              		.weak	_ZSt12__niter_baseIPmET_S1_
 14844              		.syntax unified
 14845              		.thumb
 14846              		.thumb_func
 14847              		.fpu fpv5-d16
 14849              	_ZSt12__niter_baseIPmET_S1_:
 14850              	.LFB5877:
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 14851              		.loc 4 313 5
 14852              		.cfi_startproc
 14853              		@ args = 0, pretend = 0, frame = 8
 14854              		@ frame_needed = 1, uses_anonymous_args = 0
 14855              		@ link register save eliminated.
 14856 0000 80B4     		push	{r7}
 14857              		.cfi_def_cfa_offset 4
 14858              		.cfi_offset 7, -4
 14859 0002 83B0     		sub	sp, sp, #12
 14860              		.cfi_def_cfa_offset 16
 14861 0004 00AF     		add	r7, sp, #0
 14862              		.cfi_def_cfa_register 7
 14863 0006 7860     		str	r0, [r7, #4]
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 14864              		.loc 4 315 14
 14865 0008 7B68     		ldr	r3, [r7, #4]
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 596


 14866              		.loc 4 315 20
 14867 000a 1846     		mov	r0, r3
 14868 000c 0C37     		adds	r7, r7, #12
 14869              		.cfi_def_cfa_offset 4
 14870 000e BD46     		mov	sp, r7
 14871              		.cfi_def_cfa_register 13
 14872              		@ sp needed
 14873 0010 5DF8047B 		ldr	r7, [sp], #4
 14874              		.cfi_restore 7
 14875              		.cfi_def_cfa_offset 0
 14876 0014 7047     		bx	lr
 14877              		.cfi_endproc
 14878              	.LFE5877:
 14880              		.section	.text._ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_,"axG",%progbits,_ZSt14__copy_move_a1ILb
 14881              		.align	1
 14882              		.weak	_ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_
 14883              		.syntax unified
 14884              		.thumb
 14885              		.thumb_func
 14886              		.fpu fpv5-d16
 14888              	_ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_:
 14889              	.LFB5878:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 14890              		.loc 4 505 5
 14891              		.cfi_startproc
 14892              		@ args = 0, pretend = 0, frame = 16
 14893              		@ frame_needed = 1, uses_anonymous_args = 0
 14894 0000 80B5     		push	{r7, lr}
 14895              		.cfi_def_cfa_offset 8
 14896              		.cfi_offset 7, -8
 14897              		.cfi_offset 14, -4
 14898 0002 84B0     		sub	sp, sp, #16
 14899              		.cfi_def_cfa_offset 24
 14900 0004 00AF     		add	r7, sp, #0
 14901              		.cfi_def_cfa_register 7
 14902 0006 F860     		str	r0, [r7, #12]
 14903 0008 B960     		str	r1, [r7, #8]
 14904 000a 7A60     		str	r2, [r7, #4]
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 14905              		.loc 4 506 42
 14906 000c 7A68     		ldr	r2, [r7, #4]
 14907 000e B968     		ldr	r1, [r7, #8]
 14908 0010 F868     		ldr	r0, [r7, #12]
 14909 0012 FFF7FEFF 		bl	_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_
 14910 0016 0346     		mov	r3, r0
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 14911              		.loc 4 506 71
 14912 0018 1846     		mov	r0, r3
 14913 001a 1037     		adds	r7, r7, #16
 14914              		.cfi_def_cfa_offset 8
 14915 001c BD46     		mov	sp, r7
 14916              		.cfi_def_cfa_register 13
 14917              		@ sp needed
 14918 001e 80BD     		pop	{r7, pc}
 14919              		.cfi_endproc
 14920              	.LFE5878:
 14922              		.section	.text._ZSt12__niter_wrapIPmET_RKS1_S1_,"axG",%progbits,_ZSt12__niter_wrapIPmET_RKS1_S1_,c
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 597


 14923              		.align	1
 14924              		.weak	_ZSt12__niter_wrapIPmET_RKS1_S1_
 14925              		.syntax unified
 14926              		.thumb
 14927              		.thumb_func
 14928              		.fpu fpv5-d16
 14930              	_ZSt12__niter_wrapIPmET_RKS1_S1_:
 14931              	.LFB5879:
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __res; }
 14932              		.loc 4 330 5
 14933              		.cfi_startproc
 14934              		@ args = 0, pretend = 0, frame = 8
 14935              		@ frame_needed = 1, uses_anonymous_args = 0
 14936              		@ link register save eliminated.
 14937 0000 80B4     		push	{r7}
 14938              		.cfi_def_cfa_offset 4
 14939              		.cfi_offset 7, -4
 14940 0002 83B0     		sub	sp, sp, #12
 14941              		.cfi_def_cfa_offset 16
 14942 0004 00AF     		add	r7, sp, #0
 14943              		.cfi_def_cfa_register 7
 14944 0006 7860     		str	r0, [r7, #4]
 14945 0008 3960     		str	r1, [r7]
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 14946              		.loc 4 331 14
 14947 000a 3B68     		ldr	r3, [r7]
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 14948              		.loc 4 331 21
 14949 000c 1846     		mov	r0, r3
 14950 000e 0C37     		adds	r7, r7, #12
 14951              		.cfi_def_cfa_offset 4
 14952 0010 BD46     		mov	sp, r7
 14953              		.cfi_def_cfa_register 13
 14954              		@ sp needed
 14955 0012 5DF8047B 		ldr	r7, [sp], #4
 14956              		.cfi_restore 7
 14957              		.cfi_def_cfa_offset 0
 14958 0016 7047     		bx	lr
 14959              		.cfi_endproc
 14960              	.LFE5879:
 14962              		.section	.text._ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_,"axG",%progbits,_ZSt12__niter_base
 14963              		.align	1
 14964              		.weak	_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_
 14965              		.syntax unified
 14966              		.thumb
 14967              		.thumb_func
 14968              		.fpu fpv5-d16
 14970              	_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_:
 14971              	.LFB5880:
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 14972              		.loc 4 313 5
 14973              		.cfi_startproc
 14974              		@ args = 0, pretend = 0, frame = 16
 14975              		@ frame_needed = 1, uses_anonymous_args = 0
 14976              		@ link register save eliminated.
 14977 0000 80B4     		push	{r7}
 14978              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 598


 14979              		.cfi_offset 7, -4
 14980 0002 85B0     		sub	sp, sp, #20
 14981              		.cfi_def_cfa_offset 24
 14982 0004 00AF     		add	r7, sp, #0
 14983              		.cfi_def_cfa_register 7
 14984 0006 F860     		str	r0, [r7, #12]
 14985 0008 3B1D     		adds	r3, r7, #4
 14986 000a 83E80600 		stm	r3, {r1, r2}
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 14987              		.loc 4 315 14
 14988 000e FB68     		ldr	r3, [r7, #12]
 14989 0010 1A46     		mov	r2, r3
 14990 0012 3B1D     		adds	r3, r7, #4
 14991 0014 93E80300 		ldm	r3, {r0, r1}
 14992 0018 82E80300 		stm	r2, {r0, r1}
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 14993              		.loc 4 315 20
 14994 001c F868     		ldr	r0, [r7, #12]
 14995 001e 1437     		adds	r7, r7, #20
 14996              		.cfi_def_cfa_offset 4
 14997 0020 BD46     		mov	sp, r7
 14998              		.cfi_def_cfa_register 13
 14999              		@ sp needed
 15000 0022 5DF8047B 		ldr	r7, [sp], #4
 15001              		.cfi_restore 7
 15002              		.cfi_def_cfa_offset 0
 15003 0026 7047     		bx	lr
 15004              		.cfi_endproc
 15005              	.LFE5880:
 15007              		.section	.text._ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_,"axG
 15008              		.align	1
 15009              		.weak	_ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
 15010              		.syntax unified
 15011              		.thumb
 15012              		.thumb_func
 15013              		.fpu fpv5-d16
 15015              	_ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_:
 15016              	.LFB5881:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 15017              		.loc 4 505 5
 15018              		.cfi_startproc
 15019              		@ args = 20, pretend = 8, frame = 16
 15020              		@ frame_needed = 1, uses_anonymous_args = 0
 15021 0000 82B0     		sub	sp, sp, #8
 15022              		.cfi_def_cfa_offset 8
 15023 0002 90B5     		push	{r4, r7, lr}
 15024              		.cfi_def_cfa_offset 20
 15025              		.cfi_offset 4, -20
 15026              		.cfi_offset 7, -16
 15027              		.cfi_offset 14, -12
 15028 0004 89B0     		sub	sp, sp, #36
 15029              		.cfi_def_cfa_offset 56
 15030 0006 04AF     		add	r7, sp, #16
 15031              		.cfi_def_cfa 7, 40
 15032 0008 F860     		str	r0, [r7, #12]
 15033 000a 381D     		adds	r0, r7, #4
 15034 000c 80E80600 		stm	r0, {r1, r2}
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 599


 15035 0010 7B62     		str	r3, [r7, #36]
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 15036              		.loc 4 506 42
 15037 0012 FC68     		ldr	r4, [r7, #12]
 15038 0014 01AA     		add	r2, sp, #4
 15039 0016 07F12C03 		add	r3, r7, #44
 15040 001a 93E80300 		ldm	r3, {r0, r1}
 15041 001e 82E80300 		stm	r2, {r0, r1}
 15042 0022 BB6A     		ldr	r3, [r7, #40]
 15043 0024 0093     		str	r3, [sp]
 15044 0026 7B6A     		ldr	r3, [r7, #36]
 15045 0028 3A1D     		adds	r2, r7, #4
 15046 002a 06CA     		ldm	r2, {r1, r2}
 15047 002c 2046     		mov	r0, r4
 15048 002e FFF7FEFF 		bl	_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 15049              		.loc 4 506 68
 15050 0032 00BF     		nop
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 15051              		.loc 4 506 71
 15052 0034 F868     		ldr	r0, [r7, #12]
 15053 0036 1437     		adds	r7, r7, #20
 15054              		.cfi_def_cfa_offset 20
 15055 0038 BD46     		mov	sp, r7
 15056              		.cfi_def_cfa_register 13
 15057              		@ sp needed
 15058 003a BDE89040 		pop	{r4, r7, lr}
 15059              		.cfi_restore 14
 15060              		.cfi_restore 7
 15061              		.cfi_restore 4
 15062              		.cfi_def_cfa_offset 8
 15063 003e 02B0     		add	sp, sp, #8
 15064              		.cfi_def_cfa_offset 0
 15065 0040 7047     		bx	lr
 15066              		.cfi_endproc
 15067              	.LFE5881:
 15069              		.section	.text._ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,"axG",%progbits,_ZSt14__
 15070              		.align	1
 15071              		.weak	_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
 15072              		.syntax unified
 15073              		.thumb
 15074              		.thumb_func
 15075              		.fpu fpv5-d16
 15077              	_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:
 15078              	.LFB5882:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 15079              		.loc 4 463 5
 15080              		.cfi_startproc
 15081              		@ args = 20, pretend = 8, frame = 16
 15082              		@ frame_needed = 1, uses_anonymous_args = 0
 15083 0000 82B0     		sub	sp, sp, #8
 15084              		.cfi_def_cfa_offset 8
 15085 0002 90B5     		push	{r4, r7, lr}
 15086              		.cfi_def_cfa_offset 20
 15087              		.cfi_offset 4, -20
 15088              		.cfi_offset 7, -16
 15089              		.cfi_offset 14, -12
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 600


 15090 0004 89B0     		sub	sp, sp, #36
 15091              		.cfi_def_cfa_offset 56
 15092 0006 04AF     		add	r7, sp, #16
 15093              		.cfi_def_cfa 7, 40
 15094 0008 F860     		str	r0, [r7, #12]
 15095 000a 381D     		adds	r0, r7, #4
 15096 000c 80E80600 		stm	r0, {r1, r2}
 15097 0010 7B62     		str	r3, [r7, #36]
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 15098              		.loc 4 472 30
 15099 0012 FC68     		ldr	r4, [r7, #12]
 15100 0014 01AA     		add	r2, sp, #4
 15101 0016 07F12C03 		add	r3, r7, #44
 15102 001a 93E80300 		ldm	r3, {r0, r1}
 15103 001e 82E80300 		stm	r2, {r0, r1}
 15104 0022 BB6A     		ldr	r3, [r7, #40]
 15105 0024 0093     		str	r3, [sp]
 15106 0026 7B6A     		ldr	r3, [r7, #36]
 15107 0028 3A1D     		adds	r2, r7, #4
 15108 002a 06CA     		ldm	r2, {r1, r2}
 15109 002c 2046     		mov	r0, r4
 15110 002e FFF7FEFF 		bl	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 15111              		.loc 4 472 56
 15112 0032 00BF     		nop
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 15113              		.loc 4 473 5
 15114 0034 F868     		ldr	r0, [r7, #12]
 15115 0036 1437     		adds	r7, r7, #20
 15116              		.cfi_def_cfa_offset 20
 15117 0038 BD46     		mov	sp, r7
 15118              		.cfi_def_cfa_register 13
 15119              		@ sp needed
 15120 003a BDE89040 		pop	{r4, r7, lr}
 15121              		.cfi_restore 14
 15122              		.cfi_restore 7
 15123              		.cfi_restore 4
 15124              		.cfi_def_cfa_offset 8
 15125 003e 02B0     		add	sp, sp, #8
 15126              		.cfi_def_cfa_offset 0
 15127 0040 7047     		bx	lr
 15128              		.cfi_endproc
 15129              	.LFE5882:
 15131              		.section	.text._ZSt12__miter_baseIPdEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E,"axG",
 15132              		.align	1
 15133              		.weak	_ZSt12__miter_baseIPdEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E
 15134              		.syntax unified
 15135              		.thumb
 15136              		.thumb_func
 15137              		.fpu fpv5-d16
 15139              	_ZSt12__miter_baseIPdEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E:
 15140              	.LFB5887:
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // [iterators.common] Common iterators
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   namespace __detail
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 601


1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   {
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<typename _It>
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       concept __common_iter_has_arrow = indirectly_readable<const _It>
1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	&& (requires(const _It& __it) { __it.operator->(); }
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    || is_reference_v<iter_reference_t<_It>>
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    || constructible_from<iter_value_t<_It>, iter_reference_t<_It>>);
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   } // namespace __detail
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /// An iterator/sentinel adaptor for representing a non-common range.
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<input_or_output_iterator _It, sentinel_for<_It> _Sent>
1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires (!same_as<_It, _Sent>) && copyable<_It>
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   class common_iterator
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   {
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<typename _Tp, typename _Up>
1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       static constexpr bool
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _S_noexcept1()
1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	if constexpr (is_trivially_default_constructible_v<_Tp>)
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  return is_nothrow_assignable_v<_Tp, _Up>;
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	else
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  return is_nothrow_constructible_v<_Tp, _Up>;
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<typename _It2, typename _Sent2>
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       static constexpr bool
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _S_noexcept()
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _S_noexcept1<_It, _It2>() && _S_noexcept1<_Sent, _Sent2>(); }
1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class _Proxy
1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       iter_value_t<_It> _M_keep;
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Proxy(iter_reference_t<_It>&& __x)
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_keep(std::move(__x)) { }
1638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend class common_iterator;
1640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
1642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       const iter_value_t<_It>*
1643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const
1644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return std::__addressof(_M_keep); }
1645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
1646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   public:
1648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr
1649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     common_iterator()
1650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     noexcept(is_nothrow_default_constructible_v<_It>)
1651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : _M_it(), _M_index(0)
1652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { }
1653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr
1655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     common_iterator(_It __i)
1656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     noexcept(is_nothrow_move_constructible_v<_It>)
1657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : _M_it(std::move(__i)), _M_index(0)
1658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { }
1659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 602


1660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr
1661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     common_iterator(_Sent __s)
1662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     noexcept(is_nothrow_move_constructible_v<_Sent>)
1663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : _M_sent(std::move(__s)), _M_index(1)
1664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { }
1665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<typename _It2, typename _Sent2>
1667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires convertible_to<const _It2&, _It>
1668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	&& convertible_to<const _Sent2&, _Sent>
1669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr
1670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       common_iterator(const common_iterator<_It2, _Sent2>& __x)
1671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(_S_noexcept<const _It2&, const _Sent2&>())
1672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_valueless(), _M_index(__x._M_index)
1673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	if (_M_index == 0)
1675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  {
1676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    if constexpr (is_trivially_default_constructible_v<_It>)
1677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      _M_it = std::move(__x._M_it);
1678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    else
1679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      ::new((void*)std::__addressof(_M_it)) _It(__x._M_it);
1680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  }
1681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	else if (_M_index == 1)
1682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  {
1683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    if constexpr (is_trivially_default_constructible_v<_Sent>)
1684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      _M_sent = std::move(__x._M_sent);
1685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    else
1686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      ::new((void*)std::__addressof(_M_sent)) _Sent(__x._M_sent);
1687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  }
1688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr
1691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     common_iterator(const common_iterator& __x)
1692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     noexcept(_S_noexcept<const _It&, const _Sent&>())
1693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : _M_valueless(), _M_index(__x._M_index)
1694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
1695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       if (_M_index == 0)
1696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{
1697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  if constexpr (is_trivially_default_constructible_v<_It>)
1698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    _M_it = std::move(__x._M_it);
1699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  else
1700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    ::new((void*)std::__addressof(_M_it)) _It(__x._M_it);
1701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	}
1702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       else if (_M_index == 1)
1703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{
1704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  if constexpr (is_trivially_default_constructible_v<_Sent>)
1705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    _M_sent = std::move(__x._M_sent);
1706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  else
1707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    ::new((void*)std::__addressof(_M_sent)) _Sent(__x._M_sent);
1708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	}
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     }
1710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     common_iterator&
1712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator=(const common_iterator& __x)
1713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     noexcept(is_nothrow_copy_assignable_v<_It>
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	     && is_nothrow_copy_assignable_v<_Sent>
1715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	     && is_nothrow_copy_constructible_v<_It>
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	     && is_nothrow_copy_constructible_v<_Sent>)
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 603


1717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
1718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       return this->operator=<_It, _Sent>(__x);
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     }
1720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<typename _It2, typename _Sent2>
1722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires convertible_to<const _It2&, _It>
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	&& convertible_to<const _Sent2&, _Sent>
1724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	&& assignable_from<_It&, const _It2&>
1725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	&& assignable_from<_Sent&, const _Sent2&>
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       common_iterator&
1727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const common_iterator<_It2, _Sent2>& __x)
1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(is_nothrow_constructible_v<_It, const _It2&>
1729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       && is_nothrow_constructible_v<_Sent, const _Sent2&>
1730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       && is_nothrow_assignable_v<_It, const _It2&>
1731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       && is_nothrow_assignable_v<_Sent, const _Sent2&>)
1732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	switch(_M_index << 2 | __x._M_index)
1734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  {
1735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  case 0b0000:
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    _M_it = __x._M_it;
1737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    break;
1738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  case 0b0101:
1739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    _M_sent = __x._M_sent;
1740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    break;
1741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  case 0b0001:
1742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    _M_it.~_It();
1743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    _M_index = -1;
1744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    [[fallthrough]];
1745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  case 0b1001:
1746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    ::new((void*)std::__addressof(_M_sent)) _Sent(__x._M_sent);
1747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    _M_index = 1;
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    break;
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  case 0b0100:
1750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    _M_sent.~_Sent();
1751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    _M_index = -1;
1752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    [[fallthrough]];
1753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  case 0b1000:
1754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    ::new((void*)std::__addressof(_M_it)) _It(__x._M_it);
1755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    _M_index = 0;
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    break;
1757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  default:
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    __glibcxx_assert(__x._M_has_value());
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    __builtin_unreachable();
1760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  }
1761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     ~common_iterator()
1765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
1766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       switch (_M_index)
1767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{
1768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	case 0:
1769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  _M_it.~_It();
1770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  break;
1771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	case 1:
1772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  _M_sent.~_Sent();
1773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  break;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 604


1774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	}
1775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     }
1776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     decltype(auto)
1778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator*()
1779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
1780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __glibcxx_assert(_M_index == 0);
1781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       return *_M_it;
1782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     }
1783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     decltype(auto)
1785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator*() const requires __detail::__dereferenceable<const _It>
1786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
1787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __glibcxx_assert(_M_index == 0);
1788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       return *_M_it;
1789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     }
1790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     decltype(auto)
1792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator->() const requires __detail::__common_iter_has_arrow<_It>
1793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
1794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __glibcxx_assert(_M_index == 0);
1795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       if constexpr (is_pointer_v<_It> || requires { _M_it.operator->(); })
1796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return _M_it;
1797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       else if constexpr (is_reference_v<iter_reference_t<_It>>)
1798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{
1799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto&& __tmp = *_M_it;
1800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  return std::__addressof(__tmp);
1801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	}
1802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       else
1803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return _Proxy{*_M_it};
1804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     }
1805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     common_iterator&
1807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator++()
1808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
1809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __glibcxx_assert(_M_index == 0);
1810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       ++_M_it;
1811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       return *this;
1812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     }
1813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     decltype(auto)
1815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator++(int)
1816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
1817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __glibcxx_assert(_M_index == 0);
1818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       if constexpr (forward_iterator<_It>)
1819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{
1820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  common_iterator __tmp = *this;
1821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  ++*this;
1822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  return __tmp;
1823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	}
1824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       else
1825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return _M_it++;
1826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     }
1827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<typename _It2, sentinel_for<_It> _Sent2>
1829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires sentinel_for<_Sent, _It2>
1830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend bool
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 605


1831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator==(const common_iterator& __x,
1832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 const common_iterator<_It2, _Sent2>& __y)
1833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	switch(__x._M_index << 2 | __y._M_index)
1835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  {
1836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  case 0b0000:
1837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  case 0b0101:
1838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    return true;
1839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  case 0b0001:
1840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    return __x._M_it == __y._M_sent;
1841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  case 0b0100:
1842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    return __x._M_sent == __y._M_it;
1843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  default:
1844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    __glibcxx_assert(__x._M_has_value());
1845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    __glibcxx_assert(__y._M_has_value());
1846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    __builtin_unreachable();
1847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  }
1848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<typename _It2, sentinel_for<_It> _Sent2>
1851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires sentinel_for<_Sent, _It2> && equality_comparable_with<_It, _It2>
1852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend bool
1853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator==(const common_iterator& __x,
1854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 const common_iterator<_It2, _Sent2>& __y)
1855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	switch(__x._M_index << 2 | __y._M_index)
1857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  {
1858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  case 0b0101:
1859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    return true;
1860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  case 0b0000:
1861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    return __x._M_it == __y._M_it;
1862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  case 0b0001:
1863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    return __x._M_it == __y._M_sent;
1864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  case 0b0100:
1865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    return __x._M_sent == __y._M_it;
1866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  default:
1867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    __glibcxx_assert(__x._M_has_value());
1868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    __glibcxx_assert(__y._M_has_value());
1869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    __builtin_unreachable();
1870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  }
1871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<sized_sentinel_for<_It> _It2, sized_sentinel_for<_It> _Sent2>
1874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires sized_sentinel_for<_Sent, _It2>
1875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend iter_difference_t<_It2>
1876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(const common_iterator& __x,
1877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		const common_iterator<_It2, _Sent2>& __y)
1878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	switch(__x._M_index << 2 | __y._M_index)
1880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  {
1881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  case 0b0101:
1882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    return 0;
1883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  case 0b0000:
1884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    return __x._M_it - __y._M_it;
1885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  case 0b0001:
1886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    return __x._M_it - __y._M_sent;
1887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  case 0b0100:
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 606


1888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    return __x._M_sent - __y._M_it;
1889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  default:
1890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    __glibcxx_assert(__x._M_has_value());
1891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    __glibcxx_assert(__y._M_has_value());
1892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    __builtin_unreachable();
1893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  }
1894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     friend iter_rvalue_reference_t<_It>
1897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     iter_move(const common_iterator& __i)
1898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     noexcept(noexcept(ranges::iter_move(std::declval<const _It&>())))
1899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires input_iterator<_It>
1900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
1901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __glibcxx_assert(__i._M_index == 0);
1902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       return ranges::iter_move(__i._M_it);
1903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     }
1904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<indirectly_swappable<_It> _It2, typename _Sent2>
1906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend void
1907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       iter_swap(const common_iterator& __x,
1908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		const common_iterator<_It2, _Sent2>& __y)
1909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(noexcept(ranges::iter_swap(std::declval<const _It&>(),
1910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					  std::declval<const _It2&>())))
1911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	__glibcxx_assert(__x._M_index == 0);
1913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	__glibcxx_assert(__y._M_index == 0);
1914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return ranges::iter_swap(__x._M_it, __y._M_it);
1915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   private:
1918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<input_or_output_iterator _It2, sentinel_for<_It2> _Sent2>
1919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend class common_iterator;
1920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     bool _M_has_value() const noexcept { return _M_index < 2; }
1922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     union
1924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
1925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _It _M_it;
1926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Sent _M_sent;
1927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       unsigned char _M_valueless;
1928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
1929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     unsigned char _M_index; // 0==_M_it, 1==_M_sent, 2==valueless
1930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   };
1931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _It, typename _Sent>
1933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     struct incrementable_traits<common_iterator<_It, _Sent>>
1934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
1935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = iter_difference_t<_It>;
1936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
1937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   namespace __detail
1939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   {
1940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // FIXME: This has to be at namespace-scope because of PR 92103.
1941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<typename _It, typename _Sent>
1942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       struct __common_iter_ptr
1943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	using type = void;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 607


1945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       };
1946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<typename _It, typename _Sent>
1948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires __detail::__common_iter_has_arrow<_It>
1949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       struct __common_iter_ptr<_It, _Sent>
1950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	using common_iterator = std::common_iterator<_It, _Sent>;
1952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	using type
1954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  = decltype(std::declval<const common_iterator&>().operator->());
1955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       };
1956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   } // namespace __detail
1957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<input_iterator _It, typename _Sent>
1959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     struct iterator_traits<common_iterator<_It, _Sent>>
1960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
1961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept = conditional_t<forward_iterator<_It>,
1962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    forward_iterator_tag, input_iterator_tag>;
1963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_category = __detail::__clamp_iter_cat<
1964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	typename iterator_traits<_It>::iterator_category,
1965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	forward_iterator_tag, input_iterator_tag>;
1966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using value_type = iter_value_t<_It>;
1967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = iter_difference_t<_It>;
1968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using pointer = typename __detail::__common_iter_ptr<_It, _Sent>::type;
1969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using reference = iter_reference_t<_It>;
1970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
1971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // [iterators.counted] Counted iterators
1973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /// An iterator adaptor that keeps track of the distance to the end.
1975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<input_or_output_iterator _It>
1976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class counted_iterator
1977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
1978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
1979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_type = _It;
1980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr counted_iterator() = default;
1982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr
1984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       counted_iterator(_It __i, iter_difference_t<_It> __n)
1985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(std::move(__i)), _M_length(__n)
1986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { __glibcxx_assert(__n >= 0); }
1987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _It2>
1989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	requires convertible_to<const _It2&, _It>
1990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	constexpr
1991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	counted_iterator(const counted_iterator<_It2>& __x)
1992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	: _M_current(__x._M_current), _M_length(__x._M_length)
1993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{ }
1994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _It2>
1996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	requires assignable_from<_It&, const _It2&>
1997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	constexpr counted_iterator&
1998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	operator=(const counted_iterator<_It2>& __x)
1999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{
2000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  _M_current = __x._M_current;
2001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  _M_length = __x._M_length;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 608


2002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  return *this;
2003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	}
2004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr _It
2006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const &
2007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(is_nothrow_copy_constructible_v<_It>)
2008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires copy_constructible<_It>
2009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
2010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr _It
2012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() &&
2013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(is_nothrow_move_constructible_v<_It>)
2014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return std::move(_M_current); }
2015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr iter_difference_t<_It>
2017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       count() const noexcept { return _M_length; }
2018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr decltype(auto)
2020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
2021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(noexcept(*_M_current))
2022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *_M_current; }
2023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr decltype(auto)
2025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const
2026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(noexcept(*_M_current))
2027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires __detail::__dereferenceable<const _It>
2028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *_M_current; }
2029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr counted_iterator&
2031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
2032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
2033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	__glibcxx_assert(_M_length > 0);
2034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++_M_current;
2035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--_M_length;
2036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
2037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
2038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       decltype(auto)
2040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
2041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
2042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	__glibcxx_assert(_M_length > 0);
2043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--_M_length;
2044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	__try
2045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  {
2046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    return _M_current++;
2047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  } __catch(...) {
2048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    ++_M_length;
2049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	    __throw_exception_again;
2050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  }
2051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
2053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr counted_iterator
2055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int) requires forward_iterator<_It>
2056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
2057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	auto __tmp = *this;
2058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++*this;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 609


2059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
2060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
2061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr counted_iterator&
2063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--() requires bidirectional_iterator<_It>
2064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
2065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--_M_current;
2066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++_M_length;
2067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
2068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
2069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr counted_iterator
2071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--(int) requires bidirectional_iterator<_It>
2072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
2073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	auto __tmp = *this;
2074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--*this;
2075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
2076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
2077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr counted_iterator
2079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+(iter_difference_t<_It> __n) const
2080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	requires random_access_iterator<_It>
2081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return counted_iterator(_M_current + __n, _M_length - __n); }
2082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend constexpr counted_iterator
2084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+(iter_difference_t<_It> __n, const counted_iterator& __x)
2085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires random_access_iterator<_It>
2086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __x + __n; }
2087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr counted_iterator&
2089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+=(iter_difference_t<_It> __n)
2090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires random_access_iterator<_It>
2091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
2092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	__glibcxx_assert(__n <= _M_length);
2093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_M_current += __n;
2094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_M_length -= __n;
2095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
2096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
2097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr counted_iterator
2099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(iter_difference_t<_It> __n) const
2100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires random_access_iterator<_It>
2101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return counted_iterator(_M_current - __n, _M_length + __n); }
2102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<common_with<_It> _It2>
2104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	friend constexpr iter_difference_t<_It2>
2105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	operator-(const counted_iterator& __x,
2106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		  const counted_iterator<_It2>& __y)
2107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{ return __y._M_length - __x._M_length; }
2108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend constexpr iter_difference_t<_It>
2110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(const counted_iterator& __x, default_sentinel_t)
2111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return -__x._M_length; }
2112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend constexpr iter_difference_t<_It>
2114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(default_sentinel_t, const counted_iterator& __y)
2115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __y._M_length; }
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 610


2116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr counted_iterator&
2118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-=(iter_difference_t<_It> __n)
2119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires random_access_iterator<_It>
2120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
2121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	__glibcxx_assert(-__n <= _M_length);
2122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_M_current -= __n;
2123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_M_length += __n;
2124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
2125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
2126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr decltype(auto)
2128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator[](iter_difference_t<_It> __n) const
2129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(noexcept(_M_current[__n]))
2130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires random_access_iterator<_It>
2131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
2132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	__glibcxx_assert(__n < _M_length);
2133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return _M_current[__n];
2134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
2135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<common_with<_It> _It2>
2137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	friend constexpr bool
2138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	operator==(const counted_iterator& __x,
2139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		   const counted_iterator<_It2>& __y)
2140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{ return __x._M_length == __y._M_length; }
2141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend constexpr bool
2143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator==(const counted_iterator& __x, default_sentinel_t)
2144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __x._M_length == 0; }
2145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<common_with<_It> _It2>
2147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	friend constexpr strong_ordering
2148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	operator<=>(const counted_iterator& __x,
2149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		    const counted_iterator<_It2>& __y)
2150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{ return __y._M_length <=> __x._M_length; }
2151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend constexpr iter_rvalue_reference_t<_It>
2153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       iter_move(const counted_iterator& __i)
2154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(noexcept(ranges::iter_move(__i._M_current)))
2155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires input_iterator<_It>
2156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return ranges::iter_move(__i._M_current); }
2157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<indirectly_swappable<_It> _It2>
2159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	friend constexpr void
2160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter_swap(const counted_iterator& __x,
2161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		  const counted_iterator<_It2>& __y)
2162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	noexcept(noexcept(ranges::iter_swap(__x._M_current, __y._M_current)))
2163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{ ranges::iter_swap(__x._M_current, __y._M_current); }
2164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     private:
2166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<input_or_output_iterator _It2> friend class counted_iterator;
2167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _It _M_current = _It();
2169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       iter_difference_t<_It> _M_length = 0;
2170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
2171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _It>
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 611


2173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     struct incrementable_traits<counted_iterator<_It>>
2174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
2175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = iter_difference_t<_It>;
2176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
2177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<input_iterator _It>
2179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     struct iterator_traits<counted_iterator<_It>> : iterator_traits<_It>
2180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
2181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using pointer = void;
2182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
2183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++20
2184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // @} group iterators
2186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
2188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
2189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __niter_base(move_iterator<_Iterator> __it)
2190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(make_move_iterator(__niter_base(__it.base())))
2191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return make_move_iterator(__niter_base(__it.base())); }
2192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
2194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     struct __is_move_iterator<move_iterator<_Iterator> >
2195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
2196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       enum { __value = 1 };
2197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef __true_type __type;
2198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
2199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
2200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
2201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
2202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __miter_base(move_iterator<_Iterator> __it)
 15141              		.loc 35 2202 5
 15142              		.cfi_startproc
 15143              		@ args = 0, pretend = 0, frame = 8
 15144              		@ frame_needed = 1, uses_anonymous_args = 0
 15145 0000 80B5     		push	{r7, lr}
 15146              		.cfi_def_cfa_offset 8
 15147              		.cfi_offset 7, -8
 15148              		.cfi_offset 14, -4
 15149 0002 82B0     		sub	sp, sp, #8
 15150              		.cfi_def_cfa_offset 16
 15151 0004 00AF     		add	r7, sp, #0
 15152              		.cfi_def_cfa_register 7
 15153 0006 7860     		str	r0, [r7, #4]
2203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__miter_base(__it.base()))
2204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __miter_base(__it.base()); }
 15154              		.loc 35 2204 26
 15155 0008 3B1D     		adds	r3, r7, #4
 15156 000a 1846     		mov	r0, r3
 15157 000c FFF7FEFF 		bl	_ZNKSt13move_iteratorIPdE4baseEv
 15158 0010 0346     		mov	r3, r0
 15159 0012 1846     		mov	r0, r3
 15160 0014 FFF7FEFF 		bl	_ZSt12__miter_baseIPdET_S1_
 15161 0018 0346     		mov	r3, r0
 15162              		.loc 35 2204 41
 15163 001a 1846     		mov	r0, r3
 15164 001c 0837     		adds	r7, r7, #8
 15165              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 612


 15166 001e BD46     		mov	sp, r7
 15167              		.cfi_def_cfa_register 13
 15168              		@ sp needed
 15169 0020 80BD     		pop	{r7, pc}
 15170              		.cfi_endproc
 15171              	.LFE5887:
 15173              		.section	.text._ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_,"axG",%progbits,_ZSt13__copy_move_aILb1E
 15174              		.align	1
 15175              		.weak	_ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_
 15176              		.syntax unified
 15177              		.thumb
 15178              		.thumb_func
 15179              		.fpu fpv5-d16
 15181              	_ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_:
 15182              	.LFB5888:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 15183              		.loc 4 511 5
 15184              		.cfi_startproc
 15185              		@ args = 0, pretend = 0, frame = 16
 15186              		@ frame_needed = 1, uses_anonymous_args = 0
 15187 0000 B0B5     		push	{r4, r5, r7, lr}
 15188              		.cfi_def_cfa_offset 16
 15189              		.cfi_offset 4, -16
 15190              		.cfi_offset 5, -12
 15191              		.cfi_offset 7, -8
 15192              		.cfi_offset 14, -4
 15193 0002 84B0     		sub	sp, sp, #16
 15194              		.cfi_def_cfa_offset 32
 15195 0004 00AF     		add	r7, sp, #0
 15196              		.cfi_def_cfa_register 7
 15197 0006 F860     		str	r0, [r7, #12]
 15198 0008 B960     		str	r1, [r7, #8]
 15199 000a 7A60     		str	r2, [r7, #4]
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
 15200              		.loc 4 513 31
 15201 000c F868     		ldr	r0, [r7, #12]
 15202 000e FFF7FEFF 		bl	_ZSt12__niter_baseIPdET_S1_
 15203 0012 0446     		mov	r4, r0
 15204 0014 B868     		ldr	r0, [r7, #8]
 15205 0016 FFF7FEFF 		bl	_ZSt12__niter_baseIPdET_S1_
 15206 001a 0546     		mov	r5, r0
 15207 001c 7B68     		ldr	r3, [r7, #4]
 15208 001e 1846     		mov	r0, r3
 15209 0020 FFF7FEFF 		bl	_ZSt12__niter_baseIPdET_S1_
 15210 0024 0346     		mov	r3, r0
 15211 0026 1A46     		mov	r2, r3
 15212 0028 2946     		mov	r1, r5
 15213 002a 2046     		mov	r0, r4
 15214 002c FFF7FEFF 		bl	_ZSt14__copy_move_a1ILb1EPdS0_ET1_T0_S2_S1_
 15215 0030 0246     		mov	r2, r0
 15216 0032 3B1D     		adds	r3, r7, #4
 15217 0034 1146     		mov	r1, r2
 15218 0036 1846     		mov	r0, r3
 15219 0038 FFF7FEFF 		bl	_ZSt12__niter_wrapIPdET_RKS1_S1_
 15220 003c 0346     		mov	r3, r0
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 15221              		.loc 4 517 5
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 613


 15222 003e 1846     		mov	r0, r3
 15223 0040 1037     		adds	r7, r7, #16
 15224              		.cfi_def_cfa_offset 16
 15225 0042 BD46     		mov	sp, r7
 15226              		.cfi_def_cfa_register 13
 15227              		@ sp needed
 15228 0044 B0BD     		pop	{r4, r5, r7, pc}
 15229              		.cfi_endproc
 15230              	.LFE5888:
 15232              		.section	.text._ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bI
 15233              		.align	1
 15234              		.weak	_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_
 15235              		.syntax unified
 15236              		.thumb
 15237              		.thumb_func
 15238              		.fpu fpv5-d16
 15240              	_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iterato
 15241              	.LFB5889:
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 15242              		.loc 4 646 2
 15243              		.cfi_startproc
 15244              		@ args = 20, pretend = 8, frame = 40
 15245              		@ frame_needed = 1, uses_anonymous_args = 0
 15246 0000 82B0     		sub	sp, sp, #8
 15247              		.cfi_def_cfa_offset 8
 15248 0002 80B5     		push	{r7, lr}
 15249              		.cfi_def_cfa_offset 16
 15250              		.cfi_offset 7, -16
 15251              		.cfi_offset 14, -12
 15252 0004 8AB0     		sub	sp, sp, #40
 15253              		.cfi_def_cfa_offset 56
 15254 0006 00AF     		add	r7, sp, #0
 15255              		.cfi_def_cfa_register 7
 15256 0008 F860     		str	r0, [r7, #12]
 15257 000a 381D     		adds	r0, r7, #4
 15258 000c 80E80600 		stm	r0, {r1, r2}
 15259 0010 7B63     		str	r3, [r7, #52]
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __n > 0; --__n)
 15260              		.loc 4 649 19
 15261 0012 3A1D     		adds	r2, r7, #4
 15262 0014 07F13403 		add	r3, r7, #52
 15263 0018 1146     		mov	r1, r2
 15264 001a 1846     		mov	r0, r3
 15265 001c FFF7FEFF 		bl	_ZStmiRKSt18_Bit_iterator_baseS1_
 15266 0020 7862     		str	r0, [r7, #36]
 15267              	.L641:
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = *--__last;
 15268              		.loc 4 650 15 discriminator 2
 15269 0022 7B6A     		ldr	r3, [r7, #36]
 15270 0024 002B     		cmp	r3, #0
 15271 0026 23DD     		ble	.L640
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 15272              		.loc 4 651 7 discriminator 1
 15273 0028 07F13C03 		add	r3, r7, #60
 15274 002c 1846     		mov	r0, r3
 15275 002e FFF7FEFF 		bl	_ZNSt13_Bit_iteratormmEv
 15276 0032 0246     		mov	r2, r0
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 614


 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 15277              		.loc 4 651 6 discriminator 1
 15278 0034 07F11403 		add	r3, r7, #20
 15279 0038 1146     		mov	r1, r2
 15280 003a 1846     		mov	r0, r3
 15281 003c FFF7FEFF 		bl	_ZNKSt13_Bit_iteratordeEv
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 15282              		.loc 4 651 21 discriminator 1
 15283 0040 07F13403 		add	r3, r7, #52
 15284 0044 1846     		mov	r0, r3
 15285 0046 FFF7FEFF 		bl	_ZNSt13_Bit_iteratormmEv
 15286 004a 0246     		mov	r2, r0
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 15287              		.loc 4 651 20 discriminator 1
 15288 004c 07F11C03 		add	r3, r7, #28
 15289 0050 1146     		mov	r1, r2
 15290 0052 1846     		mov	r0, r3
 15291 0054 FFF7FEFF 		bl	_ZNKSt13_Bit_iteratordeEv
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 15292              		.loc 4 651 18 discriminator 1
 15293 0058 07F11C02 		add	r2, r7, #28
 15294 005c 07F11403 		add	r3, r7, #20
 15295 0060 1146     		mov	r1, r2
 15296 0062 1846     		mov	r0, r3
 15297 0064 FFF7FEFF 		bl	_ZNSt14_Bit_referenceaSERKS_
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = *--__last;
 15298              		.loc 4 650 4 discriminator 1
 15299 0068 7B6A     		ldr	r3, [r7, #36]
 15300 006a 013B     		subs	r3, r3, #1
 15301 006c 7B62     		str	r3, [r7, #36]
 15302 006e D8E7     		b	.L641
 15303              	.L640:
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 15304              		.loc 4 652 11
 15305 0070 FB68     		ldr	r3, [r7, #12]
 15306 0072 1A46     		mov	r2, r3
 15307 0074 07F13C03 		add	r3, r7, #60
 15308 0078 93E80300 		ldm	r3, {r0, r1}
 15309 007c 82E80300 		stm	r2, {r0, r1}
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 15310              		.loc 4 653 2
 15311 0080 F868     		ldr	r0, [r7, #12]
 15312 0082 2837     		adds	r7, r7, #40
 15313              		.cfi_def_cfa_offset 16
 15314 0084 BD46     		mov	sp, r7
 15315              		.cfi_def_cfa_register 13
 15316              		@ sp needed
 15317 0086 BDE88040 		pop	{r7, lr}
 15318              		.cfi_restore 14
 15319              		.cfi_restore 7
 15320              		.cfi_def_cfa_offset 8
 15321 008a 02B0     		add	sp, sp, #8
 15322              		.cfi_def_cfa_offset 0
 15323 008c 7047     		bx	lr
 15324              		.cfi_endproc
 15325              	.LFE5889:
 15327              		.section	.text._ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_,"axG",%progbits,_ZSt14__copy_move_a2ILb
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 615


 15328              		.align	1
 15329              		.weak	_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_
 15330              		.syntax unified
 15331              		.thumb
 15332              		.thumb_func
 15333              		.fpu fpv5-d16
 15335              	_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_:
 15336              	.LFB5890:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 15337              		.loc 4 463 5
 15338              		.cfi_startproc
 15339              		@ args = 0, pretend = 0, frame = 16
 15340              		@ frame_needed = 1, uses_anonymous_args = 0
 15341 0000 80B5     		push	{r7, lr}
 15342              		.cfi_def_cfa_offset 8
 15343              		.cfi_offset 7, -8
 15344              		.cfi_offset 14, -4
 15345 0002 84B0     		sub	sp, sp, #16
 15346              		.cfi_def_cfa_offset 24
 15347 0004 00AF     		add	r7, sp, #0
 15348              		.cfi_def_cfa_register 7
 15349 0006 F860     		str	r0, [r7, #12]
 15350 0008 B960     		str	r1, [r7, #8]
 15351 000a 7A60     		str	r2, [r7, #4]
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 15352              		.loc 4 472 30
 15353 000c 7A68     		ldr	r2, [r7, #4]
 15354 000e B968     		ldr	r1, [r7, #8]
 15355 0010 F868     		ldr	r0, [r7, #12]
 15356 0012 FFF7FEFF 		bl	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_
 15357 0016 0346     		mov	r3, r0
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 15358              		.loc 4 473 5
 15359 0018 1846     		mov	r0, r3
 15360 001a 1037     		adds	r7, r7, #16
 15361              		.cfi_def_cfa_offset 8
 15362 001c BD46     		mov	sp, r7
 15363              		.cfi_def_cfa_register 13
 15364              		@ sp needed
 15365 001e 80BD     		pop	{r7, pc}
 15366              		.cfi_endproc
 15367              	.LFE5890:
 15369              		.section	.text._ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_,"axG
 15370              		.align	1
 15371              		.weak	_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
 15372              		.syntax unified
 15373              		.thumb
 15374              		.thumb_func
 15375              		.fpu fpv5-d16
 15377              	_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_:
 15378              	.LFB5891:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 15379              		.loc 4 463 5
 15380              		.cfi_startproc
 15381              		@ args = 20, pretend = 8, frame = 16
 15382              		@ frame_needed = 1, uses_anonymous_args = 0
 15383 0000 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 616


 15384              		.cfi_def_cfa_offset 8
 15385 0002 90B5     		push	{r4, r7, lr}
 15386              		.cfi_def_cfa_offset 20
 15387              		.cfi_offset 4, -20
 15388              		.cfi_offset 7, -16
 15389              		.cfi_offset 14, -12
 15390 0004 89B0     		sub	sp, sp, #36
 15391              		.cfi_def_cfa_offset 56
 15392 0006 04AF     		add	r7, sp, #16
 15393              		.cfi_def_cfa 7, 40
 15394 0008 F860     		str	r0, [r7, #12]
 15395 000a 381D     		adds	r0, r7, #4
 15396 000c 80E80600 		stm	r0, {r1, r2}
 15397 0010 7B62     		str	r3, [r7, #36]
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 15398              		.loc 4 472 30
 15399 0012 FC68     		ldr	r4, [r7, #12]
 15400 0014 01AA     		add	r2, sp, #4
 15401 0016 07F12C03 		add	r3, r7, #44
 15402 001a 93E80300 		ldm	r3, {r0, r1}
 15403 001e 82E80300 		stm	r2, {r0, r1}
 15404 0022 BB6A     		ldr	r3, [r7, #40]
 15405 0024 0093     		str	r3, [sp]
 15406 0026 7B6A     		ldr	r3, [r7, #36]
 15407 0028 3A1D     		adds	r2, r7, #4
 15408 002a 06CA     		ldm	r2, {r1, r2}
 15409 002c 2046     		mov	r0, r4
 15410 002e FFF7FEFF 		bl	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 15411              		.loc 4 472 56
 15412 0032 00BF     		nop
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 15413              		.loc 4 473 5
 15414 0034 F868     		ldr	r0, [r7, #12]
 15415 0036 1437     		adds	r7, r7, #20
 15416              		.cfi_def_cfa_offset 20
 15417 0038 BD46     		mov	sp, r7
 15418              		.cfi_def_cfa_register 13
 15419              		@ sp needed
 15420 003a BDE89040 		pop	{r4, r7, lr}
 15421              		.cfi_restore 14
 15422              		.cfi_restore 7
 15423              		.cfi_restore 4
 15424              		.cfi_def_cfa_offset 8
 15425 003e 02B0     		add	sp, sp, #8
 15426              		.cfi_def_cfa_offset 0
 15427 0040 7047     		bx	lr
 15428              		.cfi_endproc
 15429              	.LFE5891:
 15431              		.section	.text._ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iterat
 15432              		.align	1
 15433              		.weak	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0
 15434              		.syntax unified
 15435              		.thumb
 15436              		.thumb_func
 15437              		.fpu fpv5-d16
 15439              	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 617


 15440              	.LFB5892:
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 15441              		.loc 4 375 2
 15442              		.cfi_startproc
 15443              		@ args = 20, pretend = 8, frame = 40
 15444              		@ frame_needed = 1, uses_anonymous_args = 0
 15445 0000 82B0     		sub	sp, sp, #8
 15446              		.cfi_def_cfa_offset 8
 15447 0002 80B5     		push	{r7, lr}
 15448              		.cfi_def_cfa_offset 16
 15449              		.cfi_offset 7, -16
 15450              		.cfi_offset 14, -12
 15451 0004 8AB0     		sub	sp, sp, #40
 15452              		.cfi_def_cfa_offset 56
 15453 0006 00AF     		add	r7, sp, #0
 15454              		.cfi_def_cfa_register 7
 15455 0008 F860     		str	r0, [r7, #12]
 15456 000a 381D     		adds	r0, r7, #4
 15457 000c 80E80600 		stm	r0, {r1, r2}
 15458 0010 7B63     		str	r3, [r7, #52]
 15459              	.LBB87:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 15460              		.loc 4 378 31
 15461 0012 3A1D     		adds	r2, r7, #4
 15462 0014 07F13403 		add	r3, r7, #52
 15463 0018 1146     		mov	r1, r2
 15464 001a 1846     		mov	r0, r3
 15465 001c FFF7FEFF 		bl	_ZStmiRKSt18_Bit_iterator_baseS1_
 15466 0020 7862     		str	r0, [r7, #36]
 15467              	.L649:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 15468              		.loc 4 378 46 discriminator 3
 15469 0022 7B6A     		ldr	r3, [r7, #36]
 15470 0024 002B     		cmp	r3, #0
 15471 0026 23DD     		ble	.L648
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 15472              		.loc 4 380 8 discriminator 2
 15473 0028 07F11403 		add	r3, r7, #20
 15474 002c 07F13C02 		add	r2, r7, #60
 15475 0030 1146     		mov	r1, r2
 15476 0032 1846     		mov	r0, r3
 15477 0034 FFF7FEFF 		bl	_ZNKSt13_Bit_iteratordeEv
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 15478              		.loc 4 380 20 discriminator 2
 15479 0038 07F11C03 		add	r3, r7, #28
 15480 003c 3A1D     		adds	r2, r7, #4
 15481 003e 1146     		mov	r1, r2
 15482 0040 1846     		mov	r0, r3
 15483 0042 FFF7FEFF 		bl	_ZNKSt13_Bit_iteratordeEv
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 15484              		.loc 4 380 18 discriminator 2
 15485 0046 07F11C02 		add	r2, r7, #28
 15486 004a 07F11403 		add	r3, r7, #20
 15487 004e 1146     		mov	r1, r2
 15488 0050 1846     		mov	r0, r3
 15489 0052 FFF7FEFF 		bl	_ZNSt14_Bit_referenceaSERKS_
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 618


 15490              		.loc 4 381 8 discriminator 2
 15491 0056 3B1D     		adds	r3, r7, #4
 15492 0058 1846     		mov	r0, r3
 15493 005a FFF7FEFF 		bl	_ZNSt13_Bit_iteratorppEv
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 15494              		.loc 4 382 8 discriminator 2
 15495 005e 07F13C03 		add	r3, r7, #60
 15496 0062 1846     		mov	r0, r3
 15497 0064 FFF7FEFF 		bl	_ZNSt13_Bit_iteratorppEv
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 15498              		.loc 4 378 4 discriminator 2
 15499 0068 7B6A     		ldr	r3, [r7, #36]
 15500 006a 013B     		subs	r3, r3, #1
 15501 006c 7B62     		str	r3, [r7, #36]
 15502 006e D8E7     		b	.L649
 15503              	.L648:
 15504              	.LBE87:
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 15505              		.loc 4 384 11
 15506 0070 FB68     		ldr	r3, [r7, #12]
 15507 0072 1A46     		mov	r2, r3
 15508 0074 07F13C03 		add	r3, r7, #60
 15509 0078 93E80300 		ldm	r3, {r0, r1}
 15510 007c 82E80300 		stm	r2, {r0, r1}
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 15511              		.loc 4 385 2
 15512 0080 F868     		ldr	r0, [r7, #12]
 15513 0082 2837     		adds	r7, r7, #40
 15514              		.cfi_def_cfa_offset 16
 15515 0084 BD46     		mov	sp, r7
 15516              		.cfi_def_cfa_register 13
 15517              		@ sp needed
 15518 0086 BDE88040 		pop	{r7, lr}
 15519              		.cfi_restore 14
 15520              		.cfi_restore 7
 15521              		.cfi_def_cfa_offset 8
 15522 008a 02B0     		add	sp, sp, #8
 15523              		.cfi_def_cfa_offset 0
 15524 008c 7047     		bx	lr
 15525              		.cfi_endproc
 15526              	.LFE5892:
 15528              		.section	.text._ZNKSt13move_iteratorIPdE4baseEv,"axG",%progbits,_ZNKSt13move_iteratorIPdE4baseEv,c
 15529              		.align	1
 15530              		.weak	_ZNKSt13move_iteratorIPdE4baseEv
 15531              		.syntax unified
 15532              		.thumb
 15533              		.thumb_func
 15534              		.fpu fpv5-d16
 15536              	_ZNKSt13move_iteratorIPdE4baseEv:
 15537              	.LFB5893:
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
 15538              		.loc 35 1336 7
 15539              		.cfi_startproc
 15540              		@ args = 0, pretend = 0, frame = 8
 15541              		@ frame_needed = 1, uses_anonymous_args = 0
 15542              		@ link register save eliminated.
 15543 0000 80B4     		push	{r7}
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 619


 15544              		.cfi_def_cfa_offset 4
 15545              		.cfi_offset 7, -4
 15546 0002 83B0     		sub	sp, sp, #12
 15547              		.cfi_def_cfa_offset 16
 15548 0004 00AF     		add	r7, sp, #0
 15549              		.cfi_def_cfa_register 7
 15550 0006 7860     		str	r0, [r7, #4]
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 15551              		.loc 35 1337 16
 15552 0008 7B68     		ldr	r3, [r7, #4]
 15553 000a 1B68     		ldr	r3, [r3]
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 15554              		.loc 35 1337 28
 15555 000c 1846     		mov	r0, r3
 15556 000e 0C37     		adds	r7, r7, #12
 15557              		.cfi_def_cfa_offset 4
 15558 0010 BD46     		mov	sp, r7
 15559              		.cfi_def_cfa_register 13
 15560              		@ sp needed
 15561 0012 5DF8047B 		ldr	r7, [sp], #4
 15562              		.cfi_restore 7
 15563              		.cfi_def_cfa_offset 0
 15564 0016 7047     		bx	lr
 15565              		.cfi_endproc
 15566              	.LFE5893:
 15568              		.section	.text._ZSt14__copy_move_a1ILb1EPdS0_ET1_T0_S2_S1_,"axG",%progbits,_ZSt14__copy_move_a1ILb
 15569              		.align	1
 15570              		.weak	_ZSt14__copy_move_a1ILb1EPdS0_ET1_T0_S2_S1_
 15571              		.syntax unified
 15572              		.thumb
 15573              		.thumb_func
 15574              		.fpu fpv5-d16
 15576              	_ZSt14__copy_move_a1ILb1EPdS0_ET1_T0_S2_S1_:
 15577              	.LFB5894:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 15578              		.loc 4 505 5
 15579              		.cfi_startproc
 15580              		@ args = 0, pretend = 0, frame = 16
 15581              		@ frame_needed = 1, uses_anonymous_args = 0
 15582 0000 80B5     		push	{r7, lr}
 15583              		.cfi_def_cfa_offset 8
 15584              		.cfi_offset 7, -8
 15585              		.cfi_offset 14, -4
 15586 0002 84B0     		sub	sp, sp, #16
 15587              		.cfi_def_cfa_offset 24
 15588 0004 00AF     		add	r7, sp, #0
 15589              		.cfi_def_cfa_register 7
 15590 0006 F860     		str	r0, [r7, #12]
 15591 0008 B960     		str	r1, [r7, #8]
 15592 000a 7A60     		str	r2, [r7, #4]
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 15593              		.loc 4 506 42
 15594 000c 7A68     		ldr	r2, [r7, #4]
 15595 000e B968     		ldr	r1, [r7, #8]
 15596 0010 F868     		ldr	r0, [r7, #12]
 15597 0012 FFF7FEFF 		bl	_ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_
 15598 0016 0346     		mov	r3, r0
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 620


 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 15599              		.loc 4 506 71
 15600 0018 1846     		mov	r0, r3
 15601 001a 1037     		adds	r7, r7, #16
 15602              		.cfi_def_cfa_offset 8
 15603 001c BD46     		mov	sp, r7
 15604              		.cfi_def_cfa_register 13
 15605              		@ sp needed
 15606 001e 80BD     		pop	{r7, pc}
 15607              		.cfi_endproc
 15608              	.LFE5894:
 15610              		.section	.text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S
 15611              		.align	1
 15612              		.weak	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_
 15613              		.syntax unified
 15614              		.thumb
 15615              		.thumb_func
 15616              		.fpu fpv5-d16
 15618              	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_:
 15619              	.LFB5895:
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 15620              		.loc 4 415 2
 15621              		.cfi_startproc
 15622              		@ args = 0, pretend = 0, frame = 24
 15623              		@ frame_needed = 1, uses_anonymous_args = 0
 15624 0000 80B5     		push	{r7, lr}
 15625              		.cfi_def_cfa_offset 8
 15626              		.cfi_offset 7, -8
 15627              		.cfi_offset 14, -4
 15628 0002 86B0     		sub	sp, sp, #24
 15629              		.cfi_def_cfa_offset 32
 15630 0004 00AF     		add	r7, sp, #0
 15631              		.cfi_def_cfa_register 7
 15632 0006 F860     		str	r0, [r7, #12]
 15633 0008 B960     		str	r1, [r7, #8]
 15634 000a 7A60     		str	r2, [r7, #4]
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 15635              		.loc 4 424 34
 15636 000c BA68     		ldr	r2, [r7, #8]
 15637 000e FB68     		ldr	r3, [r7, #12]
 15638 0010 D31A     		subs	r3, r2, r3
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 15639              		.loc 4 424 20
 15640 0012 9B10     		asrs	r3, r3, #2
 15641 0014 7B61     		str	r3, [r7, #20]
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 15642              		.loc 4 425 4
 15643 0016 7B69     		ldr	r3, [r7, #20]
 15644 0018 002B     		cmp	r3, #0
 15645 001a 06D0     		beq	.L656
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 15646              		.loc 4 426 57
 15647 001c 7B69     		ldr	r3, [r7, #20]
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 15648              		.loc 4 426 23
 15649 001e 9B00     		lsls	r3, r3, #2
 15650 0020 1A46     		mov	r2, r3
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 621


 15651 0022 F968     		ldr	r1, [r7, #12]
 15652 0024 7868     		ldr	r0, [r7, #4]
 15653 0026 FFF7FEFF 		bl	memmove
 15654              	.L656:
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 15655              		.loc 4 427 22
 15656 002a 7B69     		ldr	r3, [r7, #20]
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 15657              		.loc 4 427 20
 15658 002c 9B00     		lsls	r3, r3, #2
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 15659              		.loc 4 427 22
 15660 002e 7A68     		ldr	r2, [r7, #4]
 15661 0030 1344     		add	r3, r3, r2
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 15662              		.loc 4 428 2
 15663 0032 1846     		mov	r0, r3
 15664 0034 1837     		adds	r7, r7, #24
 15665              		.cfi_def_cfa_offset 8
 15666 0036 BD46     		mov	sp, r7
 15667              		.cfi_def_cfa_register 13
 15668              		@ sp needed
 15669 0038 80BD     		pop	{r7, pc}
 15670              		.cfi_endproc
 15671              	.LFE5895:
 15673              		.section	.text._ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_
 15674              		.align	1
 15675              		.weak	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorS
 15676              		.syntax unified
 15677              		.thumb
 15678              		.thumb_func
 15679              		.fpu fpv5-d16
 15681              	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit
 15682              	.LFB5896:
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 15683              		.loc 4 375 2
 15684              		.cfi_startproc
 15685              		@ args = 20, pretend = 8, frame = 32
 15686              		@ frame_needed = 1, uses_anonymous_args = 0
 15687 0000 82B0     		sub	sp, sp, #8
 15688              		.cfi_def_cfa_offset 8
 15689 0002 80B5     		push	{r7, lr}
 15690              		.cfi_def_cfa_offset 16
 15691              		.cfi_offset 7, -16
 15692              		.cfi_offset 14, -12
 15693 0004 88B0     		sub	sp, sp, #32
 15694              		.cfi_def_cfa_offset 48
 15695 0006 00AF     		add	r7, sp, #0
 15696              		.cfi_def_cfa_register 7
 15697 0008 F860     		str	r0, [r7, #12]
 15698 000a 381D     		adds	r0, r7, #4
 15699 000c 80E80600 		stm	r0, {r1, r2}
 15700 0010 FB62     		str	r3, [r7, #44]
 15701              	.LBB88:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 15702              		.loc 4 378 31
 15703 0012 3A1D     		adds	r2, r7, #4
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 622


 15704 0014 07F12C03 		add	r3, r7, #44
 15705 0018 1146     		mov	r1, r2
 15706 001a 1846     		mov	r0, r3
 15707 001c FFF7FEFF 		bl	_ZStmiRKSt18_Bit_iterator_baseS1_
 15708 0020 F861     		str	r0, [r7, #28]
 15709              	.L660:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 15710              		.loc 4 378 46 discriminator 3
 15711 0022 FB69     		ldr	r3, [r7, #28]
 15712 0024 002B     		cmp	r3, #0
 15713 0026 20DD     		ble	.L659
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 15714              		.loc 4 380 8 discriminator 2
 15715 0028 07F11403 		add	r3, r7, #20
 15716 002c 07F13402 		add	r2, r7, #52
 15717 0030 1146     		mov	r1, r2
 15718 0032 1846     		mov	r0, r3
 15719 0034 FFF7FEFF 		bl	_ZNKSt13_Bit_iteratordeEv
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 15720              		.loc 4 380 18 discriminator 2
 15721 0038 3B1D     		adds	r3, r7, #4
 15722 003a 1846     		mov	r0, r3
 15723 003c FFF7FEFF 		bl	_ZNKSt19_Bit_const_iteratordeEv
 15724 0040 0346     		mov	r3, r0
 15725 0042 1A46     		mov	r2, r3
 15726 0044 07F11403 		add	r3, r7, #20
 15727 0048 1146     		mov	r1, r2
 15728 004a 1846     		mov	r0, r3
 15729 004c FFF7FEFF 		bl	_ZNSt14_Bit_referenceaSEb
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 15730              		.loc 4 381 8 discriminator 2
 15731 0050 3B1D     		adds	r3, r7, #4
 15732 0052 1846     		mov	r0, r3
 15733 0054 FFF7FEFF 		bl	_ZNSt19_Bit_const_iteratorppEv
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 15734              		.loc 4 382 8 discriminator 2
 15735 0058 07F13403 		add	r3, r7, #52
 15736 005c 1846     		mov	r0, r3
 15737 005e FFF7FEFF 		bl	_ZNSt13_Bit_iteratorppEv
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 15738              		.loc 4 378 4 discriminator 2
 15739 0062 FB69     		ldr	r3, [r7, #28]
 15740 0064 013B     		subs	r3, r3, #1
 15741 0066 FB61     		str	r3, [r7, #28]
 15742 0068 DBE7     		b	.L660
 15743              	.L659:
 15744              	.LBE88:
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 15745              		.loc 4 384 11
 15746 006a FB68     		ldr	r3, [r7, #12]
 15747 006c 1A46     		mov	r2, r3
 15748 006e 07F13403 		add	r3, r7, #52
 15749 0072 93E80300 		ldm	r3, {r0, r1}
 15750 0076 82E80300 		stm	r2, {r0, r1}
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 15751              		.loc 4 385 2
 15752 007a F868     		ldr	r0, [r7, #12]
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 623


 15753 007c 2037     		adds	r7, r7, #32
 15754              		.cfi_def_cfa_offset 16
 15755 007e BD46     		mov	sp, r7
 15756              		.cfi_def_cfa_register 13
 15757              		@ sp needed
 15758 0080 BDE88040 		pop	{r7, lr}
 15759              		.cfi_restore 14
 15760              		.cfi_restore 7
 15761              		.cfi_def_cfa_offset 8
 15762 0084 02B0     		add	sp, sp, #8
 15763              		.cfi_def_cfa_offset 0
 15764 0086 7047     		bx	lr
 15765              		.cfi_endproc
 15766              	.LFE5896:
 15768              		.section	.text._ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_,"axG",%progbits,_ZSt14__copy_move_a2ILb
 15769              		.align	1
 15770              		.weak	_ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_
 15771              		.syntax unified
 15772              		.thumb
 15773              		.thumb_func
 15774              		.fpu fpv5-d16
 15776              	_ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_:
 15777              	.LFB5897:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 15778              		.loc 4 463 5
 15779              		.cfi_startproc
 15780              		@ args = 0, pretend = 0, frame = 16
 15781              		@ frame_needed = 1, uses_anonymous_args = 0
 15782 0000 80B5     		push	{r7, lr}
 15783              		.cfi_def_cfa_offset 8
 15784              		.cfi_offset 7, -8
 15785              		.cfi_offset 14, -4
 15786 0002 84B0     		sub	sp, sp, #16
 15787              		.cfi_def_cfa_offset 24
 15788 0004 00AF     		add	r7, sp, #0
 15789              		.cfi_def_cfa_register 7
 15790 0006 F860     		str	r0, [r7, #12]
 15791 0008 B960     		str	r1, [r7, #8]
 15792 000a 7A60     		str	r2, [r7, #4]
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 15793              		.loc 4 472 30
 15794 000c 7A68     		ldr	r2, [r7, #4]
 15795 000e B968     		ldr	r1, [r7, #8]
 15796 0010 F868     		ldr	r0, [r7, #12]
 15797 0012 FFF7FEFF 		bl	_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_
 15798 0016 0346     		mov	r3, r0
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 15799              		.loc 4 473 5
 15800 0018 1846     		mov	r0, r3
 15801 001a 1037     		adds	r7, r7, #16
 15802              		.cfi_def_cfa_offset 8
 15803 001c BD46     		mov	sp, r7
 15804              		.cfi_def_cfa_register 13
 15805              		@ sp needed
 15806 001e 80BD     		pop	{r7, pc}
 15807              		.cfi_endproc
 15808              	.LFE5897:
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 624


 15810              		.section	.text._ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S
 15811              		.align	1
 15812              		.weak	_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_
 15813              		.syntax unified
 15814              		.thumb
 15815              		.thumb_func
 15816              		.fpu fpv5-d16
 15818              	_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_:
 15819              	.LFB5898:
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 15820              		.loc 4 415 2
 15821              		.cfi_startproc
 15822              		@ args = 0, pretend = 0, frame = 24
 15823              		@ frame_needed = 1, uses_anonymous_args = 0
 15824 0000 80B5     		push	{r7, lr}
 15825              		.cfi_def_cfa_offset 8
 15826              		.cfi_offset 7, -8
 15827              		.cfi_offset 14, -4
 15828 0002 86B0     		sub	sp, sp, #24
 15829              		.cfi_def_cfa_offset 32
 15830 0004 00AF     		add	r7, sp, #0
 15831              		.cfi_def_cfa_register 7
 15832 0006 F860     		str	r0, [r7, #12]
 15833 0008 B960     		str	r1, [r7, #8]
 15834 000a 7A60     		str	r2, [r7, #4]
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 15835              		.loc 4 424 34
 15836 000c BA68     		ldr	r2, [r7, #8]
 15837 000e FB68     		ldr	r3, [r7, #12]
 15838 0010 D31A     		subs	r3, r2, r3
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 15839              		.loc 4 424 20
 15840 0012 DB10     		asrs	r3, r3, #3
 15841 0014 7B61     		str	r3, [r7, #20]
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 15842              		.loc 4 425 4
 15843 0016 7B69     		ldr	r3, [r7, #20]
 15844 0018 002B     		cmp	r3, #0
 15845 001a 06D0     		beq	.L665
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 15846              		.loc 4 426 57
 15847 001c 7B69     		ldr	r3, [r7, #20]
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 15848              		.loc 4 426 23
 15849 001e DB00     		lsls	r3, r3, #3
 15850 0020 1A46     		mov	r2, r3
 15851 0022 F968     		ldr	r1, [r7, #12]
 15852 0024 7868     		ldr	r0, [r7, #4]
 15853 0026 FFF7FEFF 		bl	memmove
 15854              	.L665:
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 15855              		.loc 4 427 22
 15856 002a 7B69     		ldr	r3, [r7, #20]
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 15857              		.loc 4 427 20
 15858 002c DB00     		lsls	r3, r3, #3
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 625


 15859              		.loc 4 427 22
 15860 002e 7A68     		ldr	r2, [r7, #4]
 15861 0030 1344     		add	r3, r3, r2
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 15862              		.loc 4 428 2
 15863 0032 1846     		mov	r0, r3
 15864 0034 1837     		adds	r7, r7, #24
 15865              		.cfi_def_cfa_offset 8
 15866 0036 BD46     		mov	sp, r7
 15867              		.cfi_def_cfa_register 13
 15868              		@ sp needed
 15869 0038 80BD     		pop	{r7, pc}
 15870              		.cfi_endproc
 15871              	.LFE5898:
 15873              		.section	.text.__tcf_0,"ax",%progbits
 15874              		.align	1
 15875              		.syntax unified
 15876              		.thumb
 15877              		.thumb_func
 15878              		.fpu fpv5-d16
 15880              	__tcf_0:
 15881              	.LFB5900:
  29:./include/ReverbFDN.hpp **** 
 15882              		.loc 26 29 61
 15883              		.cfi_startproc
 15884              		@ args = 0, pretend = 0, frame = 8
 15885              		@ frame_needed = 1, uses_anonymous_args = 0
 15886 0000 90B5     		push	{r4, r7, lr}
 15887              		.cfi_def_cfa_offset 12
 15888              		.cfi_offset 4, -12
 15889              		.cfi_offset 7, -8
 15890              		.cfi_offset 14, -4
 15891 0002 83B0     		sub	sp, sp, #12
 15892              		.cfi_def_cfa_offset 24
 15893 0004 00AF     		add	r7, sp, #0
 15894              		.cfi_def_cfa_register 7
 15895 0006 7860     		str	r0, [r7, #4]
  29:./include/ReverbFDN.hpp **** 
 15896              		.loc 26 29 61
 15897 0008 064C     		ldr	r4, .L670
 15898              	.L669:
  29:./include/ReverbFDN.hpp **** 
 15899              		.loc 26 29 61 is_stmt 0 discriminator 4
 15900 000a 074B     		ldr	r3, .L670+4
 15901 000c 9C42     		cmp	r4, r3
 15902 000e 06D0     		beq	.L667
  29:./include/ReverbFDN.hpp **** 
 15903              		.loc 26 29 61 discriminator 3
 15904 0010 064B     		ldr	r3, .L670+8
 15905 0012 2344     		add	r3, r3, r4
 15906 0014 1C46     		mov	r4, r3
 15907 0016 2046     		mov	r0, r4
 15908 0018 FFF7FEFF 		bl	_ZN7daisysp9DelayLineIfLj96000EED1Ev
 15909 001c F5E7     		b	.L669
 15910              	.L667:
  29:./include/ReverbFDN.hpp **** 
 15911              		.loc 26 29 61
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 626


 15912 001e 0C37     		adds	r7, r7, #12
 15913              		.cfi_def_cfa_offset 12
 15914 0020 BD46     		mov	sp, r7
 15915              		.cfi_def_cfa_register 13
 15916              		@ sp needed
 15917 0022 90BD     		pop	{r4, r7, pc}
 15918              	.L671:
 15919              		.align	2
 15920              	.L670:
 15921 0024 60E02E00 		.word	delay+3072096
 15922 0028 00000000 		.word	delay
 15923 002c F423FAFF 		.word	-384012
 15924              		.cfi_endproc
 15925              	.LFE5900:
 15927              		.section	.text._ZN1k9KnobMultiD2Ev,"axG",%progbits,_ZN1k9KnobMultiD5Ev,comdat
 15928              		.align	1
 15929              		.weak	_ZN1k9KnobMultiD2Ev
 15930              		.syntax unified
 15931              		.thumb
 15932              		.thumb_func
 15933              		.fpu fpv5-d16
 15935              	_ZN1k9KnobMultiD2Ev:
 15936              	.LFB5902:
   9:./include/KnobMulti.hpp ****     {
 15937              		.loc 24 9 11 is_stmt 1
 15938              		.cfi_startproc
 15939              		@ args = 0, pretend = 0, frame = 8
 15940              		@ frame_needed = 1, uses_anonymous_args = 0
 15941 0000 80B5     		push	{r7, lr}
 15942              		.cfi_def_cfa_offset 8
 15943              		.cfi_offset 7, -8
 15944              		.cfi_offset 14, -4
 15945 0002 82B0     		sub	sp, sp, #8
 15946              		.cfi_def_cfa_offset 16
 15947 0004 00AF     		add	r7, sp, #0
 15948              		.cfi_def_cfa_register 7
 15949 0006 7860     		str	r0, [r7, #4]
 15950              	.LBB89:
   9:./include/KnobMulti.hpp ****     {
 15951              		.loc 24 9 11
 15952 0008 7B68     		ldr	r3, [r7, #4]
 15953 000a 3C33     		adds	r3, r3, #60
 15954 000c 1846     		mov	r0, r3
 15955 000e FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEED1Ev
 15956 0012 7B68     		ldr	r3, [r7, #4]
 15957 0014 3033     		adds	r3, r3, #48
 15958 0016 1846     		mov	r0, r3
 15959 0018 FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEED1Ev
 15960 001c 7B68     		ldr	r3, [r7, #4]
 15961 001e 2433     		adds	r3, r3, #36
 15962 0020 1846     		mov	r0, r3
 15963 0022 FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEED1Ev
 15964 0026 7B68     		ldr	r3, [r7, #4]
 15965 0028 1833     		adds	r3, r3, #24
 15966 002a 1846     		mov	r0, r3
 15967 002c FFF7FEFF 		bl	_ZNSt6vectorIdSaIdEED1Ev
 15968              	.LBE89:
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 627


 15969 0030 7B68     		ldr	r3, [r7, #4]
 15970 0032 1846     		mov	r0, r3
 15971 0034 0837     		adds	r7, r7, #8
 15972              		.cfi_def_cfa_offset 8
 15973 0036 BD46     		mov	sp, r7
 15974              		.cfi_def_cfa_register 13
 15975              		@ sp needed
 15976 0038 80BD     		pop	{r7, pc}
 15977              		.cfi_endproc
 15978              	.LFE5902:
 15980              		.weak	_ZN1k9KnobMultiD1Ev
 15981              		.thumb_set _ZN1k9KnobMultiD1Ev,_ZN1k9KnobMultiD2Ev
 15982              		.section	.text.__tcf_1,"ax",%progbits
 15983              		.align	1
 15984              		.syntax unified
 15985              		.thumb
 15986              		.thumb_func
 15987              		.fpu fpv5-d16
 15989              	__tcf_1:
 15990              	.LFB5904:
  26:Reverb_test.cpp **** KnobMulti knob[7];
 15991              		.loc 27 26 11
 15992              		.cfi_startproc
 15993              		@ args = 0, pretend = 0, frame = 8
 15994              		@ frame_needed = 1, uses_anonymous_args = 0
 15995 0000 90B5     		push	{r4, r7, lr}
 15996              		.cfi_def_cfa_offset 12
 15997              		.cfi_offset 4, -12
 15998              		.cfi_offset 7, -8
 15999              		.cfi_offset 14, -4
 16000 0002 83B0     		sub	sp, sp, #12
 16001              		.cfi_def_cfa_offset 24
 16002 0004 00AF     		add	r7, sp, #0
 16003              		.cfi_def_cfa_register 7
 16004 0006 7860     		str	r0, [r7, #4]
  26:Reverb_test.cpp **** KnobMulti knob[7];
 16005              		.loc 27 26 11
 16006 0008 054C     		ldr	r4, .L677
 16007              	.L676:
  26:Reverb_test.cpp **** KnobMulti knob[7];
 16008              		.loc 27 26 11 is_stmt 0 discriminator 4
 16009 000a 064B     		ldr	r3, .L677+4
 16010 000c 9C42     		cmp	r4, r3
 16011 000e 04D0     		beq	.L674
  26:Reverb_test.cpp **** KnobMulti knob[7];
 16012              		.loc 27 26 11 discriminator 3
 16013 0010 583C     		subs	r4, r4, #88
 16014 0012 2046     		mov	r0, r4
 16015 0014 FFF7FEFF 		bl	_ZN1k9KnobMultiD1Ev
 16016 0018 F7E7     		b	.L676
 16017              	.L674:
  26:Reverb_test.cpp **** KnobMulti knob[7];
 16018              		.loc 27 26 11
 16019 001a 0C37     		adds	r7, r7, #12
 16020              		.cfi_def_cfa_offset 12
 16021 001c BD46     		mov	sp, r7
 16022              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 628


 16023              		@ sp needed
 16024 001e 90BD     		pop	{r4, r7, pc}
 16025              	.L678:
 16026              		.align	2
 16027              	.L677:
 16028 0020 68020000 		.word	knob+616
 16029 0024 00000000 		.word	knob
 16030              		.cfi_endproc
 16031              	.LFE5904:
 16033              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 16034              		.align	1
 16035              		.syntax unified
 16036              		.thumb
 16037              		.thumb_func
 16038              		.fpu fpv5-d16
 16040              	_Z41__static_initialization_and_destruction_0ii:
 16041              	.LFB5899:
 16042              		.loc 27 172 2 is_stmt 1
 16043              		.cfi_startproc
 16044              		@ args = 0, pretend = 0, frame = 8
 16045              		@ frame_needed = 1, uses_anonymous_args = 0
 16046 0000 B0B5     		push	{r4, r5, r7, lr}
 16047              		.cfi_def_cfa_offset 16
 16048              		.cfi_offset 4, -16
 16049              		.cfi_offset 5, -12
 16050              		.cfi_offset 7, -8
 16051              		.cfi_offset 14, -4
 16052 0002 82B0     		sub	sp, sp, #8
 16053              		.cfi_def_cfa_offset 24
 16054 0004 00AF     		add	r7, sp, #0
 16055              		.cfi_def_cfa_register 7
 16056 0006 7860     		str	r0, [r7, #4]
 16057 0008 3960     		str	r1, [r7]
 16058              		.loc 27 172 2
 16059 000a 7B68     		ldr	r3, [r7, #4]
 16060 000c 012B     		cmp	r3, #1
 16061 000e 67D1     		bne	.L685
 16062              		.loc 27 172 2 is_stmt 0 discriminator 1
 16063 0010 3B68     		ldr	r3, [r7]
 16064 0012 4FF6FF72 		movw	r2, #65535
 16065 0016 9342     		cmp	r3, r2
 16066 0018 62D1     		bne	.L685
  29:./include/ReverbFDN.hpp **** 
 16067              		.loc 26 29 68 is_stmt 1
 16068 001a 334B     		ldr	r3, .L686
 16069 001c 0724     		movs	r4, #7
 16070 001e 1D46     		mov	r5, r3
 16071              	.L682:
  29:./include/ReverbFDN.hpp **** 
 16072              		.loc 26 29 68 is_stmt 0 discriminator 4
 16073 0020 002C     		cmp	r4, #0
 16074 0022 07DB     		blt	.L681
  29:./include/ReverbFDN.hpp **** 
 16075              		.loc 26 29 68 discriminator 3
 16076 0024 2846     		mov	r0, r5
 16077 0026 FFF7FEFF 		bl	_ZN7daisysp9DelayLineIfLj96000EEC1Ev
 16078 002a 304B     		ldr	r3, .L686+4
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 629


 16079 002c 2B44     		add	r3, r3, r5
 16080 002e 1D46     		mov	r5, r3
 16081 0030 013C     		subs	r4, r4, #1
 16082 0032 F5E7     		b	.L682
 16083              	.L681:
  29:./include/ReverbFDN.hpp **** 
 16084              		.loc 26 29 61 is_stmt 1 discriminator 2
 16085 0034 2E4A     		ldr	r2, .L686+8
 16086 0036 2F49     		ldr	r1, .L686+12
 16087 0038 0020     		movs	r0, #0
 16088 003a FFF7FEFF 		bl	__aeabi_atexit
  16:Reverb_test.cpp **** DaisySeed hw;
 16089              		.loc 27 16 11 discriminator 2
 16090 003e 2E48     		ldr	r0, .L686+16
 16091 0040 FFF7FEFF 		bl	_ZN5daisy9DaisySeedC1Ev
 16092 0044 2A4A     		ldr	r2, .L686+8
 16093 0046 2D49     		ldr	r1, .L686+20
 16094 0048 2B48     		ldr	r0, .L686+16
 16095 004a FFF7FEFF 		bl	__aeabi_atexit
  20:Reverb_test.cpp **** Metro                   metro;
 16096              		.loc 27 20 25 discriminator 2
 16097 004e 2C48     		ldr	r0, .L686+24
 16098 0050 FFF7FEFF 		bl	_ZN7daisysp5MetroC1Ev
 16099 0054 264A     		ldr	r2, .L686+8
 16100 0056 2B49     		ldr	r1, .L686+28
 16101 0058 2948     		ldr	r0, .L686+24
 16102 005a FFF7FEFF 		bl	__aeabi_atexit
  21:Reverb_test.cpp **** Adsr                    envelope;
 16103              		.loc 27 21 25 discriminator 2
 16104 005e 2A48     		ldr	r0, .L686+32
 16105 0060 FFF7FEFF 		bl	_ZN7daisysp4AdsrC1Ev
 16106 0064 224A     		ldr	r2, .L686+8
 16107 0066 2949     		ldr	r1, .L686+36
 16108 0068 2748     		ldr	r0, .L686+32
 16109 006a FFF7FEFF 		bl	__aeabi_atexit
  22:Reverb_test.cpp **** SyntheticSnareDrum      snare;
 16110              		.loc 27 22 25 discriminator 2
 16111 006e 2848     		ldr	r0, .L686+40
 16112 0070 FFF7FEFF 		bl	_ZN7daisysp18SyntheticSnareDrumC1Ev
 16113 0074 1E4A     		ldr	r2, .L686+8
 16114 0076 2749     		ldr	r1, .L686+44
 16115 0078 2548     		ldr	r0, .L686+40
 16116 007a FFF7FEFF 		bl	__aeabi_atexit
  23:Reverb_test.cpp **** ReverbFDN reverb;
 16117              		.loc 27 23 11 discriminator 2
 16118 007e 2648     		ldr	r0, .L686+48
 16119 0080 FFF7FEFF 		bl	_ZN9ReverbFDNC1Ev
  25:Reverb_test.cpp **** AdcHandle adc;
 16120              		.loc 27 25 11 discriminator 2
 16121 0084 2548     		ldr	r0, .L686+52
 16122 0086 FFF7FEFF 		bl	_ZN5daisy9AdcHandleC1Ev
 16123 008a 194A     		ldr	r2, .L686+8
 16124 008c 2449     		ldr	r1, .L686+56
 16125 008e 2348     		ldr	r0, .L686+52
 16126 0090 FFF7FEFF 		bl	__aeabi_atexit
  26:Reverb_test.cpp **** KnobMulti knob[7];
 16127              		.loc 27 26 17 discriminator 2
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 630


 16128 0094 234B     		ldr	r3, .L686+60
 16129 0096 0624     		movs	r4, #6
 16130 0098 1D46     		mov	r5, r3
 16131              	.L684:
  26:Reverb_test.cpp **** KnobMulti knob[7];
 16132              		.loc 27 26 17 is_stmt 0 discriminator 4
 16133 009a 002C     		cmp	r4, #0
 16134 009c 05DB     		blt	.L683
  26:Reverb_test.cpp **** KnobMulti knob[7];
 16135              		.loc 27 26 17 discriminator 3
 16136 009e 2846     		mov	r0, r5
 16137 00a0 FFF7FEFF 		bl	_ZN1k9KnobMultiC1Ev
 16138 00a4 5835     		adds	r5, r5, #88
 16139 00a6 013C     		subs	r4, r4, #1
 16140 00a8 F7E7     		b	.L684
 16141              	.L683:
  26:Reverb_test.cpp **** KnobMulti knob[7];
 16142              		.loc 27 26 11 is_stmt 1 discriminator 2
 16143 00aa 114A     		ldr	r2, .L686+8
 16144 00ac 1E49     		ldr	r1, .L686+64
 16145 00ae 0020     		movs	r0, #0
 16146 00b0 FFF7FEFF 		bl	__aeabi_atexit
  28:Reverb_test.cpp **** GPIO modSwitch, effectSwitch;
 16147              		.loc 27 28 6 discriminator 2
 16148 00b4 1D48     		ldr	r0, .L686+68
 16149 00b6 FFF7FEFF 		bl	_ZN5daisy4GPIOC1Ev
  28:Reverb_test.cpp **** GPIO modSwitch, effectSwitch;
 16150              		.loc 27 28 17 discriminator 2
 16151 00ba 1D48     		ldr	r0, .L686+72
 16152 00bc FFF7FEFF 		bl	_ZN5daisy4GPIOC1Ev
  34:Reverb_test.cpp **** TimerHandle timerUI, timerVisual;
 16153              		.loc 27 34 13 discriminator 2
 16154 00c0 1C48     		ldr	r0, .L686+76
 16155 00c2 FFF7FEFF 		bl	_ZN5daisy11TimerHandleC1Ev
 16156 00c6 0A4A     		ldr	r2, .L686+8
 16157 00c8 1B49     		ldr	r1, .L686+80
 16158 00ca 1A48     		ldr	r0, .L686+76
 16159 00cc FFF7FEFF 		bl	__aeabi_atexit
  34:Reverb_test.cpp **** TimerHandle timerUI, timerVisual;
 16160              		.loc 27 34 22 discriminator 2
 16161 00d0 1A48     		ldr	r0, .L686+84
 16162 00d2 FFF7FEFF 		bl	_ZN5daisy11TimerHandleC1Ev
 16163 00d6 064A     		ldr	r2, .L686+8
 16164 00d8 1749     		ldr	r1, .L686+80
 16165 00da 1848     		ldr	r0, .L686+84
 16166 00dc FFF7FEFF 		bl	__aeabi_atexit
 16167              	.L685:
 16168              		.loc 27 172 2
 16169 00e0 00BF     		nop
 16170 00e2 0837     		adds	r7, r7, #8
 16171              		.cfi_def_cfa_offset 16
 16172 00e4 BD46     		mov	sp, r7
 16173              		.cfi_def_cfa_register 13
 16174              		@ sp needed
 16175 00e6 B0BD     		pop	{r4, r5, r7, pc}
 16176              	.L687:
 16177              		.align	2
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 631


 16178              	.L686:
 16179 00e8 00000000 		.word	delay
 16180 00ec 0CDC0500 		.word	384012
 16181 00f0 00000000 		.word	__dso_handle
 16182 00f4 00000000 		.word	__tcf_0
 16183 00f8 00000000 		.word	hw
 16184 00fc 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 16185 0100 00000000 		.word	metro
 16186 0104 00000000 		.word	_ZN7daisysp5MetroD1Ev
 16187 0108 00000000 		.word	envelope
 16188 010c 00000000 		.word	_ZN7daisysp4AdsrD1Ev
 16189 0110 00000000 		.word	snare
 16190 0114 00000000 		.word	_ZN7daisysp18SyntheticSnareDrumD1Ev
 16191 0118 00000000 		.word	reverb
 16192 011c 00000000 		.word	adc
 16193 0120 00000000 		.word	_ZN5daisy9AdcHandleD1Ev
 16194 0124 00000000 		.word	knob
 16195 0128 00000000 		.word	__tcf_1
 16196 012c 00000000 		.word	modSwitch
 16197 0130 00000000 		.word	effectSwitch
 16198 0134 00000000 		.word	timerUI
 16199 0138 00000000 		.word	_ZN5daisy11TimerHandleD1Ev
 16200 013c 00000000 		.word	timerVisual
 16201              		.cfi_endproc
 16202              	.LFE5899:
 16204              		.section	.text._ZN7daisysp9DelayLineIfLj96000EED2Ev,"axG",%progbits,_ZN7daisysp9DelayLineIfLj96000
 16205              		.align	1
 16206              		.weak	_ZN7daisysp9DelayLineIfLj96000EED2Ev
 16207              		.syntax unified
 16208              		.thumb
 16209              		.thumb_func
 16210              		.fpu fpv5-d16
 16212              	_ZN7daisysp9DelayLineIfLj96000EED2Ev:
 16213              	.LFB5906:
  24:../../DaisySP/Source/Utility/delayline.h ****     /** initializes the delay line by clearing the values within, and setting delay to 1 sample.
 16214              		.loc 29 24 5
 16215              		.cfi_startproc
 16216              		@ args = 0, pretend = 0, frame = 8
 16217              		@ frame_needed = 1, uses_anonymous_args = 0
 16218              		@ link register save eliminated.
 16219 0000 80B4     		push	{r7}
 16220              		.cfi_def_cfa_offset 4
 16221              		.cfi_offset 7, -4
 16222 0002 83B0     		sub	sp, sp, #12
 16223              		.cfi_def_cfa_offset 16
 16224 0004 00AF     		add	r7, sp, #0
 16225              		.cfi_def_cfa_register 7
 16226 0006 7860     		str	r0, [r7, #4]
  24:../../DaisySP/Source/Utility/delayline.h ****     /** initializes the delay line by clearing the values within, and setting delay to 1 sample.
 16227              		.loc 29 24 19
 16228 0008 7B68     		ldr	r3, [r7, #4]
 16229 000a 1846     		mov	r0, r3
 16230 000c 0C37     		adds	r7, r7, #12
 16231              		.cfi_def_cfa_offset 4
 16232 000e BD46     		mov	sp, r7
 16233              		.cfi_def_cfa_register 13
 16234              		@ sp needed
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 632


 16235 0010 5DF8047B 		ldr	r7, [sp], #4
 16236              		.cfi_restore 7
 16237              		.cfi_def_cfa_offset 0
 16238 0014 7047     		bx	lr
 16239              		.cfi_endproc
 16240              	.LFE5906:
 16242              		.weak	_ZN7daisysp9DelayLineIfLj96000EED1Ev
 16243              		.thumb_set _ZN7daisysp9DelayLineIfLj96000EED1Ev,_ZN7daisysp9DelayLineIfLj96000EED2Ev
 16244              		.section	.text._GLOBAL__sub_I_delay,"ax",%progbits
 16245              		.align	1
 16246              		.syntax unified
 16247              		.thumb
 16248              		.thumb_func
 16249              		.fpu fpv5-d16
 16251              	_GLOBAL__sub_I_delay:
 16252              	.LFB5908:
 16253              		.loc 27 172 2
 16254              		.cfi_startproc
 16255              		@ args = 0, pretend = 0, frame = 0
 16256              		@ frame_needed = 1, uses_anonymous_args = 0
 16257 0000 80B5     		push	{r7, lr}
 16258              		.cfi_def_cfa_offset 8
 16259              		.cfi_offset 7, -8
 16260              		.cfi_offset 14, -4
 16261 0002 00AF     		add	r7, sp, #0
 16262              		.cfi_def_cfa_register 7
 16263              		.loc 27 172 2
 16264 0004 4FF6FF71 		movw	r1, #65535
 16265 0008 0120     		movs	r0, #1
 16266 000a FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 16267 000e 80BD     		pop	{r7, pc}
 16268              		.cfi_endproc
 16269              	.LFE5908:
 16271              		.section	.init_array,"aw",%init_array
 16272              		.align	2
 16273 0000 00000000 		.word	_GLOBAL__sub_I_delay(target1)
 16274              		.text
 16275              	.Letext0:
 16276              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 16277              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 16278              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 16279              		.file 43 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 16280              		.file 44 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 16281              		.file 45 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 16282              		.file 46 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 16283              		.file 47 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 16284              		.file 48 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 16285              		.file 49 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 16286              		.file 50 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 16287              		.file 51 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\char_trait
 16288              		.file 52 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 16289              		.file 53 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 16290              		.file 54 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 16291              		.file 55 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 16292              		.file 56 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\initializer_list
 16293              		.file 57 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stringfwd.
 16294              		.file 58 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\system_error"
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 633


 16295              		.file 59 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 16296              		.file 60 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 16297              		.file 61 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\charconv.h
 16298              		.file 62 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterat
 16299              		.file 63 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 16300              		.file 64 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\alloc_trait
 16301              		.file 65 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\type_traits
 16302              		.file 66 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 16303              		.file 67 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 16304              		.file 68 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 16305              		.file 69 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 16306              		.file 70 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 16307              		.file 71 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 16308              		.file 72 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 16309              		.file 73 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 16310              		.file 74 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 16311              		.file 75 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 16312              		.file 76 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 16313              		.file 77 "../../libDaisy/src/per/sai.h"
 16314              		.file 78 "../../libDaisy/src/hid/logger_impl.h"
 16315              		.file 79 "../../libDaisy/src/util/wav_format.h"
 16316              		.file 80 "../../libDaisy/src/dev/max11300.h"
 16317              		.file 81 "../../libDaisy/src/hid/logger.h"
 16318              		.file 82 "../../libDaisy/src/dev/sdram.h"
 16319              		.file 83 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 16320              		.file 84 "../../DaisySP/Source/Control/adenv.h"
 16321              		.file 85 "../../DaisySP/Source/Utility/dsp.h"
 16322              		.file 86 "constants.h"
 16323              		.file 87 "../../libDaisy/src/dev/sr_595.h"
 16324              		.file 88 "<built-in>"
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 634


DEFINED SYMBOLS
                            *ABS*:00000000 Reverb_test.cpp
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:17     .text._ZSt3absd:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:25     .text._ZSt3absd:00000000 _ZSt3absd
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:59     .text._ZSt9nextafterff:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:66     .text._ZSt9nextafterff:00000000 _ZSt9nextafterff
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:100    .text._ZL20__gthread_key_deletei:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:106    .text._ZL20__gthread_key_deletei:00000000 _ZL20__gthread_key_deletei
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:139    .rodata._ZStL19piecewise_construct:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:142    .rodata._ZStL19piecewise_construct:00000000 _ZStL19piecewise_construct
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:145    .text._ZSt17__size_to_integerj:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:152    .text._ZSt17__size_to_integerj:00000000 _ZSt17__size_to_integerj
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:185    .text._ZnwjPv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:192    .text._ZnwjPv:00000000 _ZnwjPv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:226    .text._ZNSt14_Bit_referenceC2EPmm:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:233    .text._ZNSt14_Bit_referenceC2EPmm:00000000 _ZNSt14_Bit_referenceC2EPmm
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:233    .text._ZNSt14_Bit_referenceC2EPmm:00000000 _ZNSt14_Bit_referenceC1EPmm
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:278    .text._ZNKSt14_Bit_referencecvbEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:285    .text._ZNKSt14_Bit_referencecvbEv:00000000 _ZNKSt14_Bit_referencecvbEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:331    .text._ZNSt14_Bit_referenceaSEb:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:338    .text._ZNSt14_Bit_referenceaSEb:00000000 _ZNSt14_Bit_referenceaSEb
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:409    .text._ZNSt14_Bit_referenceaSERKS_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:416    .text._ZNSt14_Bit_referenceaSERKS_:00000000 _ZNSt14_Bit_referenceaSERKS_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:452    .text._ZNSt18_Bit_iterator_baseC2EPmj:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:459    .text._ZNSt18_Bit_iterator_baseC2EPmj:00000000 _ZNSt18_Bit_iterator_baseC2EPmj
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:459    .text._ZNSt18_Bit_iterator_baseC2EPmj:00000000 _ZNSt18_Bit_iterator_baseC1EPmj
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:503    .text._ZNSt18_Bit_iterator_base10_M_bump_upEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:510    .text._ZNSt18_Bit_iterator_base10_M_bump_upEv:00000000 _ZNSt18_Bit_iterator_base10_M_bump_upEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:568    .text._ZNSt18_Bit_iterator_base12_M_bump_downEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:575    .text._ZNSt18_Bit_iterator_base12_M_bump_downEv:00000000 _ZNSt18_Bit_iterator_base12_M_bump_downEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:633    .text._ZNSt18_Bit_iterator_base7_M_incrEi:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:640    .text._ZNSt18_Bit_iterator_base7_M_incrEi:00000000 _ZNSt18_Bit_iterator_base7_M_incrEi
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:724    .text._ZStmiRKSt18_Bit_iterator_baseS1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:731    .text._ZStmiRKSt18_Bit_iterator_baseS1_:00000000 _ZStmiRKSt18_Bit_iterator_baseS1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:783    .text._ZNSt13_Bit_iteratorC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:790    .text._ZNSt13_Bit_iteratorC2Ev:00000000 _ZNSt13_Bit_iteratorC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:790    .text._ZNSt13_Bit_iteratorC2Ev:00000000 _ZNSt13_Bit_iteratorC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:828    .text._ZNSt13_Bit_iteratorC2EPmj:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:835    .text._ZNSt13_Bit_iteratorC2EPmj:00000000 _ZNSt13_Bit_iteratorC2EPmj
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:835    .text._ZNSt13_Bit_iteratorC2EPmj:00000000 _ZNSt13_Bit_iteratorC1EPmj
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:875    .text._ZNKSt13_Bit_iteratordeEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:882    .text._ZNKSt13_Bit_iteratordeEv:00000000 _ZNKSt13_Bit_iteratordeEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:922    .text._ZNSt13_Bit_iteratorppEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:929    .text._ZNSt13_Bit_iteratorppEv:00000000 _ZNSt13_Bit_iteratorppEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:962    .text._ZNSt13_Bit_iteratormmEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:969    .text._ZNSt13_Bit_iteratormmEv:00000000 _ZNSt13_Bit_iteratormmEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1002   .text._ZNSt13_Bit_iteratorpLEi:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1009   .text._ZNSt13_Bit_iteratorpLEi:00000000 _ZNSt13_Bit_iteratorpLEi
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1044   .text._ZStplRKSt13_Bit_iteratori:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1051   .text._ZStplRKSt13_Bit_iteratori:00000000 _ZStplRKSt13_Bit_iteratori
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1091   .text._ZNSt19_Bit_const_iteratorC2EPmj:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1098   .text._ZNSt19_Bit_const_iteratorC2EPmj:00000000 _ZNSt19_Bit_const_iteratorC2EPmj
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1098   .text._ZNSt19_Bit_const_iteratorC2EPmj:00000000 _ZNSt19_Bit_const_iteratorC1EPmj
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1138   .text._ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1145   .text._ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator:00000000 _ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1145   .text._ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator:00000000 _ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1189   .text._ZNKSt19_Bit_const_iterator13_M_const_castEv:00000000 $t
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 635


C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1196   .text._ZNKSt19_Bit_const_iterator13_M_const_castEv:00000000 _ZNKSt19_Bit_const_iterator13_M_const_castEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1234   .text._ZNKSt19_Bit_const_iteratordeEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1241   .text._ZNKSt19_Bit_const_iteratordeEv:00000000 _ZNKSt19_Bit_const_iteratordeEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1284   .text._ZNSt19_Bit_const_iteratorppEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1291   .text._ZNSt19_Bit_const_iteratorppEv:00000000 _ZNSt19_Bit_const_iteratorppEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1324   .text._ZSt14__fill_bvectorPmjjb:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1331   .text._ZSt14__fill_bvectorPmjjb:00000000 _ZSt14__fill_bvectorPmjjb
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1406   .text._ZSt4fillSt13_Bit_iteratorS_RKb:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1413   .text._ZSt4fillSt13_Bit_iteratorS_RKb:00000000 _ZSt4fillSt13_Bit_iteratorS_RKb
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1527   .text._ZN5daisy3PinC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1534   .text._ZN5daisy3PinC2Ev:00000000 _ZN5daisy3PinC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1534   .text._ZN5daisy3PinC2Ev:00000000 _ZN5daisy3PinC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1577   .text._ZNK5daisy3Pincv12dsy_gpio_pinEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1584   .text._ZNK5daisy3Pincv12dsy_gpio_pinEv:00000000 _ZNK5daisy3Pincv12dsy_gpio_pinEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1643   .text._ZN5daisy11TimerHandle6ConfigC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1650   .text._ZN5daisy11TimerHandle6ConfigC2Ev:00000000 _ZN5daisy11TimerHandle6ConfigC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1650   .text._ZN5daisy11TimerHandle6ConfigC2Ev:00000000 _ZN5daisy11TimerHandle6ConfigC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1699   .text._ZN5daisy11TimerHandleC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1706   .text._ZN5daisy11TimerHandleC2Ev:00000000 _ZN5daisy11TimerHandleC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1706   .text._ZN5daisy11TimerHandleC2Ev:00000000 _ZN5daisy11TimerHandleC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1745   .text._ZN5daisy11TimerHandleD2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1752   .text._ZN5daisy11TimerHandleD2Ev:00000000 _ZN5daisy11TimerHandleD2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1752   .text._ZN5daisy11TimerHandleD2Ev:00000000 _ZN5daisy11TimerHandleD1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1785   .text._ZN5daisy6SystemC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1792   .text._ZN5daisy6SystemC2Ev:00000000 _ZN5daisy6SystemC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1792   .text._ZN5daisy6SystemC2Ev:00000000 _ZN5daisy6SystemC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1826   .text._ZN5daisy6SystemD2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1833   .text._ZN5daisy6SystemD2Ev:00000000 _ZN5daisy6SystemD2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1833   .text._ZN5daisy6SystemD2Ev:00000000 _ZN5daisy6SystemD1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1866   .text._ZN5daisy10QSPIHandleC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1873   .text._ZN5daisy10QSPIHandleC2Ev:00000000 _ZN5daisy10QSPIHandleC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1873   .text._ZN5daisy10QSPIHandleC2Ev:00000000 _ZN5daisy10QSPIHandleC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1913   .text._ZN5daisy9DacHandleC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1920   .text._ZN5daisy9DacHandleC2Ev:00000000 _ZN5daisy9DacHandleC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1920   .text._ZN5daisy9DacHandleC2Ev:00000000 _ZN5daisy9DacHandleC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1960   .text._ZN5daisy4GPIO6ConfigC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1967   .text._ZN5daisy4GPIO6ConfigC2Ev:00000000 _ZN5daisy4GPIO6ConfigC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:1967   .text._ZN5daisy4GPIO6ConfigC2Ev:00000000 _ZN5daisy4GPIO6ConfigC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2013   .text._ZN5daisy4GPIOC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2020   .text._ZN5daisy4GPIOC2Ev:00000000 _ZN5daisy4GPIOC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2020   .text._ZN5daisy4GPIOC2Ev:00000000 _ZN5daisy4GPIOC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2056   .text._ZN5daisy11AudioHandleC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2063   .text._ZN5daisy11AudioHandleC2Ev:00000000 _ZN5daisy11AudioHandleC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2063   .text._ZN5daisy11AudioHandleC2Ev:00000000 _ZN5daisy11AudioHandleC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2103   .text._ZN5daisy11AudioHandleD2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2110   .text._ZN5daisy11AudioHandleD2Ev:00000000 _ZN5daisy11AudioHandleD2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2110   .text._ZN5daisy11AudioHandleD2Ev:00000000 _ZN5daisy11AudioHandleD1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2143   .text._ZN5daisy9AdcHandleC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2150   .text._ZN5daisy9AdcHandleC2Ev:00000000 _ZN5daisy9AdcHandleC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2150   .text._ZN5daisy9AdcHandleC2Ev:00000000 _ZN5daisy9AdcHandleC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2184   .text._ZN5daisy9AdcHandleD2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2191   .text._ZN5daisy9AdcHandleD2Ev:00000000 _ZN5daisy9AdcHandleD2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2191   .text._ZN5daisy9AdcHandleD2Ev:00000000 _ZN5daisy9AdcHandleD1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2224   .text._ZN5daisy9UsbHandleC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2231   .text._ZN5daisy9UsbHandleC2Ev:00000000 _ZN5daisy9UsbHandleC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2231   .text._ZN5daisy9UsbHandleC2Ev:00000000 _ZN5daisy9UsbHandleC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2265   .text._ZN5daisy9UsbHandleD2Ev:00000000 $t
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 636


C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2272   .text._ZN5daisy9UsbHandleD2Ev:00000000 _ZN5daisy9UsbHandleD2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2272   .text._ZN5daisy9UsbHandleD2Ev:00000000 _ZN5daisy9UsbHandleD1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2305   .rodata._ZN5daisyL15kWavFileChunkIdE:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2308   .rodata._ZN5daisyL15kWavFileChunkIdE:00000000 _ZN5daisyL15kWavFileChunkIdE
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2311   .rodata._ZN5daisyL14kWavFileWaveIdE:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2314   .rodata._ZN5daisyL14kWavFileWaveIdE:00000000 _ZN5daisyL14kWavFileWaveIdE
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2317   .rodata._ZN5daisyL19kWavFileSubChunk1IdE:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2320   .rodata._ZN5daisyL19kWavFileSubChunk1IdE:00000000 _ZN5daisyL19kWavFileSubChunk1IdE
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2323   .rodata._ZN5daisyL19kWavFileSubChunk2IdE:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2326   .rodata._ZN5daisyL19kWavFileSubChunk2IdE:00000000 _ZN5daisyL19kWavFileSubChunk2IdE
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2329   .rodata._ZL19kMaxSr595DaisyChain:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2332   .rodata._ZL19kMaxSr595DaisyChain:00000000 _ZL19kMaxSr595DaisyChain
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2335   .text._ZN5daisy9DaisySeedC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2342   .text._ZN5daisy9DaisySeedC2Ev:00000000 _ZN5daisy9DaisySeedC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2342   .text._ZN5daisy9DaisySeedC2Ev:00000000 _ZN5daisy9DaisySeedC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2399   .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2406   .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2406   .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2455   .text._ZN5daisy9DaisySeed8StartLogEb:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2462   .text._ZN5daisy9DaisySeed8StartLogEb:00000000 _ZN5daisy9DaisySeed8StartLogEb
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2494   .rodata._ZN5daisy4seedL2D0E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2497   .rodata._ZN5daisy4seedL2D0E:00000000 _ZN5daisy4seedL2D0E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2501   .rodata._ZN5daisy4seedL2D1E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2504   .rodata._ZN5daisy4seedL2D1E:00000000 _ZN5daisy4seedL2D1E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2508   .rodata._ZN5daisy4seedL2D2E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2511   .rodata._ZN5daisy4seedL2D2E:00000000 _ZN5daisy4seedL2D2E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2515   .rodata._ZN5daisy4seedL2D3E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2518   .rodata._ZN5daisy4seedL2D3E:00000000 _ZN5daisy4seedL2D3E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2522   .rodata._ZN5daisy4seedL2D4E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2525   .rodata._ZN5daisy4seedL2D4E:00000000 _ZN5daisy4seedL2D4E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2529   .rodata._ZN5daisy4seedL2D5E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2532   .rodata._ZN5daisy4seedL2D5E:00000000 _ZN5daisy4seedL2D5E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2536   .rodata._ZN5daisy4seedL2D6E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2539   .rodata._ZN5daisy4seedL2D6E:00000000 _ZN5daisy4seedL2D6E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2543   .rodata._ZN5daisy4seedL2D7E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2546   .rodata._ZN5daisy4seedL2D7E:00000000 _ZN5daisy4seedL2D7E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2550   .rodata._ZN5daisy4seedL2D8E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2553   .rodata._ZN5daisy4seedL2D8E:00000000 _ZN5daisy4seedL2D8E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2557   .rodata._ZN5daisy4seedL2D9E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2560   .rodata._ZN5daisy4seedL2D9E:00000000 _ZN5daisy4seedL2D9E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2564   .rodata._ZN5daisy4seedL3D10E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2567   .rodata._ZN5daisy4seedL3D10E:00000000 _ZN5daisy4seedL3D10E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2571   .rodata._ZN5daisy4seedL3D11E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2574   .rodata._ZN5daisy4seedL3D11E:00000000 _ZN5daisy4seedL3D11E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2578   .rodata._ZN5daisy4seedL3D12E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2581   .rodata._ZN5daisy4seedL3D12E:00000000 _ZN5daisy4seedL3D12E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2585   .rodata._ZN5daisy4seedL3D13E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2588   .rodata._ZN5daisy4seedL3D13E:00000000 _ZN5daisy4seedL3D13E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2592   .rodata._ZN5daisy4seedL3D14E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2595   .rodata._ZN5daisy4seedL3D14E:00000000 _ZN5daisy4seedL3D14E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2599   .rodata._ZN5daisy4seedL3D15E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2602   .rodata._ZN5daisy4seedL3D15E:00000000 _ZN5daisy4seedL3D15E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2606   .rodata._ZN5daisy4seedL3D16E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2609   .rodata._ZN5daisy4seedL3D16E:00000000 _ZN5daisy4seedL3D16E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2613   .rodata._ZN5daisy4seedL3D17E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2616   .rodata._ZN5daisy4seedL3D17E:00000000 _ZN5daisy4seedL3D17E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2620   .rodata._ZN5daisy4seedL3D18E:00000000 $d
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 637


C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2623   .rodata._ZN5daisy4seedL3D18E:00000000 _ZN5daisy4seedL3D18E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2627   .rodata._ZN5daisy4seedL3D19E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2630   .rodata._ZN5daisy4seedL3D19E:00000000 _ZN5daisy4seedL3D19E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2634   .rodata._ZN5daisy4seedL3D20E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2637   .rodata._ZN5daisy4seedL3D20E:00000000 _ZN5daisy4seedL3D20E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2641   .rodata._ZN5daisy4seedL3D21E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2644   .rodata._ZN5daisy4seedL3D21E:00000000 _ZN5daisy4seedL3D21E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2648   .rodata._ZN5daisy4seedL3D22E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2651   .rodata._ZN5daisy4seedL3D22E:00000000 _ZN5daisy4seedL3D22E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2655   .rodata._ZN5daisy4seedL3D23E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2658   .rodata._ZN5daisy4seedL3D23E:00000000 _ZN5daisy4seedL3D23E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2662   .rodata._ZN5daisy4seedL3D24E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2665   .rodata._ZN5daisy4seedL3D24E:00000000 _ZN5daisy4seedL3D24E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2669   .rodata._ZN5daisy4seedL3D25E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2672   .rodata._ZN5daisy4seedL3D25E:00000000 _ZN5daisy4seedL3D25E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2675   .rodata._ZN5daisy4seedL3D26E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2678   .rodata._ZN5daisy4seedL3D26E:00000000 _ZN5daisy4seedL3D26E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2682   .rodata._ZN5daisy4seedL3D27E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2685   .rodata._ZN5daisy4seedL3D27E:00000000 _ZN5daisy4seedL3D27E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2689   .rodata._ZN5daisy4seedL3D28E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2692   .rodata._ZN5daisy4seedL3D28E:00000000 _ZN5daisy4seedL3D28E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2696   .rodata._ZN5daisy4seedL3D29E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2699   .rodata._ZN5daisy4seedL3D29E:00000000 _ZN5daisy4seedL3D29E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2703   .rodata._ZN5daisy4seedL3D30E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2706   .rodata._ZN5daisy4seedL3D30E:00000000 _ZN5daisy4seedL3D30E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2710   .rodata._ZN5daisy4seedL2A0E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2713   .rodata._ZN5daisy4seedL2A0E:00000000 _ZN5daisy4seedL2A0E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2717   .rodata._ZN5daisy4seedL2A1E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2720   .rodata._ZN5daisy4seedL2A1E:00000000 _ZN5daisy4seedL2A1E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2724   .rodata._ZN5daisy4seedL2A2E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2727   .rodata._ZN5daisy4seedL2A2E:00000000 _ZN5daisy4seedL2A2E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2731   .rodata._ZN5daisy4seedL2A3E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2734   .rodata._ZN5daisy4seedL2A3E:00000000 _ZN5daisy4seedL2A3E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2738   .rodata._ZN5daisy4seedL2A4E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2741   .rodata._ZN5daisy4seedL2A4E:00000000 _ZN5daisy4seedL2A4E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2745   .rodata._ZN5daisy4seedL2A5E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2748   .rodata._ZN5daisy4seedL2A5E:00000000 _ZN5daisy4seedL2A5E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2752   .rodata._ZN5daisy4seedL2A6E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2755   .rodata._ZN5daisy4seedL2A6E:00000000 _ZN5daisy4seedL2A6E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2759   .rodata._ZN5daisy4seedL2A7E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2762   .rodata._ZN5daisy4seedL2A7E:00000000 _ZN5daisy4seedL2A7E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2766   .rodata._ZN5daisy4seedL2A8E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2769   .rodata._ZN5daisy4seedL2A8E:00000000 _ZN5daisy4seedL2A8E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2773   .rodata._ZN5daisy4seedL2A9E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2776   .rodata._ZN5daisy4seedL2A9E:00000000 _ZN5daisy4seedL2A9E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2780   .rodata._ZN5daisy4seedL3A10E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2783   .rodata._ZN5daisy4seedL3A10E:00000000 _ZN5daisy4seedL3A10E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2786   .rodata._ZN5daisy4seedL3A11E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2789   .rodata._ZN5daisy4seedL3A11E:00000000 _ZN5daisy4seedL3A11E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2793   .rodata._ZN5daisy4seedL3D31E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2796   .rodata._ZN5daisy4seedL3D31E:00000000 _ZN5daisy4seedL3D31E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2800   .rodata._ZN5daisy4seedL3D32E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2803   .rodata._ZN5daisy4seedL3D32E:00000000 _ZN5daisy4seedL3D32E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2807   .rodata._ZN5daisy4seedL3A12E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2810   .rodata._ZN5daisy4seedL3A12E:00000000 _ZN5daisy4seedL3A12E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2814   .rodata._ZN5daisy4seedL3A13E:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2817   .rodata._ZN5daisy4seedL3A13E:00000000 _ZN5daisy4seedL3A13E
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 638


C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2821   .text._ZN7daisysp4AdsrC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2828   .text._ZN7daisysp4AdsrC2Ev:00000000 _ZN7daisysp4AdsrC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2898   .text._ZN7daisysp4AdsrC2Ev:00000070 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2828   .text._ZN7daisysp4AdsrC2Ev:00000000 _ZN7daisysp4AdsrC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2905   .text._ZN7daisysp4AdsrD2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2912   .text._ZN7daisysp4AdsrD2Ev:00000000 _ZN7daisysp4AdsrD2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2912   .text._ZN7daisysp4AdsrD2Ev:00000000 _ZN7daisysp4AdsrD1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2945   .rodata:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2949   .text._ZNSt13random_deviceC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2956   .text._ZNSt13random_deviceC2Ev:00000000 _ZNSt13random_deviceC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3009   .text._ZNSt13random_deviceC2Ev:0000004c $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:2956   .text._ZNSt13random_deviceC2Ev:00000000 _ZNSt13random_deviceC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3016   .text._ZNSt13random_deviceclEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3023   .text._ZNSt13random_deviceclEv:00000000 _ZNSt13random_deviceclEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3054   .rodata._ZN7daisyspL9kRandFracE:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3057   .rodata._ZN7daisyspL9kRandFracE:00000000 _ZN7daisyspL9kRandFracE
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3060   .rodata._ZN7daisyspL11kOneTwelfthE:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3063   .rodata._ZN7daisyspL11kOneTwelfthE:00000000 _ZN7daisyspL11kOneTwelfthE
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3066   .text._ZN7daisysp3SvfC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3073   .text._ZN7daisysp3SvfC2Ev:00000000 _ZN7daisysp3SvfC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3073   .text._ZN7daisysp3SvfC2Ev:00000000 _ZN7daisysp3SvfC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3107   .text._ZN7daisysp3SvfD2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3114   .text._ZN7daisysp3SvfD2Ev:00000000 _ZN7daisysp3SvfD2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3114   .text._ZN7daisysp3SvfD2Ev:00000000 _ZN7daisysp3SvfD1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3147   .text._ZN7daisysp18SyntheticSnareDrumC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3154   .text._ZN7daisysp18SyntheticSnareDrumC2Ev:00000000 _ZN7daisysp18SyntheticSnareDrumC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3154   .text._ZN7daisysp18SyntheticSnareDrumC2Ev:00000000 _ZN7daisysp18SyntheticSnareDrumC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3200   .text._ZN7daisysp18SyntheticSnareDrumD2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3207   .text._ZN7daisysp18SyntheticSnareDrumD2Ev:00000000 _ZN7daisysp18SyntheticSnareDrumD2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3207   .text._ZN7daisysp18SyntheticSnareDrumD2Ev:00000000 _ZN7daisysp18SyntheticSnareDrumD1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3252   .text._ZN7daisysp5MetroC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3259   .text._ZN7daisysp5MetroC2Ev:00000000 _ZN7daisysp5MetroC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3259   .text._ZN7daisysp5MetroC2Ev:00000000 _ZN7daisysp5MetroC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3293   .text._ZN7daisysp5MetroD2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3300   .text._ZN7daisysp5MetroD2Ev:00000000 _ZN7daisysp5MetroD2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3300   .text._ZN7daisysp5MetroD2Ev:00000000 _ZN7daisysp5MetroD1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3333   .rodata._ZN9constantsL10samplerateE:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3336   .rodata._ZN9constantsL10samplerateE:00000000 _ZN9constantsL10samplerateE
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3340   .text._ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3347   .text._ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev:00000000 _ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6558   .text._ZNSaIdED2Ev:00000000 _ZNSaIdED2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3347   .text._ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev:00000000 _ZNSt12_Vector_baseIdSaIdEE12_Vector_implD1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3382   .text._ZNSt12_Vector_baseIdSaIdEEC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3389   .text._ZNSt12_Vector_baseIdSaIdEEC2Ev:00000000 _ZNSt12_Vector_baseIdSaIdEEC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6513   .text._ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev:00000000 _ZNSt12_Vector_baseIdSaIdEE12_Vector_implC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3389   .text._ZNSt12_Vector_baseIdSaIdEEC2Ev:00000000 _ZNSt12_Vector_baseIdSaIdEEC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3424   .text._ZNSt6vectorIdSaIdEEC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3431   .text._ZNSt6vectorIdSaIdEEC2Ev:00000000 _ZNSt6vectorIdSaIdEEC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3431   .text._ZNSt6vectorIdSaIdEEC2Ev:00000000 _ZNSt6vectorIdSaIdEEC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3466   .text._ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3473   .text._ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev:00000000 _ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6471   .text._ZNSaImED2Ev:00000000 _ZNSaImED2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3473   .text._ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev:00000000 _ZNSt13_Bvector_baseISaIbEE13_Bvector_implD1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3507   .text._ZNSt13_Bvector_baseISaIbEEC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3514   .text._ZNSt13_Bvector_baseISaIbEEC2Ev:00000000 _ZNSt13_Bvector_baseISaIbEEC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6716   .text._ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev:00000000 _ZNSt13_Bvector_baseISaIbEE13_Bvector_implC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3514   .text._ZNSt13_Bvector_baseISaIbEEC2Ev:00000000 _ZNSt13_Bvector_baseISaIbEEC1Ev
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 639


C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3549   .text._ZNSt6vectorIbSaIbEEC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3556   .text._ZNSt6vectorIbSaIbEEC2Ev:00000000 _ZNSt6vectorIbSaIbEEC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3556   .text._ZNSt6vectorIbSaIbEEC2Ev:00000000 _ZNSt6vectorIbSaIbEEC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3591   .text._ZN1k9KnobMultiC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3598   .text._ZN1k9KnobMultiC2Ev:00000000 _ZN1k9KnobMultiC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3671   .text._ZN1k9KnobMultiC2Ev:00000084 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3598   .text._ZN1k9KnobMultiC2Ev:00000000 _ZN1k9KnobMultiC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3678   .text._ZN1k9KnobMulti4InitEi:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3685   .text._ZN1k9KnobMulti4InitEi:00000000 _ZN1k9KnobMulti4InitEi
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4213   .text._ZN1k9KnobMulti15initShiftValuesEv:00000000 _ZN1k9KnobMulti15initShiftValuesEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3723   .text._ZN1k9KnobMulti4InitEi:00000024 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3728   .text._ZN1k9KnobMulti8getValueEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3735   .text._ZN1k9KnobMulti8getValueEv:00000000 _ZN1k9KnobMulti8getValueEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3769   .text._ZN1k9KnobMulti5shiftEbi:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3776   .text._ZN1k9KnobMulti5shiftEbi:00000000 _ZN1k9KnobMulti5shiftEbi
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6848   .text._ZNSt6vectorIdSaIdEEixEj:00000000 _ZNSt6vectorIdSaIdEEixEj
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3948   .text._ZN1k9KnobMulti10updateKnobEdi:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:3955   .text._ZN1k9KnobMulti10updateKnobEdi:00000000 _ZN1k9KnobMulti10updateKnobEdi
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4150   .text._ZN1k9KnobMulti10updateKnobEdi:00000180 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4157   .text._ZN1k9KnobMulti10updateKnobEdbi:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4164   .text._ZN1k9KnobMulti10updateKnobEdbi:00000000 _ZN1k9KnobMulti10updateKnobEdbi
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4206   .text._ZN1k9KnobMulti15initShiftValuesEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6894   .text._ZNSt6vectorIdSaIdEE6resizeEjRKd:00000000 _ZNSt6vectorIdSaIdEE6resizeEjRKd
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6989   .text._ZNSt6vectorIbSaIbEE6resizeEjb:00000000 _ZNSt6vectorIbSaIbEE6resizeEjb
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4292   .text._ZN1k13OnePoleFilterC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4299   .text._ZN1k13OnePoleFilterC2Ev:00000000 _ZN1k13OnePoleFilterC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4299   .text._ZN1k13OnePoleFilterC2Ev:00000000 _ZN1k13OnePoleFilterC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4333   .text._ZN1k13OnePoleFilter4initEdj:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4340   .text._ZN1k13OnePoleFilter4initEdj:00000000 _ZN1k13OnePoleFilter4initEdj
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4448   .text._ZN1k13OnePoleFilter7setTimeEd:00000000 _ZN1k13OnePoleFilter7setTimeEd
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4379   .text._ZN1k13OnePoleFilter7processEd:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4386   .text._ZN1k13OnePoleFilter7processEd:00000000 _ZN1k13OnePoleFilter7processEd
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4441   .text._ZN1k13OnePoleFilter7setTimeEd:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4499   .text._ZN1k13OnePoleFilter7setTimeEd:00000050 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4505   .rodata._ZL12ReverbParams:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4508   .rodata._ZL12ReverbParams:00000000 _ZL12ReverbParams
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4546   .sdram_bss:00000000 delay
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4543   .sdram_bss:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4549   .text._ZN9ReverbFDN4InitEf:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4556   .text._ZN9ReverbFDN4InitEf:00000000 _ZN9ReverbFDN4InitEf
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7126   .text._ZN7daisysp9DelayLineIfLj96000EE4InitEv:00000000 _ZN7daisysp9DelayLineIfLj96000EE4InitEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7163   .text._ZN7daisysp9DelayLineIfLj96000EE8SetDelayEf:00000000 _ZN7daisysp9DelayLineIfLj96000EE8SetDelayEf
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4666   .text._ZN9ReverbFDN23GenerateDelayVariationsEf:00000000 _ZN9ReverbFDN23GenerateDelayVariationsEf
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4650   .text._ZN9ReverbFDN4InitEf:00000098 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4659   .text._ZN9ReverbFDN23GenerateDelayVariationsEf:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7230   .text._ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEC2Ej:00000000 _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEC1Ej
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7274   .text._ZNSt25uniform_real_distributionIfEC2Eff:00000000 _ZNSt25uniform_real_distributionIfEC1Eff
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7321   .text._ZNSt25uniform_real_distributionIfEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEfRT_:00000000 _ZNSt25uniform_real_distributionIfEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEfRT_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4830   .text._ZN9ReverbFDN23GenerateDelayVariationsEf:00000158 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4837   .text._ZN9ReverbFDN11SetFeedbackEf:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4844   .text._ZN9ReverbFDN11SetFeedbackEf:00000000 _ZN9ReverbFDN11SetFeedbackEf
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4888   .text._ZN9ReverbFDN9SetAmountEf:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4895   .text._ZN9ReverbFDN9SetAmountEf:00000000 _ZN9ReverbFDN9SetAmountEf
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4949   .text._ZN9ReverbFDN7SetSizeEf:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:4956   .text._ZN9ReverbFDN7SetSizeEf:00000000 _ZN9ReverbFDN7SetSizeEf
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5012   .text._ZN9ReverbFDN7SetSizeEf:00000050 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5020   .text._ZN9ReverbFDN10SetDensityEi:00000000 $t
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 640


C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5027   .text._ZN9ReverbFDN10SetDensityEi:00000000 _ZN9ReverbFDN10SetDensityEi
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5078   .text._ZN9ReverbFDN12SetDiffusionEf:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5085   .text._ZN9ReverbFDN12SetDiffusionEf:00000000 _ZN9ReverbFDN12SetDiffusionEf
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5138   .text._ZN9ReverbFDN12SetDiffusionEf:00000048 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5143   .text._ZN9ReverbFDN12SetSmoothingEf:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5150   .text._ZN9ReverbFDN12SetSmoothingEf:00000000 _ZN9ReverbFDN12SetSmoothingEf
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5189   .text._ZN9ReverbFDN12SetSmoothingEf:00000038 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5194   .text._ZN9ReverbFDN7ProcessEf:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5201   .text._ZN9ReverbFDN7ProcessEf:00000000 _ZN9ReverbFDN7ProcessEf
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7364   .text._ZNK7daisysp9DelayLineIfLj96000EE4ReadEv:00000000 _ZNK7daisysp9DelayLineIfLj96000EE4ReadEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7466   .text._ZN7daisysp9DelayLineIfLj96000EE5WriteEf:00000000 _ZN7daisysp9DelayLineIfLj96000EE5WriteEf
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5587   .text._ZN9ReverbFDN7ProcessEf:00000378 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5599   .bss.hw:00000000 hw
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5596   .bss.hw:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5606   .bss.metro:00000000 metro
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5603   .bss.metro:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5613   .bss.envelope:00000000 envelope
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5610   .bss.envelope:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5620   .bss.snare:00000000 snare
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5617   .bss.snare:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5623   .text._ZN9ReverbFDNC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5630   .text._ZN9ReverbFDNC2Ev:00000000 _ZN9ReverbFDNC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5674   .text._ZN9ReverbFDNC2Ev:00000038 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5630   .text._ZN9ReverbFDNC2Ev:00000000 _ZN9ReverbFDNC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5685   .bss.reverb:00000000 reverb
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5682   .bss.reverb:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5692   .bss.adc:00000000 adc
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5689   .bss.adc:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5699   .bss.knob:00000000 knob
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5696   .bss.knob:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5706   .bss.modSwitch:00000000 modSwitch
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5703   .bss.modSwitch:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5713   .bss.effectSwitch:00000000 effectSwitch
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5710   .bss.effectSwitch:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5720   .bss.sampleRate:00000000 sampleRate
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5717   .bss.sampleRate:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5727   .bss.parameters:00000000 parameters
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5724   .bss.parameters:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5734   .bss.volume:00000000 volume
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5731   .bss.volume:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5741   .bss.timerUI:00000000 timerUI
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5738   .bss.timerUI:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5748   .bss.timerVisual:00000000 timerVisual
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5745   .bss.timerVisual:00000000 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5751   .text._Z9initTimerv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5758   .text._Z9initTimerv:00000000 _Z9initTimerv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5822   .text._Z9initTimerv:00000054 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6172   .text._Z10UICallbackPv:00000000 _Z10UICallbackPv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5829   .text._Z8CallbackPKfPfj:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5836   .text._Z8CallbackPKfPfj:00000000 _Z8CallbackPKfPfj
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5930   .text._Z8CallbackPKfPfj:00000088 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5938   .text._Z5setupv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:5945   .text._Z5setupv:00000000 _Z5setupv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6141   .text._Z5setupv:0000019c $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6165   .text._Z10UICallbackPv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6416   .text._Z10UICallbackPv:00000220 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6435   .text.main:00000000 $t
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 641


C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6442   .text.main:00000000 main
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6464   .text._ZNSaImED2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7579   .text._ZN9__gnu_cxx13new_allocatorImED2Ev:00000000 _ZN9__gnu_cxx13new_allocatorImED2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6471   .text._ZNSaImED2Ev:00000000 _ZNSaImED1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6506   .text._ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6513   .text._ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev:00000000 _ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7620   .text._ZNSaIdEC2Ev:00000000 _ZNSaIdEC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7662   .text._ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev:00000000 _ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6551   .text._ZNSaIdED2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7714   .text._ZN9__gnu_cxx13new_allocatorIdED2Ev:00000000 _ZN9__gnu_cxx13new_allocatorIdED2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6558   .text._ZNSaIdED2Ev:00000000 _ZNSaIdED1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6592   .text._ZNSt12_Vector_baseIdSaIdEED2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6599   .text._ZNSt12_Vector_baseIdSaIdEED2Ev:00000000 _ZNSt12_Vector_baseIdSaIdEED2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7754   .text._ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdj:00000000 _ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdj
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6599   .text._ZNSt12_Vector_baseIdSaIdEED2Ev:00000000 _ZNSt12_Vector_baseIdSaIdEED1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6650   .text._ZNSt6vectorIdSaIdEED2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6657   .text._ZNSt6vectorIdSaIdEED2Ev:00000000 _ZNSt6vectorIdSaIdEED2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7802   .text._ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv:00000000 _ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7841   .text._ZSt8_DestroyIPddEvT_S1_RSaIT0_E:00000000 _ZSt8_DestroyIPddEvT_S1_RSaIT0_E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6657   .text._ZNSt6vectorIdSaIdEED2Ev:00000000 _ZNSt6vectorIdSaIdEED1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6709   .text._ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6716   .text._ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev:00000000 _ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7537   .text._ZNSaImEC2Ev:00000000 _ZNSaImEC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7882   .text._ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev:00000000 _ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6754   .text._ZNSt13_Bvector_baseISaIbEED2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6761   .text._ZNSt13_Bvector_baseISaIbEED2Ev:00000000 _ZNSt13_Bvector_baseISaIbEED2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7932   .text._ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv:00000000 _ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6761   .text._ZNSt13_Bvector_baseISaIbEED2Ev:00000000 _ZNSt13_Bvector_baseISaIbEED1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6799   .text._ZNSt6vectorIbSaIbEED2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6806   .text._ZNSt6vectorIbSaIbEED2Ev:00000000 _ZNSt6vectorIbSaIbEED2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6806   .text._ZNSt6vectorIbSaIbEED2Ev:00000000 _ZNSt6vectorIbSaIbEED1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6841   .text._ZNSt6vectorIdSaIdEEixEj:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6887   .text._ZNSt6vectorIdSaIdEE6resizeEjRKd:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8008   .text._ZNKSt6vectorIdSaIdEE4sizeEv:00000000 _ZNKSt6vectorIdSaIdEE4sizeEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8451   .text._ZNSt6vectorIdSaIdEE3endEv:00000000 _ZNSt6vectorIdSaIdEE3endEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8058   .text._ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEjRKd:00000000 _ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEjRKd
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8495   .text._ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd:00000000 _ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:6982   .text._ZNSt6vectorIbSaIbEE6resizeEjb:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8564   .text._ZNKSt6vectorIbSaIbEE4sizeEv:00000000 _ZNKSt6vectorIbSaIbEE4sizeEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8660   .text._ZNSt6vectorIbSaIbEE5beginEv:00000000 _ZNSt6vectorIbSaIbEE5beginEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8615   .text._ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator:00000000 _ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8702   .text._ZNSt6vectorIbSaIbEE3endEv:00000000 _ZNSt6vectorIbSaIbEE3endEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8746   .text._ZNSt6vectorIbSaIbEE6insertESt19_Bit_const_iteratorjRKb:00000000 _ZNSt6vectorIbSaIbEE6insertESt19_Bit_const_iteratorjRKb
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7078   .text._ZN7daisysp9DelayLineIfLj96000EEC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7085   .text._ZN7daisysp9DelayLineIfLj96000EEC2Ev:00000000 _ZN7daisysp9DelayLineIfLj96000EEC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7085   .text._ZN7daisysp9DelayLineIfLj96000EEC2Ev:00000000 _ZN7daisysp9DelayLineIfLj96000EEC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7119   .text._ZN7daisysp9DelayLineIfLj96000EE4InitEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8822   .text._ZN7daisysp9DelayLineIfLj96000EE5ResetEv:00000000 _ZN7daisysp9DelayLineIfLj96000EE5ResetEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7156   .text._ZN7daisysp9DelayLineIfLj96000EE8SetDelayEf:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7218   .text._ZN7daisysp9DelayLineIfLj96000EE8SetDelayEf:0000004c $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7223   .text._ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEC2Ej:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7230   .text._ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEC2Ej:00000000 _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEC2Ej
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8897   .text._ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE4seedEj:00000000 _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE4seedEj
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7267   .text._ZNSt25uniform_real_distributionIfEC2Eff:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7274   .text._ZNSt25uniform_real_distributionIfEC2Eff:00000000 _ZNSt25uniform_real_distributionIfEC2Eff
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9001   .text._ZNSt25uniform_real_distributionIfE10param_typeC2Eff:00000000 _ZNSt25uniform_real_distributionIfE10param_typeC1Eff
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7314   .text._ZNSt25uniform_real_distributionIfEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEfRT_:00000000 $t
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 642


C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9052   .text._ZNSt25uniform_real_distributionIfEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEfRT_RKNS0_10param_typeE:00000000 _ZNSt25uniform_real_distributionIfEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEfRT_RKNS0_10param_typeE
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7357   .text._ZNK7daisysp9DelayLineIfLj96000EE4ReadEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7453   .text._ZNK7daisysp9DelayLineIfLj96000EE4ReadEv:00000088 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7459   .text._ZN7daisysp9DelayLineIfLj96000EE5WriteEf:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7523   .text._ZN7daisysp9DelayLineIfLj96000EE5WriteEf:00000048 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7530   .text._ZNSaImEC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9124   .text._ZN9__gnu_cxx13new_allocatorImEC2Ev:00000000 _ZN9__gnu_cxx13new_allocatorImEC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7537   .text._ZNSaImEC2Ev:00000000 _ZNSaImEC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7572   .text._ZN9__gnu_cxx13new_allocatorImED2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7579   .text._ZN9__gnu_cxx13new_allocatorImED2Ev:00000000 _ZN9__gnu_cxx13new_allocatorImED1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7613   .text._ZNSaIdEC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9205   .text._ZN9__gnu_cxx13new_allocatorIdEC2Ev:00000000 _ZN9__gnu_cxx13new_allocatorIdEC2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7620   .text._ZNSaIdEC2Ev:00000000 _ZNSaIdEC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7655   .text._ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7662   .text._ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev:00000000 _ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7707   .text._ZN9__gnu_cxx13new_allocatorIdED2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7714   .text._ZN9__gnu_cxx13new_allocatorIdED2Ev:00000000 _ZN9__gnu_cxx13new_allocatorIdED1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7747   .text._ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdj:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9245   .text._ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdj:00000000 _ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdj
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7795   .text._ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7834   .text._ZSt8_DestroyIPddEvT_S1_RSaIT0_E:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9286   .text._ZSt8_DestroyIPdEvT_S1_:00000000 _ZSt8_DestroyIPdEvT_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7875   .text._ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7882   .text._ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev:00000000 _ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:7925   .text._ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9326   .text._ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv:00000000 _ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9164   .text._ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmj:00000000 _ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmj
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9381   .text._ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv:00000000 _ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8001   .text._ZNKSt6vectorIdSaIdEE4sizeEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8051   .text._ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEjRKd:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9434   .text._ZNSt6vectorIdSaIdEE16_Temporary_valueC2IJRKdEEEPS1_DpOT_:00000000 _ZNSt6vectorIdSaIdEE16_Temporary_valueC1IJRKdEEEPS1_DpOT_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9549   .text._ZNSt6vectorIdSaIdEE16_Temporary_value6_M_valEv:00000000 _ZNSt6vectorIdSaIdEE16_Temporary_value6_M_valEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9587   .text._ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_:00000000 _ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9639   .text._ZSt22__uninitialized_move_aIPdS0_SaIdEET0_T_S3_S2_RT1_:00000000 _ZSt22__uninitialized_move_aIPdS0_SaIdEET0_T_S3_S2_RT1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9690   .text._ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv:00000000 _ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9729   .text._ZSt13move_backwardIPdS0_ET0_T_S2_S1_:00000000 _ZSt13move_backwardIPdS0_ET0_T_S2_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9778   .text._ZSt4fillIPddEvT_S1_RKT0_:00000000 _ZSt4fillIPddEvT_S1_RKT0_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9819   .text._ZSt24__uninitialized_fill_n_aIPdjddET_S1_T0_RKT1_RSaIT2_E:00000000 _ZSt24__uninitialized_fill_n_aIPdjddET_S1_T0_RKT1_RSaIT2_E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9497   .text._ZNSt6vectorIdSaIdEE16_Temporary_valueD2Ev:00000000 _ZNSt6vectorIdSaIdEE16_Temporary_valueD1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9862   .text._ZNKSt6vectorIdSaIdEE12_M_check_lenEjPKc:00000000 _ZNKSt6vectorIdSaIdEE12_M_check_lenEjPKc
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9971   .text._ZNSt6vectorIdSaIdEE5beginEv:00000000 _ZNSt6vectorIdSaIdEE5beginEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10014  .text._ZNSt12_Vector_baseIdSaIdEE11_M_allocateEj:00000000 _ZNSt12_Vector_baseIdSaIdEE11_M_allocateEj
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10066  .text._ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_:00000000 _ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8439   .text._ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEjRKd:0000027c $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8444   .text._ZNSt6vectorIdSaIdEE3endEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10116  .text._ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_:00000000 _ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC1ERKS1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8488   .text._ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8557   .text._ZNKSt6vectorIbSaIbEE4sizeEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10164  .text._ZNKSt6vectorIbSaIbEE3endEv:00000000 _ZNKSt6vectorIbSaIbEE3endEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10205  .text._ZNKSt6vectorIbSaIbEE5beginEv:00000000 _ZNKSt6vectorIbSaIbEE5beginEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8608   .text._ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8653   .text._ZNSt6vectorIbSaIbEE5beginEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8695   .text._ZNSt6vectorIbSaIbEE3endEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8739   .text._ZNSt6vectorIbSaIbEE6insertESt19_Bit_const_iteratorjRKb:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10248  .text._ZNKSt6vectorIbSaIbEE6cbeginEv:00000000 _ZNKSt6vectorIbSaIbEE6cbeginEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10295  .text._ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratorjb:00000000 _ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratorjb
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8815   .text._ZN7daisysp9DelayLineIfLj96000EE5ResetEv:00000000 $t
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 643


C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8885   .text._ZN7daisysp9DelayLineIfLj96000EE5ResetEv:00000048 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8890   .text._ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE4seedEj:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10528  .text._ZNSt8__detail5__modIjLj0ELj1ELj0EEET_S1_:00000000 _ZNSt8__detail5__modIjLj0ELj1ELj0EEET_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10566  .text._ZNSt8__detail5__modIjLj624ELj1ELj0EEET_S1_:00000000 _ZNSt8__detail5__modIjLj624ELj1ELj0EEET_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8989   .text._ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE4seedEj:0000007c $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:8994   .text._ZNSt25uniform_real_distributionIfE10param_typeC2Eff:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9001   .text._ZNSt25uniform_real_distributionIfE10param_typeC2Eff:00000000 _ZNSt25uniform_real_distributionIfE10param_typeC2Eff
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9045   .text._ZNSt25uniform_real_distributionIfEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEfRT_RKNS0_10param_typeE:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10604  .text._ZNSt8__detail8_AdaptorISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEfEC2ERS2_:00000000 _ZNSt8__detail8_AdaptorISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEfEC1ERS2_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10651  .text._ZNSt8__detail8_AdaptorISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEfEclEv:00000000 _ZNSt8__detail8_AdaptorISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEfEclEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10691  .text._ZNKSt25uniform_real_distributionIfE10param_type1bEv:00000000 _ZNKSt25uniform_real_distributionIfE10param_type1bEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10732  .text._ZNKSt25uniform_real_distributionIfE10param_type1aEv:00000000 _ZNKSt25uniform_real_distributionIfE10param_type1aEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9117   .text._ZN9__gnu_cxx13new_allocatorImEC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9124   .text._ZN9__gnu_cxx13new_allocatorImEC2Ev:00000000 _ZN9__gnu_cxx13new_allocatorImEC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9157   .text._ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmj:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10773  .text._ZN9__gnu_cxx13new_allocatorImE10deallocateEPmj:00000000 _ZN9__gnu_cxx13new_allocatorImE10deallocateEPmj
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9198   .text._ZN9__gnu_cxx13new_allocatorIdEC2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9205   .text._ZN9__gnu_cxx13new_allocatorIdEC2Ev:00000000 _ZN9__gnu_cxx13new_allocatorIdEC1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9238   .text._ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdj:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10815  .text._ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdj:00000000 _ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdj
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9279   .text._ZSt8_DestroyIPdEvT_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10857  .text._ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_:00000000 _ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9319   .text._ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10895  .text._ZSt11__addressofImEPT_RS0_:00000000 _ZSt11__addressofImEPT_RS0_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9374   .text._ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9427   .text._ZNSt6vectorIdSaIdEE16_Temporary_valueC2IJRKdEEEPS1_DpOT_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9434   .text._ZNSt6vectorIdSaIdEE16_Temporary_valueC2IJRKdEEEPS1_DpOT_:00000000 _ZNSt6vectorIdSaIdEE16_Temporary_valueC2IJRKdEEEPS1_DpOT_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10935  .text._ZNSt6vectorIdSaIdEE16_Temporary_value6_M_ptrEv:00000000 _ZNSt6vectorIdSaIdEE16_Temporary_value6_M_ptrEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10975  .text._ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE:00000000 _ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11014  .text._ZNSt16allocator_traitsISaIdEE9constructIdJRKdEEEvRS0_PT_DpOT0_:00000000 _ZNSt16allocator_traitsISaIdEE9constructIdJRKdEEEvRS0_PT_DpOT0_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9490   .text._ZNSt6vectorIdSaIdEE16_Temporary_valueD2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9497   .text._ZNSt6vectorIdSaIdEE16_Temporary_valueD2Ev:00000000 _ZNSt6vectorIdSaIdEE16_Temporary_valueD2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11058  .text._ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_:00000000 _ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9542   .text._ZNSt6vectorIdSaIdEE16_Temporary_value6_M_valEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9580   .text._ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9632   .text._ZSt22__uninitialized_move_aIPdS0_SaIdEET0_T_S3_S2_RT1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11097  .text._ZSt18make_move_iteratorIPdESt13move_iteratorIT_ES2_:00000000 _ZSt18make_move_iteratorIPdESt13move_iteratorIT_ES2_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11144  .text._ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E:00000000 _ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9683   .text._ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9722   .text._ZSt13move_backwardIPdS0_ET0_T_S2_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11187  .text._ZSt12__miter_baseIPdET_S1_:00000000 _ZSt12__miter_baseIPdET_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11227  .text._ZSt22__copy_move_backward_aILb1EPdS0_ET1_T0_S2_S1_:00000000 _ZSt22__copy_move_backward_aILb1EPdS0_ET1_T0_S2_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9771   .text._ZSt4fillIPddEvT_S1_RKT0_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11286  .text._ZSt8__fill_aIPddEvT_S1_RKT0_:00000000 _ZSt8__fill_aIPddEvT_S1_RKT0_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9812   .text._ZSt24__uninitialized_fill_n_aIPdjddET_S1_T0_RKT1_RSaIT2_E:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11327  .text._ZSt20uninitialized_fill_nIPdjdET_S1_T0_RKT1_:00000000 _ZSt20uninitialized_fill_nIPdjdET_S1_T0_RKT1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9855   .text._ZNKSt6vectorIdSaIdEE12_M_check_lenEjPKc:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11372  .text._ZNKSt6vectorIdSaIdEE8max_sizeEv:00000000 _ZNKSt6vectorIdSaIdEE8max_sizeEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11415  .text._ZSt3maxIjERKT_S2_S2_:00000000 _ZSt3maxIjERKT_S2_S2_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:9964   .text._ZNSt6vectorIdSaIdEE5beginEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10007  .text._ZNSt12_Vector_baseIdSaIdEE11_M_allocateEj:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11468  .text._ZNSt16allocator_traitsISaIdEE8allocateERS0_j:00000000 _ZNSt16allocator_traitsISaIdEE8allocateERS0_j
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10059  .text._ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11509  .text._ZSt32__make_move_if_noexcept_iteratorIdSt13move_iteratorIPdEET0_PT_:00000000 _ZSt32__make_move_if_noexcept_iteratorIdSt13move_iteratorIPdEET0_PT_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10109  .text._ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10116  .text._ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_:00000000 _ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10157  .text._ZNKSt6vectorIbSaIbEE3endEv:00000000 $t
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 644


C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10198  .text._ZNKSt6vectorIbSaIbEE5beginEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10241  .text._ZNKSt6vectorIbSaIbEE6cbeginEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10288  .text._ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratorjb:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11550  .text._ZNKSt6vectorIbSaIbEE8capacityEv:00000000 _ZNKSt6vectorIbSaIbEE8capacityEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11605  .text._ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_:00000000 _ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11675  .text._ZNKSt6vectorIbSaIbEE12_M_check_lenEjPKc:00000000 _ZNKSt6vectorIbSaIbEE12_M_check_lenEjPKc
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11784  .text._ZNSt13_Bvector_baseISaIbEE11_M_allocateEj:00000000 _ZNSt13_Bvector_baseISaIbEE11_M_allocateEj
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11830  .text._ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator:00000000 _ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11902  .text._ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_:00000000 _ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11972  .text._ZNSt13_Bvector_baseISaIbEE8_S_nwordEj:00000000 _ZNSt13_Bvector_baseISaIbEE8_S_nwordEj
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10516  .text._ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratorjb:000001d8 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10521  .text._ZNSt8__detail5__modIjLj0ELj1ELj0EEET_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12014  .text._ZNSt8__detail4_ModIjLj0ELj1ELj0ELb1ELb0EE6__calcEj:00000000 _ZNSt8__detail4_ModIjLj0ELj1ELj0ELb1ELb0EE6__calcEj
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10559  .text._ZNSt8__detail5__modIjLj624ELj1ELj0EEET_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12056  .text._ZNSt8__detail4_ModIjLj624ELj1ELj0ELb1ELb1EE6__calcEj:00000000 _ZNSt8__detail4_ModIjLj624ELj1ELj0ELb1ELb1EE6__calcEj
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10597  .text._ZNSt8__detail8_AdaptorISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEfEC2ERS2_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10604  .text._ZNSt8__detail8_AdaptorISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEfEC2ERS2_:00000000 _ZNSt8__detail8_AdaptorISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEfEC2ERS2_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10644  .text._ZNSt8__detail8_AdaptorISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEfEclEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12199  .text._ZSt18generate_canonicalIfLj24ESt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEET_RT1_:00000000 _ZSt18generate_canonicalIfLj24ESt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEET_RT1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10684  .text._ZNKSt25uniform_real_distributionIfE10param_type1bEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10725  .text._ZNKSt25uniform_real_distributionIfE10param_type1aEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10766  .text._ZN9__gnu_cxx13new_allocatorImE10deallocateEPmj:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10808  .text._ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdj:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10850  .text._ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10888  .text._ZSt11__addressofImEPT_RS0_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10928  .text._ZNSt6vectorIdSaIdEE16_Temporary_value6_M_ptrEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:10968  .text._ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11007  .text._ZNSt16allocator_traitsISaIdEE9constructIdJRKdEEEvRS0_PT_DpOT0_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12325  .text._ZN9__gnu_cxx13new_allocatorIdE9constructIdJRKdEEEvPT_DpOT0_:00000000 _ZN9__gnu_cxx13new_allocatorIdE9constructIdJRKdEEEvPT_DpOT0_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11051  .text._ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12377  .text._ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_:00000000 _ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11090  .text._ZSt18make_move_iteratorIPdESt13move_iteratorIT_ES2_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12415  .text._ZSt4moveIRPdEONSt16remove_referenceIT_E4typeEOS3_:00000000 _ZSt4moveIRPdEONSt16remove_referenceIT_E4typeEOS3_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12454  .text._ZNSt13move_iteratorIPdEC2ES0_:00000000 _ZNSt13move_iteratorIPdEC1ES0_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11137  .text._ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12503  .text._ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_:00000000 _ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11180  .text._ZSt12__miter_baseIPdET_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11220  .text._ZSt22__copy_move_backward_aILb1EPdS0_ET1_T0_S2_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12548  .text._ZSt12__niter_baseIPdET_S1_:00000000 _ZSt12__niter_baseIPdET_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12587  .text._ZSt23__copy_move_backward_a1ILb1EPdS0_ET1_T0_S2_S1_:00000000 _ZSt23__copy_move_backward_a1ILb1EPdS0_ET1_T0_S2_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12629  .text._ZSt12__niter_wrapIPdET_RKS1_S1_:00000000 _ZSt12__niter_wrapIPdET_RKS1_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11279  .text._ZSt8__fill_aIPddEvT_S1_RKT0_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12669  .text._ZSt9__fill_a1IPddEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_:00000000 _ZSt9__fill_a1IPddEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11320  .text._ZSt20uninitialized_fill_nIPdjdET_S1_T0_RKT1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12728  .text._ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPdjdEET_S3_T0_RKT1_:00000000 _ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPdjdEET_S3_T0_RKT1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11365  .text._ZNKSt6vectorIdSaIdEE8max_sizeEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12821  .text._ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv:00000000 _ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12770  .text._ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_:00000000 _ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11408  .text._ZSt3maxIjERKT_S2_S2_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11461  .text._ZNSt16allocator_traitsISaIdEE8allocateERS0_j:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12860  .text._ZN9__gnu_cxx13new_allocatorIdE8allocateEjPKv:00000000 _ZN9__gnu_cxx13new_allocatorIdE8allocateEjPKv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11502  .text._ZSt32__make_move_if_noexcept_iteratorIdSt13move_iteratorIPdEET0_PT_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11543  .text._ZNKSt6vectorIbSaIbEE8capacityEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11598  .text._ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12919  .text._ZSt12__miter_baseISt13_Bit_iteratorET_S1_:00000000 _ZSt12__miter_baseISt13_Bit_iteratorET_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12964  .text._ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:00000000 _ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11668  .text._ZNKSt6vectorIbSaIbEE12_M_check_lenEjPKc:00000000 $t
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 645


C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13043  .text._ZNKSt6vectorIbSaIbEE8max_sizeEv:00000000 _ZNKSt6vectorIbSaIbEE8max_sizeEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11777  .text._ZNSt13_Bvector_baseISaIbEE11_M_allocateEj:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13106  .text._ZNSt16allocator_traitsISaImEE8allocateERS0_j:00000000 _ZNSt16allocator_traitsISaImEE8allocateERS0_j
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11823  .text._ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13147  .text._ZSt4copyIPmS0_ET0_T_S2_S1_:00000000 _ZSt4copyIPmS0_ET0_T_S2_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13196  .text._ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_:00000000 _ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11895  .text._ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13266  .text._ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:00000000 _ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:11965  .text._ZNSt13_Bvector_baseISaIbEE8_S_nwordEj:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12007  .text._ZNSt8__detail4_ModIjLj0ELj1ELj0ELb1ELb0EE6__calcEj:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12049  .text._ZNSt8__detail4_ModIjLj624ELj1ELj0ELb1ELb1EE6__calcEj:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12100  .text._ZNSt8__detail4_ModIjLj624ELj1ELj0ELb1ELb1EE6__calcEj:00000034 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12105  .text._ZSt3minIjERKT_S2_S2_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12112  .text._ZSt3minIjERKT_S2_S2_:00000000 _ZSt3minIjERKT_S2_S2_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12158  .text._ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE3minEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12165  .text._ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE3minEv:00000000 _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE3minEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12192  .text._ZSt18generate_canonicalIfLj24ESt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEET_RT1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13345  .text._ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv:00000000 _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12311  .text._ZSt18generate_canonicalIfLj24ESt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEET_RT1_:000000c4 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12318  .text._ZN9__gnu_cxx13new_allocatorIdE9constructIdJRKdEEEvPT_DpOT0_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12370  .text._ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12408  .text._ZSt4moveIRPdEONSt16remove_referenceIT_E4typeEOS3_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12447  .text._ZNSt13move_iteratorIPdEC2ES0_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12454  .text._ZNSt13move_iteratorIPdEC2ES0_:00000000 _ZNSt13move_iteratorIPdEC2ES0_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12496  .text._ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13441  .text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_:00000000 _ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12541  .text._ZSt12__niter_baseIPdET_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12580  .text._ZSt23__copy_move_backward_a1ILb1EPdS0_ET1_T0_S2_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13483  .text._ZSt23__copy_move_backward_a2ILb1EPdS0_ET1_T0_S2_S1_:00000000 _ZSt23__copy_move_backward_a2ILb1EPdS0_ET1_T0_S2_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12622  .text._ZSt12__niter_wrapIPdET_RKS1_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12662  .text._ZSt9__fill_a1IPddEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12721  .text._ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPdjdEET_S3_T0_RKT1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13525  .text._ZSt6fill_nIPdjdET_S1_T0_RKT1_:00000000 _ZSt6fill_nIPdjdET_S1_T0_RKT1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12763  .text._ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13580  .text._ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_:00000000 _ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12814  .text._ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12853  .text._ZN9__gnu_cxx13new_allocatorIdE8allocateEjPKv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13618  .text._ZNK9__gnu_cxx13new_allocatorIdE11_M_max_sizeEv:00000000 _ZNK9__gnu_cxx13new_allocatorIdE11_M_max_sizeEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12912  .text._ZSt12__miter_baseISt13_Bit_iteratorET_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:12957  .text._ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13657  .text._ZSt12__niter_baseISt13_Bit_iteratorET_S1_:00000000 _ZSt12__niter_baseISt13_Bit_iteratorET_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13702  .text._ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:00000000 _ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13764  .text._ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_:00000000 _ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13036  .text._ZNKSt6vectorIbSaIbEE8max_sizeEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13848  .text._ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv:00000000 _ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13810  .text._ZNSt16allocator_traitsISaImEE8max_sizeERKS0_:00000000 _ZNSt16allocator_traitsISaImEE8max_sizeERKS0_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13094  .text._ZNKSt6vectorIbSaIbEE8max_sizeEv:00000038 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13099  .text._ZNSt16allocator_traitsISaImEE8allocateERS0_j:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13887  .text._ZN9__gnu_cxx13new_allocatorImE8allocateEjPKv:00000000 _ZN9__gnu_cxx13new_allocatorImE8allocateEjPKv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13140  .text._ZSt4copyIPmS0_ET0_T_S2_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13946  .text._ZSt12__miter_baseIPmET_S1_:00000000 _ZSt12__miter_baseIPmET_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13985  .text._ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_:00000000 _ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13189  .text._ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14044  .text._ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_:00000000 _ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14089  .text._ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_:00000000 _ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13259  .text._ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14168  .text._ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:00000000 _ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 646


C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13338  .text._ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14230  .text._ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11_M_gen_randEv:00000000 _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11_M_gen_randEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13428  .text._ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv:0000006c $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13434  .text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14451  .text._ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_:00000000 _ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13476  .text._ZSt23__copy_move_backward_a2ILb1EPdS0_ET1_T0_S2_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14500  .text._ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIdEEPT_PKS3_S6_S4_:00000000 _ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIdEEPT_PKS3_S6_S4_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13518  .text._ZSt6fill_nIPdjdET_S1_T0_RKT1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14570  .text._ZSt19__iterator_categoryIPdENSt15iterator_traitsIT_E17iterator_categoryERKS2_:00000000 _ZSt19__iterator_categoryIPdENSt15iterator_traitsIT_E17iterator_categoryERKS2_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14610  .text._ZSt10__fill_n_aIPdjdET_S1_T0_RKT1_St26random_access_iterator_tag:00000000 _ZSt10__fill_n_aIPdjdET_S1_T0_RKT1_St26random_access_iterator_tag
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13573  .text._ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14672  .text._ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv:00000000 _ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13611  .text._ZNK9__gnu_cxx13new_allocatorIdE11_M_max_sizeEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13650  .text._ZSt12__niter_baseISt13_Bit_iteratorET_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13695  .text._ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14710  .text._ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:00000000 _ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13757  .text._ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13803  .text._ZNSt16allocator_traitsISaImEE8max_sizeERKS0_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14772  .text._ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv:00000000 _ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13841  .text._ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13880  .text._ZN9__gnu_cxx13new_allocatorImE8allocateEjPKv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14810  .text._ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv:00000000 _ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13939  .text._ZSt12__miter_baseIPmET_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:13978  .text._ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14849  .text._ZSt12__niter_baseIPmET_S1_:00000000 _ZSt12__niter_baseIPmET_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14888  .text._ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_:00000000 _ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14930  .text._ZSt12__niter_wrapIPmET_RKS1_S1_:00000000 _ZSt12__niter_wrapIPmET_RKS1_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14037  .text._ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14082  .text._ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14970  .text._ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_:00000000 _ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15015  .text._ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_:00000000 _ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14161  .text._ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15077  .text._ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:00000000 _ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14223  .text._ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11_M_gen_randEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14439  .text._ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11_M_gen_randEv:00000124 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14444  .text._ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15139  .text._ZSt12__miter_baseIPdEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E:00000000 _ZSt12__miter_baseIPdEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15181  .text._ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_:00000000 _ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14493  .text._ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIdEEPT_PKS3_S6_S4_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14563  .text._ZSt19__iterator_categoryIPdENSt15iterator_traitsIT_E17iterator_categoryERKS2_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14603  .text._ZSt10__fill_n_aIPdjdET_S1_T0_RKT1_St26random_access_iterator_tag:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14665  .text._ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14703  .text._ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15240  .text._ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_:00000000 _ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14765  .text._ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14803  .text._ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14842  .text._ZSt12__niter_baseIPmET_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14881  .text._ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15335  .text._ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_:00000000 _ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14923  .text._ZSt12__niter_wrapIPmET_RKS1_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:14963  .text._ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15008  .text._ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15377  .text._ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_:00000000 _ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15070  .text._ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15439  .text._ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_:00000000 _ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15132  .text._ZSt12__miter_baseIPdEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15536  .text._ZNKSt13move_iteratorIPdE4baseEv:00000000 _ZNKSt13move_iteratorIPdE4baseEv
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 647


C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15174  .text._ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15576  .text._ZSt14__copy_move_a1ILb1EPdS0_ET1_T0_S2_S1_:00000000 _ZSt14__copy_move_a1ILb1EPdS0_ET1_T0_S2_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15233  .text._ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15328  .text._ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15618  .text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_:00000000 _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15370  .text._ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15681  .text._ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_:00000000 _ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15432  .text._ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15529  .text._ZNKSt13move_iteratorIPdE4baseEv:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15569  .text._ZSt14__copy_move_a1ILb1EPdS0_ET1_T0_S2_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15776  .text._ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_:00000000 _ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15611  .text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15674  .text._ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15769  .text._ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15818  .text._ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_:00000000 _ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15811  .text._ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15874  .text.__tcf_0:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15880  .text.__tcf_0:00000000 __tcf_0
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:16212  .text._ZN7daisysp9DelayLineIfLj96000EED2Ev:00000000 _ZN7daisysp9DelayLineIfLj96000EED1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15921  .text.__tcf_0:00000024 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15928  .text._ZN1k9KnobMultiD2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15935  .text._ZN1k9KnobMultiD2Ev:00000000 _ZN1k9KnobMultiD2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15935  .text._ZN1k9KnobMultiD2Ev:00000000 _ZN1k9KnobMultiD1Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15983  .text.__tcf_1:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:15989  .text.__tcf_1:00000000 __tcf_1
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:16028  .text.__tcf_1:00000020 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:16034  .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:16040  .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:16179  .text._Z41__static_initialization_and_destruction_0ii:000000e8 $d
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:16205  .text._ZN7daisysp9DelayLineIfLj96000EED2Ev:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:16212  .text._ZN7daisysp9DelayLineIfLj96000EED2Ev:00000000 _ZN7daisysp9DelayLineIfLj96000EED2Ev
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:16245  .text._GLOBAL__sub_I_delay:00000000 $t
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:16251  .text._GLOBAL__sub_I_delay:00000000 _GLOBAL__sub_I_delay
C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s:16272  .init_array:00000000 $d
                           .group:00000000 _ZNSt14_Bit_referenceC5EPmm
                           .group:00000000 _ZNSt18_Bit_iterator_baseC5EPmj
                           .group:00000000 _ZNSt13_Bit_iteratorC5Ev
                           .group:00000000 _ZNSt13_Bit_iteratorC5EPmj
                           .group:00000000 _ZNSt19_Bit_const_iteratorC5EPmj
                           .group:00000000 _ZNSt19_Bit_const_iteratorC5ERKSt13_Bit_iterator
                           .group:00000000 _ZN5daisy3PinC5Ev
                           .group:00000000 _ZN5daisy11TimerHandle6ConfigC5Ev
                           .group:00000000 _ZN5daisy11TimerHandleC5Ev
                           .group:00000000 _ZN5daisy11TimerHandleD5Ev
                           .group:00000000 _ZN5daisy6SystemC5Ev
                           .group:00000000 _ZN5daisy6SystemD5Ev
                           .group:00000000 _ZN5daisy10QSPIHandleC5Ev
                           .group:00000000 _ZN5daisy9DacHandleC5Ev
                           .group:00000000 _ZN5daisy4GPIO6ConfigC5Ev
                           .group:00000000 _ZN5daisy4GPIOC5Ev
                           .group:00000000 _ZN5daisy11AudioHandleC5Ev
                           .group:00000000 _ZN5daisy11AudioHandleD5Ev
                           .group:00000000 _ZN5daisy9AdcHandleC5Ev
                           .group:00000000 _ZN5daisy9AdcHandleD5Ev
                           .group:00000000 _ZN5daisy9UsbHandleC5Ev
                           .group:00000000 _ZN5daisy9UsbHandleD5Ev
                           .group:00000000 _ZN5daisy9DaisySeedC5Ev
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 648


                           .group:00000000 _ZN5daisy9DaisySeedD5Ev
                           .group:00000000 _ZN7daisysp4AdsrC5Ev
                           .group:00000000 _ZN7daisysp4AdsrD5Ev
                           .group:00000000 _ZNSt13random_deviceC5Ev
                           .group:00000000 _ZN7daisysp3SvfC5Ev
                           .group:00000000 _ZN7daisysp3SvfD5Ev
                           .group:00000000 _ZN7daisysp18SyntheticSnareDrumC5Ev
                           .group:00000000 _ZN7daisysp18SyntheticSnareDrumD5Ev
                           .group:00000000 _ZN7daisysp5MetroC5Ev
                           .group:00000000 _ZN7daisysp5MetroD5Ev
                           .group:00000000 _ZNSt12_Vector_baseIdSaIdEE12_Vector_implD5Ev
                           .group:00000000 _ZNSt12_Vector_baseIdSaIdEEC5Ev
                           .group:00000000 _ZNSt6vectorIdSaIdEEC5Ev
                           .group:00000000 _ZNSt13_Bvector_baseISaIbEE13_Bvector_implD5Ev
                           .group:00000000 _ZNSt13_Bvector_baseISaIbEEC5Ev
                           .group:00000000 _ZNSt6vectorIbSaIbEEC5Ev
                           .group:00000000 _ZN1k9KnobMultiC5Ev
                           .group:00000000 _ZN1k13OnePoleFilterC5Ev
                           .group:00000000 _ZN9ReverbFDNC5Ev
                           .group:00000000 _ZNSaImED5Ev
                           .group:00000000 _ZNSt12_Vector_baseIdSaIdEE12_Vector_implC5Ev
                           .group:00000000 _ZNSaIdED5Ev
                           .group:00000000 _ZNSt12_Vector_baseIdSaIdEED5Ev
                           .group:00000000 _ZNSt6vectorIdSaIdEED5Ev
                           .group:00000000 _ZNSt13_Bvector_baseISaIbEE13_Bvector_implC5Ev
                           .group:00000000 _ZNSt13_Bvector_baseISaIbEED5Ev
                           .group:00000000 _ZNSt6vectorIbSaIbEED5Ev
                           .group:00000000 _ZN7daisysp9DelayLineIfLj96000EEC5Ev
                           .group:00000000 _ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEC5Ej
                           .group:00000000 _ZNSt25uniform_real_distributionIfEC5Eff
                           .group:00000000 _ZNSaImEC5Ev
                           .group:00000000 _ZN9__gnu_cxx13new_allocatorImED5Ev
                           .group:00000000 _ZNSaIdEC5Ev
                           .group:00000000 _ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC5Ev
                           .group:00000000 _ZN9__gnu_cxx13new_allocatorIdED5Ev
                           .group:00000000 _ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC5Ev
                           .group:00000000 _ZNSt25uniform_real_distributionIfE10param_typeC5Eff
                           .group:00000000 _ZN9__gnu_cxx13new_allocatorImEC5Ev
                           .group:00000000 _ZN9__gnu_cxx13new_allocatorIdEC5Ev
                           .group:00000000 _ZNSt6vectorIdSaIdEE16_Temporary_valueC5IJRKdEEEPS1_DpOT_
                           .group:00000000 _ZNSt6vectorIdSaIdEE16_Temporary_valueD5Ev
                           .group:00000000 _ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC5ERKS1_
                           .group:00000000 _ZNSt8__detail8_AdaptorISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEfEC5ERS2_
                           .group:00000000 _ZNSt13move_iteratorIPdEC5ES0_
                           .group:00000000 _ZN1k9KnobMultiD5Ev
                           .group:00000000 _ZN7daisysp9DelayLineIfLj96000EED5Ev

UNDEFINED SYMBOLS
nextafterf
memset
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
_ZNSaIcEC1Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
_ZNSt13random_device7_M_initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
_ZNSaIcED1Ev
_ZNSt13random_device9_M_getvalEv
ARM GAS  C:\Users\hahnm\AppData\Local\Temp\cc4Pvs9Z.s 			page 649


exp
_ZN5daisy6System12GetPClk2FreqEv
_ZN5daisy11TimerHandle4InitERKNS0_6ConfigE
_ZN5daisy11TimerHandle11SetCallbackEPFvPvES1_
_ZN5daisy11TimerHandle5StartEv
_ZN7daisysp5Metro7ProcessEv
_ZN7daisysp18SyntheticSnareDrum4TrigEv
_ZN7daisysp18SyntheticSnareDrum7ProcessEb
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN7daisysp5Metro4InitEff
_ZN7daisysp18SyntheticSnareDrum4InitEf
_ZN7daisysp18SyntheticSnareDrum8SetDecayEf
_ZN5daisy9DaisySeed10StartAudioEPFvPKfPfjE
_ZN5daisy4GPIO4ReadEv
_ZNK5daisy9AdcHandle3GetEh
_Z6mapPotffffbff
_ZSt20__throw_length_errorPKc
_ZdlPvj
_ZSt17__throw_bad_allocv
_Znwj
memmove
__aeabi_atexit
__dso_handle
